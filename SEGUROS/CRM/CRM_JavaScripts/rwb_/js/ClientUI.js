// Thankyou for being interested in the source of the Ribbon Workbench
// The Ribbon Workbench is written using www.SparkleXRM.com
// 
window.rwb2016version = "3.1.443.1";
(function(a,j){function c(n,a,b){if(b===j&&1===n.nodeType)if(b="data-"+a.replace(vc,"-$1").toLowerCase(),b=n.getAttribute(b),"string"===typeof b){try{b="true"===b?!0:"false"===b?!1:"null"===b?null:k.isNumeric(b)?+b:wc.test(b)?k.parseJSON(b):b}catch(d){}k.data(n,a,b)}else b=j;return b}function b(n){for(var a in n)if(!("data"===a&&k.isEmptyObject(n[a]))&&"toJSON"!==a)return!1;return!0}function f(n,a,b){var d=a+"defer",c=a+"queue",g=a+"mark",e=k._data(n,d);e&&(("queue"===b||!k._data(n,c))&&("mark"===
b||!k._data(n,g)))&&setTimeout(function(){!k._data(n,c)&&!k._data(n,g)&&(k.removeData(n,d,!0),e.fire())},0)}function e(){return!1}function h(){return!0}function d(n,a,b){a=a||0;if(k.isFunction(a))return k.grep(n,function(n,d){return!!a.call(n,d,n)===b});if(a.nodeType)return k.grep(n,function(n){return n===a===b});if("string"===typeof a){var d=k.grep(n,function(n){return 1===n.nodeType});if(La.test(a))return k.filter(a,d,!b);a=k.filter(a,d)}return k.grep(n,function(n){return 0<=k.inArray(n,a)===b})}
function g(n){var a=Lb.split("|");n=n.createDocumentFragment();if(n.createElement)for(;a.length;)n.createElement(a.pop());return n}function m(n,a){if(1===a.nodeType&&k.hasData(n)){var b,d,c;d=k._data(n);var g=k._data(a,d),e=d.events;if(e)for(b in delete g.handle,g.events={},e){d=0;for(c=e[b].length;d<c;d++)k.event.add(a,b,e[b][d])}g.data&&(g.data=k.extend({},g.data))}}function p(n,a){var b;1===a.nodeType&&(a.clearAttributes&&a.clearAttributes(),a.mergeAttributes&&a.mergeAttributes(n),b=a.nodeName.toLowerCase(),
"object"===b?a.outerHTML=n.outerHTML:"input"===b&&("checkbox"===n.type||"radio"===n.type)?(n.checked&&(a.defaultChecked=a.checked=n.checked),a.value!==n.value&&(a.value=n.value)):"option"===b?a.selected=n.defaultSelected:"input"===b||"textarea"===b?a.defaultValue=n.defaultValue:"script"===b&&a.text!==n.text&&(a.text=n.text),a.removeAttribute(k.expando),a.removeAttribute("_submit_attached"),a.removeAttribute("_change_attached"))}function r(n){return"undefined"!==typeof n.getElementsByTagName?n.getElementsByTagName("*"):
"undefined"!==typeof n.querySelectorAll?n.querySelectorAll("*"):[]}function y(n){if("checkbox"===n.type||"radio"===n.type)n.defaultChecked=n.checked}function t(n){var a=(n.nodeName||"").toLowerCase();"input"===a?y(n):"script"!==a&&"undefined"!==typeof n.getElementsByTagName&&k.grep(n.getElementsByTagName("input"),y)}function q(n,a,b){var d="width"===a?n.offsetWidth:n.offsetHeight,c="width"===a?1:0;if(0<d){if("border"!==b)for(;4>c;c+=2)b||(d-=parseFloat(k.css(n,"padding"+Pa[c]))||0),d="margin"===b?
d+(parseFloat(k.css(n,b+Pa[c]))||0):d-(parseFloat(k.css(n,"border"+Pa[c]+"Width"))||0);return d+"px"}d=ta(n,a);if(0>d||null==d)d=n.style[a];if(mb.test(d))return d;d=parseFloat(d)||0;if(b)for(;4>c;c+=2)d+=parseFloat(k.css(n,"padding"+Pa[c]))||0,"padding"!==b&&(d+=parseFloat(k.css(n,"border"+Pa[c]+"Width"))||0),"margin"===b&&(d+=parseFloat(k.css(n,b+Pa[c]))||0);return d+"px"}function u(n){return function(a,b){"string"!==typeof a&&(b=a,a="*");if(k.isFunction(b))for(var d=a.toLowerCase().split(Mb),c=
0,g=d.length,e,f;c<g;c++)e=d[c],(f=/^\+/.test(e))&&(e=e.substr(1)||"*"),e=n[e]=n[e]||[],e[f?"unshift":"push"](b)}}function s(n,a,b,d,c,g){c=c||a.dataTypes[0];g=g||{};g[c]=!0;c=n[c];for(var e=0,f=c?c.length:0,h=n===nb,k;e<f&&(h||!k);e++)k=c[e](a,b,d),"string"===typeof k&&(!h||g[k]?k=j:(a.dataTypes.unshift(k),k=s(n,a,b,d,k,g)));if((h||!k)&&!g["*"])k=s(n,a,b,d,"*",g);return k}function w(n,a){var b,d,c=k.ajaxSettings.flatOptions||{};for(b in a)a[b]!==j&&((c[b]?n:d||(d={}))[b]=a[b]);d&&k.extend(!0,n,d)}
function B(n,a,b,d){if(k.isArray(a))k.each(a,function(a,c){b||ob.test(n)?d(n,c):B(n+"["+("object"===typeof c?a:"")+"]",c,b,d)});else if(!b&&"object"===k.type(a))for(var c in a)B(n+"["+c+"]",a[c],b,d);else d(n,a)}function C(){try{return new a.XMLHttpRequest}catch(n){}}function E(){setTimeout(z,0);return xc=k.now()}function z(){xc=j}function D(n,a){var b={};k.each(yc.concat.apply([],yc.slice(0,a)),function(){b[this]=n});return b}function L(n){if(!Rc[n]){var a=A.body,b=k("<"+n+">").appendTo(a),d=b.css("display");
b.remove();if("none"===d||""===d){Ta||(Ta=A.createElement("iframe"),Ta.frameBorder=Ta.width=Ta.height=0);a.appendChild(Ta);if(!Nb||!Ta.createElement)Nb=(Ta.contentWindow||Ta.contentDocument).document,Nb.write((k.support.boxModel?"<!doctype html>":"")+"<html><body>"),Nb.close();b=Nb.createElement(n);Nb.body.appendChild(b);d=k.css(b,"display");a.removeChild(Ta)}Rc[n]=d}return Rc[n]}function X(n){return k.isWindow(n)?n:9===n.nodeType?n.defaultView||n.parentWindow:!1}var A=a.document,H=a.location,k,U=
function(){if(!x.isReady){try{A.documentElement.doScroll("left")}catch(n){setTimeout(U,1);return}x.ready()}},x=function(n,a){return new x.fn.init(n,a,za)},ha=a.jQuery,ua=a.$,za,l=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,ia=/\S/,aa=/^\s+/,la=/\s+$/,da=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,S=/^[\],:{}\s]*$/,na=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,R=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,ba=/(?:^|:|,)(?:\s*\[)+/g,Aa=/(webkit)[ \/]([\w.]+)/,$=/(opera)(?:.*version)?[ \/]([\w.]+)/,
Ob=/(msie) ([\w.]+)/,pb=/(mozilla)(?:.*? rv:([\w.]+))?/,ma=/-([a-z]|[0-9])/ig,dc=/^-ms-/,ab=function(n,a){return(a+"").toUpperCase()},qb=a.navigator.userAgent,v,Ga,V,Pb=Object.prototype.toString,Ua=Object.prototype.hasOwnProperty,zb=Array.prototype.push,oa=Array.prototype.slice,zc=String.prototype.trim,Ac=Array.prototype.indexOf,Bc={};x.fn=x.prototype={constructor:x,init:function(n,a,b){var d;if(!n)return this;if(n.nodeType)return this.context=this[0]=n,this.length=1,this;if("body"===n&&!a&&A.body)return this.context=
A,this[0]=A.body,this.selector=n,this.length=1,this;if("string"===typeof n){if((d="<"===n.charAt(0)&&">"===n.charAt(n.length-1)&&3<=n.length?[null,n,null]:l.exec(n))&&(d[1]||!a)){if(d[1])return b=(a=a instanceof x?a[0]:a)?a.ownerDocument||a:A,(n=da.exec(n))?x.isPlainObject(a)?(n=[A.createElement(n[1])],x.fn.attr.call(n,a,!0)):n=[b.createElement(n[1])]:(n=x.buildFragment([d[1]],[b]),n=(n.cacheable?x.clone(n.fragment):n.fragment).childNodes),x.merge(this,n);if((a=A.getElementById(d[2]))&&a.parentNode){if(a.id!==
d[2])return b.find(n);this.length=1;this[0]=a}this.context=A;this.selector=n;return this}return!a||a.jquery?(a||b).find(n):this.constructor(a).find(n)}if(x.isFunction(n))return b.ready(n);n.selector!==j&&(this.selector=n.selector,this.context=n.context);return x.makeArray(n,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return oa.call(this,0)},get:function(n){return null==n?this.toArray():0>n?this[this.length+n]:this[n]},pushStack:function(n,a,b){var d=
this.constructor();x.isArray(n)?zb.apply(d,n):x.merge(d,n);d.prevObject=this;d.context=this.context;"find"===a?d.selector=this.selector+(this.selector?" ":"")+b:a&&(d.selector=this.selector+"."+a+"("+b+")");return d},each:function(n,a){return x.each(this,n,a)},ready:function(n){x.bindReady();Ga.add(n);return this},eq:function(n){n=+n;return-1===n?this.slice(n):this.slice(n,n+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(oa.apply(this,
arguments),"slice",oa.call(arguments).join(","))},map:function(n){return this.pushStack(x.map(this,function(a,b){return n.call(a,b,a)}))},end:function(){return this.prevObject||this.constructor(null)},push:zb,sort:[].sort,splice:[].splice};x.fn.init.prototype=x.fn;x.extend=x.fn.extend=function(){var n,a,b,d,c,g=arguments[0]||{},e=1,f=arguments.length,h=!1;"boolean"===typeof g&&(h=g,g=arguments[1]||{},e=2);"object"!==typeof g&&!x.isFunction(g)&&(g={});f===e&&(g=this,--e);for(;e<f;e++)if(null!=(n=arguments[e]))for(a in n)b=
g[a],d=n[a],g!==d&&(h&&d&&(x.isPlainObject(d)||(c=x.isArray(d)))?(c?(c=!1,b=b&&x.isArray(b)?b:[]):b=b&&x.isPlainObject(b)?b:{},g[a]=x.extend(h,b,d)):d!==j&&(g[a]=d));return g};x.extend({noConflict:function(n){a.$===x&&(a.$=ua);n&&a.jQuery===x&&(a.jQuery=ha);return x},isReady:!1,readyWait:1,holdReady:function(n){n?x.readyWait++:x.ready(!0)},ready:function(n){if(!0===n&&!--x.readyWait||!0!==n&&!x.isReady){if(!A.body)return setTimeout(x.ready,1);x.isReady=!0;!0!==n&&0<--x.readyWait||(Ga.fireWith(A,[x]),
x.fn.trigger&&x(A).trigger("ready").off("ready"))}},bindReady:function(){if(!Ga){Ga=x.Callbacks("once memory");if("complete"===A.readyState)return setTimeout(x.ready,1);if(A.addEventListener)A.addEventListener("DOMContentLoaded",V,!1),a.addEventListener("load",x.ready,!1);else if(A.attachEvent){A.attachEvent("onreadystatechange",V);a.attachEvent("onload",x.ready);var n=!1;try{n=null==a.frameElement}catch(b){}A.documentElement.doScroll&&n&&U()}}},isFunction:function(n){return"function"===x.type(n)},
isArray:Array.isArray||function(n){return"array"===x.type(n)},isWindow:function(n){return null!=n&&n==n.window},isNumeric:function(n){return!isNaN(parseFloat(n))&&isFinite(n)},type:function(n){return null==n?String(n):Bc[Pb.call(n)]||"object"},isPlainObject:function(n){if(!n||"object"!==x.type(n)||n.nodeType||x.isWindow(n))return!1;try{if(n.constructor&&!Ua.call(n,"constructor")&&!Ua.call(n.constructor.prototype,"isPrototypeOf"))return!1}catch(a){return!1}for(var b in n);return b===j||Ua.call(n,b)},
isEmptyObject:function(n){for(var a in n)return!1;return!0},error:function(n){throw Error(n);},parseJSON:function(n){if("string"!==typeof n||!n)return null;n=x.trim(n);if(a.JSON&&a.JSON.parse)return a.JSON.parse(n);if(S.test(n.replace(na,"@").replace(R,"]").replace(ba,"")))return(new Function("return "+n))();x.error("Invalid JSON: "+n)},parseXML:function(n){if("string"!==typeof n||!n)return null;var b,d;try{a.DOMParser?(d=new DOMParser,b=d.parseFromString(n,"text/xml")):(b=new ActiveXObject("Microsoft.XMLDOM"),
b.async="false",b.loadXML(n))}catch(c){b=j}(!b||!b.documentElement||b.getElementsByTagName("parsererror").length)&&x.error("Invalid XML: "+n);return b},noop:function(){},globalEval:function(n){n&&ia.test(n)&&(a.execScript||function(n){a.eval.call(a,n)})(n)},camelCase:function(n){return n.replace(dc,"ms-").replace(ma,ab)},nodeName:function(n,a){return n.nodeName&&n.nodeName.toUpperCase()===a.toUpperCase()},each:function(n,a,b){var d,c=0,g=n.length,e=g===j||x.isFunction(n);if(b)if(e)for(d in n){if(!1===
a.apply(n[d],b))break}else for(;c<g&&!1!==a.apply(n[c++],b););else if(e)for(d in n){if(!1===a.call(n[d],d,n[d]))break}else for(;c<g&&!1!==a.call(n[c],c,n[c++]););return n},trim:zc?function(n){return null==n?"":zc.call(n)}:function(n){return null==n?"":n.toString().replace(aa,"").replace(la,"")},makeArray:function(n,a){var b=a||[];if(null!=n){var d=x.type(n);null==n.length||"string"===d||"function"===d||"regexp"===d||x.isWindow(n)?zb.call(b,n):x.merge(b,n)}return b},inArray:function(n,a,b){var d;if(a){if(Ac)return Ac.call(a,
n,b);d=a.length;for(b=b?0>b?Math.max(0,d+b):b:0;b<d;b++)if(b in a&&a[b]===n)return b}return-1},merge:function(n,a){var b=n.length,d=0;if("number"===typeof a.length)for(var c=a.length;d<c;d++)n[b++]=a[d];else for(;a[d]!==j;)n[b++]=a[d++];n.length=b;return n},grep:function(n,a,b){var d=[],c;b=!!b;for(var g=0,e=n.length;g<e;g++)c=!!a(n[g],g),b!==c&&d.push(n[g]);return d},map:function(n,a,b){var d,c,g=[],e=0,f=n.length;if(n instanceof x||f!==j&&"number"===typeof f&&(0<f&&n[0]&&n[f-1]||0===f||x.isArray(n)))for(;e<
f;e++)d=a(n[e],e,b),null!=d&&(g[g.length]=d);else for(c in n)d=a(n[c],c,b),null!=d&&(g[g.length]=d);return g.concat.apply([],g)},guid:1,proxy:function(n,a){if("string"===typeof a){var b=n[a];a=n;n=b}if(!x.isFunction(n))return j;var d=oa.call(arguments,2),b=function(){return n.apply(a,d.concat(oa.call(arguments)))};b.guid=n.guid=n.guid||b.guid||x.guid++;return b},access:function(n,a,b,d,c,g,e){var f,h=null==b,k=0,m=n.length;if(b&&"object"===typeof b){for(k in b)x.access(n,a,k,b[k],1,g,d);c=1}else if(d!==
j){f=e===j&&x.isFunction(d);h&&(f?(f=a,a=function(n,a,b){return f.call(x(n),b)}):(a.call(n,d),a=null));if(a)for(;k<m;k++)a(n[k],b,f?d.call(n[k],k,a(n[k],b)):d,e);c=1}return c?n:h?a.call(n):m?a(n[0],b):g},now:function(){return(new Date).getTime()},uaMatch:function(n){n=n.toLowerCase();n=Aa.exec(n)||$.exec(n)||Ob.exec(n)||0>n.indexOf("compatible")&&pb.exec(n)||[];return{browser:n[1]||"",version:n[2]||"0"}},sub:function(){function n(a,b){return new n.fn.init(a,b)}x.extend(!0,n,this);n.superclass=this;
n.fn=n.prototype=this();n.fn.constructor=n;n.sub=this.sub;n.fn.init=function(b,d){d&&(d instanceof x&&!(d instanceof n))&&(d=n(d));return x.fn.init.call(this,b,d,a)};n.fn.init.prototype=n.fn;var a=n(A);return n},browser:{}});x.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(n,a){Bc["[object "+a+"]"]=a.toLowerCase()});v=x.uaMatch(qb);v.browser&&(x.browser[v.browser]=!0,x.browser.version=v.version);x.browser.webkit&&(x.browser.safari=!0);ia.test("\u00a0")&&(aa=/^[\s\xA0]+/,
la=/[\s\xA0]+$/);za=x(A);A.addEventListener?V=function(){A.removeEventListener("DOMContentLoaded",V,!1);x.ready()}:A.attachEvent&&(V=function(){"complete"===A.readyState&&(A.detachEvent("onreadystatechange",V),x.ready())});k=x;var rb={};k.Callbacks=function(n){var a;if(n){if(!(a=rb[n])){a=n;var b=rb[a]={},d,c;a=a.split(/\s+/);d=0;for(c=a.length;d<c;d++)b[a[d]]=!0;a=b}}else a={};n=a;var g=[],e=[],f,h,m,l,v,Q,p=function(a){var b,d,c,e;b=0;for(d=a.length;b<d;b++)c=a[b],e=k.type(c),"array"===e?p(c):"function"===
e&&(!n.unique||!q.has(c))&&g.push(c)},K=function(a,b){b=b||[];f=!n.memory||[a,b];m=h=!0;Q=l||0;l=0;for(v=g.length;g&&Q<v;Q++)if(!1===g[Q].apply(a,b)&&n.stopOnFalse){f=!0;break}m=!1;g&&(n.once?!0===f?q.disable():g=[]:e&&e.length&&(f=e.shift(),q.fireWith(f[0],f[1])))},q={add:function(){if(g){var n=g.length;p(arguments);m?v=g.length:f&&!0!==f&&(l=n,K(f[0],f[1]))}return this},remove:function(){if(g)for(var a=arguments,b=0,d=a.length;b<d;b++)for(var c=0;c<g.length&&!(a[b]===g[c]&&(m&&c<=v&&(v--,c<=Q&&
Q--),g.splice(c--,1),n.unique));c++);return this},has:function(n){if(g)for(var a=0,b=g.length;a<b;a++)if(n===g[a])return!0;return!1},empty:function(){g=[];return this},disable:function(){g=e=f=j;return this},disabled:function(){return!g},lock:function(){e=j;(!f||!0===f)&&q.disable();return this},locked:function(){return!e},fireWith:function(a,b){e&&(m?n.once||e.push([a,b]):(!n.once||!f)&&K(a,b));return this},fire:function(){q.fireWith(this,arguments);return this},fired:function(){return!!h}};return q};
var ec=[].slice;k.extend({Deferred:function(a){var b=k.Callbacks("once memory"),d=k.Callbacks("once memory"),c=k.Callbacks("memory"),g="pending",e={resolve:b,reject:d,notify:c},f={done:b.add,fail:d.add,progress:c.add,state:function(){return g},isResolved:b.fired,isRejected:d.fired,then:function(a,n,b){h.done(a).fail(n).progress(b);return this},always:function(){h.done.apply(h,arguments).fail.apply(h,arguments);return this},pipe:function(a,n,b){return k.Deferred(function(d){k.each({done:[a,"resolve"],
fail:[n,"reject"],progress:[b,"notify"]},function(a,n){var b=n[0],c=n[1],g;if(k.isFunction(b))h[a](function(){if((g=b.apply(this,arguments))&&k.isFunction(g.promise))g.promise().then(d.resolve,d.reject,d.notify);else d[c+"With"](this===h?d:this,[g])});else h[a](d[c])})}).promise()},promise:function(a){if(null==a)a=f;else for(var n in f)a[n]=f[n];return a}},h=f.promise({}),j;for(j in e)h[j]=e[j].fire,h[j+"With"]=e[j].fireWith;h.done(function(){g="resolved"},d.disable,c.lock).fail(function(){g="rejected"},
b.disable,c.lock);a&&a.call(h,h);return h},when:function(a){function b(a){return function(n){c[a]=1<arguments.length?ec.call(arguments,0):n;--h||j.resolveWith(j,c)}}function d(a){return function(n){f[a]=1<arguments.length?ec.call(arguments,0):n;j.notifyWith(m,f)}}var c=ec.call(arguments,0),g=0,e=c.length,f=Array(e),h=e,j=1>=e&&a&&k.isFunction(a.promise)?a:k.Deferred(),m=j.promise();if(1<e){for(;g<e;g++)c[g]&&c[g].promise&&k.isFunction(c[g].promise)?c[g].promise().then(b(g),j.reject,d(g)):--h;h||j.resolveWith(j,
c)}else j!==a&&j.resolveWith(j,e?[a]:[]);return m}});var Sc=k,fc;var ja,gc,Va,Ab,Bb,fa,Wa,Ha,bb,Xa,cb,F=A.createElement("div");F.setAttribute("className","t");F.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";gc=F.getElementsByTagName("*");Va=F.getElementsByTagName("a")[0];if(!gc||!gc.length||!Va)fc={};else{Ab=A.createElement("select");Bb=Ab.appendChild(A.createElement("option"));fa=F.getElementsByTagName("input")[0];ja={leadingWhitespace:3===
F.firstChild.nodeType,tbody:!F.getElementsByTagName("tbody").length,htmlSerialize:!!F.getElementsByTagName("link").length,style:/top/.test(Va.getAttribute("style")),hrefNormalized:"/a"===Va.getAttribute("href"),opacity:/^0.55/.test(Va.style.opacity),cssFloat:!!Va.style.cssFloat,checkOn:"on"===fa.value,optSelected:Bb.selected,getSetAttribute:"t"!==F.className,enctype:!!A.createElement("form").enctype,html5Clone:"<:nav></:nav>"!==A.createElement("nav").cloneNode(!0).outerHTML,submitBubbles:!0,changeBubbles:!0,
focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0};k.boxModel=ja.boxModel="CSS1Compat"===A.compatMode;fa.checked=!0;ja.noCloneChecked=fa.cloneNode(!0).checked;Ab.disabled=!0;ja.optDisabled=!Bb.disabled;try{delete F.test}catch(hc){ja.deleteExpando=!1}!F.addEventListener&&(F.attachEvent&&F.fireEvent)&&(F.attachEvent("onclick",function(){ja.noCloneEvent=!1}),F.cloneNode(!0).fireEvent("onclick"));fa=A.createElement("input");
fa.value="t";fa.setAttribute("type","radio");ja.radioValue="t"===fa.value;fa.setAttribute("checked","checked");fa.setAttribute("name","t");F.appendChild(fa);Wa=A.createDocumentFragment();Wa.appendChild(F.lastChild);ja.checkClone=Wa.cloneNode(!0).cloneNode(!0).lastChild.checked;ja.appendChecked=fa.checked;Wa.removeChild(fa);Wa.appendChild(F);if(F.attachEvent)for(Xa in{submit:1,change:1,focusin:1})bb="on"+Xa,cb=bb in F,cb||(F.setAttribute(bb,"return;"),cb="function"===typeof F[bb]),ja[Xa+"Bubbles"]=
cb;Wa.removeChild(F);Wa=Ab=Bb=F=fa=null;k(function(){var n,b,d,c,g=A.getElementsByTagName("body")[0];g&&(n=A.createElement("div"),n.style.cssText="padding:0;margin:0;border:0;visibility:hidden;width:0;height:0;position:static;top:0;margin-top:1px",g.insertBefore(n,g.firstChild),F=A.createElement("div"),n.appendChild(F),F.innerHTML="<table><tr><td style='padding:0;margin:0;border:0;display:none'></td><td>t</td></tr></table>",Ha=F.getElementsByTagName("td"),cb=0===Ha[0].offsetHeight,Ha[0].style.display=
"",Ha[1].style.display="none",ja.reliableHiddenOffsets=cb&&0===Ha[0].offsetHeight,a.getComputedStyle&&(F.innerHTML="",b=A.createElement("div"),b.style.width="0",b.style.marginRight="0",F.style.width="2px",F.appendChild(b),ja.reliableMarginRight=0===(parseInt((a.getComputedStyle(b,null)||{marginRight:0}).marginRight,10)||0)),"undefined"!==typeof F.style.zoom&&(F.innerHTML="",F.style.width=F.style.padding="1px",F.style.border=0,F.style.overflow="hidden",F.style.display="inline",F.style.zoom=1,ja.inlineBlockNeedsLayout=
3===F.offsetWidth,F.style.display="block",F.style.overflow="visible",F.innerHTML="<div style='width:5px;'></div>",ja.shrinkWrapBlocks=3!==F.offsetWidth),F.style.cssText="position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:0;visibility:hidden;",F.innerHTML="<div style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;display:block;'><div style='padding:0;margin:0;border:0;display:block;overflow:hidden;'></div></div><table style='position:absolute;top:0;left:0;width:1px;height:1px;padding:0;margin:0;border:5px solid #000;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>",
b=F.firstChild,d=b.firstChild,c=b.nextSibling.firstChild.firstChild,c={doesNotAddBorder:5!==d.offsetTop,doesAddBorderForTableAndCells:5===c.offsetTop},d.style.position="fixed",d.style.top="20px",c.fixedPosition=20===d.offsetTop||15===d.offsetTop,d.style.position=d.style.top="",b.style.overflow="hidden",b.style.position="relative",c.subtractsBorderForOverflowNotVisible=-5===d.offsetTop,c.doesNotIncludeMarginInBodyOffset=1!==g.offsetTop,a.getComputedStyle&&(F.style.marginTop="1%",ja.pixelMargin="1%"!==
(a.getComputedStyle(F,null)||{marginTop:0}).marginTop),"undefined"!==typeof n.style.zoom&&(n.style.zoom=1),g.removeChild(n),F=null,k.extend(ja,c))});fc=ja}Sc.support=fc;var wc=/^(?:\{.*\}|\[.*\])$/,vc=/([A-Z])/g;k.extend({cache:{},uuid:0,expando:"jQuery"+(k.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?k.cache[a[k.expando]]:a[k.expando];return!!a&&!b(a)},data:function(a,b,d,c){if(k.acceptData(a)){var g;
g=k.expando;var e="string"===typeof b,f=a.nodeType,h=f?k.cache:a,m=f?a[g]:a[g]&&g,l="events"===b;if(m&&h[m]&&(l||c||h[m].data)||!(e&&d===j)){m||(f?a[g]=m=++k.uuid:m=g);h[m]||(h[m]={},f||(h[m].toJSON=k.noop));if("object"===typeof b||"function"===typeof b)c?h[m]=k.extend(h[m],b):h[m].data=k.extend(h[m].data,b);g=a=h[m];c||(a.data||(a.data={}),a=a.data);d!==j&&(a[k.camelCase(b)]=d);if(l&&!a[b])return g.events;e?(d=a[b],null==d&&(d=a[k.camelCase(b)])):d=a;return d}}},removeData:function(a,d,c){if(k.acceptData(a)){var g,
e,f,h=k.expando,j=a.nodeType,m=j?k.cache:a,l=j?a[h]:h;if(m[l]){if(d&&(g=c?m[l]:m[l].data)){k.isArray(d)||(d in g?d=[d]:(d=k.camelCase(d),d=d in g?[d]:d.split(" ")));e=0;for(f=d.length;e<f;e++)delete g[d[e]];if(!(c?b:k.isEmptyObject)(g))return}if(!c&&(delete m[l].data,!b(m[l])))return;k.support.deleteExpando||!m.setInterval?delete m[l]:m[l]=null;j&&(k.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}}},_data:function(a,b,d){return k.data(a,b,d,!0)},acceptData:function(a){if(a.nodeName){var b=
k.noData[a.nodeName.toLowerCase()];if(b)return!(!0===b||a.getAttribute("classid")!==b)}return!0}});k.fn.extend({data:function(a,b){var d,g,e,f,h,m=this[0],l=0,v=null;if(a===j){if(this.length&&(v=k.data(m),1===m.nodeType&&!k._data(m,"parsedAttrs"))){e=m.attributes;for(h=e.length;l<h;l++)f=e[l].name,0===f.indexOf("data-")&&(f=k.camelCase(f.substring(5)),c(m,f,v[f]));k._data(m,"parsedAttrs",!0)}return v}if("object"===typeof a)return this.each(function(){k.data(this,a)});d=a.split(".",2);d[1]=d[1]?"."+
d[1]:"";g=d[1]+"!";return k.access(this,function(b){if(b===j)return v=this.triggerHandler("getData"+g,[d[0]]),v===j&&m&&(v=k.data(m,a),v=c(m,a,v)),v===j&&d[1]?this.data(d[0]):v;d[1]=b;this.each(function(){var c=k(this);c.triggerHandler("setData"+g,d);k.data(this,a,b);c.triggerHandler("changeData"+g,d)})},null,b,1<arguments.length,null,!1)},removeData:function(a){return this.each(function(){k.removeData(this,a)})}});k.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",k._data(a,b,(k._data(a,b)||0)+
1))},_unmark:function(a,b,d){!0!==a&&(d=b,b=a,a=!1);if(b){d=d||"fx";var c=d+"mark";(a=a?0:(k._data(b,c)||1)-1)?k._data(b,c,a):(k.removeData(b,c,!0),f(b,d,"mark"))}},queue:function(a,b,d){var c;if(a)return b=(b||"fx")+"queue",c=k._data(a,b),d&&(!c||k.isArray(d)?c=k._data(a,b,k.makeArray(d)):c.push(d)),c||[]},dequeue:function(a,b){b=b||"fx";var d=k.queue(a,b),c=d.shift(),g={};"inprogress"===c&&(c=d.shift());c&&("fx"===b&&d.unshift("inprogress"),k._data(a,b+".run",g),c.call(a,function(){k.dequeue(a,
b)},g));d.length||(k.removeData(a,b+"queue "+b+".run",!0),f(a,b,"queue"))}});k.fn.extend({queue:function(a,b){var d=2;"string"!==typeof a&&(b=a,a="fx",d--);return arguments.length<d?k.queue(this[0],a):b===j?this:this.each(function(){var d=k.queue(this,a,b);"fx"===a&&"inprogress"!==d[0]&&k.dequeue(this,a)})},dequeue:function(a){return this.each(function(){k.dequeue(this,a)})},delay:function(a,b){a=k.fx?k.fx.speeds[a]||a:a;return this.queue(b||"fx",function(b,d){var c=setTimeout(b,a);d.stop=function(){clearTimeout(c)}})},
clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){function d(){--f||c.resolveWith(g,[g])}"string"!==typeof a&&(b=a,a=j);a=a||"fx";for(var c=k.Deferred(),g=this,e=g.length,f=1,h=a+"defer",m=a+"queue",l=a+"mark",v;e--;)if(v=k.data(g[e],h,j,!0)||(k.data(g[e],m,j,!0)||k.data(g[e],l,j,!0))&&k.data(g[e],h,k.Callbacks("once memory"),!0))f++,v.add(d);d();return c.promise(b)}});var Cb=/[\n\t\r]/g,Db=/\s+/,Cc=/\r/g,Dc=/^(?:button|input)$/i,ic=/^(?:button|input|object|select|textarea)$/i,
sb=/^a(?:rea)?$/i,jc=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,Qb=k.support.getSetAttribute,Ma,Ec,Fc;k.fn.extend({attr:function(a,b){return k.access(this,k.attr,a,b,1<arguments.length)},removeAttr:function(a){return this.each(function(){k.removeAttr(this,a)})},prop:function(a,b){return k.access(this,k.prop,a,b,1<arguments.length)},removeProp:function(a){a=k.propFix[a]||a;return this.each(function(){try{this[a]=j,delete this[a]}catch(b){}})},
addClass:function(a){var b,d,c,g,e,f,h;if(k.isFunction(a))return this.each(function(b){k(this).addClass(a.call(this,b,this.className))});if(a&&"string"===typeof a){b=a.split(Db);d=0;for(c=this.length;d<c;d++)if(g=this[d],1===g.nodeType)if(!g.className&&1===b.length)g.className=a;else{e=" "+g.className+" ";f=0;for(h=b.length;f<h;f++)~e.indexOf(" "+b[f]+" ")||(e+=b[f]+" ");g.className=k.trim(e)}}return this},removeClass:function(a){var b,d,c,g,e,f,h;if(k.isFunction(a))return this.each(function(b){k(this).removeClass(a.call(this,
b,this.className))});if(a&&"string"===typeof a||a===j){b=(a||"").split(Db);d=0;for(c=this.length;d<c;d++)if(g=this[d],1===g.nodeType&&g.className)if(a){e=(" "+g.className+" ").replace(Cb," ");f=0;for(h=b.length;f<h;f++)e=e.replace(" "+b[f]+" "," ");g.className=k.trim(e)}else g.className=""}return this},toggleClass:function(a,b){var d=typeof a,c="boolean"===typeof b;return k.isFunction(a)?this.each(function(d){k(this).toggleClass(a.call(this,d,this.className,b),b)}):this.each(function(){if("string"===
d)for(var g,e=0,f=k(this),h=b,j=a.split(Db);g=j[e++];)h=c?h:!f.hasClass(g),f[h?"addClass":"removeClass"](g);else if("undefined"===d||"boolean"===d)this.className&&k._data(this,"__className__",this.className),this.className=this.className||!1===a?"":k._data(this,"__className__")||""})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if(1===this[b].nodeType&&-1<(" "+this[b].className+" ").replace(Cb," ").indexOf(a))return!0;return!1},val:function(a){var b,d,c,g=this[0];if(arguments.length)return c=
k.isFunction(a),this.each(function(d){var g=k(this);if(1===this.nodeType&&(d=c?a.call(this,d,g.val()):a,null==d?d="":"number"===typeof d?d+="":k.isArray(d)&&(d=k.map(d,function(a){return null==a?"":a+""})),b=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()],!b||!("set"in b)||b.set(this,d,"value")===j))this.value=d});if(g){if((b=k.valHooks[g.type]||k.valHooks[g.nodeName.toLowerCase()])&&"get"in b&&(d=b.get(g,"value"))!==j)return d;d=g.value;return"string"===typeof d?d.replace(Cc,""):null==
d?"":d}}});k.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,d,c=a.selectedIndex,g=[],e=a.options,f="select-one"===a.type;if(0>c)return null;a=f?c:0;for(d=f?c+1:e.length;a<d;a++)if(b=e[a],b.selected&&(k.support.optDisabled?!b.disabled:null===b.getAttribute("disabled"))&&(!b.parentNode.disabled||!k.nodeName(b.parentNode,"optgroup"))){b=k(b).val();if(f)return b;g.push(b)}return f&&!g.length&&e.length?k(e[c]).val():
g},set:function(a,b){var d=k.makeArray(b);k(a).find("option").each(function(){this.selected=0<=k.inArray(k(this).val(),d)});d.length||(a.selectedIndex=-1);return d}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,b,d,c){var g,e,f=a.nodeType;if(a&&!(3===f||8===f||2===f)){if(c&&b in k.attrFn)return k(a)[b](d);if("undefined"===typeof a.getAttribute)return k.prop(a,b,d);if(c=1!==f||!k.isXMLDoc(a))b=b.toLowerCase(),e=k.attrHooks[b]||(jc.test(b)?Ec:Ma);if(d!==
j)if(null===d)k.removeAttr(a,b);else{if(e&&"set"in e&&c&&(g=e.set(a,d,b))!==j)return g;a.setAttribute(b,""+d);return d}else{if(e&&"get"in e&&c&&null!==(g=e.get(a,b)))return g;g=a.getAttribute(b);return null===g?j:g}}},removeAttr:function(a,b){var d,c,g,e,f,h=0;if(b&&1===a.nodeType){c=b.toLowerCase().split(Db);for(e=c.length;h<e;h++)if(g=c[h])d=k.propFix[g]||g,(f=jc.test(g))||k.attr(a,g,""),a.removeAttribute(Qb?g:d),f&&d in a&&(a[d]=!1)}},attrHooks:{type:{set:function(a,b){if(Dc.test(a.nodeName)&&
a.parentNode)k.error("type property can't be changed");else if(!k.support.radioValue&&"radio"===b&&k.nodeName(a,"input")){var d=a.value;a.setAttribute("type",b);d&&(a.value=d);return b}}},value:{get:function(a,b){return Ma&&k.nodeName(a,"button")?Ma.get(a,b):b in a?a.value:null},set:function(a,b,d){if(Ma&&k.nodeName(a,"button"))return Ma.set(a,b,d);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",
rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,b,d){var c,g,e;e=a.nodeType;if(a&&!(3===e||8===e||2===e)){if(e=1!==e||!k.isXMLDoc(a))b=k.propFix[b]||b,g=k.propHooks[b];return d!==j?g&&"set"in g&&(c=g.set(a,d,b))!==j?c:a[b]=d:g&&"get"in g&&null!==(c=g.get(a,b))?c:a[b]}},propHooks:{tabIndex:{get:function(a){var b=a.getAttributeNode("tabindex");return b&&b.specified?parseInt(b.value,10):ic.test(a.nodeName)||sb.test(a.nodeName)&&
a.href?0:j}}}});k.attrHooks.tabindex=k.propHooks.tabIndex;Ec={get:function(a,b){var d,c=k.prop(a,b);return!0===c||"boolean"!==typeof c&&(d=a.getAttributeNode(b))&&!1!==d.nodeValue?b.toLowerCase():j},set:function(a,b,d){!1===b?k.removeAttr(a,d):(b=k.propFix[d]||d,b in a&&(a[b]=!0),a.setAttribute(d,d.toLowerCase()));return d}};Qb||(Fc={name:!0,id:!0,coords:!0},Ma=k.valHooks.button={get:function(a,b){var d;return(d=a.getAttributeNode(b))&&(Fc[b]?""!==d.nodeValue:d.specified)?d.nodeValue:j},set:function(a,
b,d){var c=a.getAttributeNode(d);c||(c=A.createAttribute(d),a.setAttributeNode(c));return c.nodeValue=b+""}},k.attrHooks.tabindex.set=Ma.set,k.each(["width","height"],function(a,b){k.attrHooks[b]=k.extend(k.attrHooks[b],{set:function(a,d){if(""===d)return a.setAttribute(b,"auto"),d}})}),k.attrHooks.contenteditable={get:Ma.get,set:function(a,b,d){""===b&&(b="false");Ma.set(a,b,d)}});k.support.hrefNormalized||k.each(["href","src","width","height"],function(a,b){k.attrHooks[b]=k.extend(k.attrHooks[b],
{get:function(a){a=a.getAttribute(b,2);return null===a?j:a}})});k.support.style||(k.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||j},set:function(a,b){return a.style.cssText=""+b}});k.support.optSelected||(k.propHooks.selected=k.extend(k.propHooks.selected,{get:function(a){if(a=a.parentNode)a.selectedIndex,a.parentNode&&a.parentNode.selectedIndex;return null}}));k.support.enctype||(k.propFix.enctype="encoding");k.support.checkOn||k.each(["radio","checkbox"],function(){k.valHooks[this]=
{get:function(a){return null===a.getAttribute("value")?"on":a.value}}});k.each(["radio","checkbox"],function(){k.valHooks[this]=k.extend(k.valHooks[this],{set:function(a,b){if(k.isArray(b))return a.checked=0<=k.inArray(k(a).val(),b)}})});var kc=/^(?:textarea|input|select)$/i,Gc=/^([^\.]*)?(?:\.(.+))?$/,Hc=/(?:^|\s)hover(\.\S+)?\b/,Ic=/^key/,Rb=/^(?:mouse|contextmenu)|click/,lc=/^(?:focusinfocus|focusoutblur)$/,Jc=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,Kc=function(a){if(a=Jc.exec(a))a[1]=(a[1]||
"").toLowerCase(),a[3]=a[3]&&RegExp("(?:^|\\s)"+a[3]+"(?:\\s|$)");return a},db=function(a){return k.event.special.hover?a:a.replace(Hc,"mouseenter$1 mouseleave$1")};k.event={add:function(a,b,d,c,g){var e,f,h,m,l,v,Q,p,K;if(!(3===a.nodeType||8===a.nodeType||!b||!d||!(e=k._data(a)))){d.handler&&(Q=d,d=Q.handler,g=Q.selector);d.guid||(d.guid=k.guid++);h=e.events;h||(e.events=h={});f=e.handle;f||(e.handle=f=function(a){return"undefined"!==typeof k&&(!a||k.event.triggered!==a.type)?k.event.dispatch.apply(f.elem,
arguments):j},f.elem=a);b=k.trim(db(b)).split(" ");for(e=0;e<b.length;e++){m=Gc.exec(b[e])||[];l=m[1];v=(m[2]||"").split(".").sort();K=k.event.special[l]||{};l=(g?K.delegateType:K.bindType)||l;K=k.event.special[l]||{};m=k.extend({type:l,origType:m[1],data:c,handler:d,guid:d.guid,selector:g,quick:g&&Kc(g),namespace:v.join(".")},Q);p=h[l];if(!p&&(p=h[l]=[],p.delegateCount=0,!K.setup||!1===K.setup.call(a,c,v,f)))a.addEventListener?a.addEventListener(l,f,!1):a.attachEvent&&a.attachEvent("on"+l,f);K.add&&
(K.add.call(a,m),m.handler.guid||(m.handler.guid=d.guid));g?p.splice(p.delegateCount++,0,m):p.push(m);k.event.global[l]=!0}a=null}},global:{},remove:function(a,b,d,c,g){var e=k.hasData(a)&&k._data(a),f,h,j,m,l,v,Q,p,K,q;if(e&&(Q=e.events)){b=k.trim(db(b||"")).split(" ");for(f=0;f<b.length;f++)if(h=Gc.exec(b[f])||[],j=m=h[1],h=h[2],j){p=k.event.special[j]||{};j=(c?p.delegateType:p.bindType)||j;K=Q[j]||[];l=K.length;h=h?RegExp("(^|\\.)"+h.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(v=
0;v<K.length;v++)if(q=K[v],(g||m===q.origType)&&(!d||d.guid===q.guid)&&(!h||h.test(q.namespace))&&(!c||c===q.selector||"**"===c&&q.selector))K.splice(v--,1),q.selector&&K.delegateCount--,p.remove&&p.remove.call(a,q);0===K.length&&l!==K.length&&((!p.teardown||!1===p.teardown.call(a,h))&&k.removeEvent(a,j,e.handle),delete Q[j])}else for(j in Q)k.event.remove(a,j+b[f],d,c,!0);if(k.isEmptyObject(Q)){if(b=e.handle)b.elem=null;k.removeData(a,["events","handle"],!0)}}},customEvent:{getData:!0,setData:!0,
changeData:!0},trigger:function(b,d,c,g){if(!c||!(3===c.nodeType||8===c.nodeType)){var e=b.type||b,f=[],h,m,l,v,p;if(!lc.test(e+k.event.triggered)&&(0<=e.indexOf("!")&&(e=e.slice(0,-1),h=!0),0<=e.indexOf(".")&&(f=e.split("."),e=f.shift(),f.sort()),c&&!k.event.customEvent[e]||k.event.global[e]))if(b="object"===typeof b?b[k.expando]?b:new k.Event(e,b):new k.Event(e),b.type=e,b.isTrigger=!0,b.exclusive=h,b.namespace=f.join("."),b.namespace_re=b.namespace?RegExp("(^|\\.)"+f.join("\\.(?:.*\\.)?")+"(\\.|$)"):
null,h=0>e.indexOf(":")?"on"+e:"",c){if(b.result=j,b.target||(b.target=c),d=null!=d?k.makeArray(d):[],d.unshift(b),l=k.event.special[e]||{},!(l.trigger&&!1===l.trigger.apply(c,d))){p=[[c,l.bindType||e]];if(!g&&!l.noBubble&&!k.isWindow(c)){v=l.delegateType||e;f=lc.test(v+e)?c:c.parentNode;for(m=null;f;f=f.parentNode)p.push([f,v]),m=f;m&&m===c.ownerDocument&&p.push([m.defaultView||m.parentWindow||a,v])}for(m=0;m<p.length&&!b.isPropagationStopped();m++)f=p[m][0],b.type=p[m][1],(v=(k._data(f,"events")||
{})[b.type]&&k._data(f,"handle"))&&v.apply(f,d),(v=h&&f[h])&&(k.acceptData(f)&&!1===v.apply(f,d))&&b.preventDefault();b.type=e;if(!g&&!b.isDefaultPrevented()&&(!l._default||!1===l._default.apply(c.ownerDocument,d))&&!("click"===e&&k.nodeName(c,"a"))&&k.acceptData(c))if(h&&c[e]&&("focus"!==e&&"blur"!==e||0!==b.target.offsetWidth)&&!k.isWindow(c))(m=c[h])&&(c[h]=null),k.event.triggered=e,c[e](),k.event.triggered=j,m&&(c[h]=m);return b.result}}else for(m in c=k.cache,c)c[m].events&&c[m].events[e]&&k.event.trigger(b,
d,c[m].handle.elem,!0)}},dispatch:function(b){b=k.event.fix(b||a.event);var d=(k._data(this,"events")||{})[b.type]||[],c=d.delegateCount,g=[].slice.call(arguments,0),e=!b.exclusive&&!b.namespace,f=k.event.special[b.type]||{},h=[],m,l,v,p,Q,K,q;g[0]=b;b.delegateTarget=this;if(!(f.preDispatch&&!1===f.preDispatch.call(this,b))){if(c&&!(b.button&&"click"===b.type)){v=k(this);v.context=this.ownerDocument||this;for(l=b.target;l!=this;l=l.parentNode||this)if(!0!==l.disabled){Q={};K=[];v[0]=l;for(m=0;m<c;m++){p=
d[m];q=p.selector;if(Q[q]===j){var Ga=Q,z=q,V;if(p.quick){V=p.quick;var u=l.attributes||{};V=(!V[1]||l.nodeName.toLowerCase()===V[1])&&(!V[2]||(u.id||{}).value===V[2])&&(!V[3]||V[3].test((u["class"]||{}).value))}else V=v.is(q);Ga[z]=V}Q[q]&&K.push(p)}K.length&&h.push({elem:l,matches:K})}}d.length>c&&h.push({elem:this,matches:d.slice(c)});for(m=0;m<h.length&&!b.isPropagationStopped();m++){c=h[m];b.currentTarget=c.elem;for(d=0;d<c.matches.length&&!b.isImmediatePropagationStopped();d++)if(p=c.matches[d],
e||!b.namespace&&!p.namespace||b.namespace_re&&b.namespace_re.test(p.namespace))b.data=p.data,b.handleObj=p,p=((k.event.special[p.origType]||{}).handle||p.handler).apply(c.elem,g),p!==j&&(b.result=p,!1===p&&(b.preventDefault(),b.stopPropagation()))}f.postDispatch&&f.postDispatch.call(this,b);return b.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},
keyHooks:{props:["char","charCode","key","keyCode"],filter:function(a,b){null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var d,c,g=b.button,e=b.fromElement;null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||A,c=d.documentElement,d=d.body,a.pageX=b.clientX+(c&&c.scrollLeft||d&&d.scrollLeft||0)-(c&&c.clientLeft||d&&d.clientLeft||
0),a.pageY=b.clientY+(c&&c.scrollTop||d&&d.scrollTop||0)-(c&&c.clientTop||d&&d.clientTop||0));!a.relatedTarget&&e&&(a.relatedTarget=e===a.target?b.toElement:e);!a.which&&g!==j&&(a.which=g&1?1:g&2?3:g&4?2:0);return a}},fix:function(a){if(a[k.expando])return a;var b,d,c=a,g=k.event.fixHooks[a.type]||{},e=g.props?this.props.concat(g.props):this.props;a=k.Event(c);for(b=e.length;b;)d=e[--b],a[d]=c[d];a.target||(a.target=c.srcElement||A);3===a.target.nodeType&&(a.target=a.target.parentNode);a.metaKey===
j&&(a.metaKey=a.ctrlKey);return g.filter?g.filter(a,c):a},special:{ready:{setup:k.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,d){k.isWindow(this)&&(this.onbeforeunload=d)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,d,c){a=k.extend(new k.Event,d,{type:a,isSimulated:!0,originalEvent:{}});c?k.event.trigger(a,null,b):k.event.dispatch.call(b,a);a.isDefaultPrevented()&&
d.preventDefault()}};k.event.handle=k.event.dispatch;k.removeEvent=A.removeEventListener?function(a,b,d){a.removeEventListener&&a.removeEventListener(b,d,!1)}:function(a,b,d){a.detachEvent&&a.detachEvent("on"+b,d)};k.Event=function(a,b){if(!(this instanceof k.Event))return new k.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||!1===a.returnValue||a.getPreventDefault&&a.getPreventDefault()?h:e):this.type=a;b&&k.extend(this,b);this.timeStamp=a&&
a.timeStamp||k.now();this[k.expando]=!0};k.Event.prototype={preventDefault:function(){this.isDefaultPrevented=h;var a=this.originalEvent;a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=h;var a=this.originalEvent;a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=h;this.stopPropagation()},isDefaultPrevented:e,isPropagationStopped:e,isImmediatePropagationStopped:e};
k.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){k.event.special[a]={delegateType:b,bindType:b,handle:function(a){var d=a.relatedTarget,c=a.handleObj,n;if(!d||d!==this&&!k.contains(this,d))a.type=c.origType,n=c.handler.apply(this,arguments),a.type=b;return n}}});k.support.submitBubbles||(k.event.special.submit={setup:function(){if(k.nodeName(this,"form"))return!1;k.event.add(this,"click._submit keypress._submit",function(a){a=a.target;if((a=k.nodeName(a,"input")||k.nodeName(a,"button")?
a.form:j)&&!a._submit_attached)k.event.add(a,"submit._submit",function(a){a._submit_bubble=!0}),a._submit_attached=!0})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&k.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(k.nodeName(this,"form"))return!1;k.event.remove(this,"._submit")}});k.support.changeBubbles||(k.event.special.change={setup:function(){if(kc.test(this.nodeName)){if("checkbox"===this.type||"radio"===this.type)k.event.add(this,
"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),k.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,k.event.simulate("change",this,a,!0))});return!1}k.event.add(this,"beforeactivate._change",function(a){a=a.target;kc.test(a.nodeName)&&!a._change_attached&&(k.event.add(a,"change._change",function(a){this.parentNode&&(!a.isSimulated&&!a.isTrigger)&&k.event.simulate("change",this.parentNode,a,!0)}),
a._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type)return a.handleObj.handler.apply(this,arguments)},teardown:function(){k.event.remove(this,"._change");return kc.test(this.nodeName)}});k.support.focusinBubbles||k.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,c=function(a){k.event.simulate(b,a.target,k.event.fix(a),!0)};k.event.special[b]={setup:function(){0===d++&&A.addEventListener(a,c,!0)},teardown:function(){0===
--d&&A.removeEventListener(a,c,!0)}}});k.fn.extend({on:function(a,b,d,c,g){var f,h;if("object"===typeof a){"string"!==typeof b&&(d=d||b,b=j);for(h in a)this.on(h,b,d,a[h],g);return this}null==d&&null==c?(c=b,d=b=j):null==c&&("string"===typeof b?(c=d,d=j):(c=d,d=b,b=j));if(!1===c)c=e;else if(!c)return this;1===g&&(f=c,c=function(a){k().off(a);return f.apply(this,arguments)},c.guid=f.guid||(f.guid=k.guid++));return this.each(function(){k.event.add(this,a,c,d,b)})},one:function(a,b,d,c){return this.on(a,
b,d,c,1)},off:function(a,b,d){if(a&&a.preventDefault&&a.handleObj){var c=a.handleObj;k(a.delegateTarget).off(c.namespace?c.origType+"."+c.namespace:c.origType,c.selector,c.handler);return this}if("object"===typeof a){for(c in a)this.off(c,b,a[c]);return this}if(!1===b||"function"===typeof b)d=b,b=j;!1===d&&(d=e);return this.each(function(){k.event.remove(this,a,d,b)})},bind:function(a,b,d){return this.on(a,null,b,d)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,d){k(this.context).on(a,
this.selector,b,d);return this},die:function(a,b){k(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,d,c){return this.on(b,a,d,c)},undelegate:function(a,b,d){return 1==arguments.length?this.off(a,"**"):this.off(b,a,d)},trigger:function(a,b){return this.each(function(){k.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return k.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,d=a.guid||k.guid++,c=0,g=function(d){var g=(k._data(this,"lastToggle"+
a.guid)||0)%c;k._data(this,"lastToggle"+a.guid,g+1);d.preventDefault();return b[g].apply(this,arguments)||!1};for(g.guid=d;c<b.length;)b[c++].guid=d;return this.click(g)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});k.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){k.fn[b]=function(a,d){null==d&&
(d=a,a=null);return 0<arguments.length?this.on(b,null,a,d):this.trigger(b)};k.attrFn&&(k.attrFn[b]=!0);Ic.test(b)&&(k.event.fixHooks[b]=k.event.keyHooks);Rb.test(b)&&(k.event.fixHooks[b]=k.event.mouseHooks)});var Ba=function(a,b,d,c,g,e){g=0;for(var f=c.length;g<f;g++){var h=c[g];if(h){for(var j=!1,h=h[a];h;){if(h[eb]===d){j=c[h.sizset];break}1===h.nodeType&&!e&&(h[eb]=d,h.sizset=g);if(h.nodeName.toLowerCase()===b){j=h;break}h=h[a]}c[g]=j}}},Ia=function(a,b,d,c,g,e){g=0;for(var f=c.length;g<f;g++){var h=
c[g];if(h){for(var j=!1,h=h[a];h;){if(h[eb]===d){j=c[h.sizset];break}if(1===h.nodeType)if(e||(h[eb]=d,h.sizset=g),"string"!==typeof b){if(h===b){j=!0;break}}else if(0<G.filter(b,[h]).length){j=h;break}h=h[a]}c[g]=j}}},Sb=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,eb="sizcache"+(Math.random()+"").replace(".",""),mc=0,nc=Object.prototype.toString,Tb=!1,Ub=!0,pa=/\\/g,Na=/\r\n/g,Qa=/\W/;[0,0].sort(function(){Ub=
!1;return 0});var G=function(a,b,d,c){d=d||[];var g=b=b||A;if(1!==b.nodeType&&9!==b.nodeType)return[];if(!a||"string"!==typeof a)return d;var e,f,h,j,m,k=!0,l=G.isXML(b),v=[],p=a;do if(Sb.exec(""),e=Sb.exec(p))if(p=e[3],v.push(e[1]),e[2]){j=e[3];break}while(e);if(1<v.length&&ca.exec(a))if(2===v.length&&I.relative[v[0]])f=Vb(v[0]+v[1],b,c);else for(f=I.relative[v[0]]?[b]:G(v.shift(),b);v.length;)a=v.shift(),I.relative[a]&&(a+=v.shift()),f=Vb(a,f,c);else if(!c&&(1<v.length&&9===b.nodeType&&!l&&I.match.ID.test(v[0])&&
!I.match.ID.test(v[v.length-1]))&&(e=G.find(v.shift(),b,l),b=e.expr?G.filter(e.expr,e.set)[0]:e.set[0]),b){e=c?{expr:v.pop(),set:T(c)}:G.find(v.pop(),1===v.length&&("~"===v[0]||"+"===v[0])&&b.parentNode?b.parentNode:b,l);f=e.expr?G.filter(e.expr,e.set):e.set;for(0<v.length?h=T(f):k=!1;v.length;)e=m=v.pop(),I.relative[m]?e=v.pop():m="",null==e&&(e=b),I.relative[m](h,e,l)}else h=[];h||(h=f);h||G.error(m||a);if("[object Array]"===nc.call(h))if(k)if(b&&1===b.nodeType)for(a=0;null!=h[a];a++)h[a]&&(!0===
h[a]||1===h[a].nodeType&&G.contains(b,h[a]))&&d.push(f[a]);else for(a=0;null!=h[a];a++)h[a]&&1===h[a].nodeType&&d.push(f[a]);else d.push.apply(d,h);else T(h,d);j&&(G(j,g,d,c),G.uniqueSort(d));return d};G.uniqueSort=function(a){if(J&&(Tb=Ub,a.sort(J),Tb))for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1);return a};G.matches=function(a,b){return G(a,null,null,b)};G.matchesSelector=function(a,b){return 0<G(b,null,null,[a]).length};G.find=function(a,b,d){var c,g,e,f,h,j;if(!a)return[];g=0;for(e=
I.order.length;g<e;g++)if(h=I.order[g],f=I.leftMatch[h].exec(a))if(j=f[1],f.splice(1,1),"\\"!==j.substr(j.length-1)&&(f[1]=(f[1]||"").replace(pa,""),c=I.find[h](f,b,d),null!=c)){a=a.replace(I.match[h],"");break}c||(c="undefined"!==typeof b.getElementsByTagName?b.getElementsByTagName("*"):[]);return{set:c,expr:a}};G.filter=function(a,b,d,c){for(var g,e,f,h,m,k,l,v,p=a,Q=[],K=b,q=b&&b[0]&&G.isXML(b[0]);a&&b.length;){for(f in I.filter)if(null!=(g=I.leftMatch[f].exec(a))&&g[2])if(k=I.filter[f],m=g[1],
e=!1,g.splice(1,1),"\\"!==m.substr(m.length-1)){K===Q&&(Q=[]);if(I.preFilter[f])if(g=I.preFilter[f](g,K,d,Q,c,q)){if(!0===g)continue}else e=h=!0;if(g)for(l=0;null!=(m=K[l]);l++)m&&(h=k(m,g,l,K),v=c^h,d&&null!=h?v?e=!0:K[l]=!1:v&&(Q.push(m),e=!0));if(h!==j){d||(K=Q);a=a.replace(I.match[f],"");if(!e)return[];break}}if(a===p)if(null==e)G.error(a);else break;p=a}return K};G.error=function(a){throw Error("Syntax error, unrecognized expression: "+a);};var tb=G.getText=function(a){var b,d;b=a.nodeType;var c=
"";if(b)if(1===b||9===b||11===b){if("string"===typeof a.textContent)return a.textContent;if("string"===typeof a.innerText)return a.innerText.replace(Na,"");for(a=a.firstChild;a;a=a.nextSibling)c+=tb(a)}else{if(3===b||4===b)return a.nodeValue}else for(b=0;d=a[b];b++)8!==d.nodeType&&(c+=tb(d));return c},I=G.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var d=
"string"===typeof b,c=d&&!Qa.test(b),d=d&&!c;c&&(b=b.toLowerCase());for(var c=0,g=a.length,e;c<g;c++)if(e=a[c]){for(;(e=e.previousSibling)&&1!==e.nodeType;);a[c]=d||e&&e.nodeName.toLowerCase()===b?e||!1:e===b}d&&G.filter(b,a,!0)},">":function(a,b){var d,c="string"===typeof b,g=0,e=a.length;if(c&&!Qa.test(b))for(b=b.toLowerCase();g<e;g++){if(d=a[g])d=d.parentNode,a[g]=d.nodeName.toLowerCase()===b?d:!1}else{for(;g<e;g++)(d=a[g])&&(a[g]=c?d.parentNode:d.parentNode===b);c&&G.filter(b,a,!0)}},"":function(a,
b,d){var c,g=mc++,e=Ia;"string"===typeof b&&!Qa.test(b)&&(c=b=b.toLowerCase(),e=Ba);e("parentNode",b,g,a,c,d)},"~":function(a,b,d){var c,g=mc++,e=Ia;"string"===typeof b&&!Qa.test(b)&&(c=b=b.toLowerCase(),e=Ba);e("previousSibling",b,g,a,c,d)}},find:{ID:function(a,b,d){if("undefined"!==typeof b.getElementById&&!d)return(a=b.getElementById(a[1]))&&a.parentNode?[a]:[]},NAME:function(a,b){if("undefined"!==typeof b.getElementsByName){for(var d=[],c=b.getElementsByName(a[1]),g=0,e=c.length;g<e;g++)c[g].getAttribute("name")===
a[1]&&d.push(c[g]);return 0===d.length?null:d}},TAG:function(a,b){if("undefined"!==typeof b.getElementsByTagName)return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,d,c,g,e){a=" "+a[1].replace(pa,"")+" ";if(e)return a;e=0;for(var f;null!=(f=b[e]);e++)f&&(g^(f.className&&0<=(" "+f.className+" ").replace(/[\t\n\r]/g," ").indexOf(a))?d||c.push(f):d&&(b[e]=!1));return!1},ID:function(a){return a[1].replace(pa,"")},TAG:function(a){return a[1].replace(pa,"").toLowerCase()},CHILD:function(a){if("nth"===
a[1]){a[2]||G.error(a[0]);a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec("even"===a[2]&&"2n"||"odd"===a[2]&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0;a[3]=b[3]-0}else a[2]&&G.error(a[0]);a[0]=mc++;return a},ATTR:function(a,b,d,c,g,e){b=a[1]=a[1].replace(pa,"");!e&&I.attrMap[b]&&(a[1]=I.attrMap[b]);a[4]=(a[4]||a[5]||"").replace(pa,"");"~="===a[2]&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(a,b,d,c,g){if("not"===a[1])if(1<(Sb.exec(a[3])||"").length||
/^\w/.test(a[3]))a[3]=G(a[3],null,null,b);else return a=G.filter(a[3],b,d,1^g),d||c.push.apply(c,a),!1;else if(I.match.POS.test(a[0])||I.match.CHILD.test(a[0]))return!0;return a},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return!1===a.disabled&&"hidden"!==a.type},disabled:function(a){return!0===a.disabled},checked:function(a){return!0===a.checked},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return!0===a.selected},parent:function(a){return!!a.firstChild},
empty:function(a){return!a.firstChild},has:function(a,b,d){return!!G(d[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),d=a.type;return"input"===a.nodeName.toLowerCase()&&"text"===d&&(b===d||null===b)},radio:function(a){return"input"===a.nodeName.toLowerCase()&&"radio"===a.type},checkbox:function(a){return"input"===a.nodeName.toLowerCase()&&"checkbox"===a.type},file:function(a){return"input"===a.nodeName.toLowerCase()&&"file"===a.type},
password:function(a){return"input"===a.nodeName.toLowerCase()&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return("input"===b||"button"===b)&&"submit"===a.type},image:function(a){return"input"===a.nodeName.toLowerCase()&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return("input"===b||"button"===b)&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},
focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return 0===b},last:function(a,b,d,c){return b===c.length-1},even:function(a,b){return 0===b%2},odd:function(a,b){return 1===b%2},lt:function(a,b,d){return b<d[3]-0},gt:function(a,b,d){return b>d[3]-0},nth:function(a,b,d){return d[3]-0===b},eq:function(a,b,d){return d[3]-0===b}},filter:{PSEUDO:function(a,b,d,c){var g=b[1],e=I.filters[g];if(e)return e(a,d,b,c);if("contains"===g)return 0<=(a.textContent||a.innerText||
tb([a])||"").indexOf(b[3]);if("not"===g){b=b[3];d=0;for(c=b.length;d<c;d++)if(b[d]===a)return!1;return!0}G.error(g)},CHILD:function(a,b){var d,c,g,e,f,h;d=b[1];h=a;switch(d){case "only":case "first":for(;h=h.previousSibling;)if(1===h.nodeType)return!1;if("first"===d)return!0;h=a;case "last":for(;h=h.nextSibling;)if(1===h.nodeType)return!1;return!0;case "nth":d=b[2];c=b[3];if(1===d&&0===c)return!0;g=b[0];if((e=a.parentNode)&&(e[eb]!==g||!a.nodeIndex)){f=0;for(h=e.firstChild;h;h=h.nextSibling)1===h.nodeType&&
(h.nodeIndex=++f);e[eb]=g}h=a.nodeIndex-c;return 0===d?0===h:0===h%d&&0<=h/d}},ID:function(a,b){return 1===a.nodeType&&a.getAttribute("id")===b},TAG:function(a,b){return"*"===b&&1===a.nodeType||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return-1<(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)},ATTR:function(a,b){var d=b[1],d=G.attr?G.attr(a,d):I.attrHandle[d]?I.attrHandle[d](a):null!=a[d]?a[d]:a.getAttribute(d),c=d+"",g=b[2],e=b[4];return null==d?"!="===g:!g&&G.attr?
null!=d:"="===g?c===e:"*="===g?0<=c.indexOf(e):"~="===g?0<=(" "+c+" ").indexOf(e):!e?c&&!1!==d:"!="===g?c!==e:"^="===g?0===c.indexOf(e):"$="===g?c.substr(c.length-e.length)===e:"|="===g?c===e||c.substr(0,e.length+1)===e+"-":!1},POS:function(a,b,d,c){var g=I.setFilters[b[2]];if(g)return g(a,d,b,c)}}},ca=I.match.POS,fb=function(a,b){return"\\"+(b-0+1)},qa;for(qa in I.match)I.match[qa]=RegExp(I.match[qa].source+/(?![^\[]*\])(?![^\(]*\))/.source),I.leftMatch[qa]=RegExp(/(^(?:.|\r|\n)*?)/.source+I.match[qa].source.replace(/\\(\d+)/g,
fb));I.match.globalPOS=ca;var T=function(a,b){a=Array.prototype.slice.call(a,0);return b?(b.push.apply(b,a),b):a};try{Array.prototype.slice.call(A.documentElement.childNodes,0)[0].nodeType}catch(Ca){T=function(a,b){var d=0,c=b||[];if("[object Array]"===nc.call(a))Array.prototype.push.apply(c,a);else if("number"===typeof a.length)for(var g=a.length;d<g;d++)c.push(a[d]);else for(;a[d];d++)c.push(a[d]);return c}}var J,Ya;A.documentElement.compareDocumentPosition?J=function(a,b){return a===b?(Tb=!0,0):
!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition?-1:1:a.compareDocumentPosition(b)&4?-1:1}:(J=function(a,b){if(a===b)return Tb=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var d,c,g=[],e=[];d=a.parentNode;c=b.parentNode;var f=d;if(d===c)return Ya(a,b);if(d){if(!c)return 1}else return-1;for(;f;)g.unshift(f),f=f.parentNode;for(f=c;f;)e.unshift(f),f=f.parentNode;d=g.length;c=e.length;for(f=0;f<d&&f<c;f++)if(g[f]!==e[f])return Ya(g[f],e[f]);return f===
d?Ya(a,e[f],-1):Ya(g[f],b,1)},Ya=function(a,b,d){if(a===b)return d;for(a=a.nextSibling;a;){if(a===b)return-1;a=a.nextSibling}return 1});var ub=A.createElement("div"),gb="script"+(new Date).getTime(),Z=A.documentElement;ub.innerHTML="<a name='"+gb+"'/>";Z.insertBefore(ub,Z.firstChild);A.getElementById(gb)&&(I.find.ID=function(a,b,d){if("undefined"!==typeof b.getElementById&&!d)return(b=b.getElementById(a[1]))?b.id===a[1]||"undefined"!==typeof b.getAttributeNode&&b.getAttributeNode("id").nodeValue===
a[1]?[b]:j:[]},I.filter.ID=function(a,b){var d="undefined"!==typeof a.getAttributeNode&&a.getAttributeNode("id");return 1===a.nodeType&&d&&d.nodeValue===b});Z.removeChild(ub);var Z=ub=null,va=A.createElement("div");va.appendChild(A.createComment(""));0<va.getElementsByTagName("*").length&&(I.find.TAG=function(a,b){var d=b.getElementsByTagName(a[1]);if("*"===a[1]){for(var c=[],g=0;d[g];g++)1===d[g].nodeType&&c.push(d[g]);d=c}return d});va.innerHTML="<a href='#'></a>";va.firstChild&&("undefined"!==
typeof va.firstChild.getAttribute&&"#"!==va.firstChild.getAttribute("href"))&&(I.attrHandle.href=function(a){return a.getAttribute("href",2)});va=null;if(A.querySelectorAll){var Da=G,Eb=A.createElement("div");Eb.innerHTML="<p class='TEST'></p>";if(!(Eb.querySelectorAll&&0===Eb.querySelectorAll(".TEST").length)){var G=function(a,b,d,c){b=b||A;if(!c&&!G.isXML(b)){var g=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(a);if(g&&(1===b.nodeType||9===b.nodeType)){if(g[1])return T(b.getElementsByTagName(a),d);
if(g[2]&&I.find.CLASS&&b.getElementsByClassName)return T(b.getElementsByClassName(g[2]),d)}if(9===b.nodeType){if("body"===a&&b.body)return T([b.body],d);if(g&&g[3]){var e=b.getElementById(g[3]);if(e&&e.parentNode){if(e.id===g[3])return T([e],d)}else return T([],d)}try{return T(b.querySelectorAll(a),d)}catch(f){}}else if(1===b.nodeType&&"object"!==b.nodeName.toLowerCase()){var g=b,h=(e=b.getAttribute("id"))||"__sizzle__",j=b.parentNode,m=/^\s*[+~]/.test(a);e?h=h.replace(/'/g,"\\$&"):b.setAttribute("id",
h);m&&j&&(b=b.parentNode);try{if(!m||j)return T(b.querySelectorAll("[id='"+h+"'] "+a),d)}catch(k){}finally{e||g.removeAttribute("id")}}}return Da(a,b,d,c)},Ra;for(Ra in Da)G[Ra]=Da[Ra];Eb=null}}var Fb=A.documentElement,ea=Fb.matchesSelector||Fb.mozMatchesSelector||Fb.webkitMatchesSelector||Fb.msMatchesSelector;if(ea){var Ea=!ea.call(A.createElement("div"),"div"),Za=!1;try{ea.call(A.documentElement,"[test!='']:sizzle")}catch(Gb){Za=!0}G.matchesSelector=function(a,b){b=b.replace(/\=\s*([^'"\]]*)\s*\]/g,
"='$1']");if(!G.isXML(a))try{if(Za||!I.match.PSEUDO.test(b)&&!/!=/.test(b)){var d=ea.call(a,b);if(d||!Ea||a.document&&11!==a.document.nodeType)return d}}catch(c){}return 0<G(b,null,null,[a]).length}}var Fa=A.createElement("div");Fa.innerHTML="<div class='test e'></div><div class='test'></div>";Fa.getElementsByClassName&&0!==Fa.getElementsByClassName("e").length&&(Fa.lastChild.className="e",1!==Fa.getElementsByClassName("e").length&&(I.order.splice(1,0,"CLASS"),I.find.CLASS=function(a,b,d){if("undefined"!==
typeof b.getElementsByClassName&&!d)return b.getElementsByClassName(a[1])},Fa=null));G.contains=A.documentElement.contains?function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:A.documentElement.compareDocumentPosition?function(a,b){return!!(a.compareDocumentPosition(b)&16)}:function(){return!1};G.isXML=function(a){return(a=(a?a.ownerDocument||a:0).documentElement)?"HTML"!==a.nodeName:!1};var Vb=function(a,b,d){var c,g=[],e="";for(b=b.nodeType?[b]:b;c=I.match.PSEUDO.exec(a);)e+=c[0],a=a.replace(I.match.PSEUDO,
"");a=I.relative[a]?a+"*":a;c=0;for(var f=b.length;c<f;c++)G(a,b[c],g,d);return G.filter(e,g)};G.attr=k.attr;G.selectors.attrMap={};k.find=G;k.expr=G.selectors;k.expr[":"]=k.expr.filters;k.unique=G.uniqueSort;k.text=G.getText;k.isXMLDoc=G.isXML;k.contains=G.contains;var oc=/Until$/,ka=/^(?:parents|prevUntil|prevAll)/,wa=/,/,La=/^.[^:#\[\.,]*$/,pc=Array.prototype.slice,hb=k.expr.match.globalPOS,ib={children:!0,contents:!0,next:!0,prev:!0};k.fn.extend({find:function(a){var b=this,d,c;if("string"!==
typeof a)return k(a).filter(function(){d=0;for(c=b.length;d<c;d++)if(k.contains(b[d],this))return!0});var g=this.pushStack("","find",a),e,f,h;d=0;for(c=this.length;d<c;d++)if(e=g.length,k.find(a,this[d],g),0<d)for(f=e;f<g.length;f++)for(h=0;h<e;h++)if(g[h]===g[f]){g.splice(f--,1);break}return g},has:function(a){var b=k(a);return this.filter(function(){for(var a=0,d=b.length;a<d;a++)if(k.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(d(this,a,!1),"not",a)},filter:function(a){return this.pushStack(d(this,
a,!0),"filter",a)},is:function(a){return!!a&&("string"===typeof a?hb.test(a)?0<=k(a,this.context).index(this[0]):0<k.filter(a,this).length:0<this.filter(a).length)},closest:function(a,b){var d=[],c,g,e=this[0];if(k.isArray(a)){for(g=1;e&&e.ownerDocument&&e!==b;){for(c=0;c<a.length;c++)k(e).is(a[c])&&d.push({selector:a[c],elem:e,level:g});e=e.parentNode;g++}return d}var f=hb.test(a)||"string"!==typeof a?k(a,b||this.context):0;c=0;for(g=this.length;c<g;c++)for(e=this[c];e;)if(f?-1<f.index(e):k.find.matchesSelector(e,
a)){d.push(e);break}else if(e=e.parentNode,!e||!e.ownerDocument||e===b||11===e.nodeType)break;d=1<d.length?k.unique(d):d;return this.pushStack(d,"closest",a)},index:function(a){return!a?this[0]&&this[0].parentNode?this.prevAll().length:-1:"string"===typeof a?k.inArray(this[0],k(a)):k.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var d="string"===typeof a?k(a,b):k.makeArray(a&&a.nodeType?[a]:a),c=k.merge(this.get(),d);return this.pushStack(!d[0]||!d[0].parentNode||11===d[0].parentNode.nodeType||
!c[0]||!c[0].parentNode||11===c[0].parentNode.nodeType?c:k.unique(c))},andSelf:function(){return this.add(this.prevObject)}});k.each({parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},parents:function(a){return k.dir(a,"parentNode")},parentsUntil:function(a,b,d){return k.dir(a,"parentNode",d)},next:function(a){return k.nth(a,2,"nextSibling")},prev:function(a){return k.nth(a,2,"previousSibling")},nextAll:function(a){return k.dir(a,"nextSibling")},prevAll:function(a){return k.dir(a,
"previousSibling")},nextUntil:function(a,b,d){return k.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return k.dir(a,"previousSibling",d)},siblings:function(a){return k.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return k.sibling(a.firstChild)},contents:function(a){return k.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:k.makeArray(a.childNodes)}},function(a,b){k.fn[a]=function(d,c){var g=k.map(this,b,d);oc.test(a)||(c=d);c&&"string"===typeof c&&(g=k.filter(c,
g));g=1<this.length&&!ib[a]?k.unique(g):g;if((1<this.length||wa.test(c))&&ka.test(a))g=g.reverse();return this.pushStack(g,a,pc.call(arguments).join(","))}});k.extend({filter:function(a,b,d){d&&(a=":not("+a+")");return 1===b.length?k.find.matchesSelector(b[0],a)?[b[0]]:[]:k.find.matches(a,b)},dir:function(a,b,d){var c=[];for(a=a[b];a&&9!==a.nodeType&&(d===j||1!==a.nodeType||!k(a).is(d));)1===a.nodeType&&c.push(a),a=a[b];return c},nth:function(a,b,d){b=b||1;for(var c=0;a&&!(1===a.nodeType&&++c===b);a=
a[d]);return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&d.push(a);return d}});var Lb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",Wb=/ jQuery\d+="(?:\d+|null)"/g,vb=/^\s+/,Sa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Xb=/<([\w:]+)/,Lc=/<tbody/i,qc=/<|&#?\w+;/,N=/<(?:script|style)/i,Y=/<(?:script|object|embed|option|style)/i,
W=RegExp("<(?:"+Lb+")[\\s/>]","i"),O=/checked\s*(?:[^=]|=\s*.checked.)/i,rc=/\/(java|ecma)script/i,Yb=/^\s*<!(?:\[CDATA\[|\-\-)/,M={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Hb=g(A);M.optgroup=M.option;M.tbody=M.tfoot=
M.colgroup=M.caption=M.thead;M.th=M.td;k.support.htmlSerialize||(M._default=[1,"div<div>","</div>"]);k.fn.extend({text:function(a){return k.access(this,function(a){return a===j?k.text(this):this.empty().append((this[0]&&this[0].ownerDocument||A).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(k.isFunction(a))return this.each(function(b){k(this).wrapAll(a.call(this,b))});if(this[0]){var b=k(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var a=
this;a.firstChild&&1===a.firstChild.nodeType;)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return k.isFunction(a)?this.each(function(b){k(this).wrapInner(a.call(this,b))}):this.each(function(){var b=k(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){var b=k.isFunction(a);return this.each(function(d){k(this).wrapAll(b?a.call(this,d):a)})},unwrap:function(){return this.parent().each(function(){k.nodeName(this,"body")||k(this).replaceWith(this.childNodes)}).end()},
append:function(){return this.domManip(arguments,!0,function(a){1===this.nodeType&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){1===this.nodeType&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=k.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&
this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,k.clean(arguments));return a}},remove:function(a,b){for(var d=0,c;null!=(c=this[d]);d++)if(!a||k.filter(a,[c]).length)!b&&1===c.nodeType&&(k.cleanData(c.getElementsByTagName("*")),k.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){for(var a=0,b;null!=(b=this[a]);a++)for(1===
b.nodeType&&k.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);return this},clone:function(a,b){a=null==a?!1:a;b=null==b?a:b;return this.map(function(){return k.clone(this,a,b)})},html:function(a){return k.access(this,function(a){var b=this[0]||{},d=0,c=this.length;if(a===j)return 1===b.nodeType?b.innerHTML.replace(Wb,""):null;if("string"===typeof a&&!N.test(a)&&(k.support.leadingWhitespace||!vb.test(a))&&!M[(Xb.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Sa,"<$1></$2>");
try{for(;d<c;d++)b=this[d]||{},1===b.nodeType&&(k.cleanData(b.getElementsByTagName("*")),b.innerHTML=a);b=0}catch(g){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(k.isFunction(a))return this.each(function(b){var d=k(this),c=d.html();d.replaceWith(a.call(this,b,c))});"string"!==typeof a&&(a=k(a).detach());return this.each(function(){var b=this.nextSibling,d=this.parentNode;k(this).remove();b?k(b).before(a):k(d).append(a)})}return this.length?
this.pushStack(k(k.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,b,d){var c,g,e,f=a[0],h=[];if(!k.support.checkClone&&3===arguments.length&&"string"===typeof f&&O.test(f))return this.each(function(){k(this).domManip(a,b,d,!0)});if(k.isFunction(f))return this.each(function(c){var g=k(this);a[0]=f.call(this,c,b?g.html():j);g.domManip(a,b,d)});if(this[0]){c=f&&f.parentNode;c=k.support.parentNode&&c&&11===c.nodeType&&c.childNodes.length===
this.length?{fragment:c}:k.buildFragment(a,this,h);e=c.fragment;if(g=1===e.childNodes.length?e=e.firstChild:e.firstChild){b=b&&k.nodeName(g,"tr");g=0;for(var m=this.length,l=m-1;g<m;g++)d.call(b?k.nodeName(this[g],"table")?this[g].getElementsByTagName("tbody")[0]||this[g].appendChild(this[g].ownerDocument.createElement("tbody")):this[g]:this[g],c.cacheable||1<m&&g<l?k.clone(e,!0,!0):e)}h.length&&k.each(h,function(a,b){b.src?k.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):k.globalEval((b.text||
b.textContent||b.innerHTML||"").replace(Yb,"/*$0*/"));b.parentNode&&b.parentNode.removeChild(b)})}return this}});k.buildFragment=function(a,b,d){var c,g,e,f,h=a[0];b&&b[0]&&(f=b[0].ownerDocument||b[0]);f.createDocumentFragment||(f=A);if(1===a.length&&"string"===typeof h&&512>h.length&&f===A&&"<"===h.charAt(0)&&!Y.test(h)&&(k.support.checkClone||!O.test(h))&&(k.support.html5Clone||!W.test(h)))g=!0,(e=k.fragments[h])&&1!==e&&(c=e);c||(c=f.createDocumentFragment(),k.clean(a,f,c,d));g&&(k.fragments[h]=
e?c:1);return{fragment:c,cacheable:g}};k.fragments={};k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){k.fn[a]=function(d){var c=[];d=k(d);var g=1===this.length&&this[0].parentNode;if(g&&11===g.nodeType&&1===g.childNodes.length&&1===d.length)return d[b](this[0]),this;for(var g=0,e=d.length;g<e;g++){var f=(0<g?this.clone(!0):this).get();k(d[g])[b](f);c=c.concat(f)}return this.pushStack(c,a,d.selector)}});k.extend({clone:function(a,
b,d){var c,g,e;k.support.html5Clone||k.isXMLDoc(a)||!W.test("<"+a.nodeName+">")?c=a.cloneNode(!0):(c=A.createElement("div"),Hb.appendChild(c),c.innerHTML=a.outerHTML,c=c.firstChild);var f=c;if((!k.support.noCloneEvent||!k.support.noCloneChecked)&&(1===a.nodeType||11===a.nodeType)&&!k.isXMLDoc(a)){p(a,f);c=r(a);g=r(f);for(e=0;c[e];++e)g[e]&&p(c[e],g[e])}if(b&&(m(a,f),d)){c=r(a);g=r(f);for(e=0;c[e];++e)m(c[e],g[e])}return f},clean:function(a,b,d,c){var e,f=[];b=b||A;"undefined"===typeof b.createElement&&
(b=b.ownerDocument||b[0]&&b[0].ownerDocument||A);for(var h=0,j;null!=(j=a[h]);h++)if("number"===typeof j&&(j+=""),j){if("string"===typeof j)if(qc.test(j)){j=j.replace(Sa,"<$1></$2>");e=(Xb.exec(j)||["",""])[1].toLowerCase();var m=M[e]||M._default,l=m[0],v=b.createElement("div"),p=Hb.childNodes;b===A?Hb.appendChild(v):g(b).appendChild(v);for(v.innerHTML=m[1]+j+m[2];l--;)v=v.lastChild;if(!k.support.tbody){l=Lc.test(j);m="table"===e&&!l?v.firstChild&&v.firstChild.childNodes:"<table>"===m[1]&&!l?v.childNodes:
[];for(e=m.length-1;0<=e;--e)k.nodeName(m[e],"tbody")&&!m[e].childNodes.length&&m[e].parentNode.removeChild(m[e])}!k.support.leadingWhitespace&&vb.test(j)&&v.insertBefore(b.createTextNode(vb.exec(j)[0]),v.firstChild);j=v.childNodes;v&&(v.parentNode.removeChild(v),0<p.length&&(v=p[p.length-1])&&v.parentNode&&v.parentNode.removeChild(v))}else j=b.createTextNode(j);var Q;if(!k.support.appendChecked)if(j[0]&&"number"===typeof(Q=j.length))for(e=0;e<Q;e++)t(j[e]);else t(j);j.nodeType?f.push(j):f=k.merge(f,
j)}if(d){a=function(a){return!a.type||rc.test(a.type)};for(h=0;f[h];h++)b=f[h],c&&k.nodeName(b,"script")&&(!b.type||rc.test(b.type))?c.push(b.parentNode?b.parentNode.removeChild(b):b):(1===b.nodeType&&(j=k.grep(b.getElementsByTagName("script"),a),f.splice.apply(f,[h+1,0].concat(j))),d.appendChild(b))}return f},cleanData:function(a){for(var b,d,c=k.cache,g=k.event.special,e=k.support.deleteExpando,f=0,h;null!=(h=a[f]);f++)if(!h.nodeName||!k.noData[h.nodeName.toLowerCase()])if(d=h[k.expando]){if((b=
c[d])&&b.events){for(var j in b.events)g[j]?k.event.remove(h,j):k.removeEvent(h,j,b.handle);b.handle&&(b.handle.elem=null)}e?delete h[k.expando]:h.removeAttribute&&h.removeAttribute(k.expando);delete c[d]}}});var Ib=/alpha\([^)]*\)/i,wb=/opacity=([^)]*)/,ga=/([A-Z]|^ms)/g,Zb=/^[\-+]?(?:\d*\.)?\d+$/i,mb=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,Mc=/^([\-+])=([\-+.\de]+)/,ra=/^margin/,Ja={position:"absolute",visibility:"hidden",display:"block"},Pa=["Top","Right","Bottom","Left"],ta,xa,ya;k.fn.css=function(a,
b){return k.access(this,function(a,b,d){return d!==j?k.style(a,b,d):k.css(a,b)},a,b,1<arguments.length)};k.extend({cssHooks:{opacity:{get:function(a,b){if(b){var d=ta(a,"opacity");return""===d?"1":d}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,d,c){if(a&&!(3===a.nodeType||8===a.nodeType||!a.style)){var g,e=k.camelCase(b),f=a.style,h=
k.cssHooks[e];b=k.cssProps[e]||e;if(d!==j){c=typeof d;if("string"===c&&(g=Mc.exec(d)))d=+(g[1]+1)*+g[2]+parseFloat(k.css(a,b)),c="number";if(!(null==d||"number"===c&&isNaN(d)))if("number"===c&&!k.cssNumber[e]&&(d+="px"),!h||!("set"in h)||(d=h.set(a,d))!==j)try{f[b]=d}catch(m){}}else return h&&"get"in h&&(g=h.get(a,!1,c))!==j?g:f[b]}},css:function(a,b,d){var c,g;b=k.camelCase(b);g=k.cssHooks[b];b=k.cssProps[b]||b;"cssFloat"===b&&(b="float");if(g&&"get"in g&&(c=g.get(a,!0,d))!==j)return c;if(ta)return ta(a,
b)},swap:function(a,b,d){var c={},g;for(g in b)c[g]=a.style[g],a.style[g]=b[g];d=d.call(a);for(g in b)a.style[g]=c[g];return d}});k.curCSS=k.css;A.defaultView&&A.defaultView.getComputedStyle&&(xa=function(a,b){var d,c,g,e=a.style;b=b.replace(ga,"-$1").toLowerCase();if((c=a.ownerDocument.defaultView)&&(g=c.getComputedStyle(a,null)))d=g.getPropertyValue(b),""===d&&!k.contains(a.ownerDocument.documentElement,a)&&(d=k.style(a,b));!k.support.pixelMargin&&(g&&ra.test(b)&&mb.test(d))&&(c=e.width,e.width=
d,d=g.width,e.width=c);return d});A.documentElement.currentStyle&&(ya=function(a,b){var d,c,g=a.currentStyle&&a.currentStyle[b],e=a.style;if(null==g&&e&&(d=e[b]))g=d;if(mb.test(g)){d=e.left;if(c=a.runtimeStyle&&a.runtimeStyle.left)a.runtimeStyle.left=a.currentStyle.left;e.left="fontSize"===b?"1em":g;g=e.pixelLeft+"px";e.left=d;c&&(a.runtimeStyle.left=c)}return""===g?"auto":g});ta=xa||ya;k.each(["height","width"],function(a,b){k.cssHooks[b]={get:function(a,d,c){if(d)return 0!==a.offsetWidth?q(a,b,
c):k.swap(a,Ja,function(){return q(a,b,c)})},set:function(a,b){return Zb.test(b)?b+"px":b}}});k.support.opacity||(k.cssHooks.opacity={get:function(a,b){return wb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var d=a.style,c=a.currentStyle,g=k.isNumeric(b)?"alpha(opacity="+100*b+")":"",e=c&&c.filter||d.filter||"";d.zoom=1;if(1<=b&&""===k.trim(e.replace(Ib,""))&&(d.removeAttribute("filter"),c&&!c.filter))return;d.filter=Ib.test(e)?
e.replace(Ib,g):e+" "+g}});k(function(){k.support.reliableMarginRight||(k.cssHooks.marginRight={get:function(a,b){return k.swap(a,{display:"inline-block"},function(){return b?ta(a,"margin-right"):a.style.marginRight})}})});k.expr&&k.expr.filters&&(k.expr.filters.hidden=function(a){var b=a.offsetHeight;return 0===a.offsetWidth&&0===b||!k.support.reliableHiddenOffsets&&"none"===(a.style&&a.style.display||k.css(a,"display"))},k.expr.filters.visible=function(a){return!k.expr.filters.hidden(a)});k.each({margin:"",
padding:"",border:"Width"},function(a,b){k.cssHooks[a+b]={expand:function(d){var c="string"===typeof d?d.split(" "):[d],g={};for(d=0;4>d;d++)g[a+Pa[d]+b]=c[d]||c[d-2]||c[0];return g}}});var sa=/%20/g,ob=/\[\]$/,jb=/\r?\n/g,sc=/#.*$/,$b=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,tc=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,$a=/^(?:GET|HEAD)$/,Jb=/^\/\//,xb=/\?/,Nc=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,Oc=/^(?:select|textarea)/i,
Mb=/\s+/,uc=/([?&])_=[^&]*/,Pc=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,ac=k.fn.load,nb={},bc={},Ka,kb,yb=["*/"]+["*"];try{Ka=H.href}catch(Oa){Ka=A.createElement("a"),Ka.href="",Ka=Ka.href}kb=Pc.exec(Ka.toLowerCase())||[];k.fn.extend({load:function(a,b,d){if("string"!==typeof a&&ac)return ac.apply(this,arguments);if(!this.length)return this;var c=a.indexOf(" ");if(0<=c){var g=a.slice(c,a.length);a=a.slice(0,c)}c="GET";b&&(k.isFunction(b)?(d=b,b=j):"object"===typeof b&&(b=k.param(b,k.ajaxSettings.traditional),
c="POST"));var e=this;k.ajax({url:a,type:c,dataType:"html",data:b,complete:function(a,b,c){c=a.responseText;a.isResolved()&&(a.done(function(a){c=a}),e.html(g?k("<div>").append(c.replace(Nc,"")).find(g):c));d&&e.each(d,[c,b,a])}});return this},serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?k.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||Oc.test(this.nodeName)||
tc.test(this.type))}).map(function(a,b){var d=k(this).val();return null==d?null:k.isArray(d)?k.map(d,function(a){return{name:b.name,value:a.replace(jb,"\r\n")}}):{name:b.name,value:d.replace(jb,"\r\n")}}).get()}});k.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){k.fn[b]=function(a){return this.on(b,a)}});k.each(["get","post"],function(a,b){k[b]=function(a,d,c,g){k.isFunction(d)&&(g=g||c,c=d,d=j);return k.ajax({type:b,url:a,data:d,success:c,dataType:g})}});
k.extend({getScript:function(a,b){return k.get(a,j,b,"script")},getJSON:function(a,b,d){return k.get(a,b,d,"json")},ajaxSetup:function(a,b){b?w(a,k.ajaxSettings):(b=a,a=k.ajaxSettings);w(a,b);return a},ajaxSettings:{url:Ka,isLocal:/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(kb[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript",
"*":yb},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":k.parseJSON,"text xml":k.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:u(nb),ajaxTransport:u(bc),ajax:function(a,b){function d(a,b,v,n){if(2!==V){V=2;Ga&&clearTimeout(Ga);q=j;Q=n||"";P.readyState=0<a?4:0;var p,K,z;n=b;if(v){var r=c,s=P,D=r.contents,B=r.dataTypes,Pb=r.responseFields,t,L,y,rb;for(L in Pb)L in v&&(s[Pb[L]]=v[L]);
for(;"*"===B[0];)B.shift(),t===j&&(t=r.mimeType||s.getResponseHeader("content-type"));if(t)for(L in D)if(D[L]&&D[L].test(t)){B.unshift(L);break}if(B[0]in v)y=B[0];else{for(L in v){if(!B[0]||r.converters[L+" "+B[0]]){y=L;break}rb||(rb=L)}y=y||rb}y?(y!==B[0]&&B.unshift(y),v=v[y]):v=void 0}else v=j;if(200<=a&&300>a||304===a){if(c.ifModified){if(t=P.getResponseHeader("Last-Modified"))k.lastModified[l]=t;if(t=P.getResponseHeader("Etag"))k.etag[l]=t}if(304===a)n="notmodified",p=!0;else try{t=c;t.dataFilter&&
(v=t.dataFilter(v,t.dataType));var C=t.dataTypes;L={};var w,Ua,zb=C.length,X,A=C[0],E,x,oa,lb,Kb;for(w=1;w<zb;w++){if(1===w)for(Ua in t.converters)"string"===typeof Ua&&(L[Ua.toLowerCase()]=t.converters[Ua]);E=A;A=C[w];if("*"===A)A=E;else if("*"!==E&&E!==A){x=E+" "+A;oa=L[x]||L["* "+A];if(!oa)for(lb in Kb=j,L)if(X=lb.split(" "),X[0]===E||"*"===X[0])if(Kb=L[X[1]+" "+A]){lb=L[lb];!0===lb?oa=Kb:!0===Kb&&(oa=lb);break}!oa&&!Kb&&k.error("No conversion from "+x.replace(" "," to "));!0!==oa&&(v=oa?oa(v):
Kb(lb(v)))}}K=v;n="success";p=!0}catch(H){n="parsererror",z=H}}else if(z=n,!n||a)n="error",0>a&&(a=0);P.status=a;P.statusText=""+(b||n);p?f.resolveWith(g,[K,n,P]):f.rejectWith(g,[P,n,z]);P.statusCode(m);m=j;u&&e.trigger("ajax"+(p?"Success":"Error"),[P,c,p?K:z]);h.fireWith(g,[P,n]);u&&(e.trigger("ajaxComplete",[P,c]),--k.active||k.event.trigger("ajaxStop"))}}"object"===typeof a&&(b=a,a=j);b=b||{};var c=k.ajaxSetup({},b),g=c.context||c,e=g!==c&&(g.nodeType||g instanceof k)?k(g):k.event,f=k.Deferred(),
h=k.Callbacks("once memory"),m=c.statusCode||{},l,v={},p={},Q,K,q,Ga,z,V=0,u,r,P={readyState:0,setRequestHeader:function(a,b){if(!V){var d=a.toLowerCase();a=p[d]=p[d]||a;v[a]=b}return this},getAllResponseHeaders:function(){return 2===V?Q:null},getResponseHeader:function(a){var b;if(2===V){if(!K)for(K={};b=$b.exec(Q);)K[b[1].toLowerCase()]=b[2];b=K[a.toLowerCase()]}return b===j?null:b},overrideMimeType:function(a){V||(c.mimeType=a);return this},abort:function(a){a=a||"abort";q&&q.abort(a);d(0,a);return this}};
f.promise(P);P.success=P.done;P.error=P.fail;P.complete=h.add;P.statusCode=function(a){if(a){var b;if(2>V)for(b in a)m[b]=[m[b],a[b]];else b=a[P.status],P.then(b,b)}return this};c.url=((a||c.url)+"").replace(sc,"").replace(Jb,kb[1]+"//");c.dataTypes=k.trim(c.dataType||"*").toLowerCase().split(Mb);null==c.crossDomain&&(z=Pc.exec(c.url.toLowerCase()),c.crossDomain=!(!z||!(z[1]!=kb[1]||z[2]!=kb[2]||(z[3]||("http:"===z[1]?80:443))!=(kb[3]||("http:"===kb[1]?80:443)))));c.data&&(c.processData&&"string"!==
typeof c.data)&&(c.data=k.param(c.data,c.traditional));s(nb,c,b,P);if(2===V)return!1;u=c.global;c.type=c.type.toUpperCase();c.hasContent=!$a.test(c.type);u&&0===k.active++&&k.event.trigger("ajaxStart");if(!c.hasContent&&(c.data&&(c.url+=(xb.test(c.url)?"&":"?")+c.data,delete c.data),l=c.url,!1===c.cache)){z=k.now();var D=c.url.replace(uc,"$1_="+z);c.url=D+(D===c.url?(xb.test(c.url)?"&":"?")+"_="+z:"")}(c.data&&c.hasContent&&!1!==c.contentType||b.contentType)&&P.setRequestHeader("Content-Type",c.contentType);
c.ifModified&&(l=l||c.url,k.lastModified[l]&&P.setRequestHeader("If-Modified-Since",k.lastModified[l]),k.etag[l]&&P.setRequestHeader("If-None-Match",k.etag[l]));P.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+("*"!==c.dataTypes[0]?", "+yb+"; q=0.01":""):c.accepts["*"]);for(r in c.headers)P.setRequestHeader(r,c.headers[r]);if(c.beforeSend&&(!1===c.beforeSend.call(g,P,c)||2===V))return P.abort(),!1;for(r in{success:1,error:1,complete:1})P[r](c[r]);if(q=
s(bc,c,b,P)){P.readyState=1;u&&e.trigger("ajaxSend",[P,c]);c.async&&0<c.timeout&&(Ga=setTimeout(function(){P.abort("timeout")},c.timeout));try{V=1,q.send(v,d)}catch(B){if(2>V)d(-1,B);else throw B;}}else d(-1,"No Transport");return P},param:function(a,b){var d=[],c=function(a,b){b=k.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};b===j&&(b=k.ajaxSettings.traditional);if(k.isArray(a)||a.jquery&&!k.isPlainObject(a))k.each(a,function(){c(this.name,this.value)});else for(var g in a)B(g,
a[g],b,c);return d.join("&").replace(sa,"+")}});k.extend({active:0,lastModified:{},etag:{}});var Q=k.now(),K=/(\=)\?(&|$)|\?\?/i;k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return k.expando+"_"+Q++}});k.ajaxPrefilter("json jsonp",function(b,d,c){d="string"===typeof b.data&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if("jsonp"===b.dataTypes[0]||!1!==b.jsonp&&(K.test(b.url)||d&&K.test(b.data))){var g,e=b.jsonpCallback=k.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,
f=a[e],h=b.url,j=b.data,m="$1"+e+"$2";!1!==b.jsonp&&(h=h.replace(K,m),b.url===h&&(d&&(j=j.replace(K,m)),b.data===j&&(h+=(/\?/.test(h)?"&":"?")+b.jsonp+"="+e)));b.url=h;b.data=j;a[e]=function(a){g=[a]};c.always(function(){a[e]=f;if(g&&k.isFunction(f))a[e](g[0])});b.converters["script json"]=function(){g||k.error(e+" was not called");return g[0]};b.dataTypes[0]="json";return"script"}});k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){k.globalEval(a);return a}}});k.ajaxPrefilter("script",function(a){a.cache===j&&(a.cache=!1);a.crossDomain&&(a.type="GET",a.global=!1)});k.ajaxTransport("script",function(a){if(a.crossDomain){var b,d=A.head||A.getElementsByTagName("head")[0]||A.documentElement;return{send:function(c,g){b=A.createElement("script");b.async="async";a.scriptCharset&&(b.charset=a.scriptCharset);b.src=a.url;b.onload=b.onreadystatechange=function(a,
c){if(c||!b.readyState||/loaded|complete/.test(b.readyState))b.onload=b.onreadystatechange=null,d&&b.parentNode&&d.removeChild(b),b=j,c||g(200,"success")};d.insertBefore(b,d.firstChild)},abort:function(){if(b)b.onload(0,1)}}}});var P=a.ActiveXObject?function(){for(var a in cc)cc[a](0,1)}:!1,lb=0,cc;k.ajaxSettings.xhr=a.ActiveXObject?function(){var b;if(!(b=!this.isLocal&&C()))a:{try{b=new a.ActiveXObject("Microsoft.XMLHTTP");break a}catch(d){}b=void 0}return b}:C;var Tc=k.ajaxSettings.xhr();k.extend(k.support,
{ajax:!!Tc,cors:!!Tc&&"withCredentials"in Tc});k.support.ajax&&k.ajaxTransport(function(b){if(!b.crossDomain||k.support.cors){var d;return{send:function(c,g){var e=b.xhr(),f,h;b.username?e.open(b.type,b.url,b.async,b.username,b.password):e.open(b.type,b.url,b.async);if(b.xhrFields)for(h in b.xhrFields)e[h]=b.xhrFields[h];b.mimeType&&e.overrideMimeType&&e.overrideMimeType(b.mimeType);!b.crossDomain&&!c["X-Requested-With"]&&(c["X-Requested-With"]="XMLHttpRequest");try{for(h in c)e.setRequestHeader(h,
c[h])}catch(m){}e.send(b.hasContent&&b.data||null);d=function(a,c){var h,m,l,v,p;try{if(d&&(c||4===e.readyState))if(d=j,f&&(e.onreadystatechange=k.noop,P&&delete cc[f]),c)4!==e.readyState&&e.abort();else{h=e.status;l=e.getAllResponseHeaders();v={};if((p=e.responseXML)&&p.documentElement)v.xml=p;try{v.text=e.responseText}catch(Q){}try{m=e.statusText}catch(K){m=""}!h&&b.isLocal&&!b.crossDomain?h=v.text?200:404:1223===h&&(h=204)}}catch(q){c||g(-1,q)}v&&g(h,m,v,l)};!b.async||4===e.readyState?d():(f=++lb,
P&&(cc||(cc={},k(a).unload(P)),cc[f]=d),e.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var Rc={},Ta,Nb,Wc=/^(?:toggle|show|hide)$/,Xc=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,Qc,yc=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],xc;k.fn.extend({show:function(a,b,d){if(a||0===a)return this.animate(D("show",3),a,b,d);d=0;for(var c=this.length;d<c;d++)a=this[d],a.style&&(b=a.style.display,!k._data(a,
"olddisplay")&&"none"===b&&(b=a.style.display=""),(""===b&&"none"===k.css(a,"display")||!k.contains(a.ownerDocument.documentElement,a))&&k._data(a,"olddisplay",L(a.nodeName)));for(d=0;d<c;d++)if(a=this[d],a.style&&(b=a.style.display,""===b||"none"===b))a.style.display=k._data(a,"olddisplay")||"";return this},hide:function(a,b,d){if(a||0===a)return this.animate(D("hide",3),a,b,d);d=0;for(var c=this.length;d<c;d++)a=this[d],a.style&&(b=k.css(a,"display"),"none"!==b&&!k._data(a,"olddisplay")&&k._data(a,
"olddisplay",b));for(d=0;d<c;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:k.fn.toggle,toggle:function(a,b,d){var c="boolean"===typeof a;k.isFunction(a)&&k.isFunction(b)?this._toggle.apply(this,arguments):null==a||c?this.each(function(){var b=c?a:k(this).is(":hidden");k(this)[b?"show":"hide"]()}):this.animate(D("toggle",3),a,b,d);return this},fadeTo:function(a,b,d,c){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d,c)},animate:function(a,
b,d,c){function g(){!1===e.queue&&k._mark(this);var b=k.extend({},e),d=1===this.nodeType,c=d&&k(this).is(":hidden"),f,h,j,m,v;b.animatedProperties={};for(j in a)if(f=k.camelCase(j),j!==f&&(a[f]=a[j],delete a[j]),(h=k.cssHooks[f])&&"expand"in h)for(j in m=h.expand(a[f]),delete a[f],m)j in a||(a[j]=m[j]);for(f in a){h=a[f];k.isArray(h)?(b.animatedProperties[f]=h[1],h=a[f]=h[0]):b.animatedProperties[f]=b.specialEasing&&b.specialEasing[f]||b.easing||"swing";if("hide"===h&&c||"show"===h&&!c)return b.complete.call(this);
if(d&&("height"===f||"width"===f))b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],"inline"===k.css(this,"display")&&"none"===k.css(this,"float")&&(!k.support.inlineBlockNeedsLayout||"inline"===L(this.nodeName)?this.style.display="inline-block":this.style.zoom=1)}null!=b.overflow&&(this.style.overflow="hidden");for(j in a)if(d=new k.fx(this,b,j),h=a[j],Wc.test(h))if(f=k._data(this,"toggle"+j)||("toggle"===h?c?"show":"hide":0))k._data(this,"toggle"+j,"show"===f?"hide":"show"),
d[f]();else d[h]();else f=Xc.exec(h),m=d.cur(),f?(h=parseFloat(f[2]),v=f[3]||(k.cssNumber[j]?"":"px"),"px"!==v&&(k.style(this,j,(h||1)+v),m*=(h||1)/d.cur(),k.style(this,j,m+v)),f[1]&&(h=("-="===f[1]?-1:1)*h+m),d.custom(m,h,v)):d.custom(m,h,"");return!0}var e=k.speed(b,d,c);if(k.isEmptyObject(a))return this.each(e.complete,[!1]);a=k.extend({},a);return!1===e.queue?this.each(g):this.queue(e.queue,g)},stop:function(a,b,d){"string"!==typeof a&&(d=b,b=a,a=j);b&&!1!==a&&this.queue(a||"fx",[]);return this.each(function(){var b,
c=!1,g=k.timers,e=k._data(this);d||k._unmark(!0,this);if(null==a)for(b in e){if(e[b]&&e[b].stop&&b.indexOf(".run")===b.length-4){var f=e[b];k.removeData(this,b,!0);f.stop(d)}}else if(e[b=a+".run"]&&e[b].stop)e=e[b],k.removeData(this,b,!0),e.stop(d);for(b=g.length;b--;)if(g[b].elem===this&&(null==a||g[b].queue===a)){if(d)g[b](!0);else g[b].saveState();c=!0;g.splice(b,1)}(!d||!c)&&k.dequeue(this,a)})}});k.each({slideDown:D("show",1),slideUp:D("hide",1),slideToggle:D("toggle",1),fadeIn:{opacity:"show"},
fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){k.fn[a]=function(a,d,c){return this.animate(b,a,d,c)}});k.extend({speed:function(a,b,d){var c=a&&"object"===typeof a?k.extend({},a):{complete:d||!d&&b||k.isFunction(a)&&a,duration:a,easing:d&&b||b&&!k.isFunction(b)&&b};c.duration=k.fx.off?0:"number"===typeof c.duration?c.duration:c.duration in k.fx.speeds?k.fx.speeds[c.duration]:k.fx.speeds._default;if(null==c.queue||!0===c.queue)c.queue="fx";c.old=c.complete;c.complete=function(a){k.isFunction(c.old)&&
c.old.call(this);c.queue?k.dequeue(this,c.queue):!1!==a&&k._unmark(this)};return c},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+0.5}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;b.orig=b.orig||{}}});k.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(k.fx.step[this.prop]||k.fx.step._default)(this)},cur:function(){if(null!=this.elem[this.prop]&&(!this.elem.style||null==this.elem.style[this.prop]))return this.elem[this.prop];
var a,b=k.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||"auto"===b?0:b:a},custom:function(a,b,d){function c(a){return g.step(a)}var g=this,e=k.fx;this.startTime=xc||E();this.end=b;this.now=this.start=a;this.pos=this.state=0;this.unit=d||this.unit||(k.cssNumber[this.prop]?"":"px");c.queue=this.options.queue;c.elem=this.elem;c.saveState=function(){k._data(g.elem,"fxshow"+g.prop)===j&&(g.options.hide?k._data(g.elem,"fxshow"+g.prop,g.start):g.options.show&&k._data(g.elem,"fxshow"+g.prop,
g.end))};c()&&(k.timers.push(c)&&!Qc)&&(Qc=setInterval(e.tick,e.interval))},show:function(){var a=k._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||k.style(this.elem,this.prop);this.options.show=!0;a!==j?this.custom(this.cur(),a):this.custom("width"===this.prop||"height"===this.prop?1:0,this.cur());k(this.elem).show()},hide:function(){this.options.orig[this.prop]=k._data(this.elem,"fxshow"+this.prop)||k.style(this.elem,this.prop);this.options.hide=!0;this.custom(this.cur(),0)},
step:function(a){var b,d=xc||E(),c=!0,g=this.elem,e=this.options;if(a||d>=e.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();e.animatedProperties[this.prop]=!0;for(b in e.animatedProperties)!0!==e.animatedProperties[b]&&(c=!1);if(c){null!=e.overflow&&!k.support.shrinkWrapBlocks&&k.each(["","X","Y"],function(a,b){g.style["overflow"+b]=e.overflow[a]});e.hide&&k(g).hide();if(e.hide||e.show)for(b in e.animatedProperties)k.style(g,b,e.orig[b]),k.removeData(g,"fxshow"+b,!0),
k.removeData(g,"toggle"+b,!0);if(a=e.complete)e.complete=!1,a.call(g)}return!1}Infinity==e.duration?this.now=d:(a=d-this.startTime,this.state=a/e.duration,this.pos=k.easing[e.animatedProperties[this.prop]](this.state,a,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos);this.update();return!0}};k.extend(k.fx,{tick:function(){for(var a,b=k.timers,d=0;d<b.length;d++)a=b[d],!a()&&b[d]===a&&b.splice(d--,1);b.length||k.fx.stop()},interval:13,stop:function(){clearInterval(Qc);Qc=null},speeds:{slow:600,
fast:200,_default:400},step:{opacity:function(a){k.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&null!=a.elem.style[a.prop]?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}});k.each(yc.concat.apply([],yc),function(a,b){b.indexOf("margin")&&(k.fx.step[b]=function(a){k.style(a.elem,b,Math.max(0,a.now)+a.unit)})});k.expr&&k.expr.filters&&(k.expr.filters.animated=function(a){return k.grep(k.timers,function(b){return a===b.elem}).length});var Uc,Yc=/^t(?:able|d|h)$/i,Vc=/^(?:body|html)$/i;
Uc="getBoundingClientRect"in A.documentElement?function(a,b,d,c){try{c=a.getBoundingClientRect()}catch(g){}if(!c||!k.contains(d,a))return c?{top:c.top,left:c.left}:{top:0,left:0};a=b.body;b=X(b);return{top:c.top+(b.pageYOffset||k.support.boxModel&&d.scrollTop||a.scrollTop)-(d.clientTop||a.clientTop||0),left:c.left+(b.pageXOffset||k.support.boxModel&&d.scrollLeft||a.scrollLeft)-(d.clientLeft||a.clientLeft||0)}}:function(a,b,d){var c,g=a.offsetParent,e=b.body;c=(b=b.defaultView)?b.getComputedStyle(a,
null):a.currentStyle;for(var f=a.offsetTop,h=a.offsetLeft;(a=a.parentNode)&&(a!==e&&a!==d)&&!(k.support.fixedPosition&&"fixed"===c.position);){c=b?b.getComputedStyle(a,null):a.currentStyle;f-=a.scrollTop;h-=a.scrollLeft;if(a===g){f+=a.offsetTop;h+=a.offsetLeft;if(k.support.doesNotAddBorder&&(!k.support.doesAddBorderForTableAndCells||!Yc.test(a.nodeName)))f+=parseFloat(c.borderTopWidth)||0,h+=parseFloat(c.borderLeftWidth)||0;g=a.offsetParent}k.support.subtractsBorderForOverflowNotVisible&&"visible"!==
c.overflow&&(f+=parseFloat(c.borderTopWidth)||0,h+=parseFloat(c.borderLeftWidth)||0)}if("relative"===c.position||"static"===c.position)f+=e.offsetTop,h+=e.offsetLeft;k.support.fixedPosition&&"fixed"===c.position&&(f+=Math.max(d.scrollTop,e.scrollTop),h+=Math.max(d.scrollLeft,e.scrollLeft));return{top:f,left:h}};k.fn.offset=function(a){if(arguments.length)return a===j?this:this.each(function(b){k.offset.setOffset(this,a,b)});var b=this[0],d=b&&b.ownerDocument;return!d?null:b===d.body?k.offset.bodyOffset(b):
Uc(b,d,d.documentElement)};k.offset={bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;k.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(k.css(a,"marginTop"))||0,d+=parseFloat(k.css(a,"marginLeft"))||0);return{top:b,left:d}},setOffset:function(a,b,d){var c=k.css(a,"position");"static"===c&&(a.style.position="relative");var g=k(a),e=g.offset(),f=k.css(a,"top"),h=k.css(a,"left"),j={},m={};("absolute"===c||"fixed"===c)&&-1<k.inArray("auto",[f,h])?(m=g.position(),c=m.top,h=m.left):(c=parseFloat(f)||
0,h=parseFloat(h)||0);k.isFunction(b)&&(b=b.call(a,d,e));null!=b.top&&(j.top=b.top-e.top+c);null!=b.left&&(j.left=b.left-e.left+h);"using"in b?b.using.call(a,j):g.css(j)}};k.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),c=Vc.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(k.css(a,"marginTop"))||0;d.left-=parseFloat(k.css(a,"marginLeft"))||0;c.top+=parseFloat(k.css(b[0],"borderTopWidth"))||0;c.left+=parseFloat(k.css(b[0],
"borderLeftWidth"))||0;return{top:d.top-c.top,left:d.left-c.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||A.body;a&&!Vc.test(a.nodeName)&&"static"===k.css(a,"position");)a=a.offsetParent;return a})}});k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var d=/Y/.test(b);k.fn[a]=function(c){return k.access(this,function(a,c,g){var e=X(a);if(g===j)return e?b in e?e[b]:k.support.boxModel&&e.document.documentElement[c]||e.document.body[c]:a[c];
e?e.scrollTo(!d?g:k(e).scrollLeft(),d?g:k(e).scrollTop()):a[c]=g},a,c,arguments.length,null)}});k.each({Height:"height",Width:"width"},function(a,b){var d="client"+a,c="scroll"+a,g="offset"+a;k.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(k.css(a,b,"padding")):this[b]():null};k.fn["outer"+a]=function(a){var d=this[0];return d?d.style?parseFloat(k.css(d,b,a?"margin":"border")):this[b]():null};k.fn[b]=function(a){return k.access(this,function(a,b,e){if(k.isWindow(a))return b=a.document,
a=b.documentElement[d],k.support.boxModel&&a||b.body&&b.body[d]||a;if(9===a.nodeType)return b=a.documentElement,b[d]>=b[c]?b[d]:Math.max(a.body[c],b[c],a.body[g],b[g]);if(e===j)return a=k.css(a,b),b=parseFloat(a),k.isNumeric(b)?b:a;k(a).css(b,e)},b,a,arguments.length,null)}});a.jQuery=a.$=k;"function"===typeof define&&(define.amd&&define.amd.jQuery)&&define("jquery",[],function(){return k})})(window);(function(a,j){function c(d,c){var e,f;e=d.nodeName.toLowerCase();if("area"===e){e=d.parentNode;f=e.name;if(!d.href||!f||"map"!==e.nodeName.toLowerCase())return!1;e=a("img[usemap=#"+f+"]")[0];return!!e&&b(e)}return(/input|select|textarea|button|object/.test(e)?!d.disabled:"a"===e?d.href||c:c)&&b(d)}function b(b){return a.expr.filters.visible(b)&&!a(b).parents().addBack().filter(function(){return"hidden"===a.css(this,"visibility")}).length}var f=0,e=/^ui-id-\d+$/;a.ui=a.ui||{};a.extend(a.ui,{version:"1.10.2",
keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}});a.fn.extend({focus:function(b){return function(c,e){return"number"===typeof c?this.each(function(){var b=this;setTimeout(function(){a(b).focus();e&&e.call(b)},c)}):b.apply(this,arguments)}}(a.fn.focus),scrollParent:function(){var b;b=
a.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(a.css(this,"position"))&&/(auto|scroll)/.test(a.css(this,"overflow")+a.css(this,"overflow-y")+a.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(a.css(this,"overflow")+a.css(this,"overflow-y")+a.css(this,"overflow-x"))}).eq(0);return/fixed/.test(this.css("position"))||!b.length?a(document):
b},zIndex:function(b){if(b!==j)return this.css("zIndex",b);if(this.length){b=a(this[0]);for(var c;b.length&&b[0]!==document;){c=b.css("position");if("absolute"===c||"relative"===c||"fixed"===c)if(c=parseInt(b.css("zIndex"),10),!isNaN(c)&&0!==c)return c;b=b.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++f)})},removeUniqueId:function(){return this.each(function(){e.test(this.id)&&a(this).removeAttr("id")})}});a.extend(a.expr[":"],{data:a.expr.createPseudo?
a.expr.createPseudo(function(b){return function(c){return!!a.data(c,b)}}):function(b,c,e){return!!a.data(b,e[3])},focusable:function(b){return c(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var g=a.attr(b,"tabindex"),e=isNaN(g);return(e||0<=g)&&c(b,!e)}});a("<a>").outerWidth(1).jquery||a.each(["Width","Height"],function(b,c){function e(b,d,c,g){a.each(f,function(){d-=parseFloat(a.css(b,"padding"+this))||0;c&&(d-=parseFloat(a.css(b,"border"+this+"Width"))||0);g&&(d-=parseFloat(a.css(b,"margin"+
this))||0)});return d}var f="Width"===c?["Left","Right"]:["Top","Bottom"],h=c.toLowerCase(),y={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+c]=function(b){return b===j?y["inner"+c].call(this):this.each(function(){a(this).css(h,e(this,b)+"px")})};a.fn["outer"+c]=function(b,d){return"number"!==typeof b?y["outer"+c].call(this,b):this.each(function(){a(this).css(h,e(this,b,!0,d)+"px")})}});a.fn.addBack||(a.fn.addBack=function(a){return this.add(null==
a?this.prevObject:this.prevObject.filter(a))});if(a("<a>").data("a-b","a").removeData("a-b").data("a-b")){var h=a.fn.removeData;a.fn.removeData=function(b){return arguments.length?h.call(this,a.camelCase(b)):h.call(this)}}a.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());a.support.selectstart="onselectstart"in document.createElement("div");a.fn.extend({disableSelection:function(){return this.bind((a.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},
enableSelection:function(){return this.unbind(".ui-disableSelection")}});a.extend(a.ui,{plugin:{add:function(b,c,e){var f;b=a.ui[b].prototype;for(f in e)b.plugins[f]=b.plugins[f]||[],b.plugins[f].push([c,e[f]])},call:function(a,b,c){var e=a.plugins[b];if(e&&a.element[0].parentNode&&11!==a.element[0].parentNode.nodeType)for(b=0;b<e.length;b++)a.options[e[b][0]]&&e[b][1].apply(a.element,c)}},hasScroll:function(b,c){if("hidden"===a(b).css("overflow"))return!1;var e=c&&"left"===c?"scrollLeft":"scrollTop",
f=!1;if(0<b[e])return!0;b[e]=1;f=0<b[e];b[e]=0;return f}})})(jQuery);
(function(a,j){var c=0,b=Array.prototype.slice,f=a.cleanData;a.cleanData=function(b){for(var c=0,d;null!=(d=b[c]);c++)try{a(d).triggerHandler("remove")}catch(g){}f(b)};a.widget=function(b,c,d){var g,f,j,r,y={},t=b.split(".")[0];b=b.split(".")[1];g=t+"-"+b;d||(d=c,c=a.Widget);a.expr[":"][g.toLowerCase()]=function(b){return!!a.data(b,g)};a[t]=a[t]||{};f=a[t][b];j=a[t][b]=function(a,b){if(!this._createWidget)return new j(a,b);arguments.length&&this._createWidget(a,b)};a.extend(j,f,{version:d.version,
_proto:a.extend({},d),_childConstructors:[]});r=new c;r.options=a.widget.extend({},r.options);a.each(d,function(b,d){if(a.isFunction(d)){var e=function(){return c.prototype[b].apply(this,arguments)},g=function(a){return c.prototype[b].apply(this,a)};y[b]=function(){var a=this._super,b=this._superApply,c;this._super=e;this._superApply=g;c=d.apply(this,arguments);this._super=a;this._superApply=b;return c}}else y[b]=d});j.prototype=a.widget.extend(r,{widgetEventPrefix:f?r.widgetEventPrefix:b},y,{constructor:j,
namespace:t,widgetName:b,widgetFullName:g});f?(a.each(f._childConstructors,function(b,d){var c=d.prototype;a.widget(c.namespace+"."+c.widgetName,j,d._proto)}),delete f._childConstructors):c._childConstructors.push(j);a.widget.bridge(b,j)};a.widget.extend=function(c){for(var f=b.call(arguments,1),d=0,g=f.length,m,p;d<g;d++)for(m in f[d])p=f[d][m],f[d].hasOwnProperty(m)&&p!==j&&(c[m]=a.isPlainObject(p)?a.isPlainObject(c[m])?a.widget.extend({},c[m],p):a.widget.extend({},p):p);return c};a.widget.bridge=
function(c,f){var d=f.prototype.widgetFullName||c;a.fn[c]=function(g){var m="string"===typeof g,p=b.call(arguments,1),r=this;g=!m&&p.length?a.widget.extend.apply(null,[g].concat(p)):g;m?this.each(function(){var b,f=a.data(this,d);if(!f)return a.error("cannot call methods on "+c+" prior to initialization; attempted to call method '"+g+"'");if(!a.isFunction(f[g])||"_"===g.charAt(0))return a.error("no such method '"+g+"' for "+c+" widget instance");b=f[g].apply(f,p);if(b!==f&&b!==j)return r=b&&b.jquery?
r.pushStack(b.get()):b,!1}):this.each(function(){var b=a.data(this,d);b?b.option(g||{})._init():a.data(this,d,new f(g,this))});return r}};a.Widget=function(){};a.Widget._childConstructors=[];a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(b,f){f=a(f||this.defaultElement||this)[0];this.element=a(f);this.uuid=c++;this.eventNamespace="."+this.widgetName+this.uuid;this.options=a.widget.extend({},this.options,
this._getCreateOptions(),b);this.bindings=a();this.hoverable=a();this.focusable=a();f!==this&&(a.data(f,this.widgetFullName,this),this._on(!0,this.element,{remove:function(a){a.target===f&&this.destroy()}}),this.document=a(f.style?f.ownerDocument:f.document||f),this.window=a(this.document[0].defaultView||this.document[0].parentWindow));this._create();this._trigger("create",null,this._getCreateEventData());this._init()},_getCreateOptions:a.noop,_getCreateEventData:a.noop,_create:a.noop,_init:a.noop,
destroy:function(){this._destroy();this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName));this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled");this.bindings.unbind(this.eventNamespace);this.hoverable.removeClass("ui-state-hover");this.focusable.removeClass("ui-state-focus")},_destroy:a.noop,widget:function(){return this.element},
option:function(b,c){var d=b,g,f,p;if(0===arguments.length)return a.widget.extend({},this.options);if("string"===typeof b)if(d={},g=b.split("."),b=g.shift(),g.length){f=d[b]=a.widget.extend({},this.options[b]);for(p=0;p<g.length-1;p++)f[g[p]]=f[g[p]]||{},f=f[g[p]];b=g.pop();if(c===j)return f[b]===j?null:f[b];f[b]=c}else{if(c===j)return this.options[b]===j?null:this.options[b];d[b]=c}this._setOptions(d);return this},_setOptions:function(a){for(var b in a)this._setOption(b,a[b]);return this},_setOption:function(a,
b){this.options[a]=b;"disabled"===a&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!b).attr("aria-disabled",b),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"));return this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(b,c,d){var g,f=this;"boolean"!==typeof b&&(d=c,c=b,b=!1);d?(c=g=a(c),this.bindings=this.bindings.add(c)):(d=c,c=this.element,g=
this.widget());a.each(d,function(d,j){function y(){if(b||!(!0===f.options.disabled||a(this).hasClass("ui-state-disabled")))return("string"===typeof j?f[j]:j).apply(f,arguments)}"string"!==typeof j&&(y.guid=j.guid=j.guid||y.guid||a.guid++);var t=d.match(/^(\w+)\s*(.*)$/),q=t[1]+f.eventNamespace;(t=t[2])?g.delegate(t,q,y):c.bind(q,y)})},_off:function(a,b){b=(b||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace;a.unbind(b).undelegate(b)},_delay:function(a,b){var d=this;return setTimeout(function(){return("string"===
typeof a?d[a]:a).apply(d,arguments)},b||0)},_hoverable:function(b){this.hoverable=this.hoverable.add(b);this._on(b,{mouseenter:function(b){a(b.currentTarget).addClass("ui-state-hover")},mouseleave:function(b){a(b.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(b){this.focusable=this.focusable.add(b);this._on(b,{focusin:function(b){a(b.currentTarget).addClass("ui-state-focus")},focusout:function(b){a(b.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(b,c,d){var g,
f=this.options[b];d=d||{};c=a.Event(c);c.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase();c.target=this.element[0];if(b=c.originalEvent)for(g in b)g in c||(c[g]=b[g]);this.element.trigger(c,d);return!(a.isFunction(f)&&!1===f.apply(this.element[0],[c].concat(d))||c.isDefaultPrevented())}};a.each({show:"fadeIn",hide:"fadeOut"},function(b,c){a.Widget.prototype["_"+b]=function(d,g,f){"string"===typeof g&&(g={effect:g});var j,r=!g?b:!0===g||"number"===typeof g?c:g.effect||c;g=
g||{};"number"===typeof g&&(g={duration:g});j=!a.isEmptyObject(g);g.complete=f;g.delay&&d.delay(g.delay);if(j&&a.effects&&a.effects.effect[r])d[b](g);else if(r!==b&&d[r])d[r](g.duration,g.easing,f);else d.queue(function(c){a(this)[b]();f&&f.call(d[0]);c()})}})})(jQuery);
(function(a){var j=!1;a(document).mouseup(function(){j=!1});a.widget("ui.mouse",{version:"1.10.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var c=this;this.element.bind("mousedown."+this.widgetName,function(a){return c._mouseDown(a)}).bind("click."+this.widgetName,function(b){if(!0===a.data(b.target,c.widgetName+".preventClickEvent"))return a.removeData(b.target,c.widgetName+".preventClickEvent"),b.stopImmediatePropagation(),!1});this.started=
!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName);this._mouseMoveDelegate&&a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(c){if(!j){this._mouseStarted&&this._mouseUp(c);this._mouseDownEvent=c;var b=this,f=1===c.which,e="string"===typeof this.options.cancel&&c.target.nodeName?a(c.target).closest(this.options.cancel).length:!1;if(!f||e||!this._mouseCapture(c))return!0;this.mouseDelayMet=
!this.options.delay;this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){b.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(c)&&this._mouseDelayMet(c)&&(this._mouseStarted=!1!==this._mouseStart(c),!this._mouseStarted))return c.preventDefault(),!0;!0===a.data(c.target,this.widgetName+".preventClickEvent")&&a.removeData(c.target,this.widgetName+".preventClickEvent");this._mouseMoveDelegate=function(a){return b._mouseMove(a)};this._mouseUpDelegate=function(a){return b._mouseUp(a)};
a(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate);c.preventDefault();return j=!0}},_mouseMove:function(c){if(a.ui.ie&&(!document.documentMode||9>document.documentMode)&&!c.button)return this._mouseUp(c);if(this._mouseStarted)return this._mouseDrag(c),c.preventDefault();this._mouseDistanceMet(c)&&this._mouseDelayMet(c)&&((this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,c))?this._mouseDrag(c):this._mouseUp(c));
return!this._mouseStarted},_mouseUp:function(c){a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate);this._mouseStarted&&(this._mouseStarted=!1,c.target===this._mouseDownEvent.target&&a.data(c.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(c));return!1},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},
_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);
(function(a){a.widget("ui.draggable",a.ui.mouse,{version:"1.10.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&
!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative");this.options.addClasses&&this.element.addClass("ui-draggable");this.options.disabled&&this.element.addClass("ui-draggable-disabled");this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");this._mouseDestroy()},_mouseCapture:function(j){var c=this.options;if(this.helper||c.disabled||0<a(j.target).closest(".ui-resizable-handle").length)return!1;
this.handle=this._getHandle(j);if(!this.handle)return!1;a(!0===c.iframeFix?"iframe":c.iframeFix).each(function(){a("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1E3}).css(a(this).offset()).appendTo("body")});return!0},_mouseStart:function(j){var c=this.options;this.helper=this._createHelper(j);this.helper.addClass("ui-draggable-dragging");this._cacheHelperProportions();
a.ui.ddmanager&&(a.ui.ddmanager.current=this);this._cacheMargins();this.cssPosition=this.helper.css("position");this.scrollParent=this.helper.scrollParent();this.offset=this.positionAbs=this.element.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};a.extend(this.offset,{click:{left:j.pageX-this.offset.left,top:j.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.originalPosition=this.position=this._generatePosition(j);
this.originalPageX=j.pageX;this.originalPageY=j.pageY;c.cursorAt&&this._adjustOffsetFromHelper(c.cursorAt);c.containment&&this._setContainment();if(!1===this._trigger("start",j))return this._clear(),!1;this._cacheHelperProportions();a.ui.ddmanager&&!c.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,j);this._mouseDrag(j,!0);a.ui.ddmanager&&a.ui.ddmanager.dragStart(this,j);return!0},_mouseDrag:function(j,c){this.position=this._generatePosition(j);this.positionAbs=this._convertPositionTo("absolute");
if(!c){var b=this._uiHash();if(!1===this._trigger("drag",j,b))return this._mouseUp({}),!1;this.position=b.position}if(!this.options.axis||"y"!==this.options.axis)this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||"x"!==this.options.axis)this.helper[0].style.top=this.position.top+"px";a.ui.ddmanager&&a.ui.ddmanager.drag(this,j);return!1},_mouseStop:function(j){var c,b=this,f=!1,e=!1;a.ui.ddmanager&&!this.options.dropBehaviour&&(e=a.ui.ddmanager.drop(this,j));this.dropped&&(e=
this.dropped,this.dropped=!1);for(c=this.element[0];c&&(c=c.parentNode);)c===document&&(f=!0);if(!f&&"original"===this.options.helper)return!1;"invalid"===this.options.revert&&!e||"valid"===this.options.revert&&e||!0===this.options.revert||a.isFunction(this.options.revert)&&this.options.revert.call(this.element,e)?a(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){!1!==b._trigger("stop",j)&&b._clear()}):!1!==this._trigger("stop",j)&&this._clear();return!1},
_mouseUp:function(j){a("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)});a.ui.ddmanager&&a.ui.ddmanager.dragStop(this,j);return a.ui.mouse.prototype._mouseUp.call(this,j)},cancel:function(){this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear();return this},_getHandle:function(j){return this.options.handle?!!a(j.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(j){var c=this.options;j=a.isFunction(c.helper)?
a(c.helper.apply(this.element[0],[j])):"clone"===c.helper?this.element.clone().removeAttr("id"):this.element;j.parents("body").length||j.appendTo("parent"===c.appendTo?this.element[0].parentNode:c.appendTo);j[0]!==this.element[0]&&!/(fixed|absolute)/.test(j.css("position"))&&j.css("position","absolute");return j},_adjustOffsetFromHelper:function(j){"string"===typeof j&&(j=j.split(" "));a.isArray(j)&&(j={left:+j[0],top:+j[1]||0});"left"in j&&(this.offset.click.left=j.left+this.margins.left);"right"in
j&&(this.offset.click.left=this.helperProportions.width-j.right+this.margins.left);"top"in j&&(this.offset.click.top=j.top+this.margins.top);"bottom"in j&&(this.offset.click.top=this.helperProportions.height-j.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var j=this.offsetParent.offset();"absolute"===this.cssPosition&&(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))&&(j.left+=this.scrollParent.scrollLeft(),
j.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&a.ui.ie)j={top:0,left:0};return{top:j.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:j.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),
left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var j,
c,b;j=this.options;"parent"===j.containment&&(j.containment=this.helper[0].parentNode);if("document"===j.containment||"window"===j.containment)this.containment=["document"===j.containment?0:a(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,"document"===j.containment?0:a(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,("document"===j.containment?0:a(window).scrollLeft())+a("document"===j.containment?document:window).width()-this.helperProportions.width-this.margins.left,
("document"===j.containment?0:a(window).scrollTop())+(a("document"===j.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(j.containment)&&j.containment.constructor!==Array){if(c=a(j.containment),b=c[0])j="hidden"!==a(b).css("overflow"),this.containment=[(parseInt(a(b).css("borderLeftWidth"),10)||0)+(parseInt(a(b).css("paddingLeft"),10)||0),(parseInt(a(b).css("borderTopWidth"),10)||0)+(parseInt(a(b).css("paddingTop"),
10)||0),(j?Math.max(b.scrollWidth,b.offsetWidth):b.offsetWidth)-(parseInt(a(b).css("borderRightWidth"),10)||0)-(parseInt(a(b).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(j?Math.max(b.scrollHeight,b.offsetHeight):b.offsetHeight)-(parseInt(a(b).css("borderBottomWidth"),10)||0)-(parseInt(a(b).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=c}else j.containment.constructor===Array&&
(this.containment=j.containment)},_convertPositionTo:function(j,c){c||(c=this.position);var b="absolute"===j?1:-1,f="absolute"===this.cssPosition&&!(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(f[0].tagName);return{top:c.top+this.offset.relative.top*b+this.offset.parent.top*b-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():e?0:f.scrollTop())*b,left:c.left+this.offset.relative.left*b+this.offset.parent.left*
b-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():e?0:f.scrollLeft())*b}},_generatePosition:function(j){var c,b,f,e=this.options,h="absolute"===this.cssPosition&&!(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,d=/(html|body)/i.test(h[0].tagName);f=j.pageX;b=j.pageY;this.originalPosition&&(this.containment&&(this.relative_container?(c=this.relative_container.offset(),c=[this.containment[0]+c.left,this.containment[1]+
c.top,this.containment[2]+c.left,this.containment[3]+c.top]):c=this.containment,j.pageX-this.offset.click.left<c[0]&&(f=c[0]+this.offset.click.left),j.pageY-this.offset.click.top<c[1]&&(b=c[1]+this.offset.click.top),j.pageX-this.offset.click.left>c[2]&&(f=c[2]+this.offset.click.left),j.pageY-this.offset.click.top>c[3]&&(b=c[3]+this.offset.click.top)),e.grid&&(b=e.grid[1]?this.originalPageY+Math.round((b-this.originalPageY)/e.grid[1])*e.grid[1]:this.originalPageY,b=c?b-this.offset.click.top>=c[1]||
b-this.offset.click.top>c[3]?b:b-this.offset.click.top>=c[1]?b-e.grid[1]:b+e.grid[1]:b,f=e.grid[0]?this.originalPageX+Math.round((f-this.originalPageX)/e.grid[0])*e.grid[0]:this.originalPageX,f=c?f-this.offset.click.left>=c[0]||f-this.offset.click.left>c[2]?f:f-this.offset.click.left>=c[0]?f-e.grid[0]:f+e.grid[0]:f));return{top:b-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():d?0:h.scrollTop()),left:f-this.offset.click.left-
this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():d?0:h.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging");this.helper[0]!==this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove();this.helper=null;this.cancelHelperRemoval=!1},_trigger:function(j,c,b){b=b||this._uiHash();a.ui.plugin.call(this,j,[c,b]);"drag"===j&&(this.positionAbs=this._convertPositionTo("absolute"));return a.Widget.prototype._trigger.call(this,
j,c,b)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}});a.ui.plugin.add("draggable","connectToSortable",{start:function(j,c){var b=a(this).data("ui-draggable"),f=b.options,e=a.extend({},c,{item:b.element});b.sortables=[];a(f.connectToSortable).each(function(){var c=a.data(this,"ui-sortable");c&&!c.options.disabled&&(b.sortables.push({instance:c,shouldRevert:c.options.revert}),c.refreshPositions(),c._trigger("activate",
j,e))})},stop:function(j,c){var b=a(this).data("ui-draggable"),f=a.extend({},c,{item:b.element});a.each(b.sortables,function(){this.instance.isOver?(this.instance.isOver=0,b.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(j),this.instance.options.helper=this.instance.options._helper,"original"===b.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=
!1,this.instance._trigger("deactivate",j,f))})},drag:function(j,c){var b=a(this).data("ui-draggable"),f=this;a.each(b.sortables,function(){var e=!1,h=this;this.instance.positionAbs=b.positionAbs;this.instance.helperProportions=b.helperProportions;this.instance.offset.click=b.offset.click;this.instance._intersectsWith(this.instance.containerCache)&&(e=!0,a.each(b.sortables,function(){this.instance.positionAbs=b.positionAbs;this.instance.helperProportions=b.helperProportions;this.instance.offset.click=
b.offset.click;this!==h&&(this.instance._intersectsWith(this.instance.containerCache)&&a.contains(h.instance.element[0],this.instance.element[0]))&&(e=!1);return e}));e?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=a(f).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return c.helper[0]},j.target=this.instance.currentItem[0],this.instance._mouseCapture(j,
!0),this.instance._mouseStart(j,!0,!0),this.instance.offset.click.top=b.offset.click.top,this.instance.offset.click.left=b.offset.click.left,this.instance.offset.parent.left-=b.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=b.offset.parent.top-this.instance.offset.parent.top,b._trigger("toSortable",j),b.dropped=this.instance.element,b.currentItem=b.element,this.instance.fromOutside=b),this.instance.currentItem&&this.instance._mouseDrag(j)):this.instance.isOver&&
(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",j,this.instance._uiHash(this.instance)),this.instance._mouseStop(j,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),b._trigger("fromSortable",j),b.dropped=!1)})}});a.ui.plugin.add("draggable","cursor",{start:function(){var j=a("body"),c=a(this).data("ui-draggable").options;
j.css("cursor")&&(c._cursor=j.css("cursor"));j.css("cursor",c.cursor)},stop:function(){var j=a(this).data("ui-draggable").options;j._cursor&&a("body").css("cursor",j._cursor)}});a.ui.plugin.add("draggable","opacity",{start:function(j,c){var b=a(c.helper),f=a(this).data("ui-draggable").options;b.css("opacity")&&(f._opacity=b.css("opacity"));b.css("opacity",f.opacity)},stop:function(j,c){var b=a(this).data("ui-draggable").options;b._opacity&&a(c.helper).css("opacity",b._opacity)}});a.ui.plugin.add("draggable",
"scroll",{start:function(){var j=a(this).data("ui-draggable");j.scrollParent[0]!==document&&"HTML"!==j.scrollParent[0].tagName&&(j.overflowOffset=j.scrollParent.offset())},drag:function(j){var c=a(this).data("ui-draggable"),b=c.options,f=!1;if(c.scrollParent[0]!==document&&"HTML"!==c.scrollParent[0].tagName){if(!b.axis||"x"!==b.axis)c.overflowOffset.top+c.scrollParent[0].offsetHeight-j.pageY<b.scrollSensitivity?c.scrollParent[0].scrollTop=f=c.scrollParent[0].scrollTop+b.scrollSpeed:j.pageY-c.overflowOffset.top<
b.scrollSensitivity&&(c.scrollParent[0].scrollTop=f=c.scrollParent[0].scrollTop-b.scrollSpeed);if(!b.axis||"y"!==b.axis)c.overflowOffset.left+c.scrollParent[0].offsetWidth-j.pageX<b.scrollSensitivity?c.scrollParent[0].scrollLeft=f=c.scrollParent[0].scrollLeft+b.scrollSpeed:j.pageX-c.overflowOffset.left<b.scrollSensitivity&&(c.scrollParent[0].scrollLeft=f=c.scrollParent[0].scrollLeft-b.scrollSpeed)}else{if(!b.axis||"x"!==b.axis)j.pageY-a(document).scrollTop()<b.scrollSensitivity?f=a(document).scrollTop(a(document).scrollTop()-
b.scrollSpeed):a(window).height()-(j.pageY-a(document).scrollTop())<b.scrollSensitivity&&(f=a(document).scrollTop(a(document).scrollTop()+b.scrollSpeed));if(!b.axis||"y"!==b.axis)j.pageX-a(document).scrollLeft()<b.scrollSensitivity?f=a(document).scrollLeft(a(document).scrollLeft()-b.scrollSpeed):a(window).width()-(j.pageX-a(document).scrollLeft())<b.scrollSensitivity&&(f=a(document).scrollLeft(a(document).scrollLeft()+b.scrollSpeed))}!1!==f&&(a.ui.ddmanager&&!b.dropBehaviour)&&a.ui.ddmanager.prepareOffsets(c,
j)}});a.ui.plugin.add("draggable","snap",{start:function(){var j=a(this).data("ui-draggable"),c=j.options;j.snapElements=[];a(c.snap.constructor!==String?c.snap.items||":data(ui-draggable)":c.snap).each(function(){var b=a(this),c=b.offset();this!==j.element[0]&&j.snapElements.push({item:this,width:b.outerWidth(),height:b.outerHeight(),top:c.top,left:c.left})})},drag:function(j,c){var b,f,e,h,d,g,m,p,r,y,t=a(this).data("ui-draggable"),q=t.options,u=q.snapTolerance,s=c.offset.left,w=s+t.helperProportions.width,
B=c.offset.top,C=B+t.helperProportions.height;for(r=t.snapElements.length-1;0<=r;r--)d=t.snapElements[r].left,g=d+t.snapElements[r].width,m=t.snapElements[r].top,p=m+t.snapElements[r].height,d-u<s&&s<g+u&&m-u<B&&B<p+u||d-u<s&&s<g+u&&m-u<C&&C<p+u||d-u<w&&w<g+u&&m-u<B&&B<p+u||d-u<w&&w<g+u&&m-u<C&&C<p+u?("inner"!==q.snapMode&&(b=Math.abs(m-C)<=u,f=Math.abs(p-B)<=u,e=Math.abs(d-w)<=u,h=Math.abs(g-s)<=u,b&&(c.position.top=t._convertPositionTo("relative",{top:m-t.helperProportions.height,left:0}).top-t.margins.top),
f&&(c.position.top=t._convertPositionTo("relative",{top:p,left:0}).top-t.margins.top),e&&(c.position.left=t._convertPositionTo("relative",{top:0,left:d-t.helperProportions.width}).left-t.margins.left),h&&(c.position.left=t._convertPositionTo("relative",{top:0,left:g}).left-t.margins.left)),y=b||f||e||h,"outer"!==q.snapMode&&(b=Math.abs(m-B)<=u,f=Math.abs(p-C)<=u,e=Math.abs(d-s)<=u,h=Math.abs(g-w)<=u,b&&(c.position.top=t._convertPositionTo("relative",{top:m,left:0}).top-t.margins.top),f&&(c.position.top=
t._convertPositionTo("relative",{top:p-t.helperProportions.height,left:0}).top-t.margins.top),e&&(c.position.left=t._convertPositionTo("relative",{top:0,left:d}).left-t.margins.left),h&&(c.position.left=t._convertPositionTo("relative",{top:0,left:g-t.helperProportions.width}).left-t.margins.left)),!t.snapElements[r].snapping&&(b||f||e||h||y)&&t.options.snap.snap&&t.options.snap.snap.call(t.element,j,a.extend(t._uiHash(),{snapItem:t.snapElements[r].item})),t.snapElements[r].snapping=b||f||e||h||y):
(t.snapElements[r].snapping&&t.options.snap.release&&t.options.snap.release.call(t.element,j,a.extend(t._uiHash(),{snapItem:t.snapElements[r].item})),t.snapElements[r].snapping=!1)}});a.ui.plugin.add("draggable","stack",{start:function(){var j,c=this.data("ui-draggable").options,c=a.makeArray(a(c.stack)).sort(function(b,c){return(parseInt(a(b).css("zIndex"),10)||0)-(parseInt(a(c).css("zIndex"),10)||0)});c.length&&(j=parseInt(a(c[0]).css("zIndex"),10)||0,a(c).each(function(b){a(this).css("zIndex",
j+b)}),this.css("zIndex",j+c.length))}});a.ui.plugin.add("draggable","zIndex",{start:function(j,c){var b=a(c.helper),f=a(this).data("ui-draggable").options;b.css("zIndex")&&(f._zIndex=b.css("zIndex"));b.css("zIndex",f.zIndex)},stop:function(j,c){var b=a(this).data("ui-draggable").options;b._zIndex&&a(c.helper).css("zIndex",b._zIndex)}})})(jQuery);
(function(a){a.widget("ui.droppable",{version:"1.10.2",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var j=this.options,c=j.accept;this.isover=!1;this.isout=!0;this.accept=a.isFunction(c)?c:function(a){return a.is(c)};this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};a.ui.ddmanager.droppables[j.scope]=
a.ui.ddmanager.droppables[j.scope]||[];a.ui.ddmanager.droppables[j.scope].push(this);j.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){for(var j=0,c=a.ui.ddmanager.droppables[this.options.scope];j<c.length;j++)c[j]===this&&c.splice(j,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(j,c){"accept"===j&&(this.accept=a.isFunction(c)?c:function(a){return a.is(c)});a.Widget.prototype._setOption.apply(this,arguments)},_activate:function(j){var c=
a.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass);c&&this._trigger("activate",j,this.ui(c))},_deactivate:function(j){var c=a.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass);c&&this._trigger("deactivate",j,this.ui(c))},_over:function(j){var c=a.ui.ddmanager.current;if(c&&(c.currentItem||c.element)[0]!==this.element[0])if(this.accept.call(this.element[0],c.currentItem||c.element))this.options.hoverClass&&
this.element.addClass(this.options.hoverClass),this._trigger("over",j,this.ui(c))},_out:function(j){var c=a.ui.ddmanager.current;if(c&&(c.currentItem||c.element)[0]!==this.element[0])if(this.accept.call(this.element[0],c.currentItem||c.element))this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",j,this.ui(c))},_drop:function(j,c){var b=c||a.ui.ddmanager.current,f=!1;if(!b||(b.currentItem||b.element)[0]===this.element[0])return!1;this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var c=
a.data(this,"ui-droppable");if(c.options.greedy&&!c.options.disabled&&c.options.scope===b.options.scope&&c.accept.call(c.element[0],b.currentItem||b.element)&&a.ui.intersect(b,a.extend(c,{offset:c.element.offset()}),c.options.tolerance))return f=!0,!1});return f?!1:this.accept.call(this.element[0],b.currentItem||b.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",j,
this.ui(b)),this.element):!1},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}});a.ui.intersect=function(a,c,b){if(!c.offset)return!1;var f=(a.positionAbs||a.position.absolute).left,e=f+a.helperProportions.width,h=(a.positionAbs||a.position.absolute).top,d=h+a.helperProportions.height,g=c.offset.left,m=g+c.proportions.width,p=c.offset.top,r=p+c.proportions.height;switch(b){case "fit":return g<=f&&e<=m&&p<=h&&d<=r;case "intersect":return g<
f+a.helperProportions.width/2&&e-a.helperProportions.width/2<m&&p<h+a.helperProportions.height/2&&d-a.helperProportions.height/2<r;case "pointer":return b=(a.positionAbs||a.position.absolute).left+(a.clickOffset||a.offset.click).left,a=(a.positionAbs||a.position.absolute).top+(a.clickOffset||a.offset.click).top,a>p&&a<p+c.proportions.height&&b>g&&b<g+c.proportions.width;case "touch":return(h>=p&&h<=r||d>=p&&d<=r||h<p&&d>r)&&(f>=g&&f<=m||e>=g&&e<=m||f<g&&e>m);default:return!1}};a.ui.ddmanager={current:null,
droppables:{"default":[]},prepareOffsets:function(j,c){var b,f,e=a.ui.ddmanager.droppables[j.options.scope]||[],h=c?c.type:null,d=(j.currentItem||j.element).find(":data(ui-droppable)").addBack();b=0;a:for(;b<e.length;b++)if(!(e[b].options.disabled||j&&!e[b].accept.call(e[b].element[0],j.currentItem||j.element))){for(f=0;f<d.length;f++)if(d[f]===e[b].element[0]){e[b].proportions.height=0;continue a}e[b].visible="none"!==e[b].element.css("display");e[b].visible&&("mousedown"===h&&e[b]._activate.call(e[b],
c),e[b].offset=e[b].element.offset(),e[b].proportions={width:e[b].element[0].offsetWidth,height:e[b].element[0].offsetHeight})}},drop:function(j,c){var b=!1;a.each((a.ui.ddmanager.droppables[j.options.scope]||[]).slice(),function(){if(this.options&&(!this.options.disabled&&(this.visible&&a.ui.intersect(j,this,this.options.tolerance))&&(b=this._drop.call(this,c)||b),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],j.currentItem||j.element)))this.isout=!0,this.isover=!1,this._deactivate.call(this,
c)});return b},dragStart:function(j,c){j.element.parentsUntil("body").bind("scroll.droppable",function(){j.options.refreshPositions||a.ui.ddmanager.prepareOffsets(j,c)})},drag:function(j,c){j.options.refreshPositions&&a.ui.ddmanager.prepareOffsets(j,c);a.each(a.ui.ddmanager.droppables[j.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var b,f,e;e=a.ui.intersect(j,this,this.options.tolerance);var h=!e&&this.isover?"isout":e&&!this.isover?"isover":null;h&&(this.options.greedy&&
(f=this.options.scope,e=this.element.parents(":data(ui-droppable)").filter(function(){return a.data(this,"ui-droppable").options.scope===f}),e.length&&(b=a.data(e[0],"ui-droppable"),b.greedyChild="isover"===h)),b&&"isover"===h&&(b.isover=!1,b.isout=!0,b._out.call(b,c)),this[h]=!0,this["isout"===h?"isover":"isout"]=!1,this["isover"===h?"_over":"_out"].call(this,c),b&&"isout"===h&&(b.isout=!1,b.isover=!0,b._over.call(b,c)))}})},dragStop:function(j,c){j.element.parentsUntil("body").unbind("scroll.droppable");
j.options.refreshPositions||a.ui.ddmanager.prepareOffsets(j,c)}}})(jQuery);
(function(a){function j(a){return parseInt(a,10)||0}function c(a){return!isNaN(parseInt(a,10))}a.widget("ui.resizable",a.ui.mouse,{version:"1.10.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var b,c,e,h,d,g=this,j=this.options;this.element.addClass("ui-resizable");
a.extend(this,{_aspectRatio:!!j.aspectRatio,aspectRatio:j.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:j.helper||j.ghost||j.animate?j.helper||"ui-resizable-helper":null});this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(a("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),
left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.data("ui-resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),
this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize());this.handles=j.handles||(!a(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"});
if(this.handles.constructor===String){"all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw");b=this.handles.split(",");this.handles={};for(c=0;c<b.length;c++)e=a.trim(b[c]),d="ui-resizable-"+e,h=a("<div class='ui-resizable-handle "+d+"'></div>"),h.css({zIndex:j.zIndex}),"se"===e&&h.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[e]=".ui-resizable-"+e,this.element.append(h)}this._renderAxis=function(b){var d,c,g;b=b||this.element;for(d in this.handles)this.handles[d].constructor===
String&&(this.handles[d]=a(this.handles[d],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(c=a(this.handles[d],this.element),g=/sw|ne|nw|se|n|s/.test(d)?c.outerHeight():c.outerWidth(),c=["padding",/ne|nw|n/.test(d)?"Top":/se|sw|s/.test(d)?"Bottom":/^e$/.test(d)?"Right":"Left"].join(""),b.css(c,g),this._proportionallyResize()),a(this.handles[d])};this._renderAxis(this.element);this._handles=a(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){g.resizing||(this.className&&(h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),g.axis=h&&h[1]?h[1]:"se")});j.autoHide&&(this._handles.hide(),a(this.element).addClass("ui-resizable-autohide").mouseenter(function(){j.disabled||(a(this).removeClass("ui-resizable-autohide"),g._handles.show())}).mouseleave(function(){!j.disabled&&!g.resizing&&(a(this).addClass("ui-resizable-autohide"),g._handles.hide())}));this._mouseInit()},_destroy:function(){this._mouseDestroy();
var b,c=function(b){a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};this.elementIsWrapper&&(c(this.element),b=this.element,this.originalElement.css({position:b.css("position"),width:b.outerWidth(),height:b.outerHeight(),top:b.css("top"),left:b.css("left")}).insertAfter(b),b.remove());this.originalElement.css("resize",this.originalResizeStyle);c(this.originalElement);
return this},_mouseCapture:function(b){var c,e,h=!1;for(c in this.handles)if(e=a(this.handles[c])[0],e===b.target||a.contains(e,b.target))h=!0;return!this.options.disabled&&h},_mouseStart:function(b){var c,e,h;h=this.options;c=this.element.position();var d=this.element;this.resizing=!0;/absolute/.test(d.css("position"))?d.css({position:"absolute",top:d.css("top"),left:d.css("left")}):d.is(".ui-draggable")&&d.css({position:"absolute",top:c.top,left:c.left});this._renderProxy();c=j(this.helper.css("left"));
e=j(this.helper.css("top"));h.containment&&(c+=a(h.containment).scrollLeft()||0,e+=a(h.containment).scrollTop()||0);this.offset=this.helper.offset();this.position={left:c,top:e};this.size=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalSize=this._helper?{width:d.outerWidth(),height:d.outerHeight()}:{width:d.width(),height:d.height()};this.originalPosition={left:c,top:e};this.sizeDiff={width:d.outerWidth()-d.width(),height:d.outerHeight()-
d.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio="number"===typeof h.aspectRatio?h.aspectRatio:this.originalSize.width/this.originalSize.height||1;h=a(".ui-resizable-"+this.axis).css("cursor");a("body").css("cursor","auto"===h?this.axis+"-resize":h);d.addClass("ui-resizable-resizing");this._propagate("start",b);return!0},_mouseDrag:function(b){var c,e=this.helper,h={};c=this.originalMousePosition;var d=this.position.top,g=this.position.left,j=this.size.width,p=this.size.height,
r=this._change[this.axis];if(!r)return!1;c=r.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);this._updateVirtualBoundaries(b.shiftKey);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._updateCache(c);this._propagate("resize",b);this.position.top!==d&&(h.top=this.position.top+"px");this.position.left!==g&&(h.left=this.position.left+"px");this.size.width!==j&&(h.width=this.size.width+"px");this.size.height!==p&&(h.height=this.size.height+"px");e.css(h);!this._helper&&
this._proportionallyResizeElements.length&&this._proportionallyResize();a.isEmptyObject(h)||this._trigger("resize",b,this.ui());return!1},_mouseStop:function(b){this.resizing=!1;var c,e,h,d=this.options;this._helper&&(c=this._proportionallyResizeElements,c=(e=c.length&&/textarea/i.test(c[0].nodeName))&&a.ui.hasScroll(c[0],"left")?0:this.sizeDiff.height,e=e?0:this.sizeDiff.width,e={width:this.helper.width()-e,height:this.helper.height()-c},c=parseInt(this.element.css("left"),10)+(this.position.left-
this.originalPosition.left)||null,h=parseInt(this.element.css("top"),10)+(this.position.top-this.originalPosition.top)||null,d.animate||this.element.css(a.extend(e,{top:h,left:c})),this.helper.height(this.size.height),this.helper.width(this.size.width),this._helper&&!d.animate&&this._proportionallyResize());a("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",b);this._helper&&this.helper.remove();return!1},_updateVirtualBoundaries:function(a){var f,
e,h,d;d=this.options;d={minWidth:c(d.minWidth)?d.minWidth:0,maxWidth:c(d.maxWidth)?d.maxWidth:Infinity,minHeight:c(d.minHeight)?d.minHeight:0,maxHeight:c(d.maxHeight)?d.maxHeight:Infinity};if(this._aspectRatio||a)a=d.minHeight*this.aspectRatio,e=d.minWidth/this.aspectRatio,f=d.maxHeight*this.aspectRatio,h=d.maxWidth/this.aspectRatio,a>d.minWidth&&(d.minWidth=a),e>d.minHeight&&(d.minHeight=e),f<d.maxWidth&&(d.maxWidth=f),h<d.maxHeight&&(d.maxHeight=h);this._vBoundaries=d},_updateCache:function(a){this.offset=
this.helper.offset();c(a.left)&&(this.position.left=a.left);c(a.top)&&(this.position.top=a.top);c(a.height)&&(this.size.height=a.height);c(a.width)&&(this.size.width=a.width)},_updateRatio:function(a){var f=this.position,e=this.size,h=this.axis;c(a.height)?a.width=a.height*this.aspectRatio:c(a.width)&&(a.height=a.width/this.aspectRatio);"sw"===h&&(a.left=f.left+(e.width-a.width),a.top=null);"nw"===h&&(a.top=f.top+(e.height-a.height),a.left=f.left+(e.width-a.width));return a},_respectSize:function(a){var f=
this._vBoundaries,e=this.axis,h=c(a.width)&&f.maxWidth&&f.maxWidth<a.width,d=c(a.height)&&f.maxHeight&&f.maxHeight<a.height,g=c(a.width)&&f.minWidth&&f.minWidth>a.width,j=c(a.height)&&f.minHeight&&f.minHeight>a.height,p=this.originalPosition.left+this.originalSize.width,r=this.position.top+this.size.height,y=/sw|nw|w/.test(e),e=/nw|ne|n/.test(e);g&&(a.width=f.minWidth);j&&(a.height=f.minHeight);h&&(a.width=f.maxWidth);d&&(a.height=f.maxHeight);g&&y&&(a.left=p-f.minWidth);h&&y&&(a.left=p-f.maxWidth);
j&&e&&(a.top=r-f.minHeight);d&&e&&(a.top=r-f.maxHeight);!a.width&&!a.height&&!a.left&&a.top?a.top=null:!a.width&&(!a.height&&!a.top&&a.left)&&(a.left=null);return a},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var a,c,e,h,d,g=this.helper||this.element;for(a=0;a<this._proportionallyResizeElements.length;a++){d=this._proportionallyResizeElements[a];if(!this.borderDif){this.borderDif=[];e=[d.css("borderTopWidth"),d.css("borderRightWidth"),d.css("borderBottomWidth"),
d.css("borderLeftWidth")];h=[d.css("paddingTop"),d.css("paddingRight"),d.css("paddingBottom"),d.css("paddingLeft")];for(c=0;c<e.length;c++)this.borderDif[c]=(parseInt(e[c],10)||0)+(parseInt(h[c],10)||0)}d.css({height:g.height()-this.borderDif[0]-this.borderDif[2]||0,width:g.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var b=this.options;this.elementOffset=this.element.offset();this._helper?(this.helper=this.helper||a("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-
1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++b.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(a,c){return{width:this.originalSize.width+c}},w:function(a,c){return{left:this.originalPosition.left+c,width:this.originalSize.width-c}},n:function(a,c,e){return{top:this.originalPosition.top+e,height:this.originalSize.height-e}},s:function(a,c,e){return{height:this.originalSize.height+
e}},se:function(b,c,e){return a.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,c,e]))},sw:function(b,c,e){return a.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,c,e]))},ne:function(b,c,e){return a.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[b,c,e]))},nw:function(b,c,e){return a.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,c,e]))}},_propagate:function(b,c){a.ui.plugin.call(this,b,[c,this.ui()]);
"resize"!==b&&this._trigger(b,c,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});a.ui.plugin.add("resizable","animate",{stop:function(b){var c=a(this).data("ui-resizable"),e=c.options,h=c._proportionallyResizeElements,d=h.length&&/textarea/i.test(h[0].nodeName),g=d&&a.ui.hasScroll(h[0],"left")?0:c.sizeDiff.height,d=
{width:c.size.width-(d?0:c.sizeDiff.width),height:c.size.height-g},g=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null,j=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;c.element.animate(a.extend(d,j&&g?{top:j,left:g}:{}),{duration:e.animateDuration,easing:e.animateEasing,step:function(){var d={width:parseInt(c.element.css("width"),10),height:parseInt(c.element.css("height"),10),top:parseInt(c.element.css("top"),10),left:parseInt(c.element.css("left"),
10)};h&&h.length&&a(h[0]).css({width:d.width,height:d.height});c._updateCache(d);c._propagate("resize",b)}})}});a.ui.plugin.add("resizable","containment",{start:function(){var b,c,e,h,d,g=a(this).data("ui-resizable"),m=g.element;e=g.options.containment;if(m=e instanceof a?e.get(0):/parent/.test(e)?m.parent().get(0):e)g.containerElement=a(m),/document/.test(e)||e===document?(g.containerOffset={left:0,top:0},g.containerPosition={left:0,top:0},g.parentData={element:a(document),left:0,top:0,width:a(document).width(),
height:a(document).height()||document.body.parentNode.scrollHeight}):(b=a(m),c=[],a(["Top","Right","Left","Bottom"]).each(function(a,d){c[a]=j(b.css("padding"+d))}),g.containerOffset=b.offset(),g.containerPosition=b.position(),g.containerSize={height:b.innerHeight()-c[3],width:b.innerWidth()-c[1]},e=g.containerOffset,h=g.containerSize.height,d=g.containerSize.width,d=a.ui.hasScroll(m,"left")?m.scrollWidth:d,h=a.ui.hasScroll(m)?m.scrollHeight:h,g.parentData={element:m,left:e.left,top:e.top,width:d,
height:h})},resize:function(b){var c,e,h,d,g=a(this).data("ui-resizable");c=g.options;e=g.containerOffset;h=g.position;b=g._aspectRatio||b.shiftKey;d={top:0,left:0};var j=g.containerElement;j[0]!==document&&/static/.test(j.css("position"))&&(d=e);if(h.left<(g._helper?e.left:0))g.size.width+=g._helper?g.position.left-e.left:g.position.left-d.left,b&&(g.size.height=g.size.width/g.aspectRatio),g.position.left=c.helper?e.left:0;if(h.top<(g._helper?e.top:0))g.size.height+=g._helper?g.position.top-e.top:
g.position.top,b&&(g.size.width=g.size.height*g.aspectRatio),g.position.top=g._helper?e.top:0;g.offset.left=g.parentData.left+g.position.left;g.offset.top=g.parentData.top+g.position.top;c=Math.abs(g.offset.left-d.left+g.sizeDiff.width);e=Math.abs((g._helper?g.offset.top-d.top:g.offset.top-e.top)+g.sizeDiff.height);h=g.containerElement.get(0)===g.element.parent().get(0);d=/relative|absolute/.test(g.containerElement.css("position"));h&&d&&(c-=g.parentData.left);c+g.size.width>=g.parentData.width&&
(g.size.width=g.parentData.width-c,b&&(g.size.height=g.size.width/g.aspectRatio));e+g.size.height>=g.parentData.height&&(g.size.height=g.parentData.height-e,b&&(g.size.width=g.size.height*g.aspectRatio))},stop:function(){var b=a(this).data("ui-resizable"),c=b.options,e=b.containerOffset,h=b.containerPosition,d=b.containerElement,g=a(b.helper),j=g.offset(),p=g.outerWidth()-b.sizeDiff.width,g=g.outerHeight()-b.sizeDiff.height;b._helper&&(!c.animate&&/relative/.test(d.css("position")))&&a(this).css({left:j.left-
h.left-e.left,width:p,height:g});b._helper&&(!c.animate&&/static/.test(d.css("position")))&&a(this).css({left:j.left-h.left-e.left,width:p,height:g})}});a.ui.plugin.add("resizable","alsoResize",{start:function(){var b=a(this).data("ui-resizable").options,c=function(b){a(b).each(function(){var b=a(this);b.data("ui-resizable-alsoresize",{width:parseInt(b.width(),10),height:parseInt(b.height(),10),left:parseInt(b.css("left"),10),top:parseInt(b.css("top"),10)})})};"object"===typeof b.alsoResize&&!b.alsoResize.parentNode?
b.alsoResize.length?(b.alsoResize=b.alsoResize[0],c(b.alsoResize)):a.each(b.alsoResize,function(a){c(a)}):c(b.alsoResize)},resize:function(b,c){var e=a(this).data("ui-resizable"),h=e.options,d=e.originalSize,g=e.originalPosition,j={height:e.size.height-d.height||0,width:e.size.width-d.width||0,top:e.position.top-g.top||0,left:e.position.left-g.left||0},p=function(b,d){a(b).each(function(){var b=a(this),g=a(this).data("ui-resizable-alsoresize"),e={},h=d&&d.length?d:b.parents(c.originalElement[0]).length?
["width","height"]:["width","height","top","left"];a.each(h,function(a,b){var d=(g[b]||0)+(j[b]||0);d&&0<=d&&(e[b]=d||null)});b.css(e)})};"object"===typeof h.alsoResize&&!h.alsoResize.nodeType?a.each(h.alsoResize,function(a,b){p(a,b)}):p(h.alsoResize)},stop:function(){a(this).removeData("resizable-alsoresize")}});a.ui.plugin.add("resizable","ghost",{start:function(){var b=a(this).data("ui-resizable"),c=b.options,e=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,display:"block",
position:"relative",height:e.height,width:e.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"===typeof c.ghost?c.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=a(this).data("ui-resizable");b.ghost&&b.ghost.css({position:"relative",height:b.size.height,width:b.size.width})},stop:function(){var b=a(this).data("ui-resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});a.ui.plugin.add("resizable","grid",{resize:function(){var b=a(this).data("ui-resizable"),
c=b.options,e=b.size,h=b.originalSize,d=b.originalPosition,g=b.axis,j="number"===typeof c.grid?[c.grid,c.grid]:c.grid,p=j[0]||1,r=j[1]||1,y=Math.round((e.width-h.width)/p)*p,e=Math.round((e.height-h.height)/r)*r,t=h.width+y,h=h.height+e,q=c.maxWidth&&c.maxWidth<t,u=c.maxHeight&&c.maxHeight<h,s=c.minWidth&&c.minWidth>t,w=c.minHeight&&c.minHeight>h;c.grid=j;s&&(t+=p);w&&(h+=r);q&&(t-=p);u&&(h-=r);/^(se|s|e)$/.test(g)?(b.size.width=t,b.size.height=h):/^(ne)$/.test(g)?(b.size.width=t,b.size.height=h,
b.position.top=d.top-e):(/^(sw)$/.test(g)?(b.size.width=t,b.size.height=h):(b.size.width=t,b.size.height=h,b.position.top=d.top-e),b.position.left=d.left-y)}})})(jQuery);
(function(a){a.widget("ui.selectable",a.ui.mouse,{version:"1.10.2",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var j,c=this;this.element.addClass("ui-selectable");this.dragged=!1;this.refresh=function(){j=a(c.options.filter,c.element[0]);j.addClass("ui-selectee");j.each(function(){var b=a(this),c=b.offset();a.data(this,"selectable-item",{element:this,$element:b,
left:c.left,top:c.top,right:c.left+b.outerWidth(),bottom:c.top+b.outerHeight(),startselected:!1,selected:b.hasClass("ui-selected"),selecting:b.hasClass("ui-selecting"),unselecting:b.hasClass("ui-unselecting")})})};this.refresh();this.selectees=j.addClass("ui-selectee");this._mouseInit();this.helper=a("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item");this.element.removeClass("ui-selectable ui-selectable-disabled");
this._mouseDestroy()},_mouseStart:function(j){var c=this,b=this.options;this.opos=[j.pageX,j.pageY];this.options.disabled||(this.selectees=a(b.filter,this.element[0]),this._trigger("start",j),a(b.appendTo).append(this.helper),this.helper.css({left:j.pageX,top:j.pageY,width:0,height:0}),b.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var b=a.data(this,"selectable-item");b.startselected=!0;!j.metaKey&&!j.ctrlKey&&(b.$element.removeClass("ui-selected"),b.selected=
!1,b.$element.addClass("ui-unselecting"),b.unselecting=!0,c._trigger("unselecting",j,{unselecting:b.element}))}),a(j.target).parents().addBack().each(function(){var b,e=a.data(this,"selectable-item");if(e)return b=!j.metaKey&&!j.ctrlKey||!e.$element.hasClass("ui-selected"),e.$element.removeClass(b?"ui-unselecting":"ui-selected").addClass(b?"ui-selecting":"ui-unselecting"),e.unselecting=!b,e.selecting=b,(e.selected=b)?c._trigger("selecting",j,{selecting:e.element}):c._trigger("unselecting",j,{unselecting:e.element}),
!1}))},_mouseDrag:function(j){this.dragged=!0;if(!this.options.disabled){var c,b=this,f=this.options,e=this.opos[0],h=this.opos[1],d=j.pageX,g=j.pageY;e>d&&(c=d,d=e,e=c);h>g&&(c=g,g=h,h=c);this.helper.css({left:e,top:h,width:d-e,height:g-h});this.selectees.each(function(){var c=a.data(this,"selectable-item"),p=!1;c&&c.element!==b.element[0]&&("touch"===f.tolerance?p=!(c.left>d||c.right<e||c.top>g||c.bottom<h):"fit"===f.tolerance&&(p=c.left>e&&c.right<d&&c.top>h&&c.bottom<g),p?(c.selected&&(c.$element.removeClass("ui-selected"),
c.selected=!1),c.unselecting&&(c.$element.removeClass("ui-unselecting"),c.unselecting=!1),c.selecting||(c.$element.addClass("ui-selecting"),c.selecting=!0,b._trigger("selecting",j,{selecting:c.element}))):(c.selecting&&((j.metaKey||j.ctrlKey)&&c.startselected?(c.$element.removeClass("ui-selecting"),c.selecting=!1,c.$element.addClass("ui-selected"),c.selected=!0):(c.$element.removeClass("ui-selecting"),c.selecting=!1,c.startselected&&(c.$element.addClass("ui-unselecting"),c.unselecting=!0),b._trigger("unselecting",
j,{unselecting:c.element}))),c.selected&&(!j.metaKey&&!j.ctrlKey&&!c.startselected)&&(c.$element.removeClass("ui-selected"),c.selected=!1,c.$element.addClass("ui-unselecting"),c.unselecting=!0,b._trigger("unselecting",j,{unselecting:c.element}))))});return!1}},_mouseStop:function(j){var c=this;this.dragged=!1;a(".ui-unselecting",this.element[0]).each(function(){var b=a.data(this,"selectable-item");b.$element.removeClass("ui-unselecting");b.unselecting=!1;b.startselected=!1;c._trigger("unselected",
j,{unselected:b.element})});a(".ui-selecting",this.element[0]).each(function(){var b=a.data(this,"selectable-item");b.$element.removeClass("ui-selecting").addClass("ui-selected");b.selecting=!1;b.selected=!0;b.startselected=!0;c._trigger("selected",j,{selected:b.element})});this._trigger("stop",j);this.helper.remove();return!1}})})(jQuery);
(function(a){function j(a){return/left|right/.test(a.css("float"))||/inline|table-cell/.test(a.css("display"))}a.widget("ui.sortable",a.ui.mouse,{version:"1.10.2",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",
zIndex:1E3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var a=this.options;this.containerCache={};this.element.addClass("ui-sortable");this.refresh();this.floating=this.items.length?"x"===a.axis||j(this.items[0].item):!1;this.offset=this.element.offset();this._mouseInit();this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled");this._mouseDestroy();
for(var a=this.items.length-1;0<=a;a--)this.items[a].item.removeData(this.widgetName+"-item");return this},_setOption:function(c,b){"disabled"===c?(this.options[c]=b,this.widget().toggleClass("ui-sortable-disabled",!!b)):a.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(c,b){var f=null,e=!1,h=this;if(this.reverting||this.options.disabled||"static"===this.options.type)return!1;this._refreshItems(c);a(c.target).parents().each(function(){if(a.data(this,h.widgetName+"-item")===
h)return f=a(this),!1});a.data(c.target,h.widgetName+"-item")===h&&(f=a(c.target));if(!f||this.options.handle&&!b&&(a(this.options.handle,f).find("*").addBack().each(function(){this===c.target&&(e=!0)}),!e))return!1;this.currentItem=f;this._removeCurrentsFromItems();return!0},_mouseStart:function(c,b,f){var e;b=this.options;this.currentContainer=this;this.refreshPositions();this.helper=this._createHelper(c);this._cacheHelperProportions();this._cacheMargins();this.scrollParent=this.helper.scrollParent();
this.offset=this.currentItem.offset();this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left};a.extend(this.offset,{click:{left:c.pageX-this.offset.left,top:c.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()});this.helper.css("position","absolute");this.cssPosition=this.helper.css("position");this.originalPosition=this._generatePosition(c);this.originalPageX=c.pageX;this.originalPageY=c.pageY;b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt);
this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]};this.helper[0]!==this.currentItem[0]&&this.currentItem.hide();this._createPlaceholder();b.containment&&this._setContainment();b.cursor&&"auto"!==b.cursor&&(e=this.document.find("body"),this.storedCursor=e.css("cursor"),e.css("cursor",b.cursor),this.storedStylesheet=a("<style>*{ cursor: "+b.cursor+" !important; }</style>").appendTo(e));b.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),
this.helper.css("opacity",b.opacity));b.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",b.zIndex));this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset());this._trigger("start",c,this._uiHash());this._preserveHelperProportions||this._cacheHelperProportions();if(!f)for(f=this.containers.length-1;0<=f;f--)this.containers[f]._trigger("activate",c,this._uiHash(this));a.ui.ddmanager&&
(a.ui.ddmanager.current=this);a.ui.ddmanager&&!b.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,c);this.dragging=!0;this.helper.addClass("ui-sortable-helper");this._mouseDrag(c);return!0},_mouseDrag:function(c){var b,f,e,h;b=this.options;f=!1;this.position=this._generatePosition(c);this.positionAbs=this._convertPositionTo("absolute");this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);this.options.scroll&&(this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+
this.scrollParent[0].offsetHeight-c.pageY<b.scrollSensitivity?this.scrollParent[0].scrollTop=f=this.scrollParent[0].scrollTop+b.scrollSpeed:c.pageY-this.overflowOffset.top<b.scrollSensitivity&&(this.scrollParent[0].scrollTop=f=this.scrollParent[0].scrollTop-b.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-c.pageX<b.scrollSensitivity?this.scrollParent[0].scrollLeft=f=this.scrollParent[0].scrollLeft+b.scrollSpeed:c.pageX-this.overflowOffset.left<b.scrollSensitivity&&(this.scrollParent[0].scrollLeft=
f=this.scrollParent[0].scrollLeft-b.scrollSpeed)):(c.pageY-a(document).scrollTop()<b.scrollSensitivity?f=a(document).scrollTop(a(document).scrollTop()-b.scrollSpeed):a(window).height()-(c.pageY-a(document).scrollTop())<b.scrollSensitivity&&(f=a(document).scrollTop(a(document).scrollTop()+b.scrollSpeed)),c.pageX-a(document).scrollLeft()<b.scrollSensitivity?f=a(document).scrollLeft(a(document).scrollLeft()-b.scrollSpeed):a(window).width()-(c.pageX-a(document).scrollLeft())<b.scrollSensitivity&&(f=a(document).scrollLeft(a(document).scrollLeft()+
b.scrollSpeed))),!1!==f&&(a.ui.ddmanager&&!b.dropBehaviour)&&a.ui.ddmanager.prepareOffsets(this,c));this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||"y"!==this.options.axis)this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||"x"!==this.options.axis)this.helper[0].style.top=this.position.top+"px";for(b=this.items.length-1;0<=b;b--)if(f=this.items[b],e=f.item[0],(h=this._intersectsWithPointer(f))&&f.instance===this.currentContainer&&e!==this.currentItem[0]&&
this.placeholder[1===h?"next":"prev"]()[0]!==e&&!a.contains(this.placeholder[0],e)&&("semi-dynamic"===this.options.type?!a.contains(this.element[0],e):1)){this.direction=1===h?"down":"up";if("pointer"===this.options.tolerance||this._intersectsWithSides(f))this._rearrange(c,f);else break;this._trigger("change",c,this._uiHash());break}this._contactContainers(c);a.ui.ddmanager&&a.ui.ddmanager.drag(this,c);this._trigger("sort",c,this._uiHash());this.lastPositionAbs=this.positionAbs;return!1},_mouseStop:function(c,
b){if(c){a.ui.ddmanager&&!this.options.dropBehaviour&&a.ui.ddmanager.drop(this,c);if(this.options.revert){var f=this,e=this.placeholder.offset(),h=this.options.axis,d={};if(!h||"x"===h)d.left=e.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft);if(!h||"y"===h)d.top=e.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop);this.reverting=!0;a(this.helper).animate(d,parseInt(this.options.revert,
10)||500,function(){f._clear(c)})}else this._clear(c,b);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null});"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var c=this.containers.length-1;0<=c;c--)this.containers[c]._trigger("deactivate",null,this._uiHash(this)),this.containers[c].containerCache.over&&(this.containers[c]._trigger("out",null,this._uiHash(this)),this.containers[c].containerCache.over=
0)}this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&(this.helper&&this.helper[0].parentNode)&&this.helper.remove(),a.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?a(this.domPosition.prev).after(this.currentItem):a(this.domPosition.parent).prepend(this.currentItem));return this},serialize:function(c){var b=this._getItemsAsjQuery(c&&c.connected),f=[];c=c||
{};a(b).each(function(){var b=(a(c.item||this).attr(c.attribute||"id")||"").match(c.expression||/(.+)[\-=_](.+)/);b&&f.push((c.key||b[1]+"[]")+"="+(c.key&&c.expression?b[1]:b[2]))});!f.length&&c.key&&f.push(c.key+"=");return f.join("&")},toArray:function(c){var b=this._getItemsAsjQuery(c&&c.connected),f=[];c=c||{};b.each(function(){f.push(a(c.item||this).attr(c.attribute||"id")||"")});return f},_intersectsWith:function(a){var b=this.positionAbs.left,f=b+this.helperProportions.width,e=this.positionAbs.top,
h=e+this.helperProportions.height,d=a.left,g=d+a.width,j=a.top,p=j+a.height,r=this.offset.click.top,y=this.offset.click.left;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?e+r>j&&e+r<p&&b+y>d&&b+y<g:d<b+this.helperProportions.width/2&&f-this.helperProportions.width/2<g&&j<e+this.helperProportions.height/2&&h-this.helperProportions.height/2<
p},_intersectsWithPointer:function(a){var b="y"===this.options.axis||this.positionAbs.left+this.offset.click.left>a.left&&this.positionAbs.left+this.offset.click.left<a.left+a.width;a=("x"===this.options.axis||this.positionAbs.top+this.offset.click.top>a.top&&this.positionAbs.top+this.offset.click.top<a.top+a.height)&&b;var b=this._getDragVerticalDirection(),f=this._getDragHorizontalDirection();return!a?!1:this.floating?f&&"right"===f||"down"===b?2:1:b&&("down"===b?2:1)},_intersectsWithSides:function(a){var b=
this.positionAbs.top+this.offset.click.top>a.top+a.height/2&&this.positionAbs.top+this.offset.click.top<a.top+a.height/2+a.height;a=this.positionAbs.left+this.offset.click.left>a.left+a.width/2&&this.positionAbs.left+this.offset.click.left<a.left+a.width/2+a.width;var f=this._getDragVerticalDirection(),e=this._getDragHorizontalDirection();return this.floating&&e?"right"===e&&a||"left"===e&&!a:f&&("down"===f&&b||"up"===f&&!b)},_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;
return 0!==a&&(0<a?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return 0!==a&&(0<a?"right":"left")},refresh:function(a){this._refreshItems(a);this.refreshPositions();return this},_connectWith:function(){var a=this.options;return a.connectWith.constructor===String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(c){var b,f,e,h=[],d=[],g=this._connectWith();if(g&&c)for(c=g.length-1;0<=c;c--){f=a(g[c]);for(b=f.length-1;0<=b;b--)(e=
a.data(f[b],this.widgetFullName))&&(e!==this&&!e.options.disabled)&&d.push([a.isFunction(e.options.items)?e.options.items.call(e.element):a(e.options.items,e.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),e])}d.push([a.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):a(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(c=d.length-1;0<=c;c--)d[c][0].each(function(){h.push(this)});
return a(h)},_removeCurrentsFromItems:function(){var c=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=a.grep(this.items,function(a){for(var f=0;f<c.length;f++)if(c[f]===a.item[0])return!1;return!0})},_refreshItems:function(c){this.items=[];this.containers=[this];var b,f,e,h,d,g=this.items,j=[[a.isFunction(this.options.items)?this.options.items.call(this.element[0],c,{item:this.currentItem}):a(this.options.items,this.element),this]];if((d=this._connectWith())&&this.ready)for(b=
d.length-1;0<=b;b--){e=a(d[b]);for(f=e.length-1;0<=f;f--)if((h=a.data(e[f],this.widgetFullName))&&h!==this&&!h.options.disabled)j.push([a.isFunction(h.options.items)?h.options.items.call(h.element[0],c,{item:this.currentItem}):a(h.options.items,h.element),h]),this.containers.push(h)}for(b=j.length-1;0<=b;b--){c=j[b][1];e=j[b][0];f=0;for(d=e.length;f<d;f++)h=a(e[f]),h.data(this.widgetName+"-item",c),g.push({item:h,instance:c,width:0,height:0,left:0,top:0})}},refreshPositions:function(c){this.offsetParent&&
this.helper&&(this.offset.parent=this._getParentOffset());var b,f,e;for(b=this.items.length-1;0<=b;b--)f=this.items[b],f.instance!==this.currentContainer&&this.currentContainer&&f.item[0]!==this.currentItem[0]||(e=this.options.toleranceElement?a(this.options.toleranceElement,f.item):f.item,c||(f.width=e.outerWidth(),f.height=e.outerHeight()),e=e.offset(),f.left=e.left,f.top=e.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(b=
this.containers.length-1;0<=b;b--)e=this.containers[b].element.offset(),this.containers[b].containerCache.left=e.left,this.containers[b].containerCache.top=e.top,this.containers[b].containerCache.width=this.containers[b].element.outerWidth(),this.containers[b].containerCache.height=this.containers[b].element.outerHeight();return this},_createPlaceholder:function(c){c=c||this;var b,f=c.options;if(!f.placeholder||f.placeholder.constructor===String)b=f.placeholder,f.placeholder={element:function(){var e=
c.currentItem[0].nodeName.toLowerCase(),f=a(c.document[0].createElement(e)).addClass(b||c.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");"tr"===e?f.append("<td colspan='99'>&#160;</td>"):"img"===e&&f.attr("src",c.currentItem.attr("src"));b||f.css("visibility","hidden");return f},update:function(a,h){if(!b||f.forcePlaceholderSize)h.height()||h.height(c.currentItem.innerHeight()-parseInt(c.currentItem.css("paddingTop")||0,10)-parseInt(c.currentItem.css("paddingBottom")||
0,10)),h.width()||h.width(c.currentItem.innerWidth()-parseInt(c.currentItem.css("paddingLeft")||0,10)-parseInt(c.currentItem.css("paddingRight")||0,10))}};c.placeholder=a(f.placeholder.element.call(c.element,c.currentItem));c.currentItem.after(c.placeholder);f.placeholder.update(c,c.placeholder)},_contactContainers:function(c){var b,f,e,h,d,g,m,p,r,y=f=null;for(b=this.containers.length-1;0<=b;b--)if(!a.contains(this.currentItem[0],this.containers[b].element[0]))if(this._intersectsWith(this.containers[b].containerCache)){if(!f||
!a.contains(this.containers[b].element[0],f.element[0]))f=this.containers[b],y=b}else this.containers[b].containerCache.over&&(this.containers[b]._trigger("out",c,this._uiHash(this)),this.containers[b].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[y].containerCache.over||(this.containers[y]._trigger("over",c,this._uiHash(this)),this.containers[y].containerCache.over=1);else{b=1E4;e=null;h=(r=f.floating||j(this.currentItem))?"left":"top";d=r?"width":"height";g=this.positionAbs[h]+
this.offset.click[h];for(f=this.items.length-1;0<=f;f--)if(a.contains(this.containers[y].element[0],this.items[f].item[0])&&this.items[f].item[0]!==this.currentItem[0]&&(!r||this.positionAbs.top+this.offset.click.top>this.items[f].top&&this.positionAbs.top+this.offset.click.top<this.items[f].top+this.items[f].height))m=this.items[f].item.offset()[h],p=!1,Math.abs(m-g)>Math.abs(m+this.items[f][d]-g)&&(p=!0,m+=this.items[f][d]),Math.abs(m-g)<b&&(b=Math.abs(m-g),e=this.items[f],this.direction=p?"up":
"down");if((e||this.options.dropOnEmpty)&&this.currentContainer!==this.containers[y])e?this._rearrange(c,e,null,!0):this._rearrange(c,null,this.containers[y].element,!0),this._trigger("change",c,this._uiHash()),this.containers[y]._trigger("change",c,this._uiHash(this)),this.currentContainer=this.containers[y],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[y]._trigger("over",c,this._uiHash(this)),this.containers[y].containerCache.over=1}},_createHelper:function(c){var b=
this.options;c=a.isFunction(b.helper)?a(b.helper.apply(this.element[0],[c,this.currentItem])):"clone"===b.helper?this.currentItem.clone():this.currentItem;c.parents("body").length||a("parent"!==b.appendTo?b.appendTo:this.currentItem[0].parentNode)[0].appendChild(c[0]);c[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")});
(!c[0].style.width||b.forceHelperSize)&&c.width(this.currentItem.width());(!c[0].style.height||b.forceHelperSize)&&c.height(this.currentItem.height());return c},_adjustOffsetFromHelper:function(c){"string"===typeof c&&(c=c.split(" "));a.isArray(c)&&(c={left:+c[0],top:+c[1]||0});"left"in c&&(this.offset.click.left=c.left+this.margins.left);"right"in c&&(this.offset.click.left=this.helperProportions.width-c.right+this.margins.left);"top"in c&&(this.offset.click.top=c.top+this.margins.top);"bottom"in
c&&(this.offset.click.top=this.helperProportions.height-c.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var c=this.offsetParent.offset();"absolute"===this.cssPosition&&(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))&&(c.left+=this.scrollParent.scrollLeft(),c.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&
a.ui.ie)c={top:0,left:0};return{top:c.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:c.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins=
{left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var c,b,f;b=this.options;"parent"===b.containment&&(b.containment=this.helper[0].parentNode);if("document"===b.containment||"window"===b.containment)this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-
this.offset.parent.top,a("document"===b.containment?document:window).width()-this.helperProportions.width-this.margins.left,(a("document"===b.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];/^(document|window|parent)$/.test(b.containment)||(c=a(b.containment)[0],b=a(b.containment).offset(),f="hidden"!==a(c).css("overflow"),this.containment=[b.left+(parseInt(a(c).css("borderLeftWidth"),10)||0)+(parseInt(a(c).css("paddingLeft"),
10)||0)-this.margins.left,b.top+(parseInt(a(c).css("borderTopWidth"),10)||0)+(parseInt(a(c).css("paddingTop"),10)||0)-this.margins.top,b.left+(f?Math.max(c.scrollWidth,c.offsetWidth):c.offsetWidth)-(parseInt(a(c).css("borderLeftWidth"),10)||0)-(parseInt(a(c).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,b.top+(f?Math.max(c.scrollHeight,c.offsetHeight):c.offsetHeight)-(parseInt(a(c).css("borderTopWidth"),10)||0)-(parseInt(a(c).css("paddingBottom"),10)||0)-this.helperProportions.height-
this.margins.top])},_convertPositionTo:function(c,b){b||(b=this.position);var f="absolute"===c?1:-1,e="absolute"===this.cssPosition&&!(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,h=/(html|body)/i.test(e[0].tagName);return{top:b.top+this.offset.relative.top*f+this.offset.parent.top*f-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:e.scrollTop())*f,left:b.left+this.offset.relative.left*f+this.offset.parent.left*
f-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:e.scrollLeft())*f}},_generatePosition:function(c){var b,f,e=this.options;f=c.pageX;b=c.pageY;var h="absolute"===this.cssPosition&&!(this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,d=/(html|body)/i.test(h[0].tagName);"relative"===this.cssPosition&&!(this.scrollParent[0]!==document&&this.scrollParent[0]!==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());
this.originalPosition&&(this.containment&&(c.pageX-this.offset.click.left<this.containment[0]&&(f=this.containment[0]+this.offset.click.left),c.pageY-this.offset.click.top<this.containment[1]&&(b=this.containment[1]+this.offset.click.top),c.pageX-this.offset.click.left>this.containment[2]&&(f=this.containment[2]+this.offset.click.left),c.pageY-this.offset.click.top>this.containment[3]&&(b=this.containment[3]+this.offset.click.top)),e.grid&&(b=this.originalPageY+Math.round((b-this.originalPageY)/e.grid[1])*
e.grid[1],b=this.containment?b-this.offset.click.top>=this.containment[1]&&b-this.offset.click.top<=this.containment[3]?b:b-this.offset.click.top>=this.containment[1]?b-e.grid[1]:b+e.grid[1]:b,f=this.originalPageX+Math.round((f-this.originalPageX)/e.grid[0])*e.grid[0],f=this.containment?f-this.offset.click.left>=this.containment[0]&&f-this.offset.click.left<=this.containment[2]?f:f-this.offset.click.left>=this.containment[0]?f-e.grid[0]:f+e.grid[0]:f));return{top:b-this.offset.click.top-this.offset.relative.top-
this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():d?0:h.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():d?0:h.scrollLeft())}},_rearrange:function(a,b,f,e){f?f[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?b.item[0]:b.item[0].nextSibling);var h=this.counter=this.counter?++this.counter:1;this._delay(function(){h===
this.counter&&this.refreshPositions(!e)})},_clear:function(a,b){this.reverting=!1;var f,e=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem);this._noFinalSort=null;if(this.helper[0]===this.currentItem[0]){for(f in this._storedCSS)if("auto"===this._storedCSS[f]||"static"===this._storedCSS[f])this._storedCSS[f]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!b&&e.push(function(a){this._trigger("receive",
a,this._uiHash(this.fromOutside))});(this.fromOutside||this.domPosition.prev!==this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!==this.currentItem.parent()[0])&&!b&&e.push(function(a){this._trigger("update",a,this._uiHash())});this!==this.currentContainer&&!b&&(e.push(function(a){this._trigger("remove",a,this._uiHash())}),e.push(function(a){return function(b){a._trigger("receive",b,this._uiHash(this))}}.call(this,this.currentContainer)),e.push(function(a){return function(b){a._trigger("update",
b,this._uiHash(this))}}.call(this,this.currentContainer)));for(f=this.containers.length-1;0<=f;f--)b||e.push(function(a){return function(b){a._trigger("deactivate",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over&&(e.push(function(a){return function(b){a._trigger("out",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over=0);this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove());
this._storedOpacity&&this.helper.css("opacity",this._storedOpacity);this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex);this.dragging=!1;if(this.cancelHelperRemoval){if(!b){this._trigger("beforeStop",a,this._uiHash());for(f=0;f<e.length;f++)e[f].call(this,a);this._trigger("stop",a,this._uiHash())}return this.fromOutside=!1}b||this._trigger("beforeStop",a,this._uiHash());this.placeholder[0].parentNode.removeChild(this.placeholder[0]);this.helper[0]!==this.currentItem[0]&&
this.helper.remove();this.helper=null;if(!b){for(f=0;f<e.length;f++)e[f].call(this,a);this._trigger("stop",a,this._uiHash())}this.fromOutside=!1;return!0},_trigger:function(){!1===a.Widget.prototype._trigger.apply(this,arguments)&&this.cancel()},_uiHash:function(c){var b=c||this;return{helper:b.helper,placeholder:b.placeholder||a([]),position:b.position,originalPosition:b.originalPosition,offset:b.positionAbs,item:b.currentItem,sender:c?c.element:null}}})})(jQuery);
(function(a,j){a.effects={effect:{}};var c=jQuery,b=function(a,b,d){var c=p[b.type]||{};if(null==a)return d||!b.def?null:b.def;a=c.floor?~~a:parseFloat(a);return isNaN(a)?b.def:c.mod?(a+c.mod)%c.mod:0>a?0:c.max<a?c.max:a},f=function(a){var b=g(),e=b._rgba=[];a=a.toLowerCase();q(d,function(d,c){var g,f=c.re.exec(a);g=f&&c.parse(f);f=c.space||"rgba";if(g)return g=b[f](g),b[m[f].cache]=g[m[f].cache],e=b._rgba=g._rgba,!1});return e.length?("0,0,0,0"===e.join()&&c.extend(e,t.transparent),b):t[a]},e=function(a,
b,d){d=(d+1)%1;return 1>6*d?a+6*(b-a)*d:1>2*d?b:2>3*d?a+6*(b-a)*(2/3-d):a},h=/^([\-+])=\s*(\d+\.?\d*)/,d=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(a){return[a[1],a[2],a[3],a[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(a){return[2.55*a[1],2.55*a[2],2.55*a[3],a[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(a){return[parseInt(a[1],
16),parseInt(a[2],16),parseInt(a[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(a){return[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(a){return[a[1],a[2]/100,a[3]/100,a[4]]}}],g=c.Color=function(a,b,d,g){return new c.Color.fn.parse(a,b,d,g)},m={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,
type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},p={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},r=g.support={},y=c("<p>")[0],t,q=c.each;y.style.cssText="background-color:rgba(1,1,1,.5)";r.rgba=-1<y.style.backgroundColor.indexOf("rgba");q(m,function(a,b){b.cache="_"+a;b.props.alpha={idx:3,type:"percent",def:1}});g.fn=c.extend(g.prototype,{parse:function(a,d,e,h){if(void 0===a)return this._rgba=[null,
null,null,null],this;if(a.jquery||a.nodeType)a=c(a).css(d),d=void 0;var j=this,p=c.type(a),k=this._rgba=[];void 0!==d&&(a=[a,d,e,h],p="array");if("string"===p)return this.parse(f(a)||t._default);if("array"===p)return q(m.rgba.props,function(d,c){k[c.idx]=b(a[c.idx],c)}),this;if("object"===p)return a instanceof g?q(m,function(b,d){a[d.cache]&&(j[d.cache]=a[d.cache].slice())}):q(m,function(d,g){var e=g.cache;q(g.props,function(d,c){if(!j[e]&&g.to){if("alpha"===d||null==a[d])return;j[e]=g.to(j._rgba)}j[e][c.idx]=
b(a[d],c,!0)});j[e]&&0>c.inArray(null,j[e].slice(0,3))&&(j[e][3]=1,g.from&&(j._rgba=g.from(j[e])))}),this},is:function(a){var b=g(a),d=!0,c=this;q(m,function(a,g){var e,f=b[g.cache];f&&(e=c[g.cache]||g.to&&g.to(c._rgba)||[],q(g.props,function(a,b){if(null!=f[b.idx])return d=f[b.idx]===e[b.idx]}));return d});return d},_space:function(){var a=[],b=this;q(m,function(d,c){b[c.cache]&&a.push(d)});return a.pop()},transition:function(a,d){var c=g(a),e=c._space(),f=m[e],h=0===this.alpha()?g("transparent"):
this,j=h[f.cache]||f.to(h._rgba),u=j.slice(),c=c[f.cache];q(f.props,function(a,g){var e=g.idx,f=j[e],h=c[e],m=p[g.type]||{};null!==h&&(null===f?u[e]=h:(m.mod&&(h-f>m.mod/2?f+=m.mod:f-h>m.mod/2&&(f-=m.mod)),u[e]=b((h-f)*d+f,g)))});return this[e](u)},blend:function(a){if(1===this._rgba[3])return this;var b=this._rgba.slice(),d=b.pop(),e=g(a)._rgba;return g(c.map(b,function(a,b){return(1-d)*e[b]+d*a}))},toRgbaString:function(){var a="rgba(",b=c.map(this._rgba,function(a,b){return null==a?2<b?1:0:a});
1===b[3]&&(b.pop(),a="rgb(");return a+b.join()+")"},toHslaString:function(){var a="hsla(",b=c.map(this.hsla(),function(a,b){null==a&&(a=2<b?1:0);b&&3>b&&(a=Math.round(100*a)+"%");return a});1===b[3]&&(b.pop(),a="hsl(");return a+b.join()+")"},toHexString:function(a){var b=this._rgba.slice(),d=b.pop();a&&b.push(~~(255*d));return"#"+c.map(b,function(a){a=(a||0).toString(16);return 1===a.length?"0"+a:a}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}});g.fn.parse.prototype=
g.fn;m.hsla.to=function(a){if(null==a[0]||null==a[1]||null==a[2])return[null,null,null,a[3]];var b=a[0]/255,d=a[1]/255,c=a[2]/255;a=a[3];var g=Math.max(b,d,c),e=Math.min(b,d,c),f=g-e,h=g+e,j=0.5*h;return[Math.round(e===g?0:b===g?60*(d-c)/f+360:d===g?60*(c-b)/f+120:60*(b-d)/f+240)%360,0===f?0:0.5>=j?f/h:f/(2-h),j,null==a?1:a]};m.hsla.from=function(a){if(null==a[0]||null==a[1]||null==a[2])return[null,null,null,a[3]];var b=a[0]/360,d=a[1],c=a[2];a=a[3];d=0.5>=c?c*(1+d):c+d-c*d;c=2*c-d;return[Math.round(255*
e(c,d,b+1/3)),Math.round(255*e(c,d,b)),Math.round(255*e(c,d,b-1/3)),a]};q(m,function(a,d){var e=d.props,f=d.cache,j=d.to,m=d.from;g.fn[a]=function(a){j&&!this[f]&&(this[f]=j(this._rgba));if(void 0===a)return this[f].slice();var d,h=c.type(a),p="array"===h||"object"===h?a:arguments,u=this[f].slice();q(e,function(a,d){var c=p["object"===h?a:d.idx];null==c&&(c=u[d.idx]);u[d.idx]=b(c,d)});return m?(d=g(m(u)),d[f]=u,d):g(u)};q(e,function(b,d){g.fn[b]||(g.fn[b]=function(g){var e=c.type(g),f="alpha"===b?
this._hsla?"hsla":"rgba":a,j=this[f](),m=j[d.idx];if("undefined"===e)return m;"function"===e&&(g=g.call(this,m),e=c.type(g));if(null==g&&d.empty)return this;"string"===e&&(e=h.exec(g))&&(g=m+parseFloat(e[2])*("+"===e[1]?1:-1));j[d.idx]=g;return this[f](j)})})});g.hook=function(a){a=a.split(" ");q(a,function(a,b){c.cssHooks[b]={set:function(a,d){var e,h="";if("transparent"!==d&&("string"!==c.type(d)||(e=f(d)))){d=g(e||d);if(!r.rgba&&1!==d._rgba[3]){for(e="backgroundColor"===b?a.parentNode:a;(""===
h||"transparent"===h)&&e&&e.style;)try{h=c.css(e,"backgroundColor"),e=e.parentNode}catch(j){}d=d.blend(h&&"transparent"!==h?h:"_default")}d=d.toRgbaString()}try{a.style[b]=d}catch(m){}}};c.fx.step[b]=function(a){a.colorInit||(a.start=g(a.elem,b),a.end=g(a.end),a.colorInit=!0);c.cssHooks[b].set(a.elem,a.start.transition(a.end,a.pos))}})};g.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor");
c.cssHooks.borderColor={expand:function(a){var b={};q(["Top","Right","Bottom","Left"],function(d,c){b["border"+c+"Color"]=a});return b}};t=c.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"};var u=function(b){var d,c=b.ownerDocument.defaultView?
b.ownerDocument.defaultView.getComputedStyle(b,null):b.currentStyle,g={};if(c&&c.length&&c[0]&&c[c[0]])for(b=c.length;b--;)d=c[b],"string"===typeof c[d]&&(g[a.camelCase(d)]=c[d]);else for(d in c)"string"===typeof c[d]&&(g[d]=c[d]);return g},s=["add","remove","toggle"],w={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};a.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(b,d){a.fx.step[d]=function(a){if("none"!==
a.end&&!a.setAttr||1===a.pos&&!a.setAttr)jQuery.style(a.elem,d,a.end),a.setAttr=!0}});a.fn.addBack||(a.fn.addBack=function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))});a.effects.animateClass=function(b,d,c,g){var e=a.speed(d,c,g);return this.queue(function(){var d=a(this),c=d.attr("class")||"",g,f=e.children?d.find("*").addBack():d,f=f.map(function(){return{el:a(this),start:u(this)}});g=function(){a.each(s,function(a,c){if(b[c])d[c+"Class"](b[c])})};g();f=f.map(function(){this.end=
u(this.el[0]);var b=this.start,d=this.end,c={},g,e;for(g in d)if(e=d[g],b[g]!==e&&!w[g]&&(a.fx.step[g]||!isNaN(parseFloat(e))))c[g]=e;this.diff=c;return this});d.attr("class",c);f=f.map(function(){var b=this,d=a.Deferred(),c=a.extend({},e,{queue:!1,complete:function(){d.resolve(b)}});this.el.animate(this.diff,c);return d.promise()});a.when.apply(a,f.get()).done(function(){g();a.each(arguments,function(){var b=this.el;a.each(this.diff,function(a){b.css(a,"")})});e.complete.call(d[0])})})};a.fn.extend({addClass:function(b){return function(d,
c,g,e){return c?a.effects.animateClass.call(this,{add:d},c,g,e):b.apply(this,arguments)}}(a.fn.addClass),removeClass:function(b){return function(d,c,g,e){return 1<arguments.length?a.effects.animateClass.call(this,{remove:d},c,g,e):b.apply(this,arguments)}}(a.fn.removeClass),toggleClass:function(b){return function(d,c,g,e,f){return"boolean"===typeof c||c===j?g?a.effects.animateClass.call(this,c?{add:d}:{remove:d},g,e,f):b.apply(this,arguments):a.effects.animateClass.call(this,{toggle:d},c,g,e)}}(a.fn.toggleClass),
switchClass:function(b,d,c,g,e){return a.effects.animateClass.call(this,{add:d,remove:b},c,g,e)}});var B=function(b,d,c,g){a.isPlainObject(b)&&(d=b,b=b.effect);b={effect:b};null==d&&(d={});a.isFunction(d)&&(g=d,c=null,d={});if("number"===typeof d||a.fx.speeds[d])g=c,c=d,d={};a.isFunction(c)&&(g=c,c=null);d&&a.extend(b,d);c=c||d.duration;b.duration=a.fx.off?0:"number"===typeof c?c:c in a.fx.speeds?a.fx.speeds[c]:a.fx.speeds._default;b.complete=g||d.complete;return b},C=function(b){return!b||("number"===
typeof b||a.fx.speeds[b])||"string"===typeof b&&!a.effects.effect[b]||a.isFunction(b)||"object"===typeof b&&!b.effect?!0:!1};a.extend(a.effects,{version:"1.10.2",save:function(a,b){for(var d=0;d<b.length;d++)null!==b[d]&&a.data("ui-effects-"+b[d],a[0].style[b[d]])},restore:function(a,b){var d,c;for(c=0;c<b.length;c++)null!==b[c]&&(d=a.data("ui-effects-"+b[c]),d===j&&(d=""),a.css(b[c],d))},setMode:function(a,b){"toggle"===b&&(b=a.is(":hidden")?"show":"hide");return b},getBaseline:function(a,b){var d,
c;switch(a[0]){case "top":d=0;break;case "middle":d=0.5;break;case "bottom":d=1;break;default:d=a[0]/b.height}switch(a[1]){case "left":c=0;break;case "center":c=0.5;break;case "right":c=1;break;default:c=a[1]/b.width}return{x:c,y:d}},createWrapper:function(b){if(b.parent().is(".ui-effects-wrapper"))return b.parent();var d={width:b.outerWidth(!0),height:b.outerHeight(!0),"float":b.css("float")},c=a("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",
margin:0,padding:0}),g={width:b.width(),height:b.height()},e=document.activeElement;try{e.id}catch(f){e=document.body}b.wrap(c);(b[0]===e||a.contains(b[0],e))&&a(e).focus();c=b.parent();"static"===b.css("position")?(c.css({position:"relative"}),b.css({position:"relative"})):(a.extend(d,{position:b.css("position"),zIndex:b.css("z-index")}),a.each(["top","left","bottom","right"],function(a,c){d[c]=b.css(c);isNaN(parseInt(d[c],10))&&(d[c]="auto")}),b.css({position:"relative",top:0,left:0,right:"auto",
bottom:"auto"}));b.css(g);return c.css(d).show()},removeWrapper:function(b){var d=document.activeElement;b.parent().is(".ui-effects-wrapper")&&(b.parent().replaceWith(b),(b[0]===d||a.contains(b[0],d))&&a(d).focus());return b},setTransition:function(b,d,c,g){g=g||{};a.each(d,function(a,d){var e=b.cssUnit(d);0<e[0]&&(g[d]=e[0]*c+e[1])});return g}});a.fn.extend({effect:function(){function b(c){function g(){a.isFunction(h)&&h.call(f[0]);a.isFunction(c)&&c()}var f=a(this),h=d.complete,j=d.mode;(f.is(":hidden")?
"hide"===j:"show"===j)?(f[j](),g()):e.call(f[0],d,g)}var d=B.apply(this,arguments),c=d.mode,g=d.queue,e=a.effects.effect[d.effect];return a.fx.off||!e?c?this[c](d.duration,d.complete):this.each(function(){d.complete&&d.complete.call(this)}):!1===g?this.each(b):this.queue(g||"fx",b)},show:function(a){return function(b){if(C(b))return a.apply(this,arguments);var d=B.apply(this,arguments);d.mode="show";return this.effect.call(this,d)}}(a.fn.show),hide:function(a){return function(b){if(C(b))return a.apply(this,
arguments);var d=B.apply(this,arguments);d.mode="hide";return this.effect.call(this,d)}}(a.fn.hide),toggle:function(a){return function(b){if(C(b)||"boolean"===typeof b)return a.apply(this,arguments);var d=B.apply(this,arguments);d.mode="toggle";return this.effect.call(this,d)}}(a.fn.toggle),cssUnit:function(b){var d=this.css(b),c=[];a.each(["em","px","%","pt"],function(a,b){0<d.indexOf(b)&&(c=[parseFloat(d),b])});return c}});var E={};a.each(["Quad","Cubic","Quart","Quint","Expo"],function(a,b){E[b]=
function(b){return Math.pow(b,a+2)}});a.extend(E,{Sine:function(a){return 1-Math.cos(a*Math.PI/2)},Circ:function(a){return 1-Math.sqrt(1-a*a)},Elastic:function(a){return 0===a||1===a?a:-Math.pow(2,8*(a-1))*Math.sin((80*(a-1)-7.5)*Math.PI/15)},Back:function(a){return a*a*(3*a-2)},Bounce:function(a){for(var b,d=4;a<((b=Math.pow(2,--d))-1)/11;);return 1/Math.pow(4,3-d)-7.5625*Math.pow((3*b-2)/22-a,2)}});a.each(E,function(b,d){a.easing["easeIn"+b]=d;a.easing["easeOut"+b]=function(a){return 1-d(1-a)};
a.easing["easeInOut"+b]=function(a){return 0.5>a?d(2*a)/2:1-d(-2*a+2)/2}})})(jQuery);
(function(a){var j=0,c={},b={};c.height=c.paddingTop=c.paddingBottom=c.borderTopWidth=c.borderBottomWidth="hide";b.height=b.paddingTop=b.paddingBottom=b.borderTopWidth=b.borderBottomWidth="show";a.widget("ui.accordion",{version:"1.10.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var b=this.options;
this.prevShow=this.prevHide=a();this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role","tablist");if(!b.collapsible&&(!1===b.active||null==b.active))b.active=0;this._processPanels();0>b.active&&(b.active+=this.headers.length);this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:!this.active.length?a():this.active.next(),content:!this.active.length?a():this.active.next()}},_createIcons:function(){var b=this.options.icons;b&&(a("<span>").addClass("ui-accordion-header-icon ui-icon "+
b.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(b.header).addClass(b.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var a;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&
this.removeAttribute("id")});this._destroyIcons();a=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")});"content"!==this.options.heightStyle&&a.css("height","")},_setOption:function(a,b){"active"===a?this._activate(b):
("event"===a&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(b)),this._super(a,b),"collapsible"===a&&(!b&&!1===this.options.active)&&this._activate(0),"icons"===a&&(this._destroyIcons(),b&&this._createIcons()),"disabled"===a&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!b))},_keydown:function(b){if(!b.altKey&&!b.ctrlKey){var c=a.ui.keyCode,h=this.headers.length,d=this.headers.index(b.target),g=!1;switch(b.keyCode){case c.RIGHT:case c.DOWN:g=
this.headers[(d+1)%h];break;case c.LEFT:case c.UP:g=this.headers[(d-1+h)%h];break;case c.SPACE:case c.ENTER:this._eventHandler(b);break;case c.HOME:g=this.headers[0];break;case c.END:g=this.headers[h-1]}g&&(a(b.target).attr("tabIndex",-1),a(g).attr("tabIndex",0),g.focus(),b.preventDefault())}},_panelKeyDown:function(b){b.keyCode===a.ui.keyCode.UP&&b.ctrlKey&&a(b.currentTarget).prev().focus()},refresh:function(){var b=this.options;this._processPanels();if(!1===b.active&&!0===b.collapsible||!this.headers.length)b.active=
!1,this.active=a();!1===b.active?this._activate(0):this.active.length&&!a.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(b.active=!1,this.active=a()):this._activate(Math.max(0,b.active-1)):b.active=this.headers.index(this.active);this._destroyIcons();this._refresh()},_processPanels:function(){this.headers=this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()},
_refresh:function(){var b,c=this.options,h=c.heightStyle,d=this.element.parent(),g=this.accordionId="ui-accordion-"+(this.element.attr("id")||++j);this.active=this._findActive(c.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all");this.active.next().addClass("ui-accordion-content-active").show();this.headers.attr("role","tab").each(function(b){var d=a(this),c=d.attr("id"),e=d.next(),f=e.attr("id");c||(c=g+"-header-"+b,d.attr("id",c));f||(f=g+"-panel-"+
b,e.attr("id",f));d.attr("aria-controls",f);e.attr("aria-labelledby",c)}).next().attr("role","tabpanel");this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide();this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0);this._createIcons();this._setupEvents(c.event);"fill"===h?(b=d.height(),this.element.siblings(":visible").each(function(){var d=
a(this),c=d.css("position");"absolute"===c||"fixed"===c||(b-=d.outerHeight(!0))}),this.headers.each(function(){b-=a(this).outerHeight(!0)}),this.headers.next().each(function(){a(this).height(Math.max(0,b-a(this).innerHeight()+a(this).height()))}).css("overflow","auto")):"auto"===h&&(b=0,this.headers.next().each(function(){b=Math.max(b,a(this).css("height","").height())}).height(b))},_activate:function(b){b=this._findActive(b)[0];b!==this.active[0]&&(b=b||this.active[0],this._eventHandler({target:b,
currentTarget:b,preventDefault:a.noop}))},_findActive:function(b){return"number"===typeof b?this.headers.eq(b):a()},_setupEvents:function(b){var c={keydown:"_keydown"};b&&a.each(b.split(" "),function(a,b){c[b]="_eventHandler"});this._off(this.headers.add(this.headers.next()));this._on(this.headers,c);this._on(this.headers.next(),{keydown:"_panelKeyDown"});this._hoverable(this.headers);this._focusable(this.headers)},_eventHandler:function(b){var c=this.options,h=this.active,d=a(b.currentTarget),g=
d[0]===h[0],j=g&&c.collapsible,p=j?a():d.next(),r=h.next(),p={oldHeader:h,oldPanel:r,newHeader:j?a():d,newPanel:p};b.preventDefault();g&&!c.collapsible||!1===this._trigger("beforeActivate",b,p)||(c.active=j?!1:this.headers.index(d),this.active=g?a():d,this._toggle(p),h.removeClass("ui-accordion-header-active ui-state-active"),c.icons&&h.children(".ui-accordion-header-icon").removeClass(c.icons.activeHeader).addClass(c.icons.header),g||(d.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),
c.icons&&d.children(".ui-accordion-header-icon").removeClass(c.icons.header).addClass(c.icons.activeHeader),d.next().addClass("ui-accordion-content-active")))},_toggle:function(b){var c=b.newPanel,h=this.prevShow.length?this.prevShow:b.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0);this.prevShow=c;this.prevHide=h;this.options.animate?this._animate(c,h,b):(h.hide(),c.show(),this._toggleComplete(b));h.attr({"aria-expanded":"false","aria-hidden":"true"});h.prev().attr("aria-selected","false");
c.length&&h.length?h.prev().attr("tabIndex",-1):c.length&&this.headers.filter(function(){return 0===a(this).attr("tabIndex")}).attr("tabIndex",-1);c.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(a,e,h){var d,g,j,p=this,r=0,y=a.length&&(!e.length||a.index()<e.index()),t=this.options.animate||{},y=y&&t.down||t,q=function(){p._toggleComplete(h)};"number"===typeof y&&(j=y);"string"===typeof y&&(g=y);g=g||y.easing||t.easing;j=j||
y.duration||t.duration;if(!e.length)return a.animate(b,j,g,q);if(!a.length)return e.animate(c,j,g,q);d=a.show().outerHeight();e.animate(c,{duration:j,easing:g,step:function(a,b){b.now=Math.round(a)}});a.hide().animate(b,{duration:j,easing:g,complete:q,step:function(a,b){b.now=Math.round(a);"height"!==b.prop?r+=b.now:"content"!==p.options.heightStyle&&(b.now=Math.round(d-e.outerHeight()-r),r=0)}})},_toggleComplete:function(a){var b=a.oldPanel;b.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
b.length&&(b.parent()[0].className=b.parent()[0].className);this._trigger("activate",null,a)}})})(jQuery);
(function(a){var j=0;a.widget("ui.autocomplete",{version:"1.10.2",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var c,b,f,e=this.element[0].nodeName.toLowerCase(),h="textarea"===e,e="input"===e;this.isMultiLine=h?!0:e?!1:this.element.prop("isContentEditable");this.valueMethod=this.element[h||
e?"val":"text"];this.isNewMenu=!0;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off");this._on(this.element,{keydown:function(d){if(this.element.prop("readOnly"))b=f=c=!0;else{b=f=c=!1;var g=a.ui.keyCode;switch(d.keyCode){case g.PAGE_UP:c=!0;this._move("previousPage",d);break;case g.PAGE_DOWN:c=!0;this._move("nextPage",d);break;case g.UP:c=!0;this._keyEvent("previous",d);break;case g.DOWN:c=!0;this._keyEvent("next",d);break;case g.ENTER:case g.NUMPAD_ENTER:this.menu.active&&
(c=!0,d.preventDefault(),this.menu.select(d));break;case g.TAB:this.menu.active&&this.menu.select(d);break;case g.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(d),d.preventDefault());break;default:b=!0,this._searchTimeout(d)}}},keypress:function(d){if(c)c=!1,d.preventDefault();else if(!b){var g=a.ui.keyCode;switch(d.keyCode){case g.PAGE_UP:this._move("previousPage",d);break;case g.PAGE_DOWN:this._move("nextPage",d);break;case g.UP:this._keyEvent("previous",d);break;case g.DOWN:this._keyEvent("next",
d)}}},input:function(a){f?(f=!1,a.preventDefault()):this._searchTimeout(a)},focus:function(){this.selectedItem=null;this.previous=this._value()},blur:function(a){this.cancelBlur?delete this.cancelBlur:(clearTimeout(this.searching),this.close(a),this._change(a))}});this._initSource();this.menu=a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({input:a(),role:null}).hide().data("ui-menu");this._on(this.menu.element,{mousedown:function(b){b.preventDefault();this.cancelBlur=
!0;this._delay(function(){delete this.cancelBlur});var c=this.menu.element[0];a(b.target).closest(".ui-menu-item").length||this._delay(function(){var b=this;this.document.one("mousedown",function(d){d.target!==b.element[0]&&(d.target!==c&&!a.contains(c,d.target))&&b.close()})})},menufocus:function(b,c){if(this.isNewMenu&&(this.isNewMenu=!1,b.originalEvent&&/^mouse/.test(b.originalEvent.type))){this.menu.blur();this.document.one("mousemove",function(){a(b.target).trigger(b.originalEvent)});return}var e=
c.item.data("ui-autocomplete-item");!1!==this._trigger("focus",b,{item:e})?b.originalEvent&&/^key/.test(b.originalEvent.type)&&this._value(e.value):this.liveRegion.text(e.value)},menuselect:function(a,b){var c=b.item.data("ui-autocomplete-item"),e=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=e,this._delay(function(){this.previous=e;this.selectedItem=c}));!1!==this._trigger("select",a,{item:c})&&this._value(c.value);this.term=this._value();this.close(a);
this.selectedItem=c}});this.liveRegion=a("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element);this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching);this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");this.menu.element.remove();this.liveRegion.remove()},_setOption:function(a,b){this._super(a,b);"source"===a&&this._initSource();"appendTo"===
a&&this.menu.element.appendTo(this._appendTo());"disabled"===a&&(b&&this.xhr)&&this.xhr.abort()},_appendTo:function(){var c=this.options.appendTo;c&&(c=c.jquery||c.nodeType?a(c):this.document.find(c).eq(0));c||(c=this.element.closest(".ui-front"));c.length||(c=this.document[0].body);return c},_initSource:function(){var c,b,f=this;a.isArray(this.options.source)?(c=this.options.source,this.source=function(b,f){f(a.ui.autocomplete.filter(c,b.term))}):"string"===typeof this.options.source?(b=this.options.source,
this.source=function(c,h){f.xhr&&f.xhr.abort();f.xhr=a.ajax({url:b,data:c,dataType:"json",success:function(a){h(a)},error:function(){h([])}})}):this.source=this.options.source},_searchTimeout:function(a){clearTimeout(this.searching);this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,a))},this.options.delay)},search:function(a,b){a=null!=a?a:this._value();this.term=this._value();if(a.length<this.options.minLength)return this.close(b);if(!1!==this._trigger("search",
b))return this._search(a)},_search:function(a){this.pending++;this.element.addClass("ui-autocomplete-loading");this.cancelSearch=!1;this.source({term:a},this._response())},_response:function(){var a=this,b=++j;return function(f){b===j&&a.__response(f);a.pending--;a.pending||a.element.removeClass("ui-autocomplete-loading")}},__response:function(a){a&&(a=this._normalize(a));this._trigger("response",null,{content:a});!this.options.disabled&&a&&a.length&&!this.cancelSearch?(this._suggest(a),this._trigger("open")):
this._close()},close:function(a){this.cancelSearch=!0;this._close(a)},_close:function(a){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",a))},_change:function(a){this.previous!==this._value()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(c){return c.length&&c[0].label&&c[0].value?c:a.map(c,function(b){return"string"===typeof b?{label:b,value:b}:a.extend({label:b.label||b.value,value:b.value||b.label},b)})},
_suggest:function(c){var b=this.menu.element.empty();this._renderMenu(b,c);this.isNewMenu=!0;this.menu.refresh();b.show();this._resizeMenu();b.position(a.extend({of:this.element},this.options.position));this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var a=this.menu.element;a.outerWidth(Math.max(a.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(c,b){var f=this;a.each(b,function(a,b){f._renderItemData(c,b)})},_renderItemData:function(a,b){return this._renderItem(a,
b).data("ui-autocomplete-item",b)},_renderItem:function(c,b){return a("<li>").append(a("<a>").text(b.label)).appendTo(c)},_move:function(a,b){if(this.menu.element.is(":visible"))if(this.menu.isFirstItem()&&/^previous/.test(a)||this.menu.isLastItem()&&/^next/.test(a))this._value(this.term),this.menu.blur();else this.menu[a](b);else this.search(null,b)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(a,b){if(!this.isMultiLine||
this.menu.element.is(":visible"))this._move(a,b),b.preventDefault()}});a.extend(a.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(c,b){var f=RegExp(a.ui.autocomplete.escapeRegex(b),"i");return a.grep(c,function(a){return f.test(a.label||a.value||a)})}});a.widget("ui.autocomplete",a.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(a){return a+(1<a?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},
__response:function(a){var b;this._superApply(arguments);!this.options.disabled&&!this.cancelSearch&&(b=a&&a.length?this.options.messages.results(a.length):this.options.messages.noResults,this.liveRegion.text(b))}})})(jQuery);
(function(a){var j,c,b,f,e=function(){var b=a(this).find(":ui-button");setTimeout(function(){b.button("refresh")},1)},h=function(b){var c=b.name,e=b.form,f=a([]);c&&(c=c.replace(/'/g,"\\'"),f=e?a(e).find("[name='"+c+"']"):a("[name='"+c+"']",b.ownerDocument).filter(function(){return!this.form}));return f};a.widget("ui.button",{version:"1.10.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+
this.eventNamespace).bind("reset"+this.eventNamespace,e);"boolean"!==typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled);this._determineButtonType();this.hasTitle=!!this.buttonElement.attr("title");var d=this,g=this.options,m="checkbox"===this.type||"radio"===this.type,p=!m?"ui-state-active":"";null===g.label&&(g.label="input"===this.type?this.buttonElement.val():this.buttonElement.html());this._hoverable(this.buttonElement);
this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role","button").bind("mouseenter"+this.eventNamespace,function(){g.disabled||this===j&&a(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){g.disabled||a(this).removeClass(p)}).bind("click"+this.eventNamespace,function(a){g.disabled&&(a.preventDefault(),a.stopImmediatePropagation())});this.element.bind("focus"+this.eventNamespace,function(){d.buttonElement.addClass("ui-state-focus")}).bind("blur"+
this.eventNamespace,function(){d.buttonElement.removeClass("ui-state-focus")});m&&(this.element.bind("change"+this.eventNamespace,function(){f||d.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(a){g.disabled||(f=!1,c=a.pageX,b=a.pageY)}).bind("mouseup"+this.eventNamespace,function(a){if(!g.disabled&&(c!==a.pageX||b!==a.pageY))f=!0}));"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(g.disabled||f)return!1}):"radio"===this.type?this.buttonElement.bind("click"+
this.eventNamespace,function(){if(g.disabled||f)return!1;a(this).addClass("ui-state-active");d.buttonElement.attr("aria-pressed","true");var b=d.element[0];h(b).not(b).map(function(){return a(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){if(g.disabled)return!1;a(this).addClass("ui-state-active");j=this;d.document.one("mouseup",function(){j=null})}).bind("mouseup"+this.eventNamespace,function(){if(g.disabled)return!1;
a(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(b){if(g.disabled)return!1;(b.keyCode===a.ui.keyCode.SPACE||b.keyCode===a.ui.keyCode.ENTER)&&a(this).addClass("ui-state-active")}).bind("keyup"+this.eventNamespace+" blur"+this.eventNamespace,function(){a(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(b){b.keyCode===a.ui.keyCode.SPACE&&a(this).click()}));this._setOption("disabled",g.disabled);this._resetButton()},
_determineButtonType:function(){var a,b;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button";"checkbox"===this.type||"radio"===this.type?(a=this.element.parents().last(),b="label[for='"+this.element.attr("id")+"']",this.buttonElement=a.find(b),this.buttonElement.length||(a=a.length?a.siblings():this.element.siblings(),this.buttonElement=a.filter(b),this.buttonElement.length||(this.buttonElement=a.find(b))),this.element.addClass("ui-helper-hidden-accessible"),
(a=this.element.is(":checked"))&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",a)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible");this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(a,b){this._super(a,b);"disabled"===a?b?this.element.prop("disabled",!0):this.element.prop("disabled",!1):this._resetButton()},refresh:function(){var b=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");b!==this.options.disabled&&this._setOption("disabled",b);"radio"===this.type?h(this.element[0]).each(function(){a(this).is(":checked")?a(this).button("widget").addClass("ui-state-active").attr("aria-pressed",
"true"):a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)this.options.label&&this.element.val(this.options.label);else{var b=this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
c=a("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),e=this.options.icons,f=e.primary&&e.secondary,h=[];e.primary||e.secondary?(this.options.text&&h.push("ui-button-text-icon"+(f?"s":e.primary?"-primary":"-secondary")),e.primary&&b.prepend("<span class='ui-button-icon-primary ui-icon "+e.primary+"'></span>"),e.secondary&&b.append("<span class='ui-button-icon-secondary ui-icon "+e.secondary+"'></span>"),this.options.text||(h.push(f?"ui-button-icons-only":
"ui-button-icon-only"),this.hasTitle||b.attr("title",a.trim(c)))):h.push("ui-button-text-only");b.addClass(h.join(" "))}}});a.widget("ui.buttonset",{version:"1.10.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(a,b){"disabled"===a&&this.buttons.button("option",a,b);this._super(a,b)},refresh:function(){var b=
"rtl"===this.element.css("direction");this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(b?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset");this.buttons.map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);
(function(a,j){function c(){this._curInst=null;this._keyEvent=!1;this._disabledInputs=[];this._inDialog=this._datepickerShowing=!1;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";
this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:"January February March April May June July August September October November December".split(" "),monthNamesShort:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),dayNames:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),dayNamesShort:"Sun Mon Tue Wed Thu Fri Sat".split(" "),dayNamesMin:"Su Mo Tu We Th Fr Sa".split(" "),weekHeader:"Wk",dateFormat:"mm/dd/yy",
firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,
onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1};a.extend(this._defaults,this.regional[""]);this.dpDiv=b(a("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function b(b){return b.delegate("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a","mouseout",function(){a(this).removeClass("ui-state-hover");
-1!==this.className.indexOf("ui-datepicker-prev")&&a(this).removeClass("ui-datepicker-prev-hover");-1!==this.className.indexOf("ui-datepicker-next")&&a(this).removeClass("ui-datepicker-next-hover")}).delegate("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a","mouseover",function(){if(!a.datepicker._isDisabledDatepicker(h.inline?b.parent()[0]:h.input[0]))a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),a(this).addClass("ui-state-hover"),
-1!==this.className.indexOf("ui-datepicker-prev")&&a(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&a(this).addClass("ui-datepicker-next-hover")})}function f(b,c){a.extend(b,c);for(var e in c)null==c[e]&&(b[e]=c[e]);return b}a.extend(a.ui,{datepicker:{version:"1.10.2"}});var e=(new Date).getTime(),h;a.extend(c.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(a){f(this._defaults,
a||{});return this},_attachDatepicker:function(b,c){var e,f,h;e=b.nodeName.toLowerCase();f="div"===e||"span"===e;b.id||(this.uuid+=1,b.id="dp"+this.uuid);h=this._newInst(a(b),f);h.settings=a.extend({},c||{});"input"===e?this._connectDatepicker(b,h):f&&this._inlineDatepicker(b,h)},_newInst:function(d,c){return{id:d[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1"),input:d,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:c,dpDiv:!c?this.dpDiv:b(a("<div class='"+this._inlineClass+
" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}},_connectDatepicker:function(b,c){var e=a(b);c.append=a([]);c.trigger=a([]);e.hasClass(this.markerClassName)||(this._attachments(e,c),e.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(c),a.data(b,"datepicker",c),c.settings.disabled&&this._disableDatepicker(b))},_attachments:function(b,c){var e,f;e=this._get(c,"appendText");var h=this._get(c,
"isRTL");c.append&&c.append.remove();e&&(c.append=a("<span class='"+this._appendClass+"'>"+e+"</span>"),b[h?"before":"after"](c.append));b.unbind("focus",this._showDatepicker);c.trigger&&c.trigger.remove();e=this._get(c,"showOn");("focus"===e||"both"===e)&&b.focus(this._showDatepicker);if("button"===e||"both"===e)e=this._get(c,"buttonText"),f=this._get(c,"buttonImage"),c.trigger=a(this._get(c,"buttonImageOnly")?a("<img/>").addClass(this._triggerClass).attr({src:f,alt:e,title:e}):a("<button type='button'></button>").addClass(this._triggerClass).html(!f?
e:a("<img/>").attr({src:f,alt:e,title:e}))),b[h?"before":"after"](c.trigger),c.trigger.click(function(){a.datepicker._datepickerShowing&&a.datepicker._lastInput===b[0]?a.datepicker._hideDatepicker():(a.datepicker._datepickerShowing&&a.datepicker._lastInput!==b[0]&&a.datepicker._hideDatepicker(),a.datepicker._showDatepicker(b[0]));return!1})},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b,c,e,f,h=new Date(2009,11,20),j=this._get(a,"dateFormat");j.match(/[DM]/)&&(b=function(a){for(f=
e=c=0;f<a.length;f++)a[f].length>c&&(c=a[f].length,e=f);return e},h.setMonth(b(this._get(a,j.match(/MM/)?"monthNames":"monthNamesShort"))),h.setDate(b(this._get(a,j.match(/DD/)?"dayNames":"dayNamesShort"))+20-h.getDay()));a.input.attr("size",this._formatDate(a,h).length)}},_inlineDatepicker:function(b,c){var e=a(b);e.hasClass(this.markerClassName)||(e.addClass(this.markerClassName).append(c.dpDiv),a.data(b,"datepicker",c),this._setDate(c,this._getDefaultDate(c),!0),this._updateDatepicker(c),this._updateAlternate(c),
c.settings.disabled&&this._disableDatepicker(b),c.dpDiv.css("display","block"))},_dialogDatepicker:function(b,c,e,h,j){var y;b=this._dialogInst;b||(this.uuid+=1,b="dp"+this.uuid,this._dialogInput=a("<input type='text' id='"+b+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),a("body").append(this._dialogInput),b=this._dialogInst=this._newInst(this._dialogInput,!1),b.settings={},a.data(this._dialogInput[0],"datepicker",b));f(b.settings,h||{});c=
c&&c.constructor===Date?this._formatDate(b,c):c;this._dialogInput.val(c);this._pos=j?j.length?j:[j.pageX,j.pageY]:null;this._pos||(c=document.documentElement.clientWidth,h=document.documentElement.clientHeight,j=document.documentElement.scrollLeft||document.body.scrollLeft,y=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[c/2-100+j,h/2-150+y]);this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px");b.settings.onSelect=e;this._inDialog=!0;this.dpDiv.addClass(this._dialogClass);
this._showDatepicker(this._dialogInput[0]);a.blockUI&&a.blockUI(this.dpDiv);a.data(this._dialogInput[0],"datepicker",b);return this},_destroyDatepicker:function(b){var c,e=a(b),f=a.data(b,"datepicker");e.hasClass(this.markerClassName)&&(c=b.nodeName.toLowerCase(),a.removeData(b,"datepicker"),"input"===c?(f.append.remove(),f.trigger.remove(),e.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",
this._doKeyUp)):("div"===c||"span"===c)&&e.removeClass(this.markerClassName).empty())},_enableDatepicker:function(b){var c,e=a(b),f=a.data(b,"datepicker");if(e.hasClass(this.markerClassName)){c=b.nodeName.toLowerCase();if("input"===c)b.disabled=!1,f.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"===c||"span"===c)c=e.children("."+this._inlineClass),c.children().removeClass("ui-state-disabled"),c.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",
!1);this._disabledInputs=a.map(this._disabledInputs,function(a){return a===b?null:a})}},_disableDatepicker:function(b){var c,e=a(b),f=a.data(b,"datepicker");if(e.hasClass(this.markerClassName)){c=b.nodeName.toLowerCase();if("input"===c)b.disabled=!0,f.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"===c||"span"===c)c=e.children("."+this._inlineClass),c.children().addClass("ui-state-disabled"),c.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",
!0);this._disabledInputs=a.map(this._disabledInputs,function(a){return a===b?null:a});this._disabledInputs[this._disabledInputs.length]=b}},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]===a)return!0;return!1},_getInst:function(b){try{return a.data(b,"datepicker")}catch(c){throw"Missing instance data for this datepicker";}},_optionDatepicker:function(b,c,e){var h,r,y,t,q=this._getInst(b);if(2===arguments.length&&"string"===
typeof c)return"defaults"===c?a.extend({},a.datepicker._defaults):q?"all"===c?a.extend({},q.settings):this._get(q,c):null;h=c||{};"string"===typeof c&&(h={},h[c]=e);q&&(this._curInst===q&&this._hideDatepicker(),r=this._getDateDatepicker(b,!0),y=this._getMinMaxDate(q,"min"),t=this._getMinMaxDate(q,"max"),f(q.settings,h),null!==y&&(h.dateFormat!==j&&h.minDate===j)&&(q.settings.minDate=this._formatDate(q,y)),null!==t&&(h.dateFormat!==j&&h.maxDate===j)&&(q.settings.maxDate=this._formatDate(q,t)),"disabled"in
h&&(h.disabled?this._disableDatepicker(b):this._enableDatepicker(b)),this._attachments(a(b),q),this._autoSize(q),this._setDate(q,r),this._updateAlternate(q),this._updateDatepicker(q))},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){(a=this._getInst(a))&&this._updateDatepicker(a)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=
this._getInst(a);c&&!c.inline&&this._setDateFromField(c,b);return c?this._getDate(c):null},_doKeyDown:function(b){var c,e=a.datepicker._getInst(b.target);c=!0;var f=e.dpDiv.is(".ui-datepicker-rtl");e._keyEvent=!0;if(a.datepicker._datepickerShowing)switch(b.keyCode){case 9:a.datepicker._hideDatepicker();c=!1;break;case 13:return c=a("td."+a.datepicker._dayOverClass+":not(."+a.datepicker._currentClass+")",e.dpDiv),c[0]&&a.datepicker._selectDay(b.target,e.selectedMonth,e.selectedYear,c[0]),(b=a.datepicker._get(e,
"onSelect"))?(c=a.datepicker._formatDate(e),b.apply(e.input?e.input[0]:null,[c,e])):a.datepicker._hideDatepicker(),!1;case 27:a.datepicker._hideDatepicker();break;case 33:a.datepicker._adjustDate(b.target,b.ctrlKey?-a.datepicker._get(e,"stepBigMonths"):-a.datepicker._get(e,"stepMonths"),"M");break;case 34:a.datepicker._adjustDate(b.target,b.ctrlKey?+a.datepicker._get(e,"stepBigMonths"):+a.datepicker._get(e,"stepMonths"),"M");break;case 35:(b.ctrlKey||b.metaKey)&&a.datepicker._clearDate(b.target);
c=b.ctrlKey||b.metaKey;break;case 36:(b.ctrlKey||b.metaKey)&&a.datepicker._gotoToday(b.target);c=b.ctrlKey||b.metaKey;break;case 37:if(b.ctrlKey||b.metaKey)a.datepicker._adjustDate(b.target,f?1:-1,"D");c=b.ctrlKey||b.metaKey;b.originalEvent.altKey&&a.datepicker._adjustDate(b.target,b.ctrlKey?-a.datepicker._get(e,"stepBigMonths"):-a.datepicker._get(e,"stepMonths"),"M");break;case 38:(b.ctrlKey||b.metaKey)&&a.datepicker._adjustDate(b.target,-7,"D");c=b.ctrlKey||b.metaKey;break;case 39:if(b.ctrlKey||
b.metaKey)a.datepicker._adjustDate(b.target,f?-1:1,"D");c=b.ctrlKey||b.metaKey;b.originalEvent.altKey&&a.datepicker._adjustDate(b.target,b.ctrlKey?+a.datepicker._get(e,"stepBigMonths"):+a.datepicker._get(e,"stepMonths"),"M");break;case 40:(b.ctrlKey||b.metaKey)&&a.datepicker._adjustDate(b.target,7,"D");c=b.ctrlKey||b.metaKey;break;default:c=!1}else 36===b.keyCode&&b.ctrlKey?a.datepicker._showDatepicker(this):c=!1;c&&(b.preventDefault(),b.stopPropagation())},_doKeyPress:function(b){var c,e;c=a.datepicker._getInst(b.target);
if(a.datepicker._get(c,"constrainInput"))return c=a.datepicker._possibleChars(a.datepicker._get(c,"dateFormat")),e=String.fromCharCode(null==b.charCode?b.keyCode:b.charCode),b.ctrlKey||b.metaKey||" ">e||!c||-1<c.indexOf(e)},_doKeyUp:function(b){var c;b=a.datepicker._getInst(b.target);if(b.input.val()!==b.lastVal)try{if(c=a.datepicker.parseDate(a.datepicker._get(b,"dateFormat"),b.input?b.input.val():null,a.datepicker._getFormatConfig(b)))a.datepicker._setDateFromField(b),a.datepicker._updateAlternate(b),
a.datepicker._updateDatepicker(b)}catch(e){}return!0},_showDatepicker:function(b){b=b.target||b;"input"!==b.nodeName.toLowerCase()&&(b=a("input",b.parentNode)[0]);if(!(a.datepicker._isDisabledDatepicker(b)||a.datepicker._lastInput===b)){var c,e,h,j;c=a.datepicker._getInst(b);a.datepicker._curInst&&a.datepicker._curInst!==c&&(a.datepicker._curInst.dpDiv.stop(!0,!0),c&&a.datepicker._datepickerShowing&&a.datepicker._hideDatepicker(a.datepicker._curInst.input[0]));e=(e=a.datepicker._get(c,"beforeShow"))?
e.apply(b,[b,c]):{};if(!1!==e&&(f(c.settings,e),c.lastVal=null,a.datepicker._lastInput=b,a.datepicker._setDateFromField(c),a.datepicker._inDialog&&(b.value=""),a.datepicker._pos||(a.datepicker._pos=a.datepicker._findPos(b),a.datepicker._pos[1]+=b.offsetHeight),h=!1,a(b).parents().each(function(){h|="fixed"===a(this).css("position");return!h}),e={left:a.datepicker._pos[0],top:a.datepicker._pos[1]},a.datepicker._pos=null,c.dpDiv.empty(),c.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),
a.datepicker._updateDatepicker(c),e=a.datepicker._checkOffset(c,e,h),c.dpDiv.css({position:a.datepicker._inDialog&&a.blockUI?"static":h?"fixed":"absolute",display:"none",left:e.left+"px",top:e.top+"px"}),!c.inline)){e=a.datepicker._get(c,"showAnim");j=a.datepicker._get(c,"duration");c.dpDiv.zIndex(a(b).zIndex()+1);a.datepicker._datepickerShowing=!0;if(a.effects&&a.effects.effect[e])c.dpDiv.show(e,a.datepicker._get(c,"showOptions"),j);else c.dpDiv[e||"show"](e?j:null);c.input.is(":visible")&&!c.input.is(":disabled")&&
c.input.focus();a.datepicker._curInst=c}}},_updateDatepicker:function(b){this.maxRows=4;h=b;b.dpDiv.empty().append(this._generateHTML(b));this._attachHandlers(b);b.dpDiv.find("."+this._dayOverClass+" a").mouseover();var c,e=this._getNumberOfMonths(b),f=e[1];b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");1<f&&b.dpDiv.addClass("ui-datepicker-multi-"+f).css("width",17*f+"em");b.dpDiv[(1!==e[0]||1!==e[1]?"add":"remove")+"Class"]("ui-datepicker-multi");
b.dpDiv[(this._get(b,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");b===a.datepicker._curInst&&(a.datepicker._datepickerShowing&&b.input&&b.input.is(":visible")&&!b.input.is(":disabled")&&b.input[0]!==document.activeElement)&&b.input.focus();b.yearshtml&&(c=b.yearshtml,setTimeout(function(){c===b.yearshtml&&b.yearshtml&&b.dpDiv.find("select.ui-datepicker-year:first").replaceWith(b.yearshtml);c=b.yearshtml=null},0))},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||
a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(b,c,e){var f=b.dpDiv.outerWidth(),h=b.dpDiv.outerHeight(),j=b.input?b.input.outerWidth():0,t=b.input?b.input.outerHeight():0,q=document.documentElement.clientWidth+(e?0:a(document).scrollLeft()),u=document.documentElement.clientHeight+(e?0:a(document).scrollTop());c.left-=this._get(b,"isRTL")?f-j:0;c.left-=e&&c.left===b.input.offset().left?a(document).scrollLeft():0;c.top-=e&&c.top===
b.input.offset().top+t?a(document).scrollTop():0;c.left-=Math.min(c.left,c.left+f>q&&q>f?Math.abs(c.left+f-q):0);c.top-=Math.min(c.top,c.top+h>u&&u>h?Math.abs(h+t):0);return c},_findPos:function(b){for(var c=this._getInst(b),c=this._get(c,"isRTL");b&&("hidden"===b.type||1!==b.nodeType||a.expr.filters.hidden(b));)b=b[c?"previousSibling":"nextSibling"];b=a(b).offset();return[b.left,b.top]},_hideDatepicker:function(b){var c,e,f=this._curInst;if(f&&!(b&&f!==a.data(b,"datepicker"))&&this._datepickerShowing){b=
this._get(f,"showAnim");c=this._get(f,"duration");e=function(){a.datepicker._tidyDialog(f)};if(a.effects&&(a.effects.effect[b]||a.effects[b]))f.dpDiv.hide(b,a.datepicker._get(f,"showOptions"),c,e);else f.dpDiv["slideDown"===b?"slideUp":"fadeIn"===b?"fadeOut":"hide"](b?c:null,e);b||e();this._datepickerShowing=!1;(b=this._get(f,"onClose"))&&b.apply(f.input?f.input[0]:null,[f.input?f.input.val():"",f]);this._lastInput=null;this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),
a.blockUI&&(a.unblockUI(),a("body").append(this.dpDiv)));this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(b){if(a.datepicker._curInst){b=a(b.target);var c=a.datepicker._getInst(b[0]);(b[0].id!==a.datepicker._mainDivId&&0===b.parents("#"+a.datepicker._mainDivId).length&&!b.hasClass(a.datepicker.markerClassName)&&!b.closest("."+a.datepicker._triggerClass).length&&a.datepicker._datepickerShowing&&(!a.datepicker._inDialog||
!a.blockUI)||b.hasClass(a.datepicker.markerClassName)&&a.datepicker._curInst!==c)&&a.datepicker._hideDatepicker()}},_adjustDate:function(b,c,e){b=a(b);var f=this._getInst(b[0]);this._isDisabledDatepicker(b[0])||(this._adjustInstDate(f,c+("M"===e?this._get(f,"showCurrentAtPos"):0),e),this._updateDatepicker(f))},_gotoToday:function(b){var c=a(b),e=this._getInst(c[0]);this._get(e,"gotoCurrent")&&e.currentDay?(e.selectedDay=e.currentDay,e.drawMonth=e.selectedMonth=e.currentMonth,e.drawYear=e.selectedYear=
e.currentYear):(b=new Date,e.selectedDay=b.getDate(),e.drawMonth=e.selectedMonth=b.getMonth(),e.drawYear=e.selectedYear=b.getFullYear());this._notifyChange(e);this._adjustDate(c)},_selectMonthYear:function(b,c,e){b=a(b);var f=this._getInst(b[0]);f["selected"+("M"===e?"Month":"Year")]=f["draw"+("M"===e?"Month":"Year")]=parseInt(c.options[c.selectedIndex].value,10);this._notifyChange(f);this._adjustDate(b)},_selectDay:function(b,c,e,f){var h;h=a(b);!a(f).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(h[0])&&
(h=this._getInst(h[0]),h.selectedDay=h.currentDay=a("a",f).html(),h.selectedMonth=h.currentMonth=c,h.selectedYear=h.currentYear=e,this._selectDate(b,this._formatDate(h,h.currentDay,h.currentMonth,h.currentYear)))},_clearDate:function(b){b=a(b);this._selectDate(b,"")},_selectDate:function(b,c){var e;e=a(b);var f=this._getInst(e[0]);c=null!=c?c:this._formatDate(f);f.input&&f.input.val(c);this._updateAlternate(f);(e=this._get(f,"onSelect"))?e.apply(f.input?f.input[0]:null,[c,f]):f.input&&f.input.trigger("change");
f.inline?this._updateDatepicker(f):(this._hideDatepicker(),this._lastInput=f.input[0],"object"!==typeof f.input[0]&&f.input.focus(),this._lastInput=null)},_updateAlternate:function(b){var c,e,f,h=this._get(b,"altField");h&&(c=this._get(b,"altFormat")||this._get(b,"dateFormat"),e=this._getDate(b),f=this.formatDate(c,e,this._getFormatConfig(b)),a(h).each(function(){a(this).val(f)}))},noWeekends:function(a){a=a.getDay();return[0<a&&6>a,""]},iso8601Week:function(a){var b=new Date(a.getTime());b.setDate(b.getDate()+
4-(b.getDay()||7));a=b.getTime();b.setMonth(0);b.setDate(1);return Math.floor(Math.round((a-b)/864E5)/7)+1},parseDate:function(b,c,e){if(null==b||null==c)throw"Invalid arguments";c="object"===typeof c?c.toString():c+"";if(""===c)return null;var f,h,j,t=0;h=(e?e.shortYearCutoff:null)||this._defaults.shortYearCutoff;h="string"!==typeof h?h:(new Date).getFullYear()%100+parseInt(h,10);j=(e?e.dayNamesShort:null)||this._defaults.dayNamesShort;var q=(e?e.dayNames:null)||this._defaults.dayNames,u=(e?e.monthNamesShort:
null)||this._defaults.monthNamesShort,s=(e?e.monthNames:null)||this._defaults.monthNames,w=e=-1,B=-1,C=-1,E=!1,z,D=function(a){(a=f+1<b.length&&b.charAt(f+1)===a)&&f++;return a},L=function(a){var b=D(a);a=RegExp("^\\d{1,"+("@"===a?14:"!"===a?20:"y"===a&&b?4:"o"===a?3:2)+"}");a=c.substring(t).match(a);if(!a)throw"Missing number at position "+t;t+=a[0].length;return parseInt(a[0],10)},X=function(b,d,e){var f=-1;b=a.map(D(b)?e:d,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)});
a.each(b,function(a,b){var d=b[1];if(c.substr(t,d.length).toLowerCase()===d.toLowerCase())return f=b[0],t+=d.length,!1});if(-1!==f)return f+1;throw"Unknown name at position "+t;},A=function(){if(c.charAt(t)!==b.charAt(f))throw"Unexpected literal at position "+t;t++};for(f=0;f<b.length;f++)if(E)"'"===b.charAt(f)&&!D("'")?E=!1:A();else switch(b.charAt(f)){case "d":B=L("d");break;case "D":X("D",j,q);break;case "o":C=L("o");break;case "m":w=L("m");break;case "M":w=X("M",u,s);break;case "y":e=L("y");break;
case "@":z=new Date(L("@"));e=z.getFullYear();w=z.getMonth()+1;B=z.getDate();break;case "!":z=new Date((L("!")-this._ticksTo1970)/1E4);e=z.getFullYear();w=z.getMonth()+1;B=z.getDate();break;case "'":D("'")?A():E=!0;break;default:A()}if(t<c.length&&(j=c.substr(t),!/^\s+/.test(j)))throw"Extra/unparsed characters found in date: "+j;-1===e?e=(new Date).getFullYear():100>e&&(e+=(new Date).getFullYear()-(new Date).getFullYear()%100+(e<=h?0:-100));if(-1<C){w=1;B=C;do{h=this._getDaysInMonth(e,w-1);if(B<=
h)break;w++;B-=h}while(1)}z=this._daylightSavingAdjust(new Date(e,w-1,B));if(z.getFullYear()!==e||z.getMonth()+1!==w||z.getDate()!==B)throw"Invalid date";return z},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864E9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(a,b,c){if(!b)return"";var e,
f=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,h=(c?c.dayNames:null)||this._defaults.dayNames,j=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort;c=(c?c.monthNames:null)||this._defaults.monthNames;var q=function(b){(b=e+1<a.length&&a.charAt(e+1)===b)&&e++;return b},u=function(a,b,c){b=""+b;if(q(a))for(;b.length<c;)b="0"+b;return b},s="",w=!1;if(b)for(e=0;e<a.length;e++)if(w)"'"===a.charAt(e)&&!q("'")?w=!1:s+=a.charAt(e);else switch(a.charAt(e)){case "d":s+=u("d",b.getDate(),2);
break;case "D":var B;B=b.getDay();var C=f,E=h;B=q("D")?E[B]:C[B];s+=B;break;case "o":s+=u("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-(new Date(b.getFullYear(),0,0)).getTime())/864E5),3);break;case "m":s+=u("m",b.getMonth()+1,2);break;case "M":B=b.getMonth();C=j;E=c;B=q("M")?E[B]:C[B];s+=B;break;case "y":s+=q("y")?b.getFullYear():(10>b.getYear()%100?"0":"")+b.getYear()%100;break;case "@":s+=b.getTime();break;case "!":s+=1E4*b.getTime()+this._ticksTo1970;break;case "'":q("'")?
s+="'":w=!0;break;default:s+=a.charAt(e)}return s},_possibleChars:function(a){var b,c="",e=!1,f=function(c){(c=b+1<a.length&&a.charAt(b+1)===c)&&b++;return c};for(b=0;b<a.length;b++)if(e)"'"===a.charAt(b)&&!f("'")?e=!1:c+=a.charAt(b);else switch(a.charAt(b)){case "d":case "m":case "y":case "@":c+="0123456789";break;case "D":case "M":return null;case "'":f("'")?c+="'":e=!0;break;default:c+=a.charAt(b)}return c},_get:function(a,b){return a.settings[b]!==j?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,
b){if(a.input.val()!==a.lastVal){var c=this._get(a,"dateFormat"),e=a.lastVal=a.input?a.input.val():null,f=this._getDefaultDate(a),h=f,j=this._getFormatConfig(a);try{h=this.parseDate(c,e,j)||f}catch(q){e=b?"":e}a.selectedDay=h.getDate();a.drawMonth=a.selectedMonth=h.getMonth();a.drawYear=a.selectedYear=h.getFullYear();a.currentDay=e?h.getDate():0;a.currentMonth=e?h.getMonth():0;a.currentYear=e?h.getFullYear():0;this._adjustInstDate(a)}},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,
this._get(a,"defaultDate"),new Date))},_determineDate:function(b,c,e){if(null==c||""===c)c=e;else{var f;if("string"===typeof c)a:{try{f=a.datepicker.parseDate(a.datepicker._get(b,"dateFormat"),c,a.datepicker._getFormatConfig(b));break a}catch(h){}var j=(c.toLowerCase().match(/^c/)?a.datepicker._getDate(b):null)||new Date;b=j.getFullYear();f=j.getMonth();for(var j=j.getDate(),t=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,q=t.exec(c);q;){switch(q[2]||"d"){case "d":case "D":j+=parseInt(q[1],10);break;case "w":case "W":j+=
7*parseInt(q[1],10);break;case "m":case "M":f+=parseInt(q[1],10);j=Math.min(j,a.datepicker._getDaysInMonth(b,f));break;case "y":case "Y":b+=parseInt(q[1],10),j=Math.min(j,a.datepicker._getDaysInMonth(b,f))}q=t.exec(c)}f=new Date(b,f,j)}else"number"===typeof c?isNaN(c)?c=e:(b=new Date,b.setDate(b.getDate()+c),c=b):c=new Date(c.getTime()),f=c;c=f}if(c=c&&"Invalid Date"===c.toString()?e:c)c.setHours(0),c.setMinutes(0),c.setSeconds(0),c.setMilliseconds(0);return this._daylightSavingAdjust(c)},_daylightSavingAdjust:function(a){if(!a)return null;
a.setHours(12<a.getHours()?a.getHours()+2:0);return a},_setDate:function(a,b,c){var e=!b,f=a.selectedMonth,h=a.selectedYear;b=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();(f!==a.selectedMonth||h!==a.selectedYear)&&!c&&this._notifyChange(a);this._adjustInstDate(a);a.input&&a.input.val(e?"":this._formatDate(a))},_getDate:function(a){return!a.currentYear||
a.input&&""===a.input.val()?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay))},_attachHandlers:function(b){var c=this._get(b,"stepMonths"),f="#"+b.id.replace(/\\\\/g,"\\");b.dpDiv.find("[data-handler]").map(function(){a(this).bind(this.getAttribute("data-event"),{prev:function(){window["DP_jQuery_"+e].datepicker._adjustDate(f,-c,"M")},next:function(){window["DP_jQuery_"+e].datepicker._adjustDate(f,+c,"M")},hide:function(){window["DP_jQuery_"+e].datepicker._hideDatepicker()},
today:function(){window["DP_jQuery_"+e].datepicker._gotoToday(f)},selectDay:function(){window["DP_jQuery_"+e].datepicker._selectDay(f,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this);return!1},selectMonth:function(){window["DP_jQuery_"+e].datepicker._selectMonthYear(f,this,"M");return!1},selectYear:function(){window["DP_jQuery_"+e].datepicker._selectMonthYear(f,this,"Y");return!1}}[this.getAttribute("data-handler")])})},_generateHTML:function(a){var b,c,e,f,h,j,q,u,s,w,B,C,E,
z,D,L,X,A,H,k,U,x,ha,ua,za,l,ia,aa=new Date,aa=this._daylightSavingAdjust(new Date(aa.getFullYear(),aa.getMonth(),aa.getDate())),la=this._get(a,"isRTL");j=this._get(a,"showButtonPanel");e=this._get(a,"hideIfNoPrevNext");h=this._get(a,"navigationAsDateFormat");var da=this._getNumberOfMonths(a),S=this._get(a,"showCurrentAtPos");f=this._get(a,"stepMonths");var na=1!==da[0]||1!==da[1],R=this._daylightSavingAdjust(!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)),ba=
this._getMinMaxDate(a,"min"),Aa=this._getMinMaxDate(a,"max"),S=a.drawMonth-S,$=a.drawYear;0>S&&(S+=12,$--);if(Aa){b=this._daylightSavingAdjust(new Date(Aa.getFullYear(),Aa.getMonth()-da[0]*da[1]+1,Aa.getDate()));for(b=ba&&b<ba?ba:b;this._daylightSavingAdjust(new Date($,S,1))>b;)S--,0>S&&(S=11,$--)}a.drawMonth=S;a.drawYear=$;b=this._get(a,"prevText");b=!h?b:this.formatDate(b,this._daylightSavingAdjust(new Date($,S-f,1)),this._getFormatConfig(a));b=this._canAdjustMonth(a,-1,$,S)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+
b+"'><span class='ui-icon ui-icon-circle-triangle-"+(la?"e":"w")+"'>"+b+"</span></a>":e?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+b+"'><span class='ui-icon ui-icon-circle-triangle-"+(la?"e":"w")+"'>"+b+"</span></a>";c=this._get(a,"nextText");c=!h?c:this.formatDate(c,this._daylightSavingAdjust(new Date($,S+f,1)),this._getFormatConfig(a));e=this._canAdjustMonth(a,1,$,S)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+c+"'><span class='ui-icon ui-icon-circle-triangle-"+
(la?"w":"e")+"'>"+c+"</span></a>":e?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+c+"'><span class='ui-icon ui-icon-circle-triangle-"+(la?"w":"e")+"'>"+c+"</span></a>";f=this._get(a,"currentText");c=this._get(a,"gotoCurrent")&&a.currentDay?R:aa;f=!h?f:this.formatDate(f,c,this._getFormatConfig(a));h=!a.inline?"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(a,"closeText")+
"</button>":"";j=j?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(la?h:"")+(this._isInRange(a,c)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+f+"</button>":"")+(la?"":h)+"</div>":"";h=parseInt(this._get(a,"firstDay"),10);h=isNaN(h)?0:h;f=this._get(a,"showWeek");c=this._get(a,"dayNames");q=this._get(a,"dayNamesMin");u=this._get(a,"monthNames");s=this._get(a,"monthNamesShort");w=this._get(a,
"beforeShowDay");B=this._get(a,"showOtherMonths");C=this._get(a,"selectOtherMonths");E=this._getDefaultDate(a);z="";D;for(L=0;L<da[0];L++){X="";this.maxRows=4;for(A=0;A<da[1];A++){H=this._daylightSavingAdjust(new Date($,S,a.selectedDay));D=" ui-corner-all";k="";if(na){k+="<div class='ui-datepicker-group";if(1<da[1])switch(A){case 0:k+=" ui-datepicker-group-first";D=" ui-corner-"+(la?"right":"left");break;case da[1]-1:k+=" ui-datepicker-group-last";D=" ui-corner-"+(la?"left":"right");break;default:k+=
" ui-datepicker-group-middle",D=""}k+="'>"}k+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+D+"'>"+(/all|left/.test(D)&&0===L?la?e:b:"")+(/all|right/.test(D)&&0===L?la?b:e:"")+this._generateMonthYearHeader(a,S,$,ba,Aa,0<L||0<A,u,s)+"</div><table class='ui-datepicker-calendar'><thead><tr>";U=f?"<th class='ui-datepicker-week-col'>"+this._get(a,"weekHeader")+"</th>":"";for(D=0;7>D;D++)x=(D+h)%7,U+="<th"+(5<=(D+h+6)%7?" class='ui-datepicker-week-end'":"")+"><span title='"+c[x]+
"'>"+q[x]+"</span></th>";k+=U+"</tr></thead><tbody>";U=this._getDaysInMonth($,S);$===a.selectedYear&&S===a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,U));D=(this._getFirstDayOfMonth($,S)-h+7)%7;U=Math.ceil((D+U)/7);this.maxRows=U=na?this.maxRows>U?this.maxRows:U:U;x=this._daylightSavingAdjust(new Date($,S,1-D));for(ha=0;ha<U;ha++){k+="<tr>";ua=!f?"":"<td class='ui-datepicker-week-col'>"+this._get(a,"calculateWeek")(x)+"</td>";for(D=0;7>D;D++)za=w?w.apply(a.input?a.input[0]:null,[x]):[!0,
""],ia=(l=x.getMonth()!==S)&&!C||!za[0]||ba&&x<ba||Aa&&x>Aa,ua+="<td class='"+(5<=(D+h+6)%7?" ui-datepicker-week-end":"")+(l?" ui-datepicker-other-month":"")+(x.getTime()===H.getTime()&&S===a.selectedMonth&&a._keyEvent||E.getTime()===x.getTime()&&E.getTime()===H.getTime()?" "+this._dayOverClass:"")+(ia?" "+this._unselectableClass+" ui-state-disabled":"")+(l&&!B?"":" "+za[1]+(x.getTime()===R.getTime()?" "+this._currentClass:"")+(x.getTime()===aa.getTime()?" ui-datepicker-today":""))+"'"+((!l||B)&&
za[2]?" title='"+za[2].replace(/'/g,"&#39;")+"'":"")+(ia?"":" data-handler='selectDay' data-event='click' data-month='"+x.getMonth()+"' data-year='"+x.getFullYear()+"'")+">"+(l&&!B?"&#xa0;":ia?"<span class='ui-state-default'>"+x.getDate()+"</span>":"<a class='ui-state-default"+(x.getTime()===aa.getTime()?" ui-state-highlight":"")+(x.getTime()===R.getTime()?" ui-state-active":"")+(l?" ui-priority-secondary":"")+"' href='#'>"+x.getDate()+"</a>")+"</td>",x.setDate(x.getDate()+1),x=this._daylightSavingAdjust(x);
k+=ua+"</tr>"}S++;11<S&&(S=0,$++);k+="</tbody></table>"+(na?"</div>"+(0<da[0]&&A===da[1]-1?"<div class='ui-datepicker-row-break'></div>":""):"");X+=k}z+=X}a._keyEvent=!1;return z+j},_generateMonthYearHeader:function(a,b,c,e,f,h,j,q){var u,s,w,B=this._get(a,"changeMonth"),C=this._get(a,"changeYear"),E=this._get(a,"showMonthAfterYear"),z="<div class='ui-datepicker-title'>",D="";if(h||!B)D+="<span class='ui-datepicker-month'>"+j[b]+"</span>";else{j=e&&e.getFullYear()===c;u=f&&f.getFullYear()===c;D+=
"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";for(s=0;12>s;s++)if((!j||s>=e.getMonth())&&(!u||s<=f.getMonth()))D+="<option value='"+s+"'"+(s===b?" selected='selected'":"")+">"+q[s]+"</option>";D+="</select>"}E||(z+=D+(h||!B||!C?"&#xa0;":""));if(!a.yearshtml)if(a.yearshtml="",h||!C)z+="<span class='ui-datepicker-year'>"+c+"</span>";else{q=this._get(a,"yearRange").split(":");w=(new Date).getFullYear();j=function(a){a=a.match(/c[+\-].*/)?c+parseInt(a.substring(1),
10):a.match(/[+\-].*/)?w+parseInt(a,10):parseInt(a,10);return isNaN(a)?w:a};b=j(q[0]);q=Math.max(b,j(q[1]||""));b=e?Math.max(b,e.getFullYear()):b;q=f?Math.min(q,f.getFullYear()):q;for(a.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";b<=q;b++)a.yearshtml+="<option value='"+b+"'"+(b===c?" selected='selected'":"")+">"+b+"</option>";a.yearshtml+="</select>";z+=a.yearshtml;a.yearshtml=null}z+=this._get(a,"yearSuffix");E&&(z+=(h||!B||!C?"&#xa0;":"")+D);return z+
"</div>"},_adjustInstDate:function(a,b,c){var e=a.drawYear+("Y"===c?b:0),f=a.drawMonth+("M"===c?b:0);b=Math.min(a.selectedDay,this._getDaysInMonth(e,f))+("D"===c?b:0);e=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(e,f,b)));a.selectedDay=e.getDate();a.drawMonth=a.selectedMonth=e.getMonth();a.drawYear=a.selectedYear=e.getFullYear();("M"===c||"Y"===c)&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),e=this._getMinMaxDate(a,"max"),c=c&&b<c?c:b;return e&&
c>e?e:c},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){a=this._get(a,"numberOfMonths");return null==a?[1,1]:"number"===typeof a?[1,a]:a},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},
_canAdjustMonth:function(a,b,c,e){var f=this._getNumberOfMonths(a);c=this._daylightSavingAdjust(new Date(c,e+(0>b?b:f[0]*f[1]),1));0>b&&c.setDate(this._getDaysInMonth(c.getFullYear(),c.getMonth()));return this._isInRange(a,c)},_isInRange:function(a,b){var c,e,f=this._getMinMaxDate(a,"min"),h=this._getMinMaxDate(a,"max"),j=null,q=null;if(c=this._get(a,"yearRange"))c=c.split(":"),e=(new Date).getFullYear(),j=parseInt(c[0],10),q=parseInt(c[1],10),c[0].match(/[+\-].*/)&&(j+=e),c[1].match(/[+\-].*/)&&
(q+=e);return(!f||b.getTime()>=f.getTime())&&(!h||b.getTime()<=h.getTime())&&(!j||b.getFullYear()>=j)&&(!q||b.getFullYear()<=q)},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff"),b="string"!==typeof b?b:(new Date).getFullYear()%100+parseInt(b,10);return{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,e){b||(a.currentDay=a.selectedDay,
a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);b=b?"object"===typeof b?b:this._daylightSavingAdjust(new Date(e,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),b,this._getFormatConfig(a))}});a.fn.datepicker=function(b){if(!this.length)return this;a.datepicker.initialized||(a(document).mousedown(a.datepicker._checkExternalClick),a.datepicker.initialized=!0);0===a("#"+a.datepicker._mainDivId).length&&
a("body").append(a.datepicker.dpDiv);var c=Array.prototype.slice.call(arguments,1);return"string"===typeof b&&("isDisabled"===b||"getDate"===b||"widget"===b)||"option"===b&&2===arguments.length&&"string"===typeof arguments[1]?a.datepicker["_"+b+"Datepicker"].apply(a.datepicker,[this[0]].concat(c)):this.each(function(){"string"===typeof b?a.datepicker["_"+b+"Datepicker"].apply(a.datepicker,[this].concat(c)):a.datepicker._attachDatepicker(this,b)})};a.datepicker=new c;a.datepicker.initialized=!1;a.datepicker.uuid=
(new Date).getTime();a.datepicker.version="1.10.2";window["DP_jQuery_"+e]=a})(jQuery);
(function(a){var j={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},c={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};a.widget("ui.dialog",{version:"1.10.2",options:{appendTo:"body",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(b){var c=a(this).css(b).offset().top;
0>c&&a(this).css("top",b.top-c)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height};this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)};
this.originalTitle=this.element.attr("title");this.options.title=this.options.title||this.originalTitle;this._createWrapper();this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog);this._createTitlebar();this._createButtonPane();this.options.draggable&&a.fn.draggable&&this._makeDraggable();this.options.resizable&&a.fn.resizable&&this._makeResizable();this._isOpen=!1},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var b=
this.options.appendTo;return b&&(b.jquery||b.nodeType)?a(b):this.document.find(b||"body").eq(0)},_destroy:function(){var a,c=this.originalPosition;this._destroyOverlay();this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach();this.uiDialog.stop(!0,!0).remove();this.originalTitle&&this.element.attr("title",this.originalTitle);a=c.parent.children().eq(c.index);a.length&&a[0]!==this.element[0]?a.before(this.element):c.parent.append(this.element)},
widget:function(){return this.uiDialog},disable:a.noop,enable:a.noop,close:function(b){var c=this;this._isOpen&&!1!==this._trigger("beforeClose",b)&&(this._isOpen=!1,this._destroyOverlay(),this.opener.filter(":focusable").focus().length||a(this.document[0].activeElement).blur(),this._hide(this.uiDialog,this.options.hide,function(){c._trigger("close",b)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(a,c){var e=!!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
e&&!c&&this._trigger("focus",a);return e},open:function(){var b=this;this._isOpen?this._moveToTop()&&this._focusTabbable():(this._isOpen=!0,this.opener=a(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this._show(this.uiDialog,this.options.show,function(){b._focusTabbable();b._trigger("focus")}),this._trigger("open"))},_focusTabbable:function(){var a=this.element.find("[autofocus]");a.length||(a=this.element.find(":tabbable"));a.length||
(a=this.uiDialogButtonPane.find(":tabbable"));a.length||(a=this.uiDialogTitlebarClose.filter(":tabbable"));a.length||(a=this.uiDialog);a.eq(0).focus()},_keepFocus:function(b){function c(){var b=this.document[0].activeElement;this.uiDialog[0]===b||a.contains(this.uiDialog[0],b)||this._focusTabbable()}b.preventDefault();c.call(this);this._delay(c)},_createWrapper:function(){this.uiDialog=a("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front "+this.options.dialogClass).hide().attr({tabIndex:-1,
role:"dialog"}).appendTo(this._appendTo());this._on(this.uiDialog,{keydown:function(b){if(this.options.closeOnEscape&&!b.isDefaultPrevented()&&b.keyCode&&b.keyCode===a.ui.keyCode.ESCAPE)b.preventDefault(),this.close(b);else if(b.keyCode===a.ui.keyCode.TAB){var c=this.uiDialog.find(":tabbable"),e=c.filter(":first"),c=c.filter(":last");if((b.target===c[0]||b.target===this.uiDialog[0])&&!b.shiftKey)e.focus(1),b.preventDefault();else if((b.target===e[0]||b.target===this.uiDialog[0])&&b.shiftKey)c.focus(1),
b.preventDefault()}},mousedown:function(a){this._moveToTop(a)&&this._focusTabbable()}});this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var b;this.uiDialogTitlebar=a("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog);this._on(this.uiDialogTitlebar,{mousedown:function(b){a(b.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.focus()}});
this.uiDialogTitlebarClose=a("<button></button>").button({label:this.options.closeText,icons:{primary:"ui-icon-closethick"},text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar);this._on(this.uiDialogTitlebarClose,{click:function(a){a.preventDefault();this.close(a)}});b=a("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar);this._title(b);this.uiDialog.attr({"aria-labelledby":b.attr("id")})},_title:function(a){this.options.title||a.html("&#160;");
a.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=a("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");this.uiButtonSet=a("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane);this._createButtons()},_createButtons:function(){var b=this,c=this.options.buttons;this.uiDialogButtonPane.remove();this.uiButtonSet.empty();a.isEmptyObject(c)||a.isArray(c)&&!c.length?this.uiDialog.removeClass("ui-dialog-buttons"):(a.each(c,function(c,
f){var d,g;f=a.isFunction(f)?{click:f,text:c}:f;f=a.extend({type:"button"},f);d=f.click;f.click=function(){d.apply(b.element[0],arguments)};g={icons:f.icons,text:f.showText};delete f.icons;delete f.showText;a("<button></button>",f).button(g).appendTo(b.uiButtonSet)}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function b(a){return{position:a.position,offset:a.offset}}var c=this,e=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",
handle:".ui-dialog-titlebar",containment:"document",start:function(e,d){a(this).addClass("ui-dialog-dragging");c._blockFrames();c._trigger("dragStart",e,b(d))},drag:function(a,d){c._trigger("drag",a,b(d))},stop:function(h,d){e.position=[d.position.left-c.document.scrollLeft(),d.position.top-c.document.scrollTop()];a(this).removeClass("ui-dialog-dragging");c._unblockFrames();c._trigger("dragStop",h,b(d))}})},_makeResizable:function(){function b(a){return{originalPosition:a.originalPosition,originalSize:a.originalSize,
position:a.position,size:a.size}}var c=this,e=this.options,h=e.resizable,d=this.uiDialog.css("position"),h="string"===typeof h?h:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:this._minHeight(),handles:h,start:function(d,e){a(this).addClass("ui-dialog-resizing");c._blockFrames();c._trigger("resizeStart",d,b(e))},resize:function(a,d){c._trigger("resize",
a,b(d))},stop:function(d,h){e.height=a(this).height();e.width=a(this).width();a(this).removeClass("ui-dialog-resizing");c._unblockFrames();c._trigger("resizeStop",d,b(h))}}).css("position",d)},_minHeight:function(){var a=this.options;return"auto"===a.height?a.minHeight:Math.min(a.minHeight,a.height)},_position:function(){var a=this.uiDialog.is(":visible");a||this.uiDialog.show();this.uiDialog.position(this.options.position);a||this.uiDialog.hide()},_setOptions:function(b){var f=this,e=!1,h={};a.each(b,
function(a,b){f._setOption(a,b);a in j&&(e=!0);a in c&&(h[a]=b)});e&&(this._size(),this._position());this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",h)},_setOption:function(a,c){var e,h=this.uiDialog;"dialogClass"===a&&h.removeClass(this.options.dialogClass).addClass(c);"disabled"!==a&&(this._super(a,c),"appendTo"===a&&this.uiDialog.appendTo(this._appendTo()),"buttons"===a&&this._createButtons(),"closeText"===a&&this.uiDialogTitlebarClose.button({label:""+c}),"draggable"===
a&&((e=h.is(":data(ui-draggable)"))&&!c&&h.draggable("destroy"),!e&&c&&this._makeDraggable()),"position"===a&&this._position(),"resizable"===a&&((e=h.is(":data(ui-resizable)"))&&!c&&h.resizable("destroy"),e&&"string"===typeof c&&h.resizable("option","handles",c),!e&&!1!==c&&this._makeResizable()),"title"===a&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var a,c,e,h=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0});h.minWidth>
h.width&&(h.width=h.minWidth);a=this.uiDialog.css({height:"auto",width:h.width}).outerHeight();c=Math.max(0,h.minHeight-a);e="number"===typeof h.maxHeight?Math.max(0,h.maxHeight-a):"none";"auto"===h.height?this.element.css({minHeight:c,maxHeight:e,height:"auto"}):this.element.height(Math.max(0,h.height-a));this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var b=
a(this);return a("<div>").css({position:"absolute",width:b.outerWidth(),height:b.outerHeight()}).appendTo(b.parent()).offset(b.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(b){return a(b.target).closest(".ui-dialog").length?!0:!!a(b.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var b=this,c=this.widgetFullName;a.ui.dialog.overlayInstances||this._delay(function(){a.ui.dialog.overlayInstances&&
this.document.bind("focusin.dialog",function(e){b._allowInteraction(e)||(e.preventDefault(),a(".ui-dialog:visible:last .ui-dialog-content").data(c)._focusTabbable())})});this.overlay=a("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo());this._on(this.overlay,{mousedown:"_keepFocus"});a.ui.dialog.overlayInstances++}},_destroyOverlay:function(){this.options.modal&&this.overlay&&(a.ui.dialog.overlayInstances--,a.ui.dialog.overlayInstances||this.document.unbind("focusin.dialog"),
this.overlay.remove(),this.overlay=null)}});a.ui.dialog.overlayInstances=0;!1!==a.uiBackCompat&&a.widget("ui.dialog",a.ui.dialog,{_position:function(){var b=this.options.position,c=[],e=[0,0],h;if(b){if("string"===typeof b||"object"===typeof b&&"0"in b)c=b.split?b.split(" "):[b[0],b[1]],1===c.length&&(c[1]=c[0]),a.each(["left","top"],function(a,b){+c[a]===c[a]&&(e[a]=c[a],c[a]=b)}),b={my:c[0]+(0>e[0]?e[0]:"+"+e[0])+" "+c[1]+(0>e[1]?e[1]:"+"+e[1]),at:c.join(" ")};b=a.extend({},a.ui.dialog.prototype.options.position,
b)}else b=a.ui.dialog.prototype.options.position;(h=this.uiDialog.is(":visible"))||this.uiDialog.show();this.uiDialog.position(b);h||this.uiDialog.hide()}})})(jQuery);
(function(a){var j=/up|down|vertical/,c=/up|left|vertical|horizontal/;a.effects.effect.blind=function(b,f){var e=a(this),h="position top bottom left right height width".split(" "),d=a.effects.setMode(e,b.mode||"hide"),g=b.direction||"up",m=j.test(g),p=m?"height":"width",r=m?"top":"left",g=c.test(g),y={},t="show"===d,q,u,s;e.parent().is(".ui-effects-wrapper")?a.effects.save(e.parent(),h):a.effects.save(e,h);e.show();q=a.effects.createWrapper(e).css({overflow:"hidden"});u=q[p]();s=parseFloat(q.css(r))||
0;y[p]=t?u:0;g||(e.css(m?"bottom":"right",0).css(m?"top":"left","auto").css({position:"absolute"}),y[r]=t?s:u+s);t&&(q.css(p,0),g||q.css(r,s+u));q.animate(y,{duration:b.duration,easing:b.easing,queue:!1,complete:function(){"hide"===d&&e.hide();a.effects.restore(e,h);a.effects.removeWrapper(e);f()}})}})(jQuery);
(function(a){a.effects.effect.bounce=function(j,c){var b=a(this),f="position top bottom left right height width".split(" "),e=a.effects.setMode(b,j.mode||"effect"),h="hide"===e,d="show"===e,g=j.direction||"up",e=j.distance,m=j.times||5,p=2*m+(d||h?1:0),r=j.duration/p,y=j.easing,t="up"===g||"down"===g?"top":"left",g="up"===g||"left"===g,q,u,s=b.queue(),w=s.length;(d||h)&&f.push("opacity");a.effects.save(b,f);b.show();a.effects.createWrapper(b);e||(e=b["top"===t?"outerHeight":"outerWidth"]()/3);d&&
(u={opacity:1},u[t]=0,b.css("opacity",0).css(t,g?2*-e:2*e).animate(u,r,y));h&&(e/=Math.pow(2,m-1));u={};for(d=u[t]=0;d<m;d++)q={},q[t]=(g?"-=":"+=")+e,b.animate(q,r,y).animate(u,r,y),e=h?2*e:e/2;h&&(q={opacity:0},q[t]=(g?"-=":"+=")+e,b.animate(q,r,y));b.queue(function(){h&&b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()});1<w&&s.splice.apply(s,[1,0].concat(s.splice(w,p+1)));b.dequeue()}})(jQuery);
(function(a){a.effects.effect.clip=function(j,c){var b=a(this),f="position top bottom left right height width".split(" "),e="show"===a.effects.setMode(b,j.mode||"hide"),h="vertical"===(j.direction||"vertical"),d=h?"height":"width",h=h?"top":"left",g={},m,p;a.effects.save(b,f);b.show();m=a.effects.createWrapper(b).css({overflow:"hidden"});m="IMG"===b[0].tagName?m:b;p=m[d]();e&&(m.css(d,0),m.css(h,p/2));g[d]=e?p:0;g[h]=e?0:p/2;m.animate(g,{queue:!1,duration:j.duration,easing:j.easing,complete:function(){e||
b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()}})}})(jQuery);
(function(a){a.effects.effect.drop=function(j,c){var b=a(this),f="position top bottom left right opacity height width".split(" "),e=a.effects.setMode(b,j.mode||"hide"),h="show"===e,d=j.direction||"left",g="up"===d||"down"===d?"top":"left",d="up"===d||"left"===d?"pos":"neg",m={opacity:h?1:0},p;a.effects.save(b,f);b.show();a.effects.createWrapper(b);p=j.distance||b["top"===g?"outerHeight":"outerWidth"](!0)/2;h&&b.css("opacity",0).css(g,"pos"===d?-p:p);m[g]=(h?"pos"===d?"+=":"-=":"pos"===d?"-=":"+=")+
p;b.animate(m,{queue:!1,duration:j.duration,easing:j.easing,complete:function(){"hide"===e&&b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()}})}})(jQuery);
(function(a){a.effects.effect.explode=function(j,c){function b(){r.push(this);r.length===f*e&&(h.css({visibility:"visible"}),a(r).remove(),d||h.hide(),c())}var f=j.pieces?Math.round(Math.sqrt(j.pieces)):3,e=f,h=a(this),d="show"===a.effects.setMode(h,j.mode||"hide"),g=h.show().css("visibility","hidden").offset(),m=Math.ceil(h.outerWidth()/e),p=Math.ceil(h.outerHeight()/f),r=[],y,t,q,u,s,w;for(y=0;y<f;y++){u=g.top+y*p;w=y-(f-1)/2;for(t=0;t<e;t++)q=g.left+t*m,s=t-(e-1)/2,h.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",
visibility:"visible",left:-t*m,top:-y*p}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:m,height:p,left:q+(d?s*m:0),top:u+(d?w*p:0),opacity:d?0:1}).animate({left:q+(d?0:s*m),top:u+(d?0:w*p),opacity:d?1:0},j.duration||500,j.easing,b)}}})(jQuery);(function(a){a.effects.effect.fade=function(j,c){var b=a(this),f=a.effects.setMode(b,j.mode||"toggle");b.animate({opacity:f},{queue:!1,duration:j.duration,easing:j.easing,complete:c})}})(jQuery);
(function(a){a.effects.effect.fold=function(j,c){var b=a(this),f="position top bottom left right height width".split(" "),e=a.effects.setMode(b,j.mode||"hide"),h="show"===e,d="hide"===e,e=j.size||15,g=/([0-9]+)%/.exec(e),m=!!j.horizFirst,p=h!==m,r=p?["width","height"]:["height","width"],y=j.duration/2,t,q={},u={};a.effects.save(b,f);b.show();t=a.effects.createWrapper(b).css({overflow:"hidden"});p=p?[t.width(),t.height()]:[t.height(),t.width()];g&&(e=parseInt(g[1],10)/100*p[d?0:1]);h&&t.css(m?{height:0,
width:e}:{height:e,width:0});q[r[0]]=h?p[0]:e;u[r[1]]=h?p[1]:0;t.animate(q,y,j.easing).animate(u,y,j.easing,function(){d&&b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()})}})(jQuery);
(function(a){a.effects.effect.highlight=function(j,c){var b=a(this),f=["backgroundImage","backgroundColor","opacity"],e=a.effects.setMode(b,j.mode||"show"),h={backgroundColor:b.css("backgroundColor")};"hide"===e&&(h.opacity=0);a.effects.save(b,f);b.show().css({backgroundImage:"none",backgroundColor:j.color||"#ffff99"}).animate(h,{queue:!1,duration:j.duration,easing:j.easing,complete:function(){"hide"===e&&b.hide();a.effects.restore(b,f);c()}})}})(jQuery);
(function(a){a.effects.effect.pulsate=function(j,c){var b=a(this),f=a.effects.setMode(b,j.mode||"show"),e="show"===f,h="hide"===f,f=2*(j.times||5)+(e||"hide"===f?1:0),d=j.duration/f,g=0,m=b.queue(),p=m.length;if(e||!b.is(":visible"))b.css("opacity",0).show(),g=1;for(e=1;e<f;e++)b.animate({opacity:g},d,j.easing),g=1-g;b.animate({opacity:g},d,j.easing);b.queue(function(){h&&b.hide();c()});1<p&&m.splice.apply(m,[1,0].concat(m.splice(p,f+1)));b.dequeue()}})(jQuery);
(function(a){a.effects.effect.puff=function(j,c){var b=a(this),f=a.effects.setMode(b,j.mode||"hide"),e="hide"===f,h=parseInt(j.percent,10)||150,d=h/100,g={height:b.height(),width:b.width(),outerHeight:b.outerHeight(),outerWidth:b.outerWidth()};a.extend(j,{effect:"scale",queue:!1,fade:!0,mode:f,complete:c,percent:e?h:100,from:e?g:{height:g.height*d,width:g.width*d,outerHeight:g.outerHeight*d,outerWidth:g.outerWidth*d}});b.effect(j)};a.effects.effect.scale=function(j,c){var b=a(this),f=a.extend(!0,
{},j),e=a.effects.setMode(b,j.mode||"effect"),h=parseInt(j.percent,10)||(0===parseInt(j.percent,10)?0:"hide"===e?0:100),d=j.direction||"both",g=j.origin,m={height:b.height(),width:b.width(),outerHeight:b.outerHeight(),outerWidth:b.outerWidth()},p="horizontal"!==d?h/100:1,h="vertical"!==d?h/100:1;f.effect="size";f.queue=!1;f.complete=c;"effect"!==e&&(f.origin=g||["middle","center"],f.restore=!0);f.from=j.from||("show"===e?{height:0,width:0,outerHeight:0,outerWidth:0}:m);f.to={height:m.height*p,width:m.width*
h,outerHeight:m.outerHeight*p,outerWidth:m.outerWidth*h};f.fade&&("show"===e&&(f.from.opacity=0,f.to.opacity=1),"hide"===e&&(f.from.opacity=1,f.to.opacity=0));b.effect(f)};a.effects.effect.size=function(j,c){var b,f,e,h,d,g,m=a(this),p="position top bottom left right width height overflow opacity".split(" ");d="position top bottom left right overflow opacity".split(" ");var r=["width","height","overflow"],y=["fontSize"],t=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],q=["borderLeftWidth",
"borderRightWidth","paddingLeft","paddingRight"],u=a.effects.setMode(m,j.mode||"effect"),s=j.restore||"effect"!==u,w=j.scale||"both";g=j.origin||["middle","center"];var B=m.css("position"),C=s?p:d,E={height:0,width:0,outerHeight:0,outerWidth:0};"show"===u&&m.show();d={height:m.height(),width:m.width(),outerHeight:m.outerHeight(),outerWidth:m.outerWidth()};"toggle"===j.mode&&"show"===u?(m.from=j.to||E,m.to=j.from||d):(m.from=j.from||("show"===u?E:d),m.to=j.to||("hide"===u?E:d));e=m.from.height/d.height;
h=m.from.width/d.width;b=m.to.height/d.height;f=m.to.width/d.width;if("box"===w||"both"===w)e!==b&&(C=C.concat(t),m.from=a.effects.setTransition(m,t,e,m.from),m.to=a.effects.setTransition(m,t,b,m.to)),h!==f&&(C=C.concat(q),m.from=a.effects.setTransition(m,q,h,m.from),m.to=a.effects.setTransition(m,q,f,m.to));if(("content"===w||"both"===w)&&e!==b)C=C.concat(y).concat(r),m.from=a.effects.setTransition(m,y,e,m.from),m.to=a.effects.setTransition(m,y,b,m.to);a.effects.save(m,C);m.show();a.effects.createWrapper(m);
m.css("overflow","hidden").css(m.from);g&&(g=a.effects.getBaseline(g,d),m.from.top=(d.outerHeight-m.outerHeight())*g.y,m.from.left=(d.outerWidth-m.outerWidth())*g.x,m.to.top=(d.outerHeight-m.to.outerHeight)*g.y,m.to.left=(d.outerWidth-m.to.outerWidth)*g.x);m.css(m.from);if("content"===w||"both"===w)t=t.concat(["marginTop","marginBottom"]).concat(y),q=q.concat(["marginLeft","marginRight"]),r=p.concat(t).concat(q),m.find("*[width]").each(function(){var c=a(this),d=c.height(),g=c.width(),m=c.outerHeight(),
u=c.outerWidth();s&&a.effects.save(c,r);c.from={height:d*e,width:g*h,outerHeight:m*e,outerWidth:u*h};c.to={height:d*b,width:g*f,outerHeight:d*b,outerWidth:g*f};e!==b&&(c.from=a.effects.setTransition(c,t,e,c.from),c.to=a.effects.setTransition(c,t,b,c.to));h!==f&&(c.from=a.effects.setTransition(c,q,h,c.from),c.to=a.effects.setTransition(c,q,f,c.to));c.css(c.from);c.animate(c.to,j.duration,j.easing,function(){s&&a.effects.restore(c,r)})});m.animate(m.to,{queue:!1,duration:j.duration,easing:j.easing,
complete:function(){0===m.to.opacity&&m.css("opacity",m.from.opacity);"hide"===u&&m.hide();a.effects.restore(m,C);s||("static"===B?m.css({position:"relative",top:m.to.top,left:m.to.left}):a.each(["top","left"],function(a,b){m.css(b,function(b,c){var d=parseInt(c,10),e=a?m.to.left:m.to.top;return"auto"===c?e+"px":d+e+"px"})}));a.effects.removeWrapper(m);c()}})}})(jQuery);
(function(a){a.effects.effect.shake=function(j,c){var b=a(this),f="position top bottom left right height width".split(" "),e=a.effects.setMode(b,j.mode||"effect"),h=j.direction||"left",d=j.distance||20,g=j.times||3,m=2*g+1,p=Math.round(j.duration/m),r="up"===h||"down"===h?"top":"left",y="up"===h||"left"===h,h={},t={},q={},u=b.queue(),s=u.length;a.effects.save(b,f);b.show();a.effects.createWrapper(b);h[r]=(y?"-=":"+=")+d;t[r]=(y?"+=":"-=")+2*d;q[r]=(y?"-=":"+=")+2*d;b.animate(h,p,j.easing);for(d=1;d<
g;d++)b.animate(t,p,j.easing).animate(q,p,j.easing);b.animate(t,p,j.easing).animate(h,p/2,j.easing).queue(function(){"hide"===e&&b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()});1<s&&u.splice.apply(u,[1,0].concat(u.splice(s,m+1)));b.dequeue()}})(jQuery);
(function(a){a.effects.effect.slide=function(j,c){var b=a(this),f="position top bottom left right width height".split(" "),e=a.effects.setMode(b,j.mode||"show"),h="show"===e,d=j.direction||"left",g="up"===d||"down"===d?"top":"left",d="up"===d||"left"===d,m,p={};a.effects.save(b,f);b.show();m=j.distance||b["top"===g?"outerHeight":"outerWidth"](!0);a.effects.createWrapper(b).css({overflow:"hidden"});h&&b.css(g,d?isNaN(m)?"-"+m:-m:m);p[g]=(h?d?"+=":"-=":d?"-=":"+=")+m;b.animate(p,{queue:!1,duration:j.duration,
easing:j.easing,complete:function(){"hide"===e&&b.hide();a.effects.restore(b,f);a.effects.removeWrapper(b);c()}})}})(jQuery);
(function(a){a.effects.effect.transfer=function(j,c){var b=a(this),f=a(j.to),e="fixed"===f.css("position"),h=a("body"),d=e?h.scrollTop():0,h=e?h.scrollLeft():0,g=f.offset(),f={top:g.top-d,left:g.left-h,height:f.innerHeight(),width:f.innerWidth()},g=b.offset(),m=a("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(j.className).css({top:g.top-d,left:g.left-h,height:b.innerHeight(),width:b.innerWidth(),position:e?"fixed":"absolute"}).animate(f,j.duration,j.easing,function(){m.remove();
c()})}})(jQuery);
(function(a){a.widget("ui.menu",{version:"1.10.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element;this.mouseHandled=!1;this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,
a.proxy(function(a){this.options.disabled&&a.preventDefault()},this));this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true");this._on({"mousedown .ui-menu-item > a":function(a){a.preventDefault()},"click .ui-state-disabled > a":function(a){a.preventDefault()},"click .ui-menu-item:has(a)":function(j){var c=a(j.target).closest(".ui-menu-item");!this.mouseHandled&&c.not(".ui-state-disabled").length&&(this.mouseHandled=!0,this.select(j),c.has(".ui-menu").length?
this.expand(j):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(j){var c=a(j.currentTarget);c.siblings().children(".ui-state-active").removeClass("ui-state-active");this.focus(j,c)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(a,c){var b=this.active||this.element.children(".ui-menu-item").eq(0);c||this.focus(a,b)},blur:function(j){this._delay(function(){a.contains(this.element[0],
this.document[0].activeElement)||this.collapseAll(j)})},keydown:"_keydown"});this.refresh();this._on(this.document,{click:function(j){a(j.target).closest(".ui-menu").length||this.collapseAll(j);this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var j=a(this);j.data("ui-menu-submenu-carat")&&j.remove()});this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(j){function c(a){return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,
"\\$&")}var b,f,e,h,d=!0;switch(j.keyCode){case a.ui.keyCode.PAGE_UP:this.previousPage(j);break;case a.ui.keyCode.PAGE_DOWN:this.nextPage(j);break;case a.ui.keyCode.HOME:this._move("first","first",j);break;case a.ui.keyCode.END:this._move("last","last",j);break;case a.ui.keyCode.UP:this.previous(j);break;case a.ui.keyCode.DOWN:this.next(j);break;case a.ui.keyCode.LEFT:this.collapse(j);break;case a.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(j);break;case a.ui.keyCode.ENTER:case a.ui.keyCode.SPACE:this._activate(j);
break;case a.ui.keyCode.ESCAPE:this.collapse(j);break;default:d=!1,b=this.previousFilter||"",f=String.fromCharCode(j.keyCode),e=!1,clearTimeout(this.filterTimer),f===b?e=!0:f=b+f,h=RegExp("^"+c(f),"i"),b=this.activeMenu.children(".ui-menu-item").filter(function(){return h.test(a(this).children("a").text())}),b=e&&-1!==b.index(this.active.next())?this.active.nextAll(".ui-menu-item"):b,b.length||(f=String.fromCharCode(j.keyCode),h=RegExp("^"+c(f),"i"),b=this.activeMenu.children(".ui-menu-item").filter(function(){return h.test(a(this).children("a").text())})),
b.length?(this.focus(j,b),1<b.length?(this.previousFilter=f,this.filterTimer=this._delay(function(){delete this.previousFilter},1E3)):delete this.previousFilter):delete this.previousFilter}d&&j.preventDefault()},_activate:function(a){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(a):this.select(a))},refresh:function(){var j,c=this.options.icons.submenu;j=this.element.find(this.options.menus);j.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,
"aria-hidden":"true","aria-expanded":"false"}).each(function(){var b=a(this),f=b.prev("a"),e=a("<span>").addClass("ui-menu-icon ui-icon "+c).data("ui-menu-submenu-carat",!0);f.attr("aria-haspopup","true").prepend(e);b.attr("aria-labelledby",f.attr("id"))});j=j.add(this.element);j.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()});j.children(":not(.ui-menu-item)").each(function(){var b=
a(this);/[^\-\u2014\u2013\s]/.test(b.text())||b.addClass("ui-widget-content ui-menu-divider")});j.children(".ui-state-disabled").attr("aria-disabled","true");this.active&&!a.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(a,c){"icons"===a&&this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(c.submenu);this._super(a,c)},focus:function(a,c){var b;this.blur(a,a&&
"focus"===a.type);this._scrollIntoView(c);this.active=c.first();b=this.active.children("a").addClass("ui-state-focus");this.options.role&&this.element.attr("aria-activedescendant",b.attr("id"));this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");a&&"keydown"===a.type?this._close():this.timer=this._delay(function(){this._close()},this.delay);b=c.children(".ui-menu");b.length&&/^mouse/.test(a.type)&&this._startOpening(b);this.activeMenu=c.parent();this._trigger("focus",
a,{item:c})},_scrollIntoView:function(j){var c,b,f;this._hasScroll()&&(c=parseFloat(a.css(this.activeMenu[0],"borderTopWidth"))||0,b=parseFloat(a.css(this.activeMenu[0],"paddingTop"))||0,c=j.offset().top-this.activeMenu.offset().top-c-b,b=this.activeMenu.scrollTop(),f=this.activeMenu.height(),j=j.height(),0>c?this.activeMenu.scrollTop(b+c):c+j>f&&this.activeMenu.scrollTop(b+c-f+j))},blur:function(a,c){c||clearTimeout(this.timer);this.active&&(this.active.children("a").removeClass("ui-state-focus"),
this.active=null,this._trigger("blur",a,{item:this.active}))},_startOpening:function(a){clearTimeout(this.timer);"true"===a.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close();this._open(a)},this.delay))},_open:function(j){var c=a.extend({of:this.active},this.options.position);clearTimeout(this.timer);this.element.find(".ui-menu").not(j.parents(".ui-menu")).hide().attr("aria-hidden","true");j.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(c)},collapseAll:function(j,
c){clearTimeout(this.timer);this.timer=this._delay(function(){var b=c?this.element:a(j&&j.target).closest(this.element.find(".ui-menu"));b.length||(b=this.element);this._close(b);this.blur(j);this.activeMenu=b},this.delay)},_close:function(a){a||(a=this.active?this.active.parent():this.element);a.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(a){var c=this.active&&this.active.parent().closest(".ui-menu-item",
this.element);c&&c.length&&(this._close(),this.focus(a,c))},expand:function(a){var c=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();c&&c.length&&(this._open(c.parent()),this._delay(function(){this.focus(a,c)}))},next:function(a){this._move("next","first",a)},previous:function(a){this._move("prev","last",a)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},
_move:function(a,c,b){var f;this.active&&(f="first"===a||"last"===a?this.active["first"===a?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[a+"All"](".ui-menu-item").eq(0));if(!f||!f.length||!this.active)f=this.activeMenu.children(".ui-menu-item")[c]();this.focus(b,f)},nextPage:function(j){var c,b,f;this.active?this.isLastItem()||(this._hasScroll()?(b=this.active.offset().top,f=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){c=a(this);return 0>c.offset().top-b-
f}),this.focus(j,c)):this.focus(j,this.activeMenu.children(".ui-menu-item")[!this.active?"first":"last"]())):this.next(j)},previousPage:function(j){var c,b,f;this.active?this.isFirstItem()||(this._hasScroll()?(b=this.active.offset().top,f=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){c=a(this);return 0<c.offset().top-b+f}),this.focus(j,c)):this.focus(j,this.activeMenu.children(".ui-menu-item").first())):this.next(j)},_hasScroll:function(){return this.element.outerHeight()<
this.element.prop("scrollHeight")},select:function(j){this.active=this.active||a(j.target).closest(".ui-menu-item");var c={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(j,!0);this._trigger("select",j,c)}})})(jQuery);
(function(a,j){function c(a,b,c){return[parseFloat(a[0])*(r.test(a[0])?b/100:1),parseFloat(a[1])*(r.test(a[1])?c/100:1)]}a.ui=a.ui||{};var b,f=Math.max,e=Math.abs,h=Math.round,d=/left|center|right/,g=/top|center|bottom/,m=/[\+\-]\d+(\.[\d]+)?%?/,p=/^\w+/,r=/%$/,y=a.fn.position;a.position={scrollbarWidth:function(){if(b!==j)return b;var c,d,e=a("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>");d=e.children()[0];a("body").append(e);
c=d.offsetWidth;e.css("overflow","scroll");d=d.offsetWidth;c===d&&(d=e[0].clientWidth);e.remove();return b=c-d},getScrollInfo:function(b){var c=b.isWindow?"":b.element.css("overflow-x"),d=b.isWindow?"":b.element.css("overflow-y"),c="scroll"===c||"auto"===c&&b.width<b.element[0].scrollWidth;return{width:"scroll"===d||"auto"===d&&b.height<b.element[0].scrollHeight?a.position.scrollbarWidth():0,height:c?a.position.scrollbarWidth():0}},getWithinInfo:function(b){b=a(b||window);var c=a.isWindow(b[0]);return{element:b,
isWindow:c,offset:b.offset()||{left:0,top:0},scrollLeft:b.scrollLeft(),scrollTop:b.scrollTop(),width:c?b.width():b.outerWidth(),height:c?b.height():b.outerHeight()}}};a.fn.position=function(b){if(!b||!b.of)return y.apply(this,arguments);b=a.extend({},b);var j,q,u,s,w,r,t=a(b.of),H=a.position.getWithinInfo(b.within),k=a.position.getScrollInfo(H),U=(b.collision||"flip").split(" "),x={};r=t;var ha=r[0];r=9===ha.nodeType?{width:r.width(),height:r.height(),offset:{top:0,left:0}}:a.isWindow(ha)?{width:r.width(),
height:r.height(),offset:{top:r.scrollTop(),left:r.scrollLeft()}}:ha.preventDefault?{width:0,height:0,offset:{top:ha.pageY,left:ha.pageX}}:{width:r.outerWidth(),height:r.outerHeight(),offset:r.offset()};t[0].preventDefault&&(b.at="left top");q=r.width;u=r.height;s=r.offset;w=a.extend({},s);a.each(["my","at"],function(){var a=(b[this]||"").split(" "),c,e;1===a.length&&(a=d.test(a[0])?a.concat(["center"]):g.test(a[0])?["center"].concat(a):["center","center"]);a[0]=d.test(a[0])?a[0]:"center";a[1]=g.test(a[1])?
a[1]:"center";c=m.exec(a[0]);e=m.exec(a[1]);x[this]=[c?c[0]:0,e?e[0]:0];b[this]=[p.exec(a[0])[0],p.exec(a[1])[0]]});1===U.length&&(U[1]=U[0]);"right"===b.at[0]?w.left+=q:"center"===b.at[0]&&(w.left+=q/2);"bottom"===b.at[1]?w.top+=u:"center"===b.at[1]&&(w.top+=u/2);j=c(x.at,q,u);w.left+=j[0];w.top+=j[1];return this.each(function(){var d,g,l=a(this),m=l.outerWidth(),p=l.outerHeight(),r=parseInt(a.css(this,"marginLeft"),10)||0,y=parseInt(a.css(this,"marginTop"),10)||0,X=m+r+(parseInt(a.css(this,"marginRight"),
10)||0)+k.width,ha=p+y+(parseInt(a.css(this,"marginBottom"),10)||0)+k.height,R=a.extend({},w),ba=c(x.my,l.outerWidth(),l.outerHeight());"right"===b.my[0]?R.left-=m:"center"===b.my[0]&&(R.left-=m/2);"bottom"===b.my[1]?R.top-=p:"center"===b.my[1]&&(R.top-=p/2);R.left+=ba[0];R.top+=ba[1];a.support.offsetFractions||(R.left=h(R.left),R.top=h(R.top));d={marginLeft:r,marginTop:y};a.each(["left","top"],function(c,e){if(a.ui.position[U[c]])a.ui.position[U[c]][e](R,{targetWidth:q,targetHeight:u,elemWidth:m,
elemHeight:p,collisionPosition:d,collisionWidth:X,collisionHeight:ha,offset:[j[0]+ba[0],j[1]+ba[1]],my:b.my,at:b.at,within:H,elem:l})});b.using&&(g=function(a){var c=s.left-R.left,d=c+q-m,h=s.top-R.top,g=h+u-p,j={target:{element:t,left:s.left,top:s.top,width:q,height:u},element:{element:l,left:R.left,top:R.top,width:m,height:p},horizontal:0>d?"left":0<c?"right":"center",vertical:0>g?"top":0<h?"bottom":"middle"};q<m&&e(c+d)<q&&(j.horizontal="center");u<p&&e(h+g)<u&&(j.vertical="middle");j.important=
f(e(c),e(d))>f(e(h),e(g))?"horizontal":"vertical";b.using.call(this,a,j)});l.offset(a.extend(R,{using:g}))})};a.ui.position={fit:{left:function(a,b){var c=b.within,d=c.isWindow?c.scrollLeft:c.offset.left,e=c.width,h=a.left-b.collisionPosition.marginLeft,c=d-h,g=h+b.collisionWidth-e-d;b.collisionWidth>e?0<c&&0>=g?(d=a.left+c+b.collisionWidth-e-d,a.left+=c-d):a.left=0<g&&0>=c?d:c>g?d+e-b.collisionWidth:d:a.left=0<c?a.left+c:0<g?a.left-g:f(a.left-h,a.left)},top:function(a,b){var c=b.within,d=c.isWindow?
c.scrollTop:c.offset.top,e=b.within.height,h=a.top-b.collisionPosition.marginTop,c=d-h,g=h+b.collisionHeight-e-d;b.collisionHeight>e?0<c&&0>=g?(d=a.top+c+b.collisionHeight-e-d,a.top+=c-d):a.top=0<g&&0>=c?d:c>g?d+e-b.collisionHeight:d:a.top=0<c?a.top+c:0<g?a.top-g:f(a.top-h,a.top)}},flip:{left:function(a,b){var c=b.within,d=c.offset.left+c.scrollLeft,f=c.width,h=c.isWindow?c.scrollLeft:c.offset.left,g=a.left-b.collisionPosition.marginLeft,c=g-h,j=g+b.collisionWidth-f-h,g="left"===b.my[0]?-b.elemWidth:
"right"===b.my[0]?b.elemWidth:0,q="left"===b.at[0]?b.targetWidth:"right"===b.at[0]?-b.targetWidth:0,k=-2*b.offset[0];if(0>c){if(d=a.left+g+q+k+b.collisionWidth-f-d,0>d||d<e(c))a.left+=g+q+k}else if(0<j&&(d=a.left-b.collisionPosition.marginLeft+g+q+k-h,0<d||e(d)<j))a.left+=g+q+k},top:function(a,b){var c=b.within,d=c.offset.top+c.scrollTop,f=c.height,h=c.isWindow?c.scrollTop:c.offset.top,g=a.top-b.collisionPosition.marginTop,c=g-h,j=g+b.collisionHeight-f-h,g="top"===b.my[1]?-b.elemHeight:"bottom"===
b.my[1]?b.elemHeight:0,q="top"===b.at[1]?b.targetHeight:"bottom"===b.at[1]?-b.targetHeight:0,k=-2*b.offset[1];if(0>c){if(d=a.top+g+q+k+b.collisionHeight-f-d,a.top+g+q+k>c&&(0>d||d<e(c)))a.top+=g+q+k}else if(0<j&&(d=a.top-b.collisionPosition.marginTop+g+q+k-h,a.top+g+q+k>j&&(0<d||e(d)<j)))a.top+=g+q+k}},flipfit:{left:function(){a.ui.position.flip.left.apply(this,arguments);a.ui.position.fit.left.apply(this,arguments)},top:function(){a.ui.position.flip.top.apply(this,arguments);a.ui.position.fit.top.apply(this,
arguments)}}};var t,q,u,s,w=document.getElementsByTagName("body")[0];u=document.createElement("div");t=document.createElement(w?"div":"body");q={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};w&&a.extend(q,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in q)t.style[s]=q[s];t.appendChild(u);q=w||document.documentElement;q.insertBefore(t,q.firstChild);u.style.cssText="position: absolute; left: 10.7432222px;";u=a(u).offset().left;a.support.offsetFractions=10<u&&
11>u;t.innerHTML="";q.removeChild(t)})(jQuery);
(function(a,j){a.widget("ui.progressbar",{version:"1.10.2",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue();this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min});this.valueDiv=a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
this.valueDiv.remove()},value:function(a){if(a===j)return this.options.value;this.options.value=this._constrainedValue(a);this._refreshValue()},_constrainedValue:function(a){a===j&&(a=this.options.value);this.indeterminate=!1===a;"number"!==typeof a&&(a=0);return this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,a))},_setOptions:function(a){var b=a.value;delete a.value;this._super(a);this.options.value=this._constrainedValue(b);this._refreshValue()},_setOption:function(a,b){"max"===
a&&(b=Math.max(this.min,b));this._super(a,b)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var c=this.options.value,b=this._percentage();this.valueDiv.toggle(this.indeterminate||c>this.min).toggleClass("ui-corner-right",c===this.options.max).width(b.toFixed(0)+"%");this.element.toggleClass("ui-progressbar-indeterminate",this.indeterminate);this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||
(this.overlayDiv=a("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":c}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null));this.oldValue!==c&&(this.oldValue=c,this._trigger("change"));c===this.options.max&&this._trigger("complete")}})})(jQuery);
(function(a){a.widget("ui.slider",a.ui.mouse,{version:"1.10.2",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},_create:function(){this._mouseSliding=this._keySliding=!1;this._animateOff=!0;this._handleIndex=null;this._detectOrientation();this._mouseInit();this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all");this._refresh();
this._setOption("disabled",this.options.disabled);this._animateOff=!1},_refresh:function(){this._createRange();this._createHandles();this._setupEvents();this._refreshValue()},_createHandles:function(){var j,c;j=this.options;var b=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),f=[];c=j.values&&j.values.length||1;b.length>c&&(b.slice(c).remove(),b=b.slice(0,c));for(j=b.length;j<c;j++)f.push("<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>");
this.handles=b.add(a(f.join("")).appendTo(this.element));this.handle=this.handles.eq(0);this.handles.each(function(b){a(this).data("ui-slider-handle-index",b)})},_createRange:function(){var j=this.options,c="";j.range?(!0===j.range&&(j.values?j.values.length&&2!==j.values.length?j.values=[j.values[0],j.values[0]]:a.isArray(j.values)&&(j.values=j.values.slice(0)):j.values=[this._valueMin(),this._valueMin()]),!this.range||!this.range.length?(this.range=a("<div></div>").appendTo(this.element),c="ui-slider-range ui-widget-header ui-corner-all"):
this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}),this.range.addClass(c+("min"===j.range||"max"===j.range?" ui-slider-range-"+j.range:""))):this.range=a([])},_setupEvents:function(){var a=this.handles.add(this.range).filter("a");this._off(a);this._on(a,this._handleEvents);this._hoverable(a);this._focusable(a)},_destroy:function(){this.handles.remove();this.range.remove();this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all");
this._mouseDestroy()},_mouseCapture:function(j){var c,b,f,e,h,d=this,g=this.options;if(g.disabled)return!1;this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()};this.elementOffset=this.element.offset();c=this._normValueFromMouse({x:j.pageX,y:j.pageY});b=this._valueMax()-this._valueMin()+1;this.handles.each(function(h){var j=Math.abs(c-d.values(h));if(b>j||b===j&&(h===d._lastChangedValue||d.values(h)===g.min))b=j,f=a(this),e=h});if(!1===this._start(j,e))return!1;this._mouseSliding=
!0;this._handleIndex=e;f.addClass("ui-state-active").focus();h=f.offset();this._clickOffset=!a(j.target).parents().addBack().is(".ui-slider-handle")?{left:0,top:0}:{left:j.pageX-h.left-f.width()/2,top:j.pageY-h.top-f.height()/2-(parseInt(f.css("borderTopWidth"),10)||0)-(parseInt(f.css("borderBottomWidth"),10)||0)+(parseInt(f.css("marginTop"),10)||0)};this.handles.hasClass("ui-state-hover")||this._slide(j,e,c);return this._animateOff=!0},_mouseStart:function(){return!0},_mouseDrag:function(a){var c=
this._normValueFromMouse({x:a.pageX,y:a.pageY});this._slide(a,this._handleIndex,c);return!1},_mouseStop:function(a){this.handles.removeClass("ui-state-active");this._mouseSliding=!1;this._stop(a,this._handleIndex);this._change(a,this._handleIndex);this._clickOffset=this._handleIndex=null;return this._animateOff=!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(a){var c;"horizontal"===this.orientation?(c=this.elementSize.width,
a=a.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(c=this.elementSize.height,a=a.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0));c=a/c;1<c&&(c=1);0>c&&(c=0);"vertical"===this.orientation&&(c=1-c);a=this._valueMax()-this._valueMin();c=this._valueMin()+c*a;return this._trimAlignValue(c)},_start:function(a,c){var b={handle:this.handles[c],value:this.value()};this.options.values&&this.options.values.length&&(b.value=this.values(c),b.values=this.values());
return this._trigger("start",a,b)},_slide:function(a,c,b){var f;if(this.options.values&&this.options.values.length){f=this.values(c?0:1);if(2===this.options.values.length&&!0===this.options.range&&(0===c&&b>f||1===c&&b<f))b=f;b!==this.values(c)&&(f=this.values(),f[c]=b,a=this._trigger("slide",a,{handle:this.handles[c],value:b,values:f}),this.values(c?0:1),!1!==a&&this.values(c,b,!0))}else b!==this.value()&&(a=this._trigger("slide",a,{handle:this.handles[c],value:b}),!1!==a&&this.value(b))},_stop:function(a,
c){var b={handle:this.handles[c],value:this.value()};this.options.values&&this.options.values.length&&(b.value=this.values(c),b.values=this.values());this._trigger("stop",a,b)},_change:function(a,c){if(!this._keySliding&&!this._mouseSliding){var b={handle:this.handles[c],value:this.value()};this.options.values&&this.options.values.length&&(b.value=this.values(c),b.values=this.values());this._lastChangedValue=c;this._trigger("change",a,b)}},value:function(a){if(arguments.length)this.options.value=
this._trimAlignValue(a),this._refreshValue(),this._change(null,0);else return this._value()},values:function(j,c){var b,f,e;if(1<arguments.length)this.options.values[j]=this._trimAlignValue(c),this._refreshValue(),this._change(null,j);else if(arguments.length)if(a.isArray(arguments[0])){b=this.options.values;f=arguments[0];for(e=0;e<b.length;e+=1)b[e]=this._trimAlignValue(f[e]),this._change(null,e);this._refreshValue()}else return this.options.values&&this.options.values.length?this._values(j):this.value();
else return this._values()},_setOption:function(j,c){var b,f=0;"range"===j&&!0===this.options.range&&("min"===c?(this.options.value=this._values(0),this.options.values=null):"max"===c&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null));a.isArray(this.options.values)&&(f=this.options.values.length);a.Widget.prototype._setOption.apply(this,arguments);switch(j){case "orientation":this._detectOrientation();this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+
this.orientation);this._refreshValue();break;case "value":this._animateOff=!0;this._refreshValue();this._change(null,0);this._animateOff=!1;break;case "values":this._animateOff=!0;this._refreshValue();for(b=0;b<f;b+=1)this._change(null,b);this._animateOff=!1;break;case "min":case "max":this._animateOff=!0;this._refreshValue();this._animateOff=!1;break;case "range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var a=this.options.value;return a=this._trimAlignValue(a)},
_values:function(a){var c,b;if(arguments.length)return c=this.options.values[a],c=this._trimAlignValue(c);if(this.options.values&&this.options.values.length){c=this.options.values.slice();for(b=0;b<c.length;b+=1)c[b]=this._trimAlignValue(c[b]);return c}return[]},_trimAlignValue:function(a){if(a<=this._valueMin())return this._valueMin();if(a>=this._valueMax())return this._valueMax();var c=0<this.options.step?this.options.step:1,b=(a-this._valueMin())%c;a-=b;2*Math.abs(b)>=c&&(a+=0<b?c:-c);return parseFloat(a.toFixed(5))},
_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var j,c,b,f,e,h=this.options.range,d=this.options,g=this,m=!this._animateOff?d.animate:!1,p={};if(this.options.values&&this.options.values.length)this.handles.each(function(b){c=100*((g.values(b)-g._valueMin())/(g._valueMax()-g._valueMin()));p["horizontal"===g.orientation?"left":"bottom"]=c+"%";a(this).stop(1,1)[m?"animate":"css"](p,d.animate);if(!0===g.options.range)if("horizontal"===
g.orientation){if(0===b)g.range.stop(1,1)[m?"animate":"css"]({left:c+"%"},d.animate);if(1===b)g.range[m?"animate":"css"]({width:c-j+"%"},{queue:!1,duration:d.animate})}else{if(0===b)g.range.stop(1,1)[m?"animate":"css"]({bottom:c+"%"},d.animate);if(1===b)g.range[m?"animate":"css"]({height:c-j+"%"},{queue:!1,duration:d.animate})}j=c});else{b=this.value();f=this._valueMin();e=this._valueMax();c=e!==f?100*((b-f)/(e-f)):0;p["horizontal"===this.orientation?"left":"bottom"]=c+"%";this.handle.stop(1,1)[m?
"animate":"css"](p,d.animate);if("min"===h&&"horizontal"===this.orientation)this.range.stop(1,1)[m?"animate":"css"]({width:c+"%"},d.animate);if("max"===h&&"horizontal"===this.orientation)this.range[m?"animate":"css"]({width:100-c+"%"},{queue:!1,duration:d.animate});if("min"===h&&"vertical"===this.orientation)this.range.stop(1,1)[m?"animate":"css"]({height:c+"%"},d.animate);if("max"===h&&"vertical"===this.orientation)this.range[m?"animate":"css"]({height:100-c+"%"},{queue:!1,duration:d.animate})}},
_handleEvents:{keydown:function(j){var c,b,f,e=a(j.target).data("ui-slider-handle-index");switch(j.keyCode){case a.ui.keyCode.HOME:case a.ui.keyCode.END:case a.ui.keyCode.PAGE_UP:case a.ui.keyCode.PAGE_DOWN:case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:if(j.preventDefault(),!this._keySliding&&(this._keySliding=!0,a(j.target).addClass("ui-state-active"),c=this._start(j,e),!1===c))return}f=this.options.step;c=this.options.values&&this.options.values.length?
b=this.values(e):b=this.value();switch(j.keyCode){case a.ui.keyCode.HOME:b=this._valueMin();break;case a.ui.keyCode.END:b=this._valueMax();break;case a.ui.keyCode.PAGE_UP:b=this._trimAlignValue(c+(this._valueMax()-this._valueMin())/5);break;case a.ui.keyCode.PAGE_DOWN:b=this._trimAlignValue(c-(this._valueMax()-this._valueMin())/5);break;case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:if(c===this._valueMax())return;b=this._trimAlignValue(c+f);break;case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:if(c===
this._valueMin())return;b=this._trimAlignValue(c-f)}this._slide(j,e,b)},click:function(a){a.preventDefault()},keyup:function(j){var c=a(j.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(j,c),this._change(j,c),a(j.target).removeClass("ui-state-active"))}}})})(jQuery);
(function(a){function j(a){return function(){var b=this.element.val();a.apply(this,arguments);this._refresh();b!==this.element.val()&&this._trigger("change")}}a.widget("ui.spinner",{version:"1.10.2",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max);
this._setOption("min",this.options.min);this._setOption("step",this.options.step);this._value(this.element.val(),!0);this._draw();this._on(this._events);this._refresh();this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var c={},b=this.element;a.each(["min","max","step"],function(a,e){var h=b.attr(e);void 0!==h&&h.length&&(c[e]=h)});return c},_events:{keydown:function(a){this._start(a)&&this._keydown(a)&&a.preventDefault()},keyup:"_stop",
focus:function(){this.previous=this.element.val()},blur:function(a){this.cancelBlur?delete this.cancelBlur:(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",a))},mousewheel:function(a,b){if(b){if(!this.spinning&&!this._start(a))return!1;this._spin((0<b?1:-1)*this.options.step,a);clearTimeout(this.mousewheelTimer);this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(a)},100);a.preventDefault()}},"mousedown .ui-spinner-button":function(c){function b(){this.element[0]!==
this.document[0].activeElement&&(this.element.focus(),this.previous=f,this._delay(function(){this.previous=f}))}var f;f=this.element[0]===this.document[0].activeElement?this.previous:this.element.val();c.preventDefault();b.call(this);this.cancelBlur=!0;this._delay(function(){delete this.cancelBlur;b.call(this)});!1!==this._start(c)&&this._repeat(null,a(c.currentTarget).hasClass("ui-spinner-up")?1:-1,c)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(c){if(a(c.currentTarget).hasClass("ui-state-active")){if(!1===
this._start(c))return!1;this._repeat(null,a(c.currentTarget).hasClass("ui-spinner-up")?1:-1,c)}},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var a=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton");this.buttons=a.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all");this.buttons.height()>Math.ceil(0.5*a.height())&&0<a.height()&&
a.height(a.height());this.options.disabled&&this.disable()},_keydown:function(c){var b=this.options,f=a.ui.keyCode;switch(c.keyCode){case f.UP:return this._repeat(null,1,c),!0;case f.DOWN:return this._repeat(null,-1,c),!0;case f.PAGE_UP:return this._repeat(null,b.page,c),!0;case f.PAGE_DOWN:return this._repeat(null,-b.page,c),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+
this.options.icons.up+"'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon "+this.options.icons.down+"'>&#9660;</span></a>"},_start:function(a){if(!this.spinning&&!1===this._trigger("start",a))return!1;this.counter||(this.counter=1);return this.spinning=!0},_repeat:function(a,b,f){a=a||500;clearTimeout(this.timer);this.timer=this._delay(function(){this._repeat(40,b,f)},a);this._spin(b*this.options.step,f)},_spin:function(a,b){var f=this.value()||0;this.counter||
(this.counter=1);f=this._adjustValue(f+a*this._increment(this.counter));if(!this.spinning||!1!==this._trigger("spin",b,{value:f}))this._value(f),this.counter++},_increment:function(c){var b=this.options.incremental;return b?a.isFunction(b)?b(c):Math.floor(c*c*c/5E4-c*c/500+17*c/200+1):1},_precision:function(){var a=this._precisionOf(this.options.step);null!==this.options.min&&(a=Math.max(a,this._precisionOf(this.options.min)));return a},_precisionOf:function(a){a=a.toString();var b=a.indexOf(".");
return-1===b?0:a.length-b-1},_adjustValue:function(a){var b,f=this.options;b=null!==f.min?f.min:0;a=Math.round((a-b)/f.step)*f.step;a=b+a;a=parseFloat(a.toFixed(this._precision()));return null!==f.max&&a>f.max?f.max:null!==f.min&&a<f.min?f.min:a},_stop:function(a){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",a))},_setOption:function(a,b){if("culture"===a||"numberFormat"===a){var f=this._parse(this.element.val());this.options[a]=
b;this.element.val(this._format(f))}else{if("max"===a||"min"===a||"step"===a)"string"===typeof b&&(b=this._parse(b));"icons"===a&&(this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(b.up),this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(b.down));this._super(a,b);"disabled"===a&&(b?(this.element.prop("disabled",!0),this.buttons.button("disable")):(this.element.prop("disabled",!1),this.buttons.button("enable")))}},_setOptions:j(function(a){this._super(a);
this._value(this.element.val())}),_parse:function(a){"string"===typeof a&&""!==a&&(a=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(a,10,this.options.culture):+a);return""===a||isNaN(a)?null:a},_format:function(a){return""===a?"":window.Globalize&&this.options.numberFormat?Globalize.format(a,this.options.numberFormat,this.options.culture):a},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},
_value:function(a,b){var f;""!==a&&(f=this._parse(a),null!==f&&(b||(f=this._adjustValue(f)),a=this._format(f)));this.element.val(a);this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");this.uiSpinner.replaceWith(this.element)},stepUp:j(function(a){this._stepUp(a)}),_stepUp:function(a){this._start()&&(this._spin((a||1)*this.options.step),
this._stop())},stepDown:j(function(a){this._stepDown(a)}),_stepDown:function(a){this._start()&&(this._spin((a||1)*-this.options.step),this._stop())},pageUp:j(function(a){this._stepUp((a||1)*this.options.page)}),pageDown:j(function(a){this._stepDown((a||1)*this.options.page)}),value:function(a){if(!arguments.length)return this._parse(this.element.val());j(this._value).call(this,a)},widget:function(){return this.uiSpinner}})})(jQuery);
(function(a,j){function c(a){return 1<a.hash.length&&decodeURIComponent(a.href.replace(f,""))===decodeURIComponent(location.href.replace(f,""))}var b=0,f=/#.*$/;a.widget("ui.tabs",{version:"1.10.2",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var b=this,c=this.options;this.running=!1;this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",
c.collapsible).delegate(".ui-tabs-nav > li","mousedown"+this.eventNamespace,function(b){a(this).is(".ui-state-disabled")&&b.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){a(this).closest("li").is(".ui-state-disabled")&&this.blur()});this._processTabs();c.active=this._initialActive();a.isArray(c.disabled)&&(c.disabled=a.unique(c.disabled.concat(a.map(this.tabs.filter(".ui-state-disabled"),function(a){return b.tabs.index(a)}))).sort());this.active=!1!==this.options.active&&
this.anchors.length?this._findActive(c.active):a();this._refresh();this.active.length&&this.load(c.active)},_initialActive:function(){var b=this.options.active,c=this.options.collapsible,d=location.hash.substring(1);if(null===b&&(d&&this.tabs.each(function(c,f){if(a(f).attr("aria-controls")===d)return b=c,!1}),null===b&&(b=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),null===b||-1===b))b=this.tabs.length?0:!1;!1!==b&&(b=this.tabs.index(this.tabs.eq(b)),-1===b&&(b=c?!1:0));!c&&(!1===b&&this.anchors.length)&&
(b=0);return b},_getCreateEventData:function(){return{tab:this.active,panel:!this.active.length?a():this._getPanelForTab(this.active)}},_tabKeydown:function(b){var c=a(this.document[0].activeElement).closest("li"),d=this.tabs.index(c),f=!0;if(!this._handlePageNav(b)){switch(b.keyCode){case a.ui.keyCode.RIGHT:case a.ui.keyCode.DOWN:d++;break;case a.ui.keyCode.UP:case a.ui.keyCode.LEFT:f=!1;d--;break;case a.ui.keyCode.END:d=this.anchors.length-1;break;case a.ui.keyCode.HOME:d=0;break;case a.ui.keyCode.SPACE:b.preventDefault();
clearTimeout(this.activating);this._activate(d);return;case a.ui.keyCode.ENTER:b.preventDefault();clearTimeout(this.activating);this._activate(d===this.options.active?!1:d);return;default:return}b.preventDefault();clearTimeout(this.activating);d=this._focusNextTab(d,f);b.ctrlKey||(c.attr("aria-selected","false"),this.tabs.eq(d).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",d)},this.delay))}},_panelKeydown:function(b){!this._handlePageNav(b)&&(b.ctrlKey&&
b.keyCode===a.ui.keyCode.UP)&&(b.preventDefault(),this.active.focus())},_handlePageNav:function(b){if(b.altKey&&b.keyCode===a.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(b.altKey&&b.keyCode===a.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(b,c){function d(){b>f&&(b=0);0>b&&(b=f);return b}for(var f=this.tabs.length-1;-1!==a.inArray(d(),this.options.disabled);)b=c?b+1:b-1;return b},
_focusNextTab:function(a,b){a=this._findNextTab(a,b);this.tabs.eq(a).focus();return a},_setOption:function(a,b){"active"===a?this._activate(b):"disabled"===a?this._setupDisabled(b):(this._super(a,b),"collapsible"===a&&(this.element.toggleClass("ui-tabs-collapsible",b),!b&&!1===this.options.active&&this._activate(0)),"event"===a&&this._setupEvents(b),"heightStyle"===a&&this._setupHeightStyle(b))},_tabId:function(a){return a.attr("aria-controls")||"ui-tabs-"+ ++b},_sanitizeSelector:function(a){return a?
a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var b=this.options,c=this.tablist.children(":has(a[href])");b.disabled=a.map(c.filter(".ui-state-disabled"),function(a){return c.index(a)});this._processTabs();!1===b.active||!this.anchors.length?(b.active=!1,this.active=a()):this.active.length&&!a.contains(this.tablist[0],this.active[0])?this.tabs.length===b.disabled.length?(b.active=!1,this.active=a()):this._activate(this._findNextTab(Math.max(0,b.active-1),!1)):b.active=
this.tabs.index(this.active);this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled);this._setupEvents(this.options.event);this._setupHeightStyle(this.options.heightStyle);this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1});this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"});this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true",
"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var b=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist");this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1});this.anchors=this.tabs.map(function(){return a("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1});this.panels=
a();this.anchors.each(function(f,d){var g,j,p,r=a(d).uniqueId().attr("id"),y=a(d).closest("li"),t=y.attr("aria-controls");c(d)?(g=d.hash,j=b.element.find(b._sanitizeSelector(g))):(p=b._tabId(y),g="#"+p,j=b.element.find(g),j.length||(j=b._createPanel(p),j.insertAfter(b.panels[f-1]||b.tablist)),j.attr("aria-live","polite"));j.length&&(b.panels=b.panels.add(j));t&&y.data("ui-tabs-aria-controls",t);y.attr({"aria-controls":g.substring(1),"aria-labelledby":r});j.attr("aria-labelledby",r)});this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role",
"tabpanel")},_getList:function(){return this.element.find("ol,ul").eq(0)},_createPanel:function(b){return a("<div>").attr("id",b).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(b){a.isArray(b)&&(b.length?b.length===this.anchors.length&&(b=!0):b=!1);for(var c=0,d;d=this.tabs[c];c++)!0===b||-1!==a.inArray(c,b)?a(d).addClass("ui-state-disabled").attr("aria-disabled","true"):a(d).removeClass("ui-state-disabled").removeAttr("aria-disabled");
this.options.disabled=b},_setupEvents:function(b){var c={click:function(a){a.preventDefault()}};b&&a.each(b.split(" "),function(a,b){c[b]="_eventHandler"});this._off(this.anchors.add(this.tabs).add(this.panels));this._on(this.anchors,c);this._on(this.tabs,{keydown:"_tabKeydown"});this._on(this.panels,{keydown:"_panelKeydown"});this._focusable(this.tabs);this._hoverable(this.tabs)},_setupHeightStyle:function(b){var c,d=this.element.parent();"fill"===b?(c=d.height(),c-=this.element.outerHeight()-this.element.height(),
this.element.siblings(":visible").each(function(){var b=a(this),d=b.css("position");"absolute"===d||"fixed"===d||(c-=b.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){c-=a(this).outerHeight(!0)}),this.panels.each(function(){a(this).height(Math.max(0,c-a(this).innerHeight()+a(this).height()))}).css("overflow","auto")):"auto"===b&&(c=0,this.panels.each(function(){c=Math.max(c,a(this).height("").height())}).height(c))},_eventHandler:function(b){var c=this.options,d=this.active,
f=a(b.currentTarget).closest("li"),j=f[0]===d[0],p=j&&c.collapsible,r=p?a():this._getPanelForTab(f),y=!d.length?a():this._getPanelForTab(d),d={oldTab:d,oldPanel:y,newTab:p?a():f,newPanel:r};b.preventDefault();if(!f.hasClass("ui-state-disabled")&&!f.hasClass("ui-tabs-loading")&&!this.running&&!(j&&!c.collapsible||!1===this._trigger("beforeActivate",b,d)))c.active=p?!1:this.tabs.index(f),this.active=j?a():f,this.xhr&&this.xhr.abort(),!y.length&&!r.length&&a.error("jQuery UI Tabs: Mismatching fragment identifier."),
r.length&&this.load(this.tabs.index(f),b),this._toggle(b,d)},_toggle:function(b,c){function d(){j.running=!1;j._trigger("activate",b,c)}function f(){c.newTab.closest("li").addClass("ui-tabs-active ui-state-active");p.length&&j.options.show?j._show(p,j.options.show,d):(p.show(),d())}var j=this,p=c.newPanel,r=c.oldPanel;this.running=!0;r.length&&this.options.hide?this._hide(r,this.options.hide,function(){c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");f()}):(c.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
r.hide(),f());r.attr({"aria-expanded":"false","aria-hidden":"true"});c.oldTab.attr("aria-selected","false");p.length&&r.length?c.oldTab.attr("tabIndex",-1):p.length&&this.tabs.filter(function(){return 0===a(this).attr("tabIndex")}).attr("tabIndex",-1);p.attr({"aria-expanded":"true","aria-hidden":"false"});c.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(b){b=this._findActive(b);b[0]!==this.active[0]&&(b.length||(b=this.active),b=b.find(".ui-tabs-anchor")[0],this._eventHandler({target:b,
currentTarget:b,preventDefault:a.noop}))},_findActive:function(b){return!1===b?a():this.tabs.eq(b)},_getIndex:function(a){"string"===typeof a&&(a=this.anchors.index(this.anchors.filter("[href$='"+a+"']")));return a},_destroy:function(){this.xhr&&this.xhr.abort();this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId();
this.tabs.add(this.panels).each(function(){a.data(this,"ui-tabs-destroy")?a(this).remove():a(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")});this.tabs.each(function(){var b=a(this),c=b.data("ui-tabs-aria-controls");
c?b.attr("aria-controls",c).removeData("ui-tabs-aria-controls"):b.removeAttr("aria-controls")});this.panels.show();"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(b){var c=this.options.disabled;!1!==c&&(b===j?c=!1:(b=this._getIndex(b),c=a.isArray(c)?a.map(c,function(a){return a!==b?a:null}):a.map(this.tabs,function(a,c){return c!==b?c:null})),this._setupDisabled(c))},disable:function(b){var c=this.options.disabled;if(!0!==c){if(b===j)c=!0;else{b=this._getIndex(b);
if(-1!==a.inArray(b,c))return;c=a.isArray(c)?a.merge([b],c).sort():[b]}this._setupDisabled(c)}},load:function(b,f){b=this._getIndex(b);var d=this,g=this.tabs.eq(b),j=g.find(".ui-tabs-anchor"),p=this._getPanelForTab(g),r={tab:g,panel:p};if(!c(j[0])&&(this.xhr=a.ajax(this._ajaxSettings(j,f,r)))&&"canceled"!==this.xhr.statusText)g.addClass("ui-tabs-loading"),p.attr("aria-busy","true"),this.xhr.success(function(a){setTimeout(function(){p.html(a);d._trigger("load",f,r)},1)}).complete(function(a,b){setTimeout(function(){"abort"===
b&&d.panels.stop(!1,!0);g.removeClass("ui-tabs-loading");p.removeAttr("aria-busy");a===d.xhr&&delete d.xhr},1)})},_ajaxSettings:function(b,c,d){var f=this;return{url:b.attr("href"),beforeSend:function(b,e){return f._trigger("beforeLoad",c,a.extend({jqXHR:b,ajaxSettings:e},d))}}},_getPanelForTab:function(b){b=a(b).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+b))}})})(jQuery);
(function(a){var j=0;a.widget("ui.tooltip",{version:"1.10.2",options:{content:function(){var c=a(this).attr("title")||"";return a("<a>").text(c).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:"open",focusin:"open"});this.tooltips={};this.parents={};this.options.disabled&&this._disable()},_setOption:function(c,b){var f=this;"disabled"===
c?(this[b?"_disable":"_enable"](),this.options[c]=b):(this._super(c,b),"content"===c&&a.each(this.tooltips,function(a,b){f._updateContent(b)}))},_disable:function(){var c=this;a.each(this.tooltips,function(b,f){var e=a.Event("blur");e.target=e.currentTarget=f[0];c.close(e,!0)});this.element.find(this.options.items).addBack().each(function(){var b=a(this);b.is("[title]")&&b.data("ui-tooltip-title",b.attr("title")).attr("title","")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var c=
a(this);c.data("ui-tooltip-title")&&c.attr("title",c.data("ui-tooltip-title"))})},open:function(c){var b=this,f=a(c?c.target:this.element).closest(this.options.items);f.length&&!f.data("ui-tooltip-id")&&(f.attr("title")&&f.data("ui-tooltip-title",f.attr("title")),f.data("ui-tooltip-open",!0),c&&"mouseover"===c.type&&f.parents().each(function(){var c=a(this),f;c.data("ui-tooltip-open")&&(f=a.Event("blur"),f.target=f.currentTarget=this,b.close(f,!0));c.attr("title")&&(c.uniqueId(),b.parents[this.id]=
{element:this,title:c.attr("title")},c.attr("title",""))}),this._updateContent(f,c))},_updateContent:function(a,b){var f;f=this.options.content;var e=this,h=b?b.type:null;if("string"===typeof f)return this._open(b,a,f);(f=f.call(a[0],function(d){a.data("ui-tooltip-open")&&e._delay(function(){b&&(b.type=h);this._open(b,a,d)})}))&&this._open(b,a,f)},_open:function(c,b,f){function e(a){g.of=a;h.is(":hidden")||h.position(g)}var h,d,g=a.extend({},this.options.position);if(f)if(h=this._find(b),h.length)h.find(".ui-tooltip-content").html(f);
else{b.is("[title]")&&(c&&"mouseover"===c.type?b.attr("title",""):b.removeAttr("title"));h=this._tooltip(b);var j=h.attr("id"),p=(b.attr("aria-describedby")||"").split(/\s+/);p.push(j);b.data("ui-tooltip-id",j).attr("aria-describedby",a.trim(p.join(" ")));h.find(".ui-tooltip-content").html(f);this.options.track&&c&&/^mouse/.test(c.type)?(this._on(this.document,{mousemove:e}),e(c)):h.position(a.extend({of:b},this.options.position));h.hide();this._show(h,this.options.show);this.options.show&&this.options.show.delay&&
(d=this.delayedShow=setInterval(function(){h.is(":visible")&&(e(g.of),clearInterval(d))},a.fx.interval));this._trigger("open",c,{tooltip:h});f={keyup:function(c){c.keyCode===a.ui.keyCode.ESCAPE&&(c=a.Event(c),c.currentTarget=b[0],this.close(c,!0))},remove:function(){this._removeTooltip(h)}};if(!c||"mouseover"===c.type)f.mouseleave="close";if(!c||"focusin"===c.type)f.focusout="close";this._on(!0,b,f)}},close:function(c){var b=this,f=a(c?c.currentTarget:this.element),e=this._find(f);if(!this.closing){clearInterval(this.delayedShow);
f.data("ui-tooltip-title")&&f.attr("title",f.data("ui-tooltip-title"));var h=f.data("ui-tooltip-id"),d=(f.attr("aria-describedby")||"").split(/\s+/),h=a.inArray(h,d);-1!==h&&d.splice(h,1);f.removeData("ui-tooltip-id");(d=a.trim(d.join(" ")))?f.attr("aria-describedby",d):f.removeAttr("aria-describedby");e.stop(!0);this._hide(e,this.options.hide,function(){b._removeTooltip(a(this))});f.removeData("ui-tooltip-open");this._off(f,"mouseleave focusout keyup");f[0]!==this.element[0]&&this._off(f,"remove");
this._off(this.document,"mousemove");c&&"mouseleave"===c.type&&a.each(this.parents,function(c,d){a(d.element).attr("title",d.title);delete b.parents[c]});this.closing=!0;this._trigger("close",c,{tooltip:e});this.closing=!1}},_tooltip:function(c){var b="ui-tooltip-"+j++,f=a("<div>").attr({id:b,role:"tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||""));a("<div>").addClass("ui-tooltip-content").appendTo(f);f.appendTo(this.document[0].body);this.tooltips[b]=
c;return f},_find:function(c){return(c=c.data("ui-tooltip-id"))?a("#"+c):a()},_removeTooltip:function(a){a.remove();delete this.tooltips[a.attr("id")]},_destroy:function(){var c=this;a.each(this.tooltips,function(b,f){var e=a.Event("blur");e.target=e.currentTarget=f[0];c.close(e,!0);a("#"+b).remove();f.data("ui-tooltip-title")&&(f.attr("title",f.data("ui-tooltip-title")),f.removeData("ui-tooltip-title"))})}})})(jQuery);(function(a){a.fn.drag=function(b,c,e){var f="string"==typeof b?b:"",j=a.isFunction(b)?b:a.isFunction(c)?c:null;0!==f.indexOf("drag")&&(f="drag"+f);e=(b==j?c:e)||{};return j?this.bind(f,e,j):this.trigger(f)};var j=a.event,c=j.special,b=c.drag={defaults:{which:1,distance:0,not:":input",handle:null,relative:!1,drop:!0,click:!1},datakey:"dragdata",noBubble:!0,add:function(c){var d=a.data(this,b.datakey),e=c.data||{};d.related+=1;a.each(b.defaults,function(a){void 0!==e[a]&&(d[a]=e[a])})},remove:function(){a.data(this,
b.datakey).related-=1},setup:function(){if(!a.data(this,b.datakey)){var c=a.extend({related:0},b.defaults);a.data(this,b.datakey,c);j.add(this,"touchstart mousedown",b.init,c);this.attachEvent&&this.attachEvent("ondragstart",b.dontstart)}},teardown:function(){(a.data(this,b.datakey)||{}).related||(a.removeData(this,b.datakey),j.remove(this,"touchstart mousedown",b.init),b.textselect(!0),this.detachEvent&&this.detachEvent("ondragstart",b.dontstart))},init:function(e){if(!b.touched){var d=e.data,f;
if(!(0!=e.which&&0<d.which&&e.which!=d.which)&&!a(e.target).is(d.not)&&(!d.handle||a(e.target).closest(d.handle,e.currentTarget).length))if(b.touched="touchstart"==e.type?this:null,d.propagates=1,d.mousedown=this,d.interactions=[b.interaction(this,d)],d.target=e.target,d.pageX=e.pageX,d.pageY=e.pageY,d.dragging=null,f=b.hijack(e,"draginit",d),d.propagates){if((f=b.flatten(f))&&f.length)d.interactions=[],a.each(f,function(){d.interactions.push(b.interaction(this,d))});d.propagates=d.interactions.length;
!1!==d.drop&&c.drop&&c.drop.handler(e,d);b.textselect(!1);b.touched?j.add(b.touched,"touchmove touchend",b.handler,d):j.add(document,"mousemove mouseup",b.handler,d);if(!b.touched||d.live)return!1}}},interaction:function(c,d){var e=a(c)[d.relative?"position":"offset"]()||{top:0,left:0};return{drag:c,callback:new b.callback,droppable:[],offset:e}},handler:function(e){var d=e.data;switch(e.type){case !d.dragging&&"touchmove":e.preventDefault();case !d.dragging&&"mousemove":if(Math.pow(e.pageX-d.pageX,
2)+Math.pow(e.pageY-d.pageY,2)<Math.pow(d.distance,2))break;e.target=d.target;b.hijack(e,"dragstart",d);d.propagates&&(d.dragging=!0);case "touchmove":e.preventDefault();case "mousemove":if(d.dragging){b.hijack(e,"drag",d);if(d.propagates){!1!==d.drop&&c.drop&&c.drop.handler(e,d);break}e.type="mouseup"}default:b.touched?j.remove(b.touched,"touchmove touchend",b.handler):j.remove(document,"mousemove mouseup",b.handler),d.dragging&&(!1!==d.drop&&c.drop&&c.drop.handler(e,d),b.hijack(e,"dragend",d)),
b.textselect(!0),!1===d.click&&d.dragging&&a.data(d.mousedown,"suppress.click",(new Date).getTime()+5),d.dragging=b.touched=!1}},hijack:function(c,d,e,f,p){if(e){var r=c.originalEvent,y=c.type,t=d.indexOf("drop")?"drag":"drop",q,u=f||0,s,w;f=!isNaN(f)?f:e.interactions.length;c.type=d;c.originalEvent=null;e.results=[];do if((s=e.interactions[u])&&!("dragend"!==d&&s.cancelled))w=b.properties(c,e,s),s.results=[],a(p||s[t]||e.droppable).each(function(f,m){w.target=m;c.isPropagationStopped=function(){return!1};
q=m?j.dispatch.call(m,c,w):null;!1===q?("drag"==t&&(s.cancelled=!0,e.propagates-=1),"drop"==d&&(s[t][f]=null)):"dropinit"==d&&s.droppable.push(b.element(q)||m);"dragstart"==d&&(s.proxy=a(b.element(q)||s.drag)[0]);s.results.push(q);delete c.result;if("dropinit"!==d)return q}),e.results[u]=b.flatten(s.results),"dropinit"==d&&(s.droppable=b.flatten(s.droppable)),"dragstart"==d&&!s.cancelled&&w.update();while(++u<f);c.type=y;c.originalEvent=r;return b.flatten(e.results)}},properties:function(a,c,e){var f=
e.callback;f.drag=e.drag;f.proxy=e.proxy||e.drag;f.startX=c.pageX;f.startY=c.pageY;f.deltaX=a.pageX-c.pageX;f.deltaY=a.pageY-c.pageY;f.originalX=e.offset.left;f.originalY=e.offset.top;f.offsetX=f.originalX+f.deltaX;f.offsetY=f.originalY+f.deltaY;f.drop=b.flatten((e.drop||[]).slice());f.available=b.flatten((e.droppable||[]).slice());return f},element:function(a){if(a&&(a.jquery||1==a.nodeType))return a},flatten:function(c){return a.map(c,function(c){return c&&c.jquery?a.makeArray(c):c&&c.length?b.flatten(c):
c})},textselect:function(c){a(document)[c?"unbind":"bind"]("selectstart",b.dontstart).css("MozUserSelect",c?"":"none");document.unselectable=c?"off":"on"},dontstart:function(){return!1},callback:function(){}};b.callback.prototype={update:function(){c.drop&&this.available.length&&a.each(this.available,function(a){c.drop.locate(this,a)})}};var f=j.dispatch;j.dispatch=function(b){if(0<a.data(this,"suppress."+b.type)-(new Date).getTime())a.removeData(this,"suppress."+b.type);else return f.apply(this,
arguments)};var e=j.fixHooks.touchstart=j.fixHooks.touchmove=j.fixHooks.touchend=j.fixHooks.touchcancel={props:"clientX clientY pageX pageY screenX screenY".split(" "),filter:function(b,c){if(c){var f=c.touches&&c.touches[0]||c.changedTouches&&c.changedTouches[0]||null;f&&a.each(e.props,function(a,c){b[c]=f[c]})}return b}};c.draginit=c.dragstart=c.dragend=b})(jQuery);(function(){function a(a){function c(c,f){var h,w,B=c==window,C=f&&void 0!==f.message?f.message:void 0;f=a.extend({},a.blockUI.defaults,f||{});if(!f.ignoreIfBlocked||!a(c).data("blockUI.isBlocked")){f.overlayCSS=a.extend({},a.blockUI.defaults.overlayCSS,f.overlayCSS||{});h=a.extend({},a.blockUI.defaults.css,f.css||{});f.onOverlayClick&&(f.overlayCSS.cursor="pointer");w=a.extend({},a.blockUI.defaults.themedCSS,f.themedCSS||{});C=void 0===C?f.message:C;B&&y&&b(window,{fadeOut:0});if(C&&"string"!=typeof C&&
(C.parentNode||C.jquery)){var E=C.jquery?C[0]:C,z={};a(c).data("blockUI.history",z);z.el=E;z.parent=E.parentNode;z.display=E.style.display;z.position=E.style.position;z.parent&&z.parent.removeChild(E)}a(c).data("blockUI.onUnblock",f.onUnblock);var z=f.baseZ,D;D=m||f.forceIframe?a('<iframe class="blockUI" style="z-index:'+z++ +';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="'+f.iframeSrc+'"></iframe>'):a('<div class="blockUI" style="display:none"></div>');
E=f.theme?a('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:'+z++ +';display:none"></div>'):a('<div class="blockUI blockOverlay" style="z-index:'+z++ +';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');f.theme&&B?(z='<div class="blockUI '+f.blockMsgClass+' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:fixed">',f.title&&(z+='<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+
(f.title||"&nbsp;")+"</div>"),z+='<div class="ui-widget-content ui-dialog-content"></div></div>'):f.theme?(z='<div class="blockUI '+f.blockMsgClass+' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:'+(z+10)+';display:none;position:absolute">',f.title&&(z+='<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">'+(f.title||"&nbsp;")+"</div>"),z+='<div class="ui-widget-content ui-dialog-content"></div>',z+="</div>"):z=B?'<div class="blockUI '+f.blockMsgClass+' blockPage" style="z-index:'+
(z+10)+';display:none;position:fixed"></div>':'<div class="blockUI '+f.blockMsgClass+' blockElement" style="z-index:'+(z+10)+';display:none;position:absolute"></div>';z=a(z);C&&(f.theme?(z.css(w),z.addClass("ui-widget-content")):z.css(h));f.theme||E.css(f.overlayCSS);E.css("position",B?"fixed":"absolute");(m||f.forceIframe)&&D.css("opacity",0);h=[D,E,z];var L=B?a("body"):a(c);a.each(h,function(){this.appendTo(L)});f.theme&&(f.draggable&&a.fn.draggable)&&z.draggable({handle:".ui-dialog-titlebar",cancel:"li"});
w=r&&(!a.support.boxModel||0<a("object,embed",B?null:c).length);if(p||w){B&&(f.allowBodyStretch&&a.support.boxModel)&&a("html,body").css("height","100%");if((p||!a.support.boxModel)&&!B){w=parseInt(a.css(c,"borderTopWidth"),10)||0;var X=parseInt(a.css(c,"borderLeftWidth"),10)||0,A=w?"(0 - "+w+")":0,H=X?"(0 - "+X+")":0}a.each(h,function(a,b){var c=b[0].style;c.position="absolute";if(2>a)B?c.setExpression("height","Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:"+
f.quirksmodeOffsetHack+') + "px"'):c.setExpression("height",'this.parentNode.offsetHeight + "px"'),B?c.setExpression("width",'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"'):c.setExpression("width",'this.parentNode.offsetWidth + "px"'),H&&c.setExpression("left",H),A&&c.setExpression("top",A);else if(f.centerY)B&&c.setExpression("top",'(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'),
c.marginTop=0;else if(!f.centerY&&B){var d="((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "+(f.css&&f.css.top?parseInt(f.css.top,10):0)+') + "px"';c.setExpression("top",d)}})}C&&(f.theme?z.find(".ui-widget-content").append(C):z.append(C),(C.jquery||C.nodeType)&&a(C).show());(m||f.forceIframe)&&f.showOverlay&&D.show();if(f.fadeIn)h=f.onBlock?f.onBlock:g,D=f.showOverlay&&!C?h:g,h=C?h:g,f.showOverlay&&E._fadeIn(f.fadeIn,D),C&&z._fadeIn(f.fadeIn,
h);else if(f.showOverlay&&E.show(),C&&z.show(),f.onBlock)f.onBlock();e(1,c,f);B?(y=z[0],t=a(":input:enabled:visible",y),f.focusInput&&setTimeout(d,20)):(h=z[0],C=f.centerX,E=f.centerY,w=h.parentNode,z=h.style,D=(w.offsetWidth-h.offsetWidth)/2-(parseInt(a.css(w,"borderLeftWidth"),10)||0),h=(w.offsetHeight-h.offsetHeight)/2-(parseInt(a.css(w,"borderTopWidth"),10)||0),C&&(z.left=0<D?D+"px":"0"),E&&(z.top=0<h?h+"px":"0"));f.timeout&&(C=setTimeout(function(){B?a.unblockUI(f):a(c).unblock(f)},f.timeout),
a(c).data("blockUI.timeout",C))}}function b(b,c){var d,g=b==window,h=a(b),m=h.data("blockUI.history"),p=h.data("blockUI.timeout");p&&(clearTimeout(p),h.removeData("blockUI.timeout"));c=a.extend({},a.blockUI.defaults,c||{});e(0,b,c);null===c.onUnblock&&(c.onUnblock=h.data("blockUI.onUnblock"),h.removeData("blockUI.onUnblock"));var r;r=g?a("body").children().filter(".blockUI").add("body > .blockUI"):h.find(">.blockUI");c.cursorReset&&(1<r.length&&(r[1].style.cursor=c.cursorReset),2<r.length&&(r[2].style.cursor=
c.cursorReset));g&&(y=t=null);c.fadeOut?(d=r.length,r.fadeOut(c.fadeOut,function(){0===--d&&f(r,m,c,b)})):f(r,m,c,b)}function f(b,c,d,e){var f=a(e);b.each(function(){this.parentNode&&this.parentNode.removeChild(this)});c&&c.el&&(c.el.style.display=c.display,c.el.style.position=c.position,c.parent&&c.parent.appendChild(c.el),f.removeData("blockUI.history"));f.data("blockUI.static")&&f.css("position","static");if("function"==typeof d.onUnblock)d.onUnblock(e,d);b=a(document.body);c=b.width();d=b[0].style.width;
b.width(c-1).width(c);b[0].style.width=d}function e(b,c,d){var e=c==window;c=a(c);if(b||!(e&&!y||!e&&!c.data("blockUI.isBlocked")))c.data("blockUI.isBlocked",b),e&&(d.bindEvents&&(!b||d.showOverlay))&&(b?a(document).bind("mousedown mouseup keydown keypress keyup touchstart touchend touchmove",d,h):a(document).unbind("mousedown mouseup keydown keypress keyup touchstart touchend touchmove",h))}function h(b){if(b.keyCode&&9==b.keyCode&&y&&b.data.constrainTabKey){var c=t,e=b.shiftKey&&b.target===c[0];
if(!b.shiftKey&&b.target===c[c.length-1]||e)return setTimeout(function(){d(e)},10),!1}c=b.data;b=a(b.target);if(b.hasClass("blockOverlay")&&c.onOverlayClick)c.onOverlayClick();return 0<b.parents("div."+c.blockMsgClass).length?!0:0===b.parents().children().filter("div.blockUI").length}function d(a){t&&(a=t[!0===a?t.length-1:0])&&a.focus()}a.fn._fadeIn=a.fn.fadeIn;var g=a.noop||function(){},m=/MSIE/.test(navigator.userAgent),p=/MSIE 6.0/.test(navigator.userAgent)&&!/MSIE 8.0/.test(navigator.userAgent),
r=a.isFunction(document.createElement("div").style.setExpression);a.blockUI=function(a){c(window,a)};a.unblockUI=function(a){b(window,a)};a.growlUI=function(b,c,d,e){var f=a('<div class="growlUI"></div>');b&&f.append("<h1>"+b+"</h1>");c&&f.append("<h2>"+c+"</h2>");void 0===d&&(d=3E3);a.blockUI({message:f,fadeIn:700,fadeOut:1E3,centerY:!1,timeout:d,showOverlay:!1,onUnblock:e,css:a.blockUI.defaults.growlCSS})};a.fn.block=function(b){if(this[0]===window)return a.blockUI(b),this;var d=a.extend({},a.blockUI.defaults,
b||{});this.each(function(){var b=a(this);(!d.ignoreIfBlocked||!b.data("blockUI.isBlocked"))&&b.unblock({fadeOut:0})});return this.each(function(){"static"==a.css(this,"position")&&(this.style.position="relative",a(this).data("blockUI.static",!0));this.style.zoom=1;c(this,b)})};a.fn.unblock=function(c){return this[0]===window?(a.unblockUI(c),this):this.each(function(){b(this,c)})};a.blockUI.version=2.59;a.blockUI.defaults={message:"<h1>Please wait...</h1>",title:null,draggable:!0,theme:!1,css:{padding:0,
margin:0,width:"30%",top:"40%",left:"35%",textAlign:"center",color:"#000",border:"3px solid #aaa",backgroundColor:"#fff",cursor:"wait"},themedCSS:{width:"30%",top:"40%",left:"35%"},overlayCSS:{backgroundColor:"#000",opacity:0.6,cursor:"wait"},cursorReset:"default",growlCSS:{width:"350px",top:"10px",left:"",right:"10px",border:"none",padding:"5px",opacity:0.6,cursor:"default",color:"#fff",backgroundColor:"#000","-webkit-border-radius":"10px","-moz-border-radius":"10px","border-radius":"10px"},iframeSrc:/^https/i.test(window.location.href||
"")?"javascript:false":"about:blank",forceIframe:!1,baseZ:1E3,centerX:!0,centerY:!0,allowBodyStretch:!0,bindEvents:!0,constrainTabKey:!0,fadeIn:200,fadeOut:400,timeout:0,showOverlay:!0,focusInput:!0,onBlock:null,onUnblock:null,onOverlayClick:null,quirksmodeOffsetHack:4,blockMsgClass:"blockMsg",ignoreIfBlocked:!1};var y=null,t=[]}"function"===typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],a):a(jQuery)})();(function(){function a(a){throw a;}function j(a){return function(){return a}}function c(c){function y(a,b,c,d,e){var g=[];a=l.j(function(){var a=b(c,e)||[];0<g.length&&(l.a.Ya(t(g),a),d&&l.r.K(d,f,[c,a,e]));g.splice(0,g.length);l.a.P(g,a)},f,{W:a,Ka:function(){return 0==g.length||!l.a.X(g[0])}});return{M:g,j:a.pa()?a:p}}function t(a){for(;a.length&&!l.a.X(a[0]);)a.splice(0,1);if(1<a.length){for(var b=a[0],c=a[a.length-1],d=[b];b!==c;){b=b.nextSibling;if(!b)return;d.push(b)}Array.prototype.splice.apply(a,
[0,a.length].concat(d))}return a}function q(a,b,c,d,e){var f=Math.min,g=Math.max,h=[],j,k=a.length,l,q=b.length,m=q-k||1,p=k+q+1,u,s,w;for(j=0;j<=k;j++){s=u;h.push(u=[]);w=f(q,j+m);for(l=g(0,j-1);l<=w;l++)u[l]=l?j?a[j-1]===b[l-1]?s[l-1]:f(s[l]||p,u[l-1]||p)+1:l+1:j+1}f=[];g=[];m=[];j=k;for(l=q;j||l;)q=h[j][l]-1,l&&q===h[j][l-1]?g.push(f[f.length]={status:c,value:b[--l],index:l}):j&&q===h[j-1][l]?m.push(f[f.length]={status:d,value:a[--j],index:j}):(f.push({status:"retained",value:b[--l]}),--j);if(g.length&&
m.length){a=10*k;var r;for(b=c=0;(e||b<a)&&(r=g[c]);c++){for(d=0;h=m[d];d++)if(r.value===h.value){r.moved=h.index;h.moved=r.index;m.splice(d,1);b=d=0;break}b+=d}}return f.reverse()}function u(c,d,g,h,j){j=j||{};var k=c&&s(c),k=k&&k.ownerDocument,q=j.templateEngine||qb;l.za.vb(g,q,k);g=q.renderTemplate(g,h,j,k);("number"!=typeof g.length||0<g.length&&"number"!=typeof g[0].nodeType)&&a(Error("Template engine must return an array of DOM nodes"));k=e;switch(d){case "replaceChildren":l.e.N(c,g);k=b;break;
case "replaceNode":l.a.Ya(c,g);k=b;break;case "ignoreTargetNode":break;default:a(Error("Unknown renderMode: "+d))}k&&(w(g,h),j.afterRender&&l.r.K(j.afterRender,f,[g,h.$data]));return g}function s(a){return a.nodeType?a:0<a.length?a[0]:f}function w(a,b){if(a.length){var c=a[0],d=a[a.length-1];B(c,d,function(a){l.Da(b,a)});B(c,d,function(a){l.s.ib(a,[b])})}}function B(a,b,c){var d;for(b=l.e.nextSibling(b);a&&(d=a)!==b;)a=l.e.nextSibling(d),(1===d.nodeType||8===d.nodeType)&&c(d)}function C(b,c,d){b=
l.g.aa(b);for(var e=l.g.Q,f=0;f<b.length;f++){var g=b[f].key;if(e.hasOwnProperty(g)){var h=e[g];"function"===typeof h?(g=h(b[f].value))&&a(Error(g)):h||a(Error("This template engine does not support the '"+g+"' binding within its templates"))}}b="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+l.g.ba(b)+" } })()})";return d.createJavaScriptEvaluatorBlock(b)+c}function E(b,c,d,e){function g(a){return function(){return k[a]}}function h(){return k}var j=0,k,q;l.j(function(){var f=
d&&d instanceof l.z?d:new l.z(l.a.d(d)),m=f.$data;e&&l.eb(b,f);if(k=("function"==typeof c?c(f,b):c)||l.J.instance.getBindings(b,f)){if(0===j){j=1;for(var u in k){var s=l.c[u];s&&8===b.nodeType&&!l.e.I[u]&&a(Error("The binding '"+u+"' cannot be used with virtual elements"));if(s&&"function"==typeof s.init&&(s=(0,s.init)(b,g(u),h,m,f))&&s.controlsDescendantBindings)q!==p&&a(Error("Multiple bindings ("+q+" and "+u+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.")),
q=u}j=2}if(2===j)for(u in k)(s=l.c[u])&&"function"==typeof s.update&&(0,s.update)(b,g(u),h,m,f)}},f,{W:b});return{Nb:q===p}}function z(a,c,d){var e=b,g=1===c.nodeType;g&&l.e.Ta(c);if(g&&d||l.J.instance.nodeHasBindings(c))e=E(c,f,a,d).Nb;e&&D(a,c,!g)}function D(a,b,c){for(var d=l.e.firstChild(b);b=d;)d=l.e.nextSibling(b),z(a,b,c)}function L(a,b){var c=X(a,b);return c?0<c.length?c[c.length-1].nextSibling:a.nextSibling:f}function X(b,c){for(var d=b,e=1,g=[];d=d.nextSibling;){if(A(d)&&(e--,0===e))return g;
g.push(d);H(d)&&e++}c||a(Error("Cannot find closing comment tag to match: "+b.nodeValue));return f}function A(a){return 8==a.nodeType&&(ba?a.text:a.nodeValue).match($)}function H(a){return 8==a.nodeType&&(ba?a.text:a.nodeValue).match(Aa)}function k(a,b){for(var c=f;a!=c;)c=a,a=a.replace(S,function(a,c){return b[c]});return a}function U(){var a=[],b=[];this.save=function(c,d){var e=l.a.i(a,c);0<=e?b[e]=d:(a.push(c),b.push(d))};this.get=function(c){c=l.a.i(a,c);return 0<=c?b[c]:p}}function x(a,b,c){function d(f){var g=
b(a[f]);switch(typeof g){case "boolean":case "number":case "string":case "function":e[f]=g;break;case "object":case "undefined":var h=c.get(g);e[f]=h!==p?h:x(g,b,c)}}c=c||new U;a=b(a);if(!("object"==typeof a&&a!==f&&a!==p&&!(a instanceof Date)))return a;var e=a instanceof Array?[]:{};c.save(a,e);var g=a;if(g instanceof Array){for(var h=0;h<g.length;h++)d(h);"function"==typeof g.toJSON&&d("toJSON")}else for(h in g)d(h);return e}function ha(a,b){if(a)if(8==a.nodeType){var c=l.s.Ua(a.nodeValue);c!=f&&
b.push({sb:a,Fb:c})}else if(1==a.nodeType)for(var c=0,d=a.childNodes,e=d.length;c<e;c++)ha(d[c],b)}function ua(a,c,d,f){l.c[a]={init:function(a){l.a.f.set(a,ma,{});return{controlsDescendantBindings:b}},update:function(a,e,g,h,j){g=l.a.f.get(a,ma);e=l.a.d(e());h=!d!==!e;var k=!g.Za;if(k||c||h!==g.qb)k&&(g.Za=l.a.Ia(l.e.childNodes(a),b)),h?(k||l.e.N(a,l.a.Ia(g.Za)),l.Ea(f?f(j,e):j,a)):l.e.Y(a),g.qb=h}};l.g.Q[a]=e;l.e.I[a]=b}function za(a,b,c){c&&b!==l.k.q(a)&&l.k.T(a,b);b!==l.k.q(a)&&l.r.K(l.a.Ba,f,
[a,"change"])}var l="undefined"!==typeof c?c:{};l.b=function(a,b){for(var c=a.split("."),d=l,e=0;e<c.length-1;e++)d=d[c[e]];d[c[c.length-1]]=b};l.p=function(a,b,c){a[b]=c};l.version="2.2.1";l.b("version",l.version);l.a=new function(){function c(a,b){if("input"!==l.a.u(a)||!a.type||"click"!=b.toLowerCase())return e;var d=a.type;return"checkbox"==d||"radio"==d}var j=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,k={},q={};k[/Firefox\/2/i.test(g.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"];
k.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" ");for(var u in k){var s=k[u];if(s.length)for(var r=0,w=s.length;r<w;r++)q[s[r]]=u}var t={propertychange:b},B,k=3;u=d.createElement("div");for(s=u.getElementsByTagName("i");u.innerHTML="\x3c!--[if gt IE "+ ++k+"]><i></i><![endif]--\x3e",s[0];);B=4<k?k:p;return{Na:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],o:function(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c])},i:function(a,
b){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},lb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d]))return a[d];return f},ga:function(a,b){var c=l.a.i(a,b);0<=c&&a.splice(c,1)},Ga:function(a){a=a||[];for(var b=[],c=0,d=a.length;c<d;c++)0>l.a.i(b,a[c])&&b.push(a[c]);return b},V:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)c.push(b(a[d]));return c},fa:function(a,b){a=
a||[];for(var c=[],d=0,e=a.length;d<e;d++)b(a[d])&&c.push(a[d]);return c},P:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},extend:function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a},ka:function(a){for(;a.firstChild;)l.removeNode(a.firstChild)},Hb:function(a){a=l.a.L(a);for(var b=d.createElement("div"),c=0,e=a.length;c<e;c++)b.appendChild(l.A(a[c]));return b},Ia:function(a,c){for(var d=0,e=a.length,f=[];d<e;d++){var g=
a[d].cloneNode(b);f.push(c?l.A(g):g)}return f},N:function(a,b){l.a.ka(a);if(b)for(var c=0,d=b.length;c<d;c++)a.appendChild(b[c])},Ya:function(a,b){var c=a.nodeType?[a]:a;if(0<c.length){for(var d=c[0],e=d.parentNode,f=0,g=b.length;f<g;f++)e.insertBefore(b[f],d);f=0;for(g=c.length;f<g;f++)l.removeNode(c[f])}},bb:function(a,b){7>B?a.setAttribute("selected",b):a.selected=b},D:function(a){return(a||"").replace(j,"")},Rb:function(a,b){for(var c=[],d=(a||"").split(b),e=0,f=d.length;e<f;e++){var g=l.a.D(d[e]);
""!==g&&c.push(g)}return c},Ob:function(a,b){a=a||"";return b.length>a.length?e:a.substring(0,b.length)===b},tb:function(a,c){if(c.compareDocumentPosition)return 16==(c.compareDocumentPosition(a)&16);for(;a!=f;){if(a==c)return b;a=a.parentNode}return e},X:function(a){return l.a.tb(a,a.ownerDocument)},u:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},n:function(d,f,g){var h=B&&t[f];if(!h&&"undefined"!=typeof m){if(c(d,f)){var j=g;g=function(a,c){var d=this.checked;c&&(this.checked=c.nb!==
b);j.call(this,a);this.checked=d}}m(d).bind(f,g)}else!h&&"function"==typeof d.addEventListener?d.addEventListener(f,g,e):"undefined"!=typeof d.attachEvent?d.attachEvent("on"+f,function(a){g.call(d,a)}):a(Error("Browser doesn't support addEventListener or attachEvent"))},Ba:function(f,g){(!f||!f.nodeType)&&a(Error("element must be a DOM node when calling triggerEvent"));if("undefined"!=typeof m){var j=[];c(f,g)&&j.push({nb:f.checked});m(f).trigger(g,j)}else"function"==typeof d.createEvent?"function"==
typeof f.dispatchEvent?(j=d.createEvent(q[g]||"HTMLEvents"),j.initEvent(g,b,b,h,0,0,0,0,0,e,e,e,e,0,f),f.dispatchEvent(j)):a(Error("The supplied element doesn't support dispatchEvent")):"undefined"!=typeof f.fireEvent?(c(f,g)&&(f.checked=f.checked!==b),f.fireEvent("on"+g)):a(Error("Browser doesn't support triggering events"))},d:function(a){return l.$(a)?a():a},ua:function(a){return l.$(a)?a.t():a},da:function(a,b,c){if(b){var d=/[\w-]+/g,e=a.className.match(d)||[];l.a.o(b.match(d),function(a){var b=
l.a.i(e,a);0<=b?c||e.splice(b,1):c&&e.push(a)});a.className=e.join(" ")}},cb:function(a,b){var c=l.a.d(b);if(c===f||c===p)c="";if(3===a.nodeType)a.data=c;else{var e=l.e.firstChild(a);!e||3!=e.nodeType||l.e.nextSibling(e)?l.e.N(a,[d.createTextNode(c)]):e.data=c;l.a.wb(a)}},ab:function(a,b){a.name=b;if(7>=B)try{a.mergeAttributes(d.createElement("<input name='"+a.name+"'/>"),e)}catch(c){}},wb:function(a){9<=B&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},ub:function(a){if(9<=
B){var b=a.style.width;a.style.width=0;a.style.width=b}},Lb:function(a,b){a=l.a.d(a);b=l.a.d(b);for(var c=[],d=a;d<=b;d++)c.push(d);return c},L:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Pb:6===B,Qb:7===B,Z:B,Oa:function(a,b){for(var c=l.a.L(a.getElementsByTagName("input")).concat(l.a.L(a.getElementsByTagName("textarea"))),d="string"==typeof b?function(a){return a.name===b}:function(a){return b.test(a.name)},e=[],f=c.length-1;0<=f;f--)d(c[f])&&e.push(c[f]);return e},Ib:function(a){return"string"==
typeof a&&(a=l.a.D(a))?h.JSON&&h.JSON.parse?h.JSON.parse(a):(new Function("return "+a))():f},xa:function(b,c,d){("undefined"==typeof JSON||"undefined"==typeof JSON.stringify)&&a(Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js"));return JSON.stringify(l.a.d(b),c,d)},Jb:function(a,b,c){c=c||{};var e=c.params||{},f=c.includeFields||this.Na,g=
a;if("object"==typeof a&&"form"===l.a.u(a))for(var g=a.action,h=f.length-1;0<=h;h--)for(var j=l.a.Oa(a,f[h]),k=j.length-1;0<=k;k--)e[j[k].name]=j[k].value;b=l.a.d(b);var v=d.createElement("form");v.style.display="none";v.action=g;v.method="post";for(var q in b)a=d.createElement("input"),a.name=q,a.value=l.a.xa(l.a.d(b[q])),v.appendChild(a);for(q in e)a=d.createElement("input"),a.name=q,a.value=e[q],v.appendChild(a);d.body.appendChild(v);c.submitter?c.submitter(v):v.submit();setTimeout(function(){v.parentNode.removeChild(v)},
0)}}};l.b("utils",l.a);l.b("utils.arrayForEach",l.a.o);l.b("utils.arrayFirst",l.a.lb);l.b("utils.arrayFilter",l.a.fa);l.b("utils.arrayGetDistinctValues",l.a.Ga);l.b("utils.arrayIndexOf",l.a.i);l.b("utils.arrayMap",l.a.V);l.b("utils.arrayPushAll",l.a.P);l.b("utils.arrayRemoveItem",l.a.ga);l.b("utils.extend",l.a.extend);l.b("utils.fieldsIncludedWithJsonPost",l.a.Na);l.b("utils.getFormFields",l.a.Oa);l.b("utils.peekObservable",l.a.ua);l.b("utils.postJson",l.a.Jb);l.b("utils.parseJson",l.a.Ib);l.b("utils.registerEventHandler",
l.a.n);l.b("utils.stringifyJson",l.a.xa);l.b("utils.range",l.a.Lb);l.b("utils.toggleDomNodeCssClass",l.a.da);l.b("utils.triggerEvent",l.a.Ba);l.b("utils.unwrapObservable",l.a.d);Function.prototype.bind||(Function.prototype.bind=function(a){var b=this,c=Array.prototype.slice.call(arguments);a=c.shift();return function(){return b.apply(a,c.concat(Array.prototype.slice.call(arguments)))}});l.a.f=new function(){var a=0,c="__ko__"+(new Date).getTime(),d={};return{get:function(a,b){var c=l.a.f.la(a,e);
return c===p?p:c[b]},set:function(a,c,d){d===p&&l.a.f.la(a,e)===p||(l.a.f.la(a,b)[c]=d)},la:function(b,e){var f=b[c];if(!f||!("null"!==f&&d[f])){if(!e)return p;f=b[c]="ko"+a++;d[f]={}}return d[f]},clear:function(a){var g=a[c];return g?(delete d[g],a[c]=f,b):e}}};l.b("utils.domData",l.a.f);l.b("utils.domData.clear",l.a.f.clear);l.a.F=new function(){function c(a,b){var d=l.a.f.get(a,f);d===p&&b&&(d=[],l.a.f.set(a,f,d));return d}function d(a){var b=c(a,e);if(b)for(var b=b.slice(0),f=0;f<b.length;f++)b[f](a);
l.a.f.clear(a);"function"==typeof m&&"function"==typeof m.cleanData&&m.cleanData([a]);if(h[a.nodeType])for(b=a.firstChild;a=b;)b=a.nextSibling,8===a.nodeType&&d(a)}var f="__ko_domNodeDisposal__"+(new Date).getTime(),g={1:b,8:b,9:b},h={1:b,9:b};return{Ca:function(d,e){"function"!=typeof e&&a(Error("Callback must be a function"));c(d,b).push(e)},Xa:function(a,b){var d=c(a,e);d&&(l.a.ga(d,b),0==d.length&&l.a.f.set(a,f,p))},A:function(a){if(g[a.nodeType]&&(d(a),h[a.nodeType])){var b=[];l.a.P(b,a.getElementsByTagName("*"));
for(var c=0,e=b.length;c<e;c++)d(b[c])}return a},removeNode:function(a){l.A(a);a.parentNode&&a.parentNode.removeChild(a)}}};l.A=l.a.F.A;l.removeNode=l.a.F.removeNode;l.b("cleanNode",l.A);l.b("removeNode",l.removeNode);l.b("utils.domNodeDisposal",l.a.F);l.b("utils.domNodeDisposal.addDisposeCallback",l.a.F.Ca);l.b("utils.domNodeDisposal.removeDisposeCallback",l.a.F.Xa);l.a.ta=function(a){var b;if("undefined"!=typeof m)if(m.parseHTML)b=m.parseHTML(a);else{if((b=m.clean([a]))&&b[0]){for(a=b[0];a.parentNode&&
11!==a.parentNode.nodeType;)a=a.parentNode;a.parentNode&&a.parentNode.removeChild(a)}}else{var c=l.a.D(a).toLowerCase();b=d.createElement("div");c=c.match(/^<(thead|tbody|tfoot)/)&&[1,"<table>","</table>"]||!c.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!c.indexOf("<td")||!c.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||[0,"",""];a="ignored<div>"+c[1]+a+c[2]+"</div>";for("function"==typeof h.innerShiv?b.appendChild(h.innerShiv(a)):b.innerHTML=a;c[0]--;)b=b.lastChild;
b=l.a.L(b.lastChild.childNodes)}return b};l.a.ca=function(a,b){l.a.ka(a);b=l.a.d(b);if(b!==f&&b!==p)if("string"!=typeof b&&(b=b.toString()),"undefined"!=typeof m)m(a).html(b);else for(var c=l.a.ta(b),d=0;d<c.length;d++)a.appendChild(c[d])};l.b("utils.parseHtmlFragment",l.a.ta);l.b("utils.setHtml",l.a.ca);var ia={};l.s={ra:function(b){"function"!=typeof b&&a(Error("You can only pass a function to ko.memoization.memoize()"));var c=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*
(1+Math.random())|0).toString(16).substring(1);ia[c]=b;return"\x3c!--[ko_memo:"+c+"]--\x3e"},hb:function(c,d){var e=ia[c];e===p&&a(Error("Couldn't find any memo with ID "+c+". Perhaps it's already been unmemoized."));try{return e.apply(f,d||[]),b}finally{delete ia[c]}},ib:function(a,b){var c=[];ha(a,c);for(var d=0,e=c.length;d<e;d++){var f=c[d].sb,g=[f];b&&l.a.P(g,b);l.s.hb(c[d].Fb,g);f.nodeValue="";f.parentNode&&f.parentNode.removeChild(f)}},Ua:function(a){return(a=a.match(/^\[ko_memo\:(.*?)\]$/))?
a[1]:f}};l.b("memoization",l.s);l.b("memoization.memoize",l.s.ra);l.b("memoization.unmemoize",l.s.hb);l.b("memoization.parseMemoText",l.s.Ua);l.b("memoization.unmemoizeDomNodeAndDescendants",l.s.ib);l.Ma={throttle:function(a,b){a.throttleEvaluation=b;var c=f;return l.j({read:a,write:function(d){clearTimeout(c);c=setTimeout(function(){a(d)},b)}})},notify:function(a,b){a.equalityComparer="always"==b?j(e):l.m.fn.equalityComparer;return a}};l.b("extenders",l.Ma);l.fb=function(a,b,c){this.target=a;this.ha=
b;this.rb=c;l.p(this,"dispose",this.B)};l.fb.prototype.B=function(){this.Cb=b;this.rb()};l.S=function(){this.w={};l.a.extend(this,l.S.fn);l.p(this,"subscribe",this.ya);l.p(this,"extend",this.extend);l.p(this,"getSubscriptionsCount",this.yb)};l.S.fn={ya:function(a,b,c){c=c||"change";var d=new l.fb(this,b?a.bind(b):a,function(){l.a.ga(this.w[c],d)}.bind(this));this.w[c]||(this.w[c]=[]);this.w[c].push(d);return d},notifySubscribers:function(a,c){c=c||"change";this.w[c]&&l.r.K(function(){l.a.o(this.w[c].slice(0),
function(c){c&&c.Cb!==b&&c.ha(a)})},this)},yb:function(){var a=0,b;for(b in this.w)this.w.hasOwnProperty(b)&&(a+=this.w[b].length);return a},extend:function(a){var b=this;if(a)for(var c in a){var d=l.Ma[c];"function"==typeof d&&(b=d(b,a[c]))}return b}};l.Qa=function(a){return"function"==typeof a.ya&&"function"==typeof a.notifySubscribers};l.b("subscribable",l.S);l.b("isSubscribable",l.Qa);var aa=[];l.r={mb:function(a){aa.push({ha:a,La:[]})},end:function(){aa.pop()},Wa:function(b){l.Qa(b)||a(Error("Only subscribable things can act as dependencies"));
if(0<aa.length){var c=aa[aa.length-1];c&&!(0<=l.a.i(c.La,b))&&(c.La.push(b),c.ha(b))}},K:function(a,b,c){try{return aa.push(f),a.apply(b,c||[])}finally{aa.pop()}}};var la={undefined:b,"boolean":b,number:b,string:b};l.m=function(a){function b(){if(0<arguments.length){if(!b.equalityComparer||!b.equalityComparer(c,arguments[0]))b.H(),c=arguments[0],b.G();return this}l.r.Wa(b);return c}var c=a;l.S.call(b);b.t=function(){return c};b.G=function(){b.notifySubscribers(c)};b.H=function(){b.notifySubscribers(c,
"beforeChange")};l.a.extend(b,l.m.fn);l.p(b,"peek",b.t);l.p(b,"valueHasMutated",b.G);l.p(b,"valueWillMutate",b.H);return b};l.m.fn={equalityComparer:function(a,b){return a===f||typeof a in la?a===b:e}};var da=l.m.Kb="__ko_proto__";l.m.fn[da]=l.m;l.ma=function(a,c){return a===f||a===p||a[da]===p?e:a[da]===c?b:l.ma(a[da],c)};l.$=function(a){return l.ma(a,l.m)};l.Ra=function(a){return"function"==typeof a&&a[da]===l.m||"function"==typeof a&&a[da]===l.j&&a.zb?b:e};l.b("observable",l.m);l.b("isObservable",
l.$);l.b("isWriteableObservable",l.Ra);l.R=function(b){0==arguments.length&&(b=[]);b!==f&&b!==p&&!("length"in b)&&a(Error("The argument passed when initializing an observable array must be an array, or null, or undefined."));var c=l.m(b);l.a.extend(c,l.R.fn);return c};l.R.fn={remove:function(a){for(var b=this.t(),c=[],d="function"==typeof a?a:function(b){return b===a},e=0;e<b.length;e++){var f=b[e];d(f)&&(0===c.length&&this.H(),c.push(f),b.splice(e,1),e--)}c.length&&this.G();return c},removeAll:function(a){if(a===
p){var b=this.t(),c=b.slice(0);this.H();b.splice(0,b.length);this.G();return c}return!a?[]:this.remove(function(b){return 0<=l.a.i(a,b)})},destroy:function(a){var c=this.t(),d="function"==typeof a?a:function(b){return b===a};this.H();for(var e=c.length-1;0<=e;e--)d(c[e])&&(c[e]._destroy=b);this.G()},destroyAll:function(a){return a===p?this.destroy(j(b)):!a?[]:this.destroy(function(b){return 0<=l.a.i(a,b)})},indexOf:function(a){var b=this();return l.a.i(b,a)},replace:function(a,b){var c=this.indexOf(a);
0<=c&&(this.H(),this.t()[c]=b,this.G())}};l.a.o("pop push reverse shift sort splice unshift".split(" "),function(a){l.R.fn[a]=function(){var b=this.t();this.H();b=b[a].apply(b,arguments);this.G();return b}});l.a.o(["slice"],function(a){l.R.fn[a]=function(){var b=this();return b[a].apply(b,arguments)}});l.b("observableArray",l.R);l.j=function(c,d,g){function h(){l.a.o(x,function(a){a.B()});x=[]}function k(){var a=m.throttleEvaluation;a&&0<=a?(clearTimeout(A),A=setTimeout(q,a)):q()}function q(){if(!w)if(r&&
C())z();else{w=b;try{var a=l.a.V(x,function(a){return a.target});l.r.mb(function(b){var c;0<=(c=l.a.i(a,b))?a[c]=p:x.push(b.ya(k))});for(var c=t.call(d),f=a.length-1;0<=f;f--)a[f]&&x.splice(f,1)[0].B();r=b;m.notifySubscribers(s,"beforeChange");s=c}finally{l.r.end()}m.notifySubscribers(s);w=e;x.length||z()}}function m(){if(0<arguments.length)return"function"===typeof B?B.apply(d,arguments):a(Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.")),
this;r||q();l.r.Wa(m);return s}function u(){return!r||0<x.length}var s,r=e,w=e,t=c;t&&"object"==typeof t?(g=t,t=g.read):(g=g||{},t||(t=g.read));"function"!=typeof t&&a(Error("Pass a function that returns the value of the ko.computed"));var B=g.write,y=g.disposeWhenNodeIsRemoved||g.W||f,C=g.disposeWhen||g.Ka||j(e),z=h,x=[],A=f;d||(d=g.owner);m.t=function(){r||q();return s};m.xb=function(){return x.length};m.zb="function"===typeof g.write;m.B=function(){z()};m.pa=u;l.S.call(m);l.a.extend(m,l.j.fn);
l.p(m,"peek",m.t);l.p(m,"dispose",m.B);l.p(m,"isActive",m.pa);l.p(m,"getDependenciesCount",m.xb);g.deferEvaluation!==b&&q();if(y&&u()){z=function(){l.a.F.Xa(y,arguments.callee);h()};l.a.F.Ca(y,z);var E=C,C=function(){return!l.a.X(y)||E()}}return m};l.Bb=function(a){return l.ma(a,l.j)};c=l.m.Kb;l.j[c]=l.m;l.j.fn={};l.j.fn[c]=l.j;l.b("dependentObservable",l.j);l.b("computed",l.j);l.b("isComputed",l.Bb);l.gb=function(b){0==arguments.length&&a(Error("When calling ko.toJS, pass the object you want to convert."));
return x(b,function(a){for(var b=0;l.$(a)&&10>b;b++)a=a();return a})};l.toJSON=function(a,b,c){a=l.gb(a);return l.a.xa(a,b,c)};l.b("toJS",l.gb);l.b("toJSON",l.toJSON);l.k={q:function(a){switch(l.a.u(a)){case "option":return a.__ko__hasDomDataOptionValue__===b?l.a.f.get(a,l.c.options.sa):7>=l.a.Z?a.getAttributeNode("value").specified?a.value:a.text:a.value;case "select":return 0<=a.selectedIndex?l.k.q(a.options[a.selectedIndex]):p;default:return a.value}},T:function(a,c){switch(l.a.u(a)){case "option":switch(typeof c){case "string":l.a.f.set(a,
l.c.options.sa,p);"__ko__hasDomDataOptionValue__"in a&&delete a.__ko__hasDomDataOptionValue__;a.value=c;break;default:l.a.f.set(a,l.c.options.sa,c),a.__ko__hasDomDataOptionValue__=b,a.value="number"===typeof c?c:""}break;case "select":for(var d=a.options.length-1;0<=d;d--)if(l.k.q(a.options[d])==c){a.selectedIndex=d;break}break;default:if(c===f||c===p)c="";a.value=c}}};l.b("selectExtensions",l.k);l.b("selectExtensions.readValue",l.k.q);l.b("selectExtensions.writeValue",l.k.T);var S=/\@ko_token_(\d+)\@/g,
na=["true","false"],R=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i;l.g={Q:[],aa:function(a){var b=l.a.D(a);if(3>b.length)return[];"{"===b.charAt(0)&&(b=b.substring(1,b.length-1));a=[];for(var c=f,d,e=0;e<b.length;e++){var g=b.charAt(e);if(c===f)switch(g){case '"':case "'":case "/":c=e,d=g}else if(g==d&&"\\"!==b.charAt(e-1)){g=b.substring(c,e+1);a.push(g);var h="@ko_token_"+(a.length-1)+"@",b=b.substring(0,c)+h+b.substring(e+1),e=e-(g.length-h.length),c=f}}d=c=f;for(var j=0,q=f,e=0;e<b.length;e++){g=
b.charAt(e);if(c===f)switch(g){case "{":c=e;q=g;d="}";break;case "(":c=e;q=g;d=")";break;case "[":c=e,q=g,d="]"}g===q?j++:g===d&&(j--,0===j&&(g=b.substring(c,e+1),a.push(g),h="@ko_token_"+(a.length-1)+"@",b=b.substring(0,c)+h+b.substring(e+1),e-=g.length-h.length,c=f))}d=[];b=b.split(",");c=0;for(e=b.length;c<e;c++)j=b[c],q=j.indexOf(":"),0<q&&q<j.length-1?(g=j.substring(q+1),d.push({key:k(j.substring(0,q),a),value:k(g,a)})):d.push({unknown:k(j,a)});return d},ba:function(a){var b="string"===typeof a?
l.g.aa(a):a,c=[];a=[];for(var d,g=0;d=b[g];g++)if(0<c.length&&c.push(","),d.key){var h;a:{h=d.key;var j=l.a.D(h);switch(j.length&&j.charAt(0)){case "'":case '"':break a;default:h="'"+j+"'"}}d=d.value;c.push(h);c.push(":");c.push(d);d=l.a.D(d);0<=l.a.i(na,l.a.D(d).toLowerCase())?d=e:(j=d.match(R),d=j===f?e:j[1]?"Object("+j[1]+")"+j[2]:d);d&&(0<a.length&&a.push(", "),a.push(h+" : function(__ko_value) { "+d+" = __ko_value; }"))}else d.unknown&&c.push(d.unknown);b=c.join("");0<a.length&&(b=b+", '_ko_property_writers' : { "+
a.join("")+" } ");return b},Eb:function(a,c){for(var d=0;d<a.length;d++)if(l.a.D(a[d].key)==c)return b;return e},ea:function(a,b,c,d,e){if(!a||!l.Ra(a)){if((a=b()._ko_property_writers)&&a[c])a[c](d)}else(!e||a.t()!==d)&&a(d)}};l.b("expressionRewriting",l.g);l.b("expressionRewriting.bindingRewriteValidators",l.g.Q);l.b("expressionRewriting.parseObjectLiteral",l.g.aa);l.b("expressionRewriting.preProcessBindings",l.g.ba);l.b("jsonExpressionRewriting",l.g);l.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",
l.g.ba);var ba="\x3c!--test--\x3e"===d.createComment("test").text,Aa=ba?/^\x3c!--\s*ko(?:\s+(.+\s*\:[\s\S]*))?\s*--\x3e$/:/^\s*ko(?:\s+(.+\s*\:[\s\S]*))?\s*$/,$=ba?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,Ob={ul:b,ol:b};l.e={I:{},childNodes:function(a){return H(a)?X(a):a.childNodes},Y:function(a){if(H(a)){a=l.e.childNodes(a);for(var b=0,c=a.length;b<c;b++)l.removeNode(a[b])}else l.a.ka(a)},N:function(a,b){if(H(a)){l.e.Y(a);for(var c=a.nextSibling,d=0,e=b.length;d<e;d++)c.parentNode.insertBefore(b[d],
c)}else l.a.N(a,b)},Va:function(a,b){H(a)?a.parentNode.insertBefore(b,a.nextSibling):a.firstChild?a.insertBefore(b,a.firstChild):a.appendChild(b)},Pa:function(a,b,c){c?H(a)?a.parentNode.insertBefore(b,c.nextSibling):c.nextSibling?a.insertBefore(b,c.nextSibling):a.appendChild(b):l.e.Va(a,b)},firstChild:function(a){return!H(a)?a.firstChild:!a.nextSibling||A(a.nextSibling)?f:a.nextSibling},nextSibling:function(a){H(a)&&(a=L(a));return a.nextSibling&&A(a.nextSibling)?f:a.nextSibling},jb:function(a){return(a=
H(a))?a[1]:f},Ta:function(a){if(Ob[l.a.u(a)]){var c=a.firstChild;if(c){do if(1===c.nodeType){var d;d=c.firstChild;var e=f;if(d){do if(e)e.push(d);else if(H(d)){var g=L(d,b);g?d=g:e=[d]}else A(d)&&(e=[d]);while(d=d.nextSibling)}if(d=e){e=c.nextSibling;for(g=0;g<d.length;g++)e?a.insertBefore(d[g],e):a.appendChild(d[g])}}while(c=c.nextSibling)}}}};l.b("virtualElements",l.e);l.b("virtualElements.allowedBindings",l.e.I);l.b("virtualElements.emptyNode",l.e.Y);l.b("virtualElements.insertAfter",l.e.Pa);l.b("virtualElements.prepend",
l.e.Va);l.b("virtualElements.setDomNodeChildren",l.e.N);l.J=function(){this.Ha={}};l.a.extend(l.J.prototype,{nodeHasBindings:function(a){switch(a.nodeType){case 1:return a.getAttribute("data-bind")!=f;case 8:return l.e.jb(a)!=f;default:return e}},getBindings:function(a,b){var c=this.getBindingsString(a,b);return c?this.parseBindingsString(c,b,a):f},getBindingsString:function(a){switch(a.nodeType){case 1:return a.getAttribute("data-bind");case 8:return l.e.jb(a);default:return f}},parseBindingsString:function(b,
c,d){try{var e;if(!(e=this.Ha[b])){var f=this.Ha,g,h="with($context){with($data||{}){return{"+l.g.ba(b)+"}}}";g=new Function("$context","$element",h);e=f[b]=g}return e(c,d)}catch(j){a(Error("Unable to parse bindings.\nMessage: "+j+";\nBindings value: "+b))}}});l.J.instance=new l.J;l.b("bindingProvider",l.J);l.c={};l.z=function(a,b,c){b?(l.a.extend(this,b),this.$parentContext=b,this.$parent=b.$data,this.$parents=(b.$parents||[]).slice(0),this.$parents.unshift(this.$parent)):(this.$parents=[],this.$root=
a,this.ko=l);this.$data=a;c&&(this[c]=a)};l.z.prototype.createChildContext=function(a,b){return new l.z(a,this,b)};l.z.prototype.extend=function(a){var b=l.a.extend(new l.z,this);return l.a.extend(b,a)};l.eb=function(a,b){if(2==arguments.length)l.a.f.set(a,"__ko_bindingContext__",b);else return l.a.f.get(a,"__ko_bindingContext__")};l.Fa=function(a,c,d){1===a.nodeType&&l.e.Ta(a);return E(a,c,d,b)};l.Ea=function(a,c){(1===c.nodeType||8===c.nodeType)&&D(a,c,b)};l.Da=function(c,d){d&&1!==d.nodeType&&
8!==d.nodeType&&a(Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node"));d=d||h.document.body;z(c,d,b)};l.ja=function(a){switch(a.nodeType){case 1:case 8:var b=l.eb(a);if(b)return b;if(a.parentNode)return l.ja(a.parentNode)}return p};l.pb=function(a){return(a=l.ja(a))?a.$data:p};l.b("bindingHandlers",l.c);l.b("applyBindings",l.Da);l.b("applyBindingsToDescendants",l.Ea);l.b("applyBindingsToNode",l.Fa);l.b("contextFor",l.ja);l.b("dataFor",l.pb);
var pb={"class":"className","for":"htmlFor"};l.c.attr={update:function(a,b){var c=l.a.d(b())||{},d;for(d in c)if("string"==typeof d){var g=l.a.d(c[d]),h=g===e||g===f||g===p;h&&a.removeAttribute(d);8>=l.a.Z&&d in pb?(d=pb[d],h?a.removeAttribute(d):a[d]=g):h||a.setAttribute(d,g.toString());"name"===d&&l.a.ab(a,h?"":g.toString())}}};l.c.checked={init:function(a,c,d){l.a.n(a,"click",function(){var e;if("checkbox"==a.type)e=a.checked;else if("radio"==a.type&&a.checked)e=a.value;else return;var f=c(),g=
l.a.d(f);"checkbox"==a.type&&g instanceof Array?(e=l.a.i(g,a.value),a.checked&&0>e?f.push(a.value):!a.checked&&0<=e&&f.splice(e,1)):l.g.ea(f,d,"checked",e,b)});"radio"==a.type&&!a.name&&l.c.uniqueName.init(a,j(b))},update:function(a,b){var c=l.a.d(b());"checkbox"==a.type?a.checked=c instanceof Array?0<=l.a.i(c,a.value):c:"radio"==a.type&&(a.checked=a.value==c)}};l.c.css={update:function(a,c){var d=l.a.d(c());if("object"==typeof d)for(var f in d){var g=l.a.d(d[f]);l.a.da(a,f,g)}else d=String(d||""),
l.a.da(a,a.__ko__cssValue,e),a.__ko__cssValue=d,l.a.da(a,d,b)}};l.c.enable={update:function(a,c){var d=l.a.d(c());d&&a.disabled?a.removeAttribute("disabled"):!d&&!a.disabled&&(a.disabled=b)}};l.c.disable={update:function(a,b){l.c.enable.update(a,function(){return!l.a.d(b())})}};l.c.event={init:function(a,c,d,f){var g=c()||{},h;for(h in g)(function(){var g=h;"string"==typeof g&&l.a.n(a,g,function(a){var h,j=c()[g];if(j){var k=d();try{var q=l.a.L(arguments);q.unshift(f);h=j.apply(f,q)}finally{h!==b&&
(a.preventDefault?a.preventDefault():a.returnValue=e)}k[g+"Bubble"]===e&&(a.cancelBubble=b,a.stopPropagation&&a.stopPropagation())}})})()}};l.c.foreach={Sa:function(a){return function(){var b=a(),c=l.a.ua(b);if(!c||"number"==typeof c.length)return{foreach:b,templateEngine:l.C.oa};l.a.d(b);return{foreach:c.data,as:c.as,includeDestroyed:c.includeDestroyed,afterAdd:c.afterAdd,beforeRemove:c.beforeRemove,afterRender:c.afterRender,beforeMove:c.beforeMove,afterMove:c.afterMove,templateEngine:l.C.oa}}},
init:function(a,b){return l.c.template.init(a,l.c.foreach.Sa(b))},update:function(a,b,c,d,e){return l.c.template.update(a,l.c.foreach.Sa(b),c,d,e)}};l.g.Q.foreach=e;l.e.I.foreach=b;l.c.hasfocus={init:function(a,c,d){function g(f){a.__ko_hasfocusUpdating=b;var h=a.ownerDocument;"activeElement"in h&&(f=h.activeElement===a);h=c();l.g.ea(h,d,"hasfocus",f,b);a.__ko_hasfocusUpdating=e}var h=g.bind(f,b),j=g.bind(f,e);l.a.n(a,"focus",h);l.a.n(a,"focusin",h);l.a.n(a,"blur",j);l.a.n(a,"focusout",j)},update:function(a,
b){var c=l.a.d(b());a.__ko_hasfocusUpdating||(c?a.focus():a.blur(),l.r.K(l.a.Ba,f,[a,c?"focusin":"focusout"]))}};l.c.html={init:function(){return{controlsDescendantBindings:b}},update:function(a,b){l.a.ca(a,b())}};var ma="__ko_withIfBindingData";ua("if");ua("ifnot",e,b);ua("with",b,e,function(a,b){return a.createChildContext(b)});l.c.options={update:function(c,e,f){"select"!==l.a.u(c)&&a(Error("options binding applies only to SELECT elements"));for(var g=0==c.length,h=l.a.V(l.a.fa(c.childNodes,function(a){return a.tagName&&
"option"===l.a.u(a)&&a.selected}),function(a){return l.k.q(a)||a.innerText||a.textContent}),j=c.scrollTop,k=l.a.d(e());0<c.length;)l.A(c.options[0]),c.remove(0);if(k){f=f();var q=f.optionsIncludeDestroyed;"number"!=typeof k.length&&(k=[k]);if(f.optionsCaption){var m=d.createElement("option");l.a.ca(m,f.optionsCaption);l.k.T(m,p);c.appendChild(m)}e=0;for(var u=k.length;e<u;e++){var s=k[e];if(!s||!s._destroy||q){var m=d.createElement("option"),r=function(a,b,c){var d=typeof b;return"function"==d?b(a):
"string"==d?a[b]:c},w=r(s,f.optionsValue,s);l.k.T(m,l.a.d(w));s=r(s,f.optionsText,w);l.a.cb(m,s);c.appendChild(m)}}k=c.getElementsByTagName("option");e=q=0;for(u=k.length;e<u;e++)0<=l.a.i(h,l.k.q(k[e]))&&(l.a.bb(k[e],b),q++);c.scrollTop=j;g&&"value"in f&&za(c,l.a.ua(f.value),b);l.a.ub(c)}}};l.c.options.sa="__ko.optionValueDomData__";l.c.selectedOptions={init:function(a,b,c){l.a.n(a,"change",function(){var d=b(),e=[];l.a.o(a.getElementsByTagName("option"),function(a){a.selected&&e.push(l.k.q(a))});
l.g.ea(d,c,"value",e)})},update:function(b,c){"select"!=l.a.u(b)&&a(Error("values binding applies only to SELECT elements"));var d=l.a.d(c());d&&"number"==typeof d.length&&l.a.o(b.getElementsByTagName("option"),function(a){var b=0<=l.a.i(d,l.k.q(a));l.a.bb(a,b)})}};l.c.style={update:function(a,b){var c=l.a.d(b()||{}),d;for(d in c)if("string"==typeof d){var e=l.a.d(c[d]);a.style[d]=e||""}}};l.c.submit={init:function(c,d,f,g){"function"!=typeof d()&&a(Error("The value for a submit binding must be a function"));
l.a.n(c,"submit",function(a){var f,h=d();try{f=h.call(g,c)}finally{f!==b&&(a.preventDefault?a.preventDefault():a.returnValue=e)}})}};l.c.text={update:function(a,b){l.a.cb(a,b())}};l.e.I.text=b;l.c.uniqueName={init:function(a,b){if(b()){var c="ko_unique_"+ ++l.c.uniqueName.ob;l.a.ab(a,c)}}};l.c.uniqueName.ob=0;l.c.value={init:function(a,c,d){function f(){j=e;var b=c(),g=l.k.q(a);l.g.ea(b,d,"value",g)}var g=["change"],h=d().valueUpdate,j=e;h&&("string"==typeof h&&(h=[h]),l.a.P(g,h),g=l.a.Ga(g));if(l.a.Z&&
"input"==a.tagName.toLowerCase()&&("text"==a.type&&"off"!=a.autocomplete&&(!a.form||"off"!=a.form.autocomplete))&&-1==l.a.i(g,"propertychange"))l.a.n(a,"propertychange",function(){j=b}),l.a.n(a,"blur",function(){j&&f()});l.a.o(g,function(b){var c=f;l.a.Ob(b,"after")&&(c=function(){setTimeout(f,0)},b=b.substring(5));l.a.n(a,b,c)})},update:function(a,c){var d="select"===l.a.u(a),f=l.a.d(c()),g=l.k.q(a),h=f!=g;0===f&&0!==g&&"0"!==g&&(h=b);h&&(g=function(){l.k.T(a,f)},g(),d&&setTimeout(g,0));d&&0<a.length&&
za(a,f,e)}};l.c.visible={update:function(a,b){var c=l.a.d(b()),d="none"!=a.style.display;c&&!d?a.style.display="":!c&&d&&(a.style.display="none")}};l.c.click={init:function(a,b,c,d){return l.c.event.init.call(this,a,function(){var a={};a.click=b();return a},c,d)}};l.v=function(){};l.v.prototype.renderTemplateSource=function(){a(Error("Override renderTemplateSource"))};l.v.prototype.createJavaScriptEvaluatorBlock=function(){a(Error("Override createJavaScriptEvaluatorBlock"))};l.v.prototype.makeTemplateSource=
function(b,c){if("string"==typeof b){c=c||d;var e=c.getElementById(b);e||a(Error("Cannot find template with ID "+b));return new l.l.h(e)}if(1==b.nodeType||8==b.nodeType)return new l.l.O(b);a(Error("Unknown template type: "+b))};l.v.prototype.renderTemplate=function(a,b,c,d){a=this.makeTemplateSource(a,d);return this.renderTemplateSource(a,b,c)};l.v.prototype.isTemplateRewritten=function(a,c){return this.allowTemplateRewriting===e?b:this.makeTemplateSource(a,c).data("isRewritten")};l.v.prototype.rewriteTemplate=
function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data("isRewritten",b)};l.b("templateEngine",l.v);var dc=/(<[a-z]+\d*(\s+(?!data-bind=)[a-z0-9\-]+(=(\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind=(["'])([\s\S]*?)\5/gi,ab=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;l.za={vb:function(a,b,c){b.isTemplateRewritten(a,c)||b.rewriteTemplate(a,function(a){return l.za.Gb(a,b)},c)},Gb:function(a,b){return a.replace(dc,function(a,c,d,e,f,g,h){return C(h,c,b)}).replace(ab,function(a,c){return C(c,
"\x3c!-- ko --\x3e",b)})},kb:function(a){return l.s.ra(function(b,c){b.nextSibling&&l.Fa(b.nextSibling,a,c)})}};l.b("__tr_ambtns",l.za.kb);l.l={};l.l.h=function(a){this.h=a};l.l.h.prototype.text=function(){var a=l.a.u(this.h),a="script"===a?"text":"textarea"===a?"value":"innerHTML";if(0==arguments.length)return this.h[a];var b=arguments[0];"innerHTML"===a?l.a.ca(this.h,b):this.h[a]=b};l.l.h.prototype.data=function(a){if(1===arguments.length)return l.a.f.get(this.h,"templateSourceData_"+a);l.a.f.set(this.h,
"templateSourceData_"+a,arguments[1])};l.l.O=function(a){this.h=a};l.l.O.prototype=new l.l.h;l.l.O.prototype.text=function(){if(0==arguments.length){var a=l.a.f.get(this.h,"__ko_anon_template__")||{};a.Aa===p&&a.ia&&(a.Aa=a.ia.innerHTML);return a.Aa}l.a.f.set(this.h,"__ko_anon_template__",{Aa:arguments[0]})};l.l.h.prototype.nodes=function(){if(0==arguments.length)return(l.a.f.get(this.h,"__ko_anon_template__")||{}).ia;l.a.f.set(this.h,"__ko_anon_template__",{ia:arguments[0]})};l.b("templateSources",
l.l);l.b("templateSources.domElement",l.l.h);l.b("templateSources.anonymousTemplate",l.l.O);var qb;l.wa=function(b){b!=p&&!(b instanceof l.v)&&a(Error("templateEngine must inherit from ko.templateEngine"));qb=b};l.va=function(b,c,d,e,g){d=d||{};(d.templateEngine||qb)==p&&a(Error("Set a template engine before calling renderTemplate"));g=g||"replaceChildren";if(e){var h=s(e);return l.j(function(){var a=c&&c instanceof l.z?c:new l.z(l.a.d(c)),f="function"==typeof b?b(a.$data,a):b,a=u(e,g,f,a,d);"replaceNode"==
g&&(e=a,h=s(e))},f,{Ka:function(){return!h||!l.a.X(h)},W:h&&"replaceNode"==g?h.parentNode:h})}return l.s.ra(function(a){l.va(b,c,d,a,"replaceNode")})};l.Mb=function(a,b,c,d,e){function g(a,b){w(b,j);c.afterRender&&c.afterRender(b,a)}function h(b,d){j=e.createChildContext(l.a.d(b),c.as);j.$index=d;var g="function"==typeof a?a(b,j):a;return u(f,"ignoreTargetNode",g,j,c)}var j;return l.j(function(){var a=l.a.d(b)||[];"undefined"==typeof a.length&&(a=[a]);a=l.a.fa(a,function(a){return c.includeDestroyed||
a===p||a===f||!l.a.d(a._destroy)});l.r.K(l.a.$a,f,[d,a,h,c,g])},f,{W:d})};l.c.template={init:function(a,c){var d=l.a.d(c());if("string"!=typeof d&&!d.name&&(1==a.nodeType||8==a.nodeType))d=1==a.nodeType?a.childNodes:l.e.childNodes(a),d=l.a.Hb(d),(new l.l.O(a)).nodes(d);return{controlsDescendantBindings:b}},update:function(a,c,d,e,g){c=l.a.d(c());d={};e=b;var h,j=f;"string"!=typeof c&&(d=c,c=d.name,"if"in d&&(e=l.a.d(d["if"])),e&&"ifnot"in d&&(e=!l.a.d(d.ifnot)),h=l.a.d(d.data));"foreach"in d?j=l.Mb(c||
a,e&&d.foreach||[],d,a,g):e?(g="data"in d?g.createChildContext(h,d.as):g,j=l.va(c||a,g,d,a)):l.e.Y(a);g=j;(h=l.a.f.get(a,"__ko__templateComputedDomDataKey__"))&&"function"==typeof h.B&&h.B();l.a.f.set(a,"__ko__templateComputedDomDataKey__",g&&g.pa()?g:p)}};l.g.Q.template=function(a){a=l.g.aa(a);return 1==a.length&&a[0].unknown||l.g.Eb(a,"name")?f:"This template engine does not support anonymous templates nested within its templates"};l.e.I.template=b;l.b("setTemplateEngine",l.wa);l.b("renderTemplate",
l.va);l.a.Ja=function(a,b,c){a=a||[];b=b||[];return a.length<=b.length?q(a,b,"added","deleted",c):q(b,a,"deleted","added",c)};l.b("utils.compareArrays",l.a.Ja);l.a.$a=function(a,c,d,e,f){function g(a,b){z=k[b];r!==b&&(C[a]=z);z.na(r++);t(z.M);u.push(z);B.push(z)}function h(a,b){if(a)for(var c=0,d=b.length;c<d;c++)b[c]&&l.a.o(b[c].M,function(d){a(d,c,b[c].U)})}c=c||[];e=e||{};var j=l.a.f.get(a,"setDomNodeChildrenFromArrayMapping_lastMappingResult")===p,k=l.a.f.get(a,"setDomNodeChildrenFromArrayMapping_lastMappingResult")||
[],q=l.a.V(k,function(a){return a.U}),m=l.a.Ja(q,c),u=[],s=0,r=0,w=[],B=[];c=[];for(var C=[],q=[],z,x=0,A,E;A=m[x];x++)switch(E=A.moved,A.status){case "deleted":E===p&&(z=k[s],z.j&&z.j.B(),w.push.apply(w,t(z.M)),e.beforeRemove&&(c[x]=z,B.push(z)));s++;break;case "retained":g(x,s++);break;case "added":E!==p?g(x,E):(z={U:A.value,na:l.m(r++)},u.push(z),B.push(z),j||(q[x]=z))}h(e.beforeMove,C);l.a.o(w,e.beforeRemove?l.A:l.removeNode);for(var x=0,j=l.e.firstChild(a),D;z=B[x];x++){z.M||l.a.extend(z,y(a,
d,z.U,f,z.na));for(s=0;m=z.M[s];j=m.nextSibling,D=m,s++)m!==j&&l.e.Pa(a,m,D);!z.Ab&&f&&(f(z.U,z.M,z.na),z.Ab=b)}h(e.beforeRemove,c);h(e.afterMove,C);h(e.afterAdd,q);l.a.f.set(a,"setDomNodeChildrenFromArrayMapping_lastMappingResult",u)};l.b("utils.setDomNodeChildrenFromArrayMapping",l.a.$a);l.C=function(){this.allowTemplateRewriting=e};l.C.prototype=new l.v;l.C.prototype.renderTemplateSource=function(a){var c=!(9>l.a.Z)&&a.nodes?a.nodes():f;if(c)return l.a.L(c.cloneNode(b).childNodes);a=a.text();return l.a.ta(a)};
l.C.oa=new l.C;l.wa(l.C.oa);l.b("nativeTemplateEngine",l.C);l.qa=function(){var b=this.Db=function(){if("undefined"==typeof m||!m.tmpl)return 0;try{if(0<=m.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(c,e,g){g=g||{};2>b&&a(Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later."));var h=c.data("precompiled");h||(h=c.text()||"",h=m.template(f,"{{ko_with $item.koBindingContext}}"+h+"{{/ko_with}}"),
c.data("precompiled",h));c=[e.$data];e=m.extend({koBindingContext:e},g.templateOptions);e=m.tmpl(h,c,e);e.appendTo(d.createElement("div"));m.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return"{{ko_code ((function() { return "+a+" })()) }}"};this.addTemplate=function(a,b){d.write("<script type='text/html' id='"+a+"'>"+b+"\x3c/script>")};0<b&&(m.tmpl.tag.ko_code={open:"__.push($1 || '');"},m.tmpl.tag.ko_with={open:"with($1) {",close:"} "})};l.qa.prototype=new l.v;c=new l.qa;
0<c.Db&&l.wa(c);l.b("jqueryTmplTemplateEngine",l.qa)}var b=!0,f=null,e=!1,h=window,d=document,g=navigator,m=window.jQuery,p=void 0;"function"===typeof require&&"object"===typeof exports&&"object"===typeof module?c(module.exports||exports):"function"===typeof define&&define.amd?define(["exports"],c):c(h.ko={});b})();(function(a){"function"===typeof require&&"object"===typeof exports&&"object"===typeof module?a(require("knockout"),exports):"function"===typeof define&&define.amd?define(["knockout","exports"],a):a(ko,ko.validation={})})(function(a,j){function c(a,b,c){a.isValidating(!0);b.validator(a(),c.params||!0,function(d){var e=!1,f="";a.__valid__()&&(d.message?(e=d.isValid,f=d.message):e=d,e||(a.error(j.formatMessage(f||c.message||b.message,c.params)),a.__valid__(e)));a.isValidating(!1)})}if(void 0===typeof a)throw"Knockout is required, please ensure it is loaded before loading this validation plug-in";
var b=j;a.validation=b;var f={registerExtenders:!0,messagesOnModified:!0,errorsAsTitle:!0,errorsAsTitleOnModified:!1,messageTemplate:null,insertMessages:!0,parseInputAttributes:!1,writeInputAttributes:!1,decorateElement:!1,errorClass:null,errorElementClass:"validationElement",errorMessageClass:"validationMessage",grouping:{deep:!1,observable:!0}},e=a.utils.extend({},f),h=["required","pattern","min","max","step"],d=["email","number","date"],g,m=(new Date).getTime(),p={};g={isArray:function(a){return a.isArray||
"[object Array]"===Object.prototype.toString.call(a)},isObject:function(a){return null!==a&&"object"===typeof a},values:function(a){var b=[],c;for(c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b},getValue:function(a){return"function"===typeof a?a():a},hasAttribute:function(a,b){return null!==a.getAttribute(b)},getAttribute:function(a,b){return a.getAttribute(b)},setAttribute:function(a,b,c){return a.setAttribute(b,c)},isValidatable:function(a){return a&&a.rules&&a.isValid&&a.isModified},insertAfter:function(a,
b){a.parentNode.insertBefore(b,a.nextSibling)},newId:function(){return m+=1},getConfigOptions:function(a){return g.contextFor(a)||e},setDomData:function(a,b){var c=a.__ko_validation__;c||(a.__ko_validation__=c=g.newId());p[c]=b},getDomData:function(a){a=a.__ko_validation__;return!a?void 0:p[a]},contextFor:function(a){switch(a.nodeType){case 1:case 8:var b=g.getDomData(a);if(b)return b;if(a.parentNode)return g.contextFor(a.parentNode)}},isEmptyVal:function(a){if(void 0===a||null===a||""===a)return!0},
getOriginalElementTitle:function(a){var b=g.getAttribute(a,"data-orig-title"),c=a.title;return g.hasAttribute(a,"data-orig-title")?b:c}};var r,y=0;r={utils:g,init:function(b,c){if(!(0<y)||c)b=b||{},b.errorElementClass=b.errorElementClass||b.errorClass||e.errorElementClass,b.errorMessageClass=b.errorMessageClass||b.errorClass||e.errorMessageClass,a.utils.extend(e,b),e.registerExtenders&&j.registerExtenders(),y=1},configure:function(a){j.init(a)},reset:function(){e=jQuery.extend(e,f)},group:function(b,
c){c=a.utils.extend(a.utils.extend({},e.grouping),c);var d=a.observableArray([]),f=null,h=function E(b,e){var f=[],h=a.utils.unwrapObservable(b);e=void 0!==e?e:c.deep?1:-1;a.isObservable(b)&&(b.isValid||b.extend({validatable:!0}),d.push(b));h&&(g.isArray(h)?f=h:g.isObject(h)&&(f=g.values(h)));0!==e&&a.utils.arrayForEach(f,function(a){a&&!a.nodeType&&E(a,e+1)})};c.observable?(h(b),f=a.computed(function(){var b=[];a.utils.arrayForEach(d(),function(a){a.isValid()||b.push(a.error)});return b})):f=function(){var c=
[];d([]);h(b);a.utils.arrayForEach(d(),function(a){a.isValid()||c.push(a.error)});return c};f.showAllMessages=function(b){void 0===b&&(b=!0);f();a.utils.arrayForEach(d(),function(a){a.isModified(b)})};b.errors=f;b.isValid=function(){return 0===b.errors().length};b.isAnyMessageShown=function(){var b=!1;f();a.utils.arrayForEach(d(),function(a){!a.isValid()&&a.isModified()&&(b=!0)});return b};return f},formatMessage:function(b,c){return"function"===typeof b?b(c):b.replace(/\{0\}/gi,a.utils.unwrapObservable(c))},
addRule:function(a,b){a.extend({validatable:!0});a.rules.push(b);return a},addAnonymousRule:function(a,b){var c=g.newId();void 0===b.message&&(b.message="Error");j.rules[c]=b;j.addRule(a,{rule:c,params:b.params})},addExtender:function(b){a.extenders[b]=function(a,c){return c.message||c.onlyIf?j.addRule(a,{rule:b,message:c.message,params:g.isEmptyVal(c.params)?!0:c.params,condition:c.onlyIf}):j.addRule(a,{rule:b,params:c})}},registerExtenders:function(){if(e.registerExtenders)for(var b in j.rules)j.rules.hasOwnProperty(b)&&
(a.extenders[b]||j.addExtender(b))},insertValidationMessage:function(a){var b=document.createElement("SPAN");b.className=g.getConfigOptions(a).errorMessageClass;g.insertAfter(a,b);return b},parseInputValidationAttributes:function(b,c){a.utils.arrayForEach(h,function(a){g.hasAttribute(b,a)&&j.addRule(c(),{rule:a,params:b.getAttribute(a)||!0})});var e=b.getAttribute("type");a.utils.arrayForEach(d,function(a){a===e&&j.addRule(c(),{rule:"date"===a?"dateISO":a,params:!0})})},writeInputValidationAttributes:function(b,
c){var d=c();if(d&&d.rules){var e=d.rules();a.utils.arrayForEach(h,function(c){var d,f=a.utils.arrayFirst(e,function(a){return a.rule.toLowerCase()===c.toLowerCase()});f&&(d=f.params,"pattern"===f.rule&&f.params instanceof RegExp&&(d=f.params.source),b.setAttribute(c,d))});e=null}},makeBindingHandlerValidatable:function(b){var c=a.bindingHandlers[b].init;a.bindingHandlers[b].init=function(b,d,e,f,g){c(b,d,e);return a.bindingHandlers.validationCore.init(b,d,e,f,g)}}};a.utils.extend(b,r);b.rules={};
b.rules.required={validator:function(a,b){var c=/^\s+|\s+$/g,d;if(void 0===a||null===a)return!b;d=a;"string"===typeof a&&(d=a.replace(c,""));return!b?!0:0<(d+"").length},message:"This field is required."};b.rules.min={validator:function(a,b){return g.isEmptyVal(a)||a>=b},message:"Please enter a value greater than or equal to {0}."};b.rules.max={validator:function(a,b){return g.isEmptyVal(a)||a<=b},message:"Please enter a value less than or equal to {0}."};b.rules.minLength={validator:function(a,b){return g.isEmptyVal(a)||
a.length>=b},message:"Please enter at least {0} characters."};b.rules.maxLength={validator:function(a,b){return g.isEmptyVal(a)||a.length<=b},message:"Please enter no more than {0} characters."};b.rules.pattern={validator:function(a,b){return g.isEmptyVal(a)||null!==a.toString().match(b)},message:"Please check this value."};b.rules.step={validator:function(a,b){return g.isEmptyVal(a)||0===100*a%(100*b)},message:"The value must increment by {0}"};b.rules.email={validator:function(a,b){return!b?!0:
g.isEmptyVal(a)||b&&/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a)},
message:"Please enter a proper email address"};b.rules.date={validator:function(a,b){return!b?!0:g.isEmptyVal(a)||b&&!/Invalid|NaN/.test(new Date(a))},message:"Please enter a proper date"};b.rules.dateISO={validator:function(a,b){return!b?!0:g.isEmptyVal(a)||b&&/^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(a)},message:"Please enter a proper date"};b.rules.number={validator:function(a,b){return!b?!0:g.isEmptyVal(a)||b&&/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(a)},message:"Please enter a number"};
b.rules.digit={validator:function(a,b){return!b?!0:g.isEmptyVal(a)||b&&/^\d+$/.test(a)},message:"Please enter a digit"};b.rules.phoneUS={validator:function(a,b){if(!b)return!0;if("string"!==typeof a)return!1;if(g.isEmptyVal(a))return!0;a=a.replace(/\s+/g,"");return b&&9<a.length&&a.match(/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/)},message:"Please specify a valid phone number"};b.rules.equal={validator:function(a,b){return a===g.getValue(b)},message:"Values must equal"};b.rules.notEqual=
{validator:function(a,b){return a!==g.getValue(b)},message:"Please choose another value."};b.rules.unique={validator:function(b,c){var d=g.getValue(c.collection),e=g.getValue(c.externalValue),f=0;if(!b||!d)return!0;a.utils.arrayFilter(a.utils.unwrapObservable(d),function(a){b===(c.valueAccessor?c.valueAccessor(a):a)&&f++});return f<(void 0!==e&&b!==e?1:2)},message:"Please make sure the value is unique."};b.registerExtenders();a.bindingHandlers.validationCore={init:function(b,c){var d=g.getConfigOptions(b);
if(d.parseInputAttributes){var e=function(){j.parseInputValidationAttributes(b,c)};window.setImmediate?window.setImmediate(e):window.setTimeout(e,0)}d.insertMessages&&g.isValidatable(c())&&(e=j.insertValidationMessage(b),d.messageTemplate?a.renderTemplate(d.messageTemplate,{field:c()},null,e,"replaceNode"):a.applyBindingsToNode(e,{validationMessage:c()}));d.writeInputAttributes&&g.isValidatable(c())&&j.writeInputValidationAttributes(b,c);d.decorateElement&&g.isValidatable(c())&&a.applyBindingsToNode(b,
{validationElement:c()})},update:function(){}};r.makeBindingHandlerValidatable("value");r.makeBindingHandlerValidatable("checked");a.bindingHandlers.validationMessage={update:function(b,c){var d=c(),e=g.getConfigOptions(b);a.utils.unwrapObservable(d);var f=!1,h=!1;d.extend({validatable:!0});f=d.isModified();h=d.isValid();a.bindingHandlers.text.update(b,function(){return!e.messagesOnModified||f?h?null:d.error:null});a.bindingHandlers.visible.update(b,function(){return!e.messagesOnModified||f?!h:!1})}};
a.bindingHandlers.validationElement={update:function(b,c){var d=c(),e=g.getConfigOptions(b);a.utils.unwrapObservable(d);var f=!1,h=!1;d.extend({validatable:!0});f=d.isModified();h=d.isValid();a.bindingHandlers.css.update(b,function(){var a={},b=f?!h:!1;e.decorateElement||(b=!1);a[e.errorElementClass]=b;return a});e.errorsAsTitle&&(g.getAttribute(b,"data-orig-title"),g.getAttribute(b,"data-orig-title"),a.bindingHandlers.attr.update(b,function(){if(!e.errorsAsTitleOnModified||f)return h?{title:g.getOriginalElementTitle(b),
"data-orig-title":null}:{title:d.error,"data-orig-title":g.getOriginalElementTitle(b)}}))}};a.bindingHandlers.validationOptions={init:function(b,c){var d=a.utils.unwrapObservable(c());if(d){var f=a.utils.extend({},e);a.utils.extend(f,d);g.setDomData(b,f)}}};a.extenders.validation=function(b,c){a.utils.arrayForEach(g.isArray(c)?c:[c],function(a){j.addAnonymousRule(b,a)});return b};a.extenders.validatable=function(b,c){if(c&&!g.isValidatable(b)){b.error=a.observable(null);b.rules=a.observableArray();
b.isValidating=a.observable(!1);b.__valid__=a.observable(!0);b.isModified=a.observable(!1);var d=a.computed(function(){b();b.rules();j.validateObservable(b);return!0});b.isValid=a.computed(function(){return b.__valid__()});b.setError=function(a){b.error=a;b.__valid__(!1)};b.clearError=function(){b.error=null;b.__valid__(!0)};var e=b.subscribe(function(){b.isModified(!0)});b._disposeValidation=function(){b.isValid.dispose();b.rules.removeAll();b.isModified._subscriptions.change=[];b.isValidating._subscriptions.change=
[];b.__valid__._subscriptions.change=[];e.dispose();d.dispose();delete b.rules;delete b.error;delete b.isValid;delete b.isValidating;delete b.__valid__;delete b.isModified}}else!1===c&&g.isValidatable(b)&&b._disposeValidation&&b._disposeValidation();return b};b.validateObservable=function(a){for(var b=0,d,e,f=a.rules(),g=f.length;b<g;b++)if(e=f[b],!e.condition||e.condition())if(d=j.rules[e.rule],d.async||e.async)c(a,d,e);else{var h;h=a;d.validator(h(),void 0===e.params?!0:e.params)?h=!0:(h.error(j.formatMessage(e.message||
d.message,e.params)),h.__valid__(!1),h=!1);if(!h)return!1}a.error(null);a.__valid__(!0);return!0};a.validatedObservable=function(b){if(!j.utils.isObject(b))return a.observable(b).extend({validatable:!0});var c=a.observable(b);c.errors=j.group(b);c.isValid=a.computed(function(){return 0===c.errors().length});return c};b.localize=function(a){for(var b in a)j.rules.hasOwnProperty(b)&&(j.rules[b].message=a[b])};a.applyBindingsWithValidation=function(b,c,d){var e=arguments.length,f,g;2<e?(f=c,g=d):2>e?
f=document.body:arguments[1].nodeType?f=c:g=arguments[1];j.init();g&&j.utils.setDomData(f,g);a.applyBindings(b,c)};var t=a.applyBindings;a.applyBindings=function(a,b){j.init();t(a,b)}});(function(a){function j(){var a=!1,b=!1;this.stopPropagation=function(){a=!0};this.isPropagationStopped=function(){return a};this.stopImmediatePropagation=function(){b=!0};this.isImmediatePropagationStopped=function(){return b}}function c(){this.__nonDataRow=!0}function b(){this.__group=!0;this.count=this.level=0;this.title=this.value=null;this.collapsed=!1;this.totals=null;this.rows=[];this.groupingKey=this.groups=null}function f(){this.__groupTotals=!0;this.group=null}function e(){var a=null;this.isActive=
function(b){return b?a===b:null!==a};this.activate=function(b){if(b!==a){if(null!==a)throw"SlickGrid.EditorLock.activate: an editController is still active, can't activate another editController";if(!b.commitCurrentEdit)throw"SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()";if(!b.cancelCurrentEdit)throw"SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()";a=b}};this.deactivate=function(b){if(a!==b)throw"SlickGrid.EditorLock.deactivate: specified editController is not the currently active one";
a=null};this.commitCurrentEdit=function(){return a?a.commitCurrentEdit():!0};this.cancelCurrentEdit=function(){return a?a.cancelCurrentEdit():!0}}a.extend(!0,window,{Slick:{Event:function(){var a=[];this.subscribe=function(b){a.push(b)};this.unsubscribe=function(b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)};this.notify=function(b,c,e){c=c||new j;e=e||this;for(var f,r=0;r<a.length&&!c.isPropagationStopped()&&!c.isImmediatePropagationStopped();r++)f=a[r].call(e,c,b);return f}},EventData:j,
EventHandler:function(){var a=[];this.subscribe=function(b,c){a.push({event:b,handler:c});b.subscribe(c);return this};this.unsubscribe=function(b,c){for(var e=a.length;e--;)if(a[e].event===b&&a[e].handler===c){a.splice(e,1);b.unsubscribe(c);return}return this};this.unsubscribeAll=function(){for(var b=a.length;b--;)a[b].event.unsubscribe(a[b].handler);a=[];return this}},Range:function(a,b,c,e){void 0===c&&void 0===e&&(c=a,e=b);this.fromRow=Math.min(a,c);this.fromCell=Math.min(b,e);this.toRow=Math.max(a,
c);this.toCell=Math.max(b,e);this.isSingleRow=function(){return this.fromRow==this.toRow};this.isSingleCell=function(){return this.fromRow==this.toRow&&this.fromCell==this.toCell};this.contains=function(a,b){return a>=this.fromRow&&a<=this.toRow&&b>=this.fromCell&&b<=this.toCell};this.toString=function(){return this.isSingleCell()?"("+this.fromRow+":"+this.fromCell+")":"("+this.fromRow+":"+this.fromCell+" - "+this.toRow+":"+this.toCell+")"}},NonDataRow:c,Group:b,GroupTotals:f,EditorLock:e,GlobalEditorLock:new e}});
b.prototype=new c;b.prototype.equals=function(a){return this.value===a.value&&this.count===a.count&&this.collapsed===a.collapsed};f.prototype=new c})(jQuery);/*

 (c) 2009-2012 Michael Leibman
 michael{dot}leibman{at}gmail{dot}com
 http://github.com/mleibman/slickgrid

 Distributed under MIT license.
 All rights reserved.

 SlickGrid v2.1

 NOTES:
     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.
     This increases the speed dramatically, but can only be done safely because there are no event handlers
     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()
     and do proper cleanup.
*/
if("undefined"===typeof jQuery)throw"SlickGrid requires jquery module to be loaded";if(!jQuery.fn.drag)throw"SlickGrid requires jquery.event.drag module to be loaded";if("undefined"===typeof Slick)throw"slick.core.js not loaded";
(function(a){a.extend(!0,window,{Slick:{Grid:function(b,f,e,h){function d(){if(!qa){qa=!0;wa=parseFloat(a.css(T[0],"width",!0));var b,c=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],d=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"];b=a("<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>").appendTo(Z);ib=Lb=0;a.each(c,function(a,c){ib+=parseFloat(b.css(c))||0});a.each(d,function(a,c){Lb+=parseFloat(b.css(c))||0});b.remove();
var f=a("<div class='slick-row' />").appendTo(Ea);b=a("<div class='slick-cell' id='' style='visibility:hidden'>-</div>").appendTo(f);Wb=vb=0;a.each(c,function(a,c){Wb+=parseFloat(b.css(c))||0});a.each(d,function(a,c){vb+=parseFloat(b.css(c))||0});f.remove();Sa=Math.max(ib,Wb);Z&&Z.jquery&&Z.attr("unselectable","on").css("MozUserSelect","none").bind("selectstart.ui",function(){return!1});h.enableTextSelectionOnCells||ea.bind("selectstart.ui",function(b){return a(b.target).is("input,textarea")});X();
y();Z.click(function(b){b.metaKey=b.metaKey||b.ctrlKey;if(!a(b.target).hasClass("slick-resizable-handle")){var c=a(b.target).closest(".slick-header-column");if(c.length&&(c=c.data("column"),c.sortable&&w().commitCurrentEdit())){for(var d=null,f=0;f<sa.length;f++)if(sa[f].columnId==c.id){d=sa[f];d.sortAsc=!d.sortAsc;break}if(b.metaKey&&h.multiColumnSort)d&&sa.splice(f,1);else{if(!b.shiftKey&&!b.metaKey||!h.multiColumnSort)sa=[];d?0==sa.length&&sa.push(d):(d={columnId:c.id,sortAsc:c.defaultSortAsc},
sa.push(d))}D(sa);h.multiColumnSort?s(J.onSort,{multiColumnSort:!0,sortCols:a.map(sa,function(a){return{sortCol:e[ya[a.columnId]],sortAsc:a.sortAsc}})},b):s(J.onSort,{multiColumnSort:!1,sortCol:c,sortAsc:d.sortAsc},b)}}});u();na();for(c=Ea[0];(c=c.parentNode)!=document.body&&null!=c;)if(c==ea[0]||c.scrollWidth!=c.clientWidth||c.scrollHeight!=c.clientHeight)d=a(c),Gb=Gb?Gb.add(d):d,d.bind("scroll."+Ca,Cc);T.bind("resize.slickgrid",na);ea.bind("scroll",ab);gb.bind("contextmenu",Sc).bind("click",fc).delegate(".slick-header-column",
"mouseenter",rb).delegate(".slick-header-column","mouseleave",ec);Da.bind("scroll",dc);Ya.add(ub).bind("keydown",oa);Ea.bind("keydown",oa).bind("click",zc).bind("dblclick",Bc).bind("contextmenu",Ac).bind("draginit",V).bind("dragstart",{distance:3},Pb).bind("drag",Ua).bind("dragend",zb).delegate(".slick-cell","mouseenter",ja).delegate(".slick-cell","mouseleave",gc)}}function g(a){for(var b=ta.length;0<=b;b--)if(ta[b]===a){ta[b].destroy&&ta[b].destroy();ta.splice(b,1);break}}function m(){for(var a=
0,b=0,c=e.length;b<c;b++)a+=e[b].width;a+=j.width;return Math.max(a,wa)+1E3}function p(){for(var a=hb?wa-j.width:wa,b=0,c=e.length;c--;)b+=e[c].width;return h.fullWidthRows?Math.max(b,a):b}function r(a){var b=La;La=p();La!=b&&(Ea.width(La),va.width(La),Z.width(m()),pc=La>wa-j.width);Eb.width(La+(hb?j.width:0));(La!=b||a)&&z()}function y(){function b(){a(this).addClass("ui-state-hover")}function c(){a(this).removeClass("ui-state-hover")}Z.find(".slick-header-column").each(function(){var b=a(this).data("column");
b&&s(J.onBeforeHeaderCellDestroy,{node:this,column:b})});Z.empty();Z.width(m());va.find(".slick-headerrow-column").each(function(){var b=a(this).data("column");b&&s(J.onBeforeHeaderRowCellDestroy,{node:this,column:b})});va.empty();for(var d=0;d<e.length;d++){var f=e[d],g=a("<div class='ui-state-default slick-header-column' id='"+Ca+f.id+"' />").html("<span class='slick-column-name'>"+f.name+"</span>").width(f.width-ib).attr("title",f.toolTip||"").data("column",f).addClass(f.headerCssClass||"").appendTo(Z);
if(h.enableColumnReorder||f.sortable)g.on("mouseenter",b).on("mouseleave",c);f.sortable&&(g.addClass("slick-header-sortable"),g.append("<span class='slick-sort-indicator' />"));s(J.onHeaderCellRendered,{node:g[0],column:f});h.showHeaderRow&&(g=a("<div class='ui-state-default slick-headerrow-column l"+d+" r"+d+"'></div>").data("column",f).appendTo(va),s(J.onHeaderRowCellRendered,{node:g[0],column:f}))}D(sa);t();h.enableColumnReorder&&(Z.filter(":ui-sortable").sortable("destroy"),Z.sortable({containment:"parent",
distance:3,axis:"x",cursor:"default",tolerance:"intersection",helper:"clone",placeholder:"slick-sortable-placeholder ui-state-default slick-header-column",forcePlaceholderSize:!0,start:function(b,c){a(c.helper).addClass("slick-header-column-active")},beforeStop:function(b,c){a(c.helper).removeClass("slick-header-column-active")},stop:function(b){if(w().commitCurrentEdit()){for(var c=Z.sortable("toArray"),d=[],f=0;f<c.length;f++)d.push(e[B(c[f].replace(Ca,""))]);A(d);s(J.onColumnsReordered,{});b.stopPropagation();
t()}else a(this).sortable("cancel")}}))}function t(){var b,c,d,f,g,j,k,l;f=Z.children();f.find(".slick-resizable-handle").remove();f.each(function(a){e[a].resizable&&(void 0===k&&(k=a),l=a)});void 0!==k&&f.each(function(m,p){m<k||h.forceFitColumns&&m>=l||(a(p),a("<div class='slick-resizable-handle' />").appendTo(p).bind("dragstart",function(k){if(!w().commitCurrentEdit())return!1;d=k.pageX;a(this).parent().addClass("slick-header-column-active");var l=k=null;f.each(function(b,c){e[b].previousWidth=
a(c).outerWidth()});if(h.forceFitColumns){l=k=0;for(b=m+1;b<f.length;b++)c=e[b],c.resizable&&(null!==l&&(l=c.maxWidth?l+(c.maxWidth-c.previousWidth):null),k+=c.previousWidth-Math.max(c.minWidth||0,Sa))}var p=0,q=0;for(b=0;b<=m;b++)c=e[b],c.resizable&&(null!==q&&(q=c.maxWidth?q+(c.maxWidth-c.previousWidth):null),p+=c.previousWidth-Math.max(c.minWidth||0,Sa));null===k&&(k=1E5);null===p&&(p=1E5);null===l&&(l=1E5);null===q&&(q=1E5);j=d+Math.min(k,q);g=d-Math.min(p,l)}).bind("drag",function(a){var k=Math.min(j,
Math.max(g,a.pageX))-d,l;if(0>k){l=k;for(b=m;0<=b;b--)c=e[b],c.resizable&&(a=Math.max(c.minWidth||0,Sa),l&&c.previousWidth+l<a?(l+=c.previousWidth-a,c.width=a):(c.width=c.previousWidth+l,l=0));if(h.forceFitColumns){l=-k;for(b=m+1;b<f.length;b++)c=e[b],c.resizable&&(l&&c.maxWidth&&c.maxWidth-c.previousWidth<l?(l-=c.maxWidth-c.previousWidth,c.width=c.maxWidth):(c.width=c.previousWidth+l,l=0))}}else{l=k;for(b=m;0<=b;b--)c=e[b],c.resizable&&(l&&c.maxWidth&&c.maxWidth-c.previousWidth<l?(l-=c.maxWidth-
c.previousWidth,c.width=c.maxWidth):(c.width=c.previousWidth+l,l=0));if(h.forceFitColumns){l=-k;for(b=m+1;b<f.length;b++)c=e[b],c.resizable&&(a=Math.max(c.minWidth||0,Sa),l&&c.previousWidth+l<a?(l+=c.previousWidth-a,c.width=a):(c.width=c.previousWidth+l,l=0))}}E();h.syncColumnCellResize&&z()}).bind("dragend",function(){var d;a(this).parent().removeClass("slick-header-column-active");for(b=0;b<f.length;b++)c=e[b],d=a(f[b]).outerWidth(),c.previousWidth!==d&&c.rerenderOnResize&&ia();r(!0);ma();s(J.onColumnsResized,
{})}))})}function q(b){var c=0;a.each(["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],function(a,d){c+=parseFloat(b.css(d))||0});return c}function u(){Za=a("<style type='text/css' rel='stylesheet' />").appendTo(a("head"));for(var b=["."+Ca+" .slick-header-column { left: 1000px; }","."+Ca+" .slick-top-panel { height:"+h.topPanelHeight+"px; }","."+Ca+" .slick-headerrow-columns { height:"+h.headerRowHeight+"px; }","."+Ca+" .slick-cell { height:"+(h.rowHeight-vb)+"px; }","."+Ca+" .slick-row { height:"+
h.rowHeight+"px; }"],c=0;c<e.length;c++)b.push("."+Ca+" .l"+c+" { }"),b.push("."+Ca+" .r"+c+" { }");Za[0].styleSheet?Za[0].styleSheet.cssText=b.join(" "):Za[0].appendChild(document.createTextNode(b.join(" ")))}function s(a,b,c){c=c||new Slick.EventData;b=b||{};b.grid=J;return a.notify(b,c,J)}function w(){return h.editorLock}function B(a){return ya[a]}function C(){var a,b,c=[],d=0,f=0,g,h=hb?wa-j.width:wa;for(a=0;a<e.length;a++)b=e[a],c.push(b.width),f+=b.width,b.resizable&&(d+=b.width-Math.max(b.minWidth,
Sa));for(g=f;f>h&&d;){var k=(f-h)/d;for(a=0;a<e.length&&f>h;a++){b=e[a];var l=c[a];if(b.resizable&&!(l<=b.minWidth||l<=Sa)){b=Math.max(b.minWidth,Sa);var m=Math.floor(k*(l-b))||1,m=Math.min(m,l-b),f=f-m,d=d-m;c[a]-=m}}if(g==f)break;g=f}for(g=f;f<h;){d=h/f;for(a=0;a<e.length&&f<h;a++)b=e[a],b.resizable&&!(b.maxWidth<=b.width)&&(k=Math.min(Math.floor(d*b.width)-b.width,b.maxWidth-b.width||1E6)||1,f+=k,c[a]+=k);if(g==f)break;g=f}f=!1;for(a=0;a<e.length;a++)e[a].rerenderOnResize&&e[a].width!=c[a]&&(f=
!0),e[a].width=c[a];E();r(!0);f&&(ia(),ma())}function E(){if(qa){for(var b,c=0,d=Z.children(),f=d.length;c<f;c++)b=a(d[c]),b.width()!==e[c].width-ib&&b.width(e[c].width-ib);X()}}function z(){for(var a,b,c=0,d,f=0;f<e.length;f++){d=e[f].width;b=f;if(!Fa){var g=document.styleSheets;for(a=0;a<g.length;a++)if((g[a].ownerNode||g[a].owningElement)==Za[0]){Fa=g[a];break}if(!Fa)throw Error("Cannot find stylesheet.");Vb=[];oc=[];var g=Fa.cssRules||Fa.rules,h=void 0,h=void 0;for(a=0;a<g.length;a++){var j=g[a].selectorText;
if(h=/\.l\d+/.exec(j))h=parseInt(h[0].substr(2,h[0].length-2),10),Vb[h]=g[a];else if(h=/\.r\d+/.exec(j))h=parseInt(h[0].substr(2,h[0].length-2),10),oc[h]=g[a]}}a=Vb[b];b=oc[b];a.style.left=c+"px";b.style.right=La-c-d+"px";c+=e[f].width}}function D(b){sa=b;var c=Z.children();c.removeClass("slick-header-column-sorted").find(".slick-sort-indicator").removeClass("slick-sort-indicator-asc slick-sort-indicator-desc");a.each(sa,function(a,b){null==b.sortAsc&&(b.sortAsc=!0);var d=ya[b.columnId];null!=d&&
c.eq(d).addClass("slick-header-column-sorted").find(".slick-sort-indicator").addClass(b.sortAsc?"slick-sort-indicator-asc":"slick-sort-indicator-desc")})}function L(a,b){Pa=[];for(var c={},d=0;d<b.length;d++)for(var f=b[d].fromRow;f<=b[d].toRow;f++){c[f]||(Pa.push(f),c[f]={});for(var g=b[d].fromCell;g<=b[d].toCell;g++)Sb(f,g)&&(c[f][e[g].id]=h.selectedCellCssClass)}Ga(h.selectedCellCssClass,c);s(J.onSelectedRowsChanged,{rows:nc()},a)}function X(){ob=[];jb=[];for(var a=0,b=0,c=e.length;b<c;b++)ob[b]=
a,jb[b]=a+e[b].width,a+=e[b].width}function A(b){e=b;ya={};for(b=0;b<e.length;b++){var c=e[b]=a.extend({},Ub,e[b]);ya[c.id]=b;c.minWidth&&c.width<c.minWidth&&(c.width=c.minWidth);c.maxWidth&&c.width>c.maxWidth&&(c.width=c.maxWidth)}X();qa&&(ia(),y(),Za.remove(),Fa=null,u(),na(),z(),ab())}function H(){return f.getLength?f.getLength():f.length}function k(a){return f.getItem?f.getItem(a):f[a]}function U(a){a=Math.max(a,0);a=Math.min(a,pa-ka+(pc?j.height:0));var b=ca;I=Math.min(G-1,Math.floor(a/Qa));
ca=Math.round(I*tb);a-=ca;if(ca!=b){var c=ba(a);l(c);for(var d in M)M[d].rowNode.style.top=h.rowHeight*d-ca+"px"}wb!=a&&(fb=wb+b<a+ca?1:-1,ea[0].scrollTop=Zb=ga=wb=a,s(J.onViewportChanged,{}))}function x(a,b){var c=f.getItemMetadata&&f.getItemMetadata(a),d=c&&c.columns&&(c.columns[b.id]||c.columns[ya[b.id]]);return d&&d.formatter||c&&c.formatter||b.formatter||h.formatterFactory&&h.formatterFactory.getFormatter(b)||h.defaultFormatter}function ha(a,b){var c=e[b],d=f.getItemMetadata&&f.getItemMetadata(a);
return(d=d&&d.columns)&&d[c.id]&&void 0!==d[c.id].editor?d[c.id].editor:d&&d[b]&&void 0!==d[b].editor?d[b].editor:c.editor||h.editorFactory&&h.editorFactory.getEditor(c)}function ua(a,b){return h.dataItemColumnValueExtractor?h.dataItemColumnValueExtractor(a,b):a[b.field]}function za(a,b,c,d){var f=e[c],g=k(b),h="slick-cell l"+c+" r"+Math.min(e.length-1,c+d-1)+(f.cssClass?" "+f.cssClass:"");b===N&&c===Y&&(h+=" active");for(var j in xa)xa[j][b]&&xa[j][b][f.id]&&(h+=" "+xa[j][b][f.id]);a.push("<div class='"+
h+"'>");g&&(h=ua(g,f),a.push(x(b,f)(b,c,h,f,g)));a.push("</div>");M[b].cellRenderQueue.push(c);M[b].cellColSpans[c]=d}function l(a){for(var b in M)(b=parseInt(b,10))!==N&&(b<a.top||b>a.bottom)&&aa(b)}function ia(){O&&F();for(var a in M)aa(a)}function aa(a){var b=M[a];b&&(Ea[0].removeChild(b.rowNode),delete M[a],delete $a[a],Hb--,Oc++)}function la(a){var b,c;if(a&&a.length){b=fb=0;for(c=a.length;b<c;b++)O&&N===a[b]&&F(),M[a[b]]&&aa(a[b])}}function da(a){la([a])}function S(a){var b=M[a];if(b){$(a);
for(var c in b.cellNodesByColumnIdx)if(b.cellNodesByColumnIdx.hasOwnProperty(c)){c|=0;var d=e[c],f=k(a),g=b.cellNodesByColumnIdx[c];a===N&&c===Y&&O?O.loadValue(f):g.innerHTML=f?x(a,d)(a,c,ua(f,d),d,f):""}pb(a)}}function na(){qa&&(ka=h.autoHeight?h.rowHeight*(H()+(h.enableAddRow?1:0)):parseFloat(a.css(T[0],"height",!0))-parseFloat(a.css(T[0],"paddingTop",!0))-parseFloat(a.css(T[0],"paddingBottom",!0))-parseFloat(a.css(gb[0],"height"))-q(gb)-(h.showTopPanel?h.topPanelHeight+q(Ra):0)-(h.showHeaderRow?
h.headerRowHeight+q(Da):0),Ib=Math.ceil(ka/h.rowHeight),wa=parseFloat(a.css(T[0],"width",!0)),h.autoHeight||ea.height(ka),h.forceFitColumns&&C(),R(),ab(),ma())}function R(){if(qa){Xb=H()+(h.enableAddRow?1:0)+(h.leaveSpaceForNewRows?Ib-1:0);var a=hb;hb=!h.autoHeight&&Xb*h.rowHeight>ka;var b=h.enableAddRow?H():H()-1,d;for(d in M)d>=b&&aa(d);W&&N>b&&Wa();b=Na;pa=Math.max(h.rowHeight*Xb,ka-j.height);pa<c?(Na=Qa=pa,G=1,tb=0):(Na=c,Qa=Na/100,G=Math.floor(pa/Qa),tb=(pa-Na)/(G-1));Na!==b&&(Ea.css("height",
Na),ga=ea[0].scrollTop);d=ga+ca<=pa-ka;0==pa||0==ga?I=ca=0:d?U(ga+ca):U(pa-ka);Na!=b&&h.autoHeight&&na();h.forceFitColumns&&a!=hb&&C();r(!1)}}function ba(a,b){null==a&&(a=ga);null==b&&(b=ra);return{top:Math.floor((a+ca)/h.rowHeight),bottom:Math.floor((a+ka+ca)/h.rowHeight)+1,leftPx:b,rightPx:b+wa}}function Aa(a,b){var c=ba(a,b),d=Math.round(ka/h.rowHeight);-1==fb?(c.top-=d,c.bottom+=3):1==fb?(c.top-=3,c.bottom+=d):(c.top-=3,c.bottom+=3);c.top=Math.max(0,c.top);c.bottom=Math.min(h.enableAddRow?H():
H()-1,c.bottom);c.leftPx-=wa;c.rightPx+=wa;c.leftPx=Math.max(0,c.leftPx);c.rightPx=Math.min(La,c.rightPx);return c}function $(a){if((a=M[a])&&a.cellRenderQueue.length)for(var b=a.rowNode.lastChild;a.cellRenderQueue.length;){var c=a.cellRenderQueue.pop();a.cellNodesByColumnIdx[c]=b;b=b.previousSibling}}function Ob(){h.enableAsyncPostRender&&(clearTimeout(tc),tc=setTimeout(qb,h.asyncPostRenderDelay))}function pb(a){delete $a[a];xb=Math.min(xb,a);Jb=Math.max(Jb,a);Ob()}function ma(){if(qa){var a=ba(),
b=Aa();l(b);if(mb!=ra){for(var c,d=[],g=[],j,m,p=b.top;p<=b.bottom;p++)if(c=M[p]){$(p);m=b;j=p;var q=0,r=M[j],t=[],s=void 0;for(s in r.cellNodesByColumnIdx)if(r.cellNodesByColumnIdx.hasOwnProperty(s)){var s=s|0,u=r.cellColSpans[s];if(ob[s]>m.rightPx||jb[Math.min(e.length-1,s+u-1)]<m.leftPx)j==N&&s==Y||t.push(s)}for(m=void 0;null!=(m=t.pop());)r.rowNode.removeChild(r.cellNodesByColumnIdx[m]),delete r.cellColSpans[m],delete r.cellNodesByColumnIdx[m],$a[j]&&delete $a[j][m],q++;j=0;q=(q=f.getItemMetadata&&
f.getItemMetadata(p))&&q.columns;r=0;for(t=e.length;r<t&&!(ob[r]>b.rightPx);r++){if(null==(m=c.cellColSpans[r]))m=1,q&&(m=(m=q[e[r].id]||q[r])&&m.colspan||1,"*"===m&&(m=t-r)),jb[Math.min(t-1,r+m-1)]>b.leftPx&&(za(d,p,r,m),j++);r+=1<m?m-1:0}j&&g.push(p)}if(d.length){p=document.createElement("div");for(p.innerHTML=d.join("");null!=(c=g.pop());)for(c=M[c];null!=(j=c.cellRenderQueue.pop());)d=p.lastChild,c.rowNode.appendChild(d),c.cellNodesByColumnIdx[j]=d}}g=Ea[0];j=[];c=[];d=!1;for(p=b.top;p<=b.bottom;p++)if(!M[p]){Hb++;
c.push(p);M[p]={rowNode:null,cellColSpans:[],cellNodesByColumnIdx:[],cellRenderQueue:[]};q=j;r=p;t=b;m=k(r);s="slick-row"+(r<H()&&!m?" loading":"")+(r===N?" active":"")+(1==r%2?" odd":" even");(m=f.getItemMetadata&&f.getItemMetadata(r))&&m.cssClasses&&(s+=" "+m.cssClasses);q.push("<div class='ui-widget-content "+s+"' style='top:"+(h.rowHeight*r-ca)+"px'>");for(var w=void 0,y=void 0,s=0,u=e.length;s<u;s++){y=e[s];w=1;m&&m.columns&&(w=(w=m.columns[y.id]||m.columns[s])&&w.colspan||1,"*"===w&&(w=u-s));
if(jb[Math.min(u-1,s+w-1)]>t.leftPx){if(ob[s]>t.rightPx)break;za(q,r,s,w)}1<w&&(s+=w-1)}q.push("</div>");W&&N===p&&(d=!0);Nc++}if(c.length){b=document.createElement("div");b.innerHTML=j.join("");p=0;for(j=c.length;p<j;p++)M[c[p]].rowNode=g.appendChild(b.firstChild);d&&(W=Ba(N,Y))}xb=a.top;Jb=Math.min(h.enableAddRow?H():H()-1,a.bottom);Ob();Zb=ga;mb=ra;$b=null}}function dc(){var a=Da[0].scrollLeft;a!=ea[0].scrollLeft&&(ea[0].scrollLeft=a)}function ab(){ga=ea[0].scrollTop;ra=ea[0].scrollLeft;var a=
Math.abs(ga-wb),b=Math.abs(ra-Mc);b&&(Mc=ra,gb[0].scrollLeft=ra,Ra[0].scrollLeft=ra,Da[0].scrollLeft=ra);if(a)if(fb=wb<ga?1:-1,wb=ga,a<ka)U(ga+ca);else{var c=ca;I=Na==ka?0:Math.min(G-1,Math.floor(ga*((pa-ka)/(Na-ka))*(1/Qa)));ca=Math.round(I*tb);c!=ca&&ia()}if(b||a)if($b&&clearTimeout($b),20<Math.abs(Zb-ga)||20<Math.abs(mb-ra))h.forceSyncScrolling||Math.abs(Zb-ga)<ka&&Math.abs(mb-ra)<wa?ma():$b=setTimeout(ma,50),s(J.onViewportChanged,{});s(J.onScroll,{scrollLeft:ra,scrollTop:ga})}function qb(){for(;xb<=
Jb;){var a=0<=fb?xb++:Jb--,b=M[a];if(b&&!(a>=H())){$a[a]||($a[a]={});$(a);for(var c in b.cellNodesByColumnIdx)if(b.cellNodesByColumnIdx.hasOwnProperty(c)){c|=0;var d=e[c];if(d.asyncPostRender&&!$a[a][c]){var f=b.cellNodesByColumnIdx[c];f&&d.asyncPostRender(f,a,k(a),d);$a[a][c]=!0}}tc=setTimeout(qb,h.asyncPostRenderDelay);break}}}function v(b,c){var d,e,f,g,h;for(h in M){g=c&&c[h];f=b&&b[h];if(g)for(e in g)if(!f||g[e]!=f[e])(d=Ba(h,ya[e]))&&a(d).removeClass(g[e]);if(f)for(e in f)if(!g||g[e]!=f[e])(d=
Ba(h,ya[e]))&&a(d).addClass(f[e])}}function Ga(a,b){var c=xa[a];xa[a]=b;v(b,c);s(J.onCellCssStylesChanged,{key:a,hash:b})}function V(a,b){var c=fa(a);if(!c||!Va(c.row,c.cell))return!1;c=s(J.onDragInit,b,a);return a.isImmediatePropagationStopped()?c:!1}function Pb(a,b){var c=fa(a);if(!c||!Va(c.row,c.cell))return!1;c=s(J.onDragStart,b,a);return a.isImmediatePropagationStopped()?c:!1}function Ua(a,b){return s(J.onDrag,b,a)}function zb(a,b){s(J.onDragEnd,b,a)}function oa(a){s(J.onKeyDown,{row:N,cell:Y},
a);var b=a.isImmediatePropagationStopped();if(!b)if(!a.shiftKey&&!a.altKey&&!a.ctrlKey)if(27==a.which){if(!w().isActive())return;vc()}else 37==a.which?b=Ic():39==a.which?b=Hc():38==a.which?b=lc():40==a.which?b=Rb():9==a.which?b=Jc():13==a.which&&(h.editable&&(O?N===H()?Rb():wc():w().commitCurrentEdit()&&hc()),b=!0);else 9==a.which&&(a.shiftKey&&!a.ctrlKey&&!a.altKey)&&(b=Kc());if(b){a.stopPropagation();a.preventDefault();try{a.originalEvent.keyCode=0}catch(c){}}}function zc(a){O||a.target!=document.activeElement&&
Ha();var b=fa(a);if(b&&!(null!==O&&N==b.row&&Y==b.cell)&&(s(J.onClick,{row:b.row,cell:b.cell},a),!a.isImmediatePropagationStopped()&&(Y!=b.cell||N!=b.row)&&Ia(b.row,b.cell)))if(!w().isActive()||w().commitCurrentEdit())ic(b.row,!1),Xa(Ba(b.row,b.cell),b.row===H()||h.autoEdit)}function Ac(b){var c=a(b.target).closest(".slick-cell",Ea);0!==c.length&&(W===c[0]&&null!==O||s(J.onContextMenu,{},b))}function Bc(a){var b=fa(a);b&&!(null!==O&&N==b.row&&Y==b.cell)&&(s(J.onDblClick,{row:b.row,cell:b.cell},a),
a.isImmediatePropagationStopped()||h.editable&&eb(b.row,b.cell,!0))}function rb(b){s(J.onHeaderMouseEnter,{column:a(this).data("column")},b)}function ec(b){s(J.onHeaderMouseLeave,{column:a(this).data("column")},b)}function Sc(b){var c=a(b.target).closest(".slick-header-column",".slick-header-columns"),c=c&&c.data("column");s(J.onHeaderContextMenu,{column:c},b)}function fc(b){var c=a(b.target).closest(".slick-header-column",".slick-header-columns");(c=c&&c.data("column"))&&s(J.onHeaderClick,{column:c},
b)}function ja(a){s(J.onMouseEnter,{},a)}function gc(a){s(J.onMouseLeave,{},a)}function Va(a,b){return!(0>a||a>=H()||0>b||b>=e.length)}function Ab(a){var b=/l\d+/.exec(a.className);if(!b)throw"getCellFromNode: cannot get cell - "+a.className;return parseInt(b[0].substr(1,b[0].length-1),10)}function Bb(a){for(var b in M)if(M[b].rowNode===a)return b|0;return null}function fa(b){var c=a(b.target).closest(".slick-cell",Ea);if(!c.length)return null;b=Bb(c[0].parentNode);c=Ab(c[0]);return null==b||null==
c?null:{row:b,cell:c}}function Wa(){Xa(null,!1)}function Ha(){-1==Lc?Ya[0].focus():ub[0].focus()}function bb(a,b,c){ic(a,c);c=sb(a,b);a=ob[b];b=jb[b+(1<c?c-1:0)];c=ra+wa;a<ra?(ea.scrollLeft(a),ab(),ma()):b>c&&(ea.scrollLeft(Math.min(a,b-ea[0].clientWidth)),ab(),ma())}function Xa(b,c){null!==W&&(F(),a(W).removeClass("active"),M[N]&&a(M[N].rowNode).removeClass("active"));var d=W!==b;W=b;null!=W?(N=Bb(W.parentNode),Y=qc=Ab(W),a(W).addClass("active"),a(M[N].rowNode).addClass("active"),h.editable&&(c&&
cb(N,Y))&&(clearTimeout(sc),h.asyncEditorLoading?sc=setTimeout(function(){hc()},h.asyncEditorLoadDelay):hc())):N=Y=null;d&&s(J.onActiveCellChanged,Dc())}function cb(a,b){return a<H()&&!k(a)||e[b].cannotTriggerInsert&&a>=H()||!ha(a,b)?!1:!0}function F(){if(O){s(J.onBeforeCellEditorDestroy,{editor:O});O.destroy();O=null;if(W){var b=k(N);a(W).removeClass("editable invalid");if(b){var c=e[Y],d=x(N,c);W.innerHTML=d(N,Y,ua(b,c),c,k(N));pb(N)}}navigator.userAgent.toLowerCase().match(/msie/)&&(document.selection&&
document.selection.empty?document.selection.empty():window.getSelection&&(b=window.getSelection())&&b.removeAllRanges&&b.removeAllRanges());w().deactivate(Yb)}}function hc(b){if(W){if(!h.editable)throw"Grid : makeActiveCellEditable : should never get called when options.editable is false";clearTimeout(sc);if(cb(N,Y)){var c=e[Y],d=k(N);!1===s(J.onBeforeEditCell,{row:N,cell:Y,item:d,column:c})?Ha():(w().activate(Yb),a(W).addClass("editable"),b||(W.innerHTML=""),O=new (b||ha(N,Y))({grid:J,gridPosition:Cb(T[0]),
position:Cb(W),container:W,column:c,item:d||{},commitChanges:wc,cancelChanges:vc}),d&&O.loadValue(d),rc=O.serializeValue(),O.position&&Cc())}}}function wc(){w().commitCurrentEdit()&&(Ha(),h.autoEdit&&Rb())}function vc(){w().cancelCurrentEdit()&&Ha()}function Cb(b){var c={top:b.offsetTop,left:b.offsetLeft,bottom:0,right:0,width:a(b).outerWidth(),height:a(b).outerHeight(),visible:!0};c.bottom=c.top+c.height;c.right=c.left+c.width;for(var d=b.offsetParent;(b=b.parentNode)!=document.body;)c.visible&&
(b.scrollHeight!=b.offsetHeight&&"visible"!=a(b).css("overflowY"))&&(c.visible=c.bottom>b.scrollTop&&c.top<b.scrollTop+b.clientHeight),c.visible&&(b.scrollWidth!=b.offsetWidth&&"visible"!=a(b).css("overflowX"))&&(c.visible=c.right>b.scrollLeft&&c.left<b.scrollLeft+b.clientWidth),c.left-=b.scrollLeft,c.top-=b.scrollTop,b===d&&(c.left+=b.offsetLeft,c.top+=b.offsetTop,d=b.offsetParent),c.bottom=c.top+c.height,c.right=c.left+c.width;return c}function Db(){return Cb(W)}function Cc(){if(W&&(s(J.onActiveCellPositionChanged,
{}),O)){var a=Db();O.show&&O.hide&&(a.visible?O.show():O.hide());O.position&&O.position(a)}}function Dc(){return W?{row:N,cell:Y}:null}function ic(a,b){var c=a*h.rowHeight,d=(a+1)*h.rowHeight-ka+(pc?j.height:0);(a+1)*h.rowHeight>ga+ka+ca?(U(b?c:d),ma()):a*h.rowHeight<ga+ca&&(U(b?d:c),ma())}function sb(a,b){var c=f.getItemMetadata&&f.getItemMetadata(a);if(!c||!c.columns)return 1;c=(c=c.columns[e[b].id]||c.columns[b])&&c.colspan;return c="*"===c?e.length-b:c||1}function jc(a){for(var b=0;b<e.length;){if(Ia(a,
b))return b;b+=sb(a,b)}return null}function Qb(a,b){if(b>=e.length)return null;do b+=sb(a,b);while(b<e.length&&!Ia(a,b));return b<e.length?{row:a,cell:b,posX:b}:null}function Ma(a,b){if(0>=b)return null;var c=jc(a);if(null===c||c>=b)return null;for(var c={row:a,cell:c,posX:c},d;;){d=Qb(c.row,c.cell,c.posX);if(!d)return null;if(d.cell>=b)return c;c=d}}function Ec(a,b,c){for(var d;;){if(++a>=H()+(h.enableAddRow?1:0))return null;for(d=b=0;b<=c;)d=b,b+=sb(a,b);if(Ia(a,d))return{row:a,cell:d,posX:c}}}
function Fc(a,b,c){for(var d;;){if(0>--a)return null;for(d=b=0;b<=c;)d=b,b+=sb(a,b);if(Ia(a,d))return{row:a,cell:d,posX:c}}}function kc(a,b,c){if(null==a&&null==b&&(a=b=c=0,Ia(a,b)))return{row:a,cell:b,posX:b};if(b=Qb(a,b,c))return b;for(b=null;++a<H()+(h.enableAddRow?1:0);)if(b=jc(a),null!==b)return{row:a,cell:b,posX:b};return null}function Gc(a,b,c){if(null==a&&null==b&&(a=H()+(h.enableAddRow?1:0)-1,b=c=e.length-1,Ia(a,b)))return{row:a,cell:b,posX:b};for(var d,f;!d&&!(d=Ma(a,b,c));){if(0>--a)return null;
b=0;f=a;for(var g=0,j=null;g<e.length;)Ia(f,g)&&(j=g),g+=sb(f,g);f=j;null!==f&&(d={row:a,cell:f,posX:f})}return d}function Hc(){return db("right")}function Ic(){return db("left")}function Rb(){return db("down")}function lc(){return db("up")}function Jc(){return db("next")}function Kc(){return db("prev")}function db(a){if(!h.enableCellNavigation||!W&&"prev"!=a&&"next"!=a)return!1;if(!w().commitCurrentEdit())return!0;Ha();Lc={up:-1,down:1,left:-1,right:1,prev:-1,next:1}[a];if(a=(0,{up:Fc,down:Ec,left:Ma,
right:Qb,prev:Gc,next:kc}[a])(N,Y,qc)){var b=a.row==H();bb(a.row,a.cell,!b);Xa(Ba(a.row,a.cell),b||h.autoEdit);qc=a.posX;return!0}Xa(Ba(N,Y),N==H()||h.autoEdit);return!1}function Ba(a,b){return M[a]?($(a),M[a].cellNodesByColumnIdx[b]):null}function Ia(a,b){if(!h.enableCellNavigation||a>=H()+(h.enableAddRow?1:0)||0>a||b>=e.length||0>b)return!1;var c=f.getItemMetadata&&f.getItemMetadata(a);return c&&"boolean"===typeof c.focusable?c.focusable:(c=c&&c.columns)&&c[e[b].id]&&"boolean"===typeof c[e[b].id].focusable?
c[e[b].id].focusable:c&&c[b]&&"boolean"===typeof c[b].focusable?c[b].focusable:e[b].focusable}function Sb(a,b){if(a>=H()||0>a||b>=e.length||0>b)return!1;var c=f.getItemMetadata&&f.getItemMetadata(a);return c&&"boolean"===typeof c.selectable?c.selectable:(c=c&&c.columns&&(c.columns[e[b].id]||c.columns[b]))&&"boolean"===typeof c.selectable?c.selectable:e[b].selectable}function eb(a,b,c){qa&&(Ia(a,b)&&w().commitCurrentEdit())&&(bb(a,b,!1),b=Ba(a,b),Xa(b,c||a===H()||h.autoEdit),O||Ha())}function mc(a){for(var b=
[],c=e.length-1,d=0;d<a.length;d++)b.push(new Slick.Range(a[d],0,a[d],c));return b}function nc(){if(!Ja)throw"Selection model is not set";return Pa}var Tb={explicitInitialization:!1,rowHeight:25,defaultColumnWidth:80,enableAddRow:!1,leaveSpaceForNewRows:!1,editable:!1,autoEdit:!0,enableCellNavigation:!0,enableColumnReorder:!0,asyncEditorLoading:!1,asyncEditorLoadDelay:100,forceFitColumns:!1,enableAsyncPostRender:!1,asyncPostRenderDelay:50,autoHeight:!1,editorLock:Slick.GlobalEditorLock,showHeaderRow:!1,
headerRowHeight:25,showTopPanel:!1,topPanelHeight:25,formatterFactory:null,editorFactory:null,cellFlashingCssClass:"flashing",selectedCellCssClass:"selected",multiSelect:!0,enableTextSelectionOnCells:!1,dataItemColumnValueExtractor:null,fullWidthRows:!1,multiColumnSort:!1,defaultFormatter:function(a,b,c){return null==c?"":c.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},forceSyncScrolling:!1},Ub={name:"",resizable:!0,sortable:!1,minWidth:30,rerenderOnResize:!1,headerCssClass:null,
defaultSortAsc:!0,focusable:!0,selectable:!0},pa,Na,Qa,G,tb,I=0,ca=0,fb=1,qa=!1,T,Ca="slickgrid_"+Math.round(1E6*Math.random()),J=this,Ya,ub,gb,Z,va,Da,Eb,Ra,Fb,ea,Ea,Za,Gb,Fa,Vb,oc,ka,wa,La,pc,hb,ib=0,Lb=0,Wb=0,vb=0,Sa,Xb=0,Lc=1,qc,N,Y,W=null,O=null,rc,Yb,M={},Hb=0,Ib,wb=0,ga=0,Zb=0,mb=0,Mc=0,ra=0,Ja,Pa=[],ta=[],xa={},ya={},sa=[],ob=[],jb=[],sc=null,$b=null,tc=null,$a={},Jb=null,xb=null,Nc=0,Oc=0;this.debug=function(){var a;a="\ncounter_rows_rendered:  "+Nc;a+="\ncounter_rows_removed:  "+Oc;a+="\nrenderedRows:  "+
Hb;a+="\nnumVisibleRows:  "+Ib;a+="\nmaxSupportedCssHeight:  "+c;a+="\nn(umber of pages):  "+G;a+="\n(current) page:  "+I;a+="\npage height (ph):  "+Qa;a+="\nvScrollDir:  "+fb;alert(a)};this.eval=function(a){return eval(a)};a.extend(this,{slickGridVersion:"2.1",onScroll:new Slick.Event,onSort:new Slick.Event,onHeaderMouseEnter:new Slick.Event,onHeaderMouseLeave:new Slick.Event,onHeaderContextMenu:new Slick.Event,onHeaderClick:new Slick.Event,onHeaderCellRendered:new Slick.Event,onBeforeHeaderCellDestroy:new Slick.Event,
onHeaderRowCellRendered:new Slick.Event,onBeforeHeaderRowCellDestroy:new Slick.Event,onMouseEnter:new Slick.Event,onMouseLeave:new Slick.Event,onClick:new Slick.Event,onDblClick:new Slick.Event,onContextMenu:new Slick.Event,onKeyDown:new Slick.Event,onAddNewRow:new Slick.Event,onValidationError:new Slick.Event,onViewportChanged:new Slick.Event,onColumnsReordered:new Slick.Event,onColumnsResized:new Slick.Event,onCellChange:new Slick.Event,onBeforeEditCell:new Slick.Event,onBeforeCellEditorDestroy:new Slick.Event,
onBeforeDestroy:new Slick.Event,onActiveCellChanged:new Slick.Event,onActiveCellPositionChanged:new Slick.Event,onDragInit:new Slick.Event,onDragStart:new Slick.Event,onDrag:new Slick.Event,onDragEnd:new Slick.Event,onSelectedRowsChanged:new Slick.Event,onCellCssStylesChanged:new Slick.Event,registerPlugin:function(a){ta.unshift(a);a.init(J)},unregisterPlugin:g,getColumns:function(){return e},setColumns:A,getColumnIndex:B,updateColumnHeader:function(a,b,c){if(qa&&(a=ya[a],null!=a)){var d=e[a],f=Z.children().eq(a);
f&&(void 0!==b&&(e[a].name=b),void 0!==c&&(e[a].toolTip=c),s(J.onBeforeHeaderCellDestroy,{node:f[0],column:d}),f.attr("title",c||"").children().eq(0).html(b),s(J.onHeaderCellRendered,{node:f[0],column:d}))}},setSortColumn:function(a,b){D([{columnId:a,sortAsc:b}])},setSortColumns:D,getSortColumns:function(){return sa},autosizeColumns:C,getOptions:function(){return h},setOptions:function(b){w().commitCurrentEdit()&&(F(),h.enableAddRow!==b.enableAddRow&&da(H()),h=a.extend(h,b),h.autoHeight&&(h.leaveSpaceForNewRows=
!1),ea.css("overflow-y",h.autoHeight?"hidden":"auto"),ma())},getData:function(){return f},getDataLength:H,getDataItem:k,setData:function(a,b){f=a;ia();R();b&&U(0)},getSelectionModel:function(){return Ja},setSelectionModel:function(a){Ja&&(Ja.onSelectedRangesChanged.unsubscribe(L),Ja.destroy&&Ja.destroy());if(Ja=a)Ja.init(J),Ja.onSelectedRangesChanged.subscribe(L)},getSelectedRows:nc,setSelectedRows:function(a){if(!Ja)throw"Selection model is not set";Ja.setSelectedRanges(mc(a))},render:ma,invalidate:function(){R();
ia();ma()},invalidateRow:da,invalidateRows:la,invalidateAllRows:ia,updateCell:function(a,b){var c=Ba(a,b);if(c){var d=e[b],f=k(a);O&&N===a&&Y===b?O.loadValue(f):(c.innerHTML=f?x(a,d)(a,b,ua(f,d),d,f):"",pb(a))}},updateRow:S,getViewport:ba,getRenderedRange:Aa,resizeCanvas:na,updateRowCount:R,scrollRowIntoView:ic,scrollRowToTop:function(a){U(a*h.rowHeight);ma()},scrollCellIntoView:bb,getCanvasNode:function(){return Ea[0]},focus:Ha,getCellFromPoint:function(a,b){for(var c=Math.floor((b+ca)/h.rowHeight),
d=0,f=0,g=0;g<e.length&&f<a;g++)f+=e[g].width,d++;0>d&&(d=0);return{row:c,cell:d-1}},getCellFromEvent:fa,getActiveCell:Dc,setActiveCell:function(a,b){if(qa&&!(a>H()||0>a||b>=e.length||0>b)&&h.enableCellNavigation)bb(a,b,!1),Xa(Ba(a,b),!1)},getActiveCellNode:function(){return W},getActiveCellPosition:Db,resetActiveCell:Wa,editActiveCell:hc,getCellEditor:function(){return O},getCellNode:Ba,getCellNodeBox:function(a,b){if(!Va(a,b))return null;for(var c=h.rowHeight*a-ca,d=c+h.rowHeight-1,f=0,g=0;g<b;g++)f+=
e[g].width;return{top:c,left:f,bottom:d,right:f+e[b].width}},canCellBeSelected:Sb,canCellBeActive:Ia,navigatePrev:Kc,navigateNext:Jc,navigateUp:lc,navigateDown:Rb,navigateLeft:Ic,navigateRight:Hc,gotoCell:eb,getTopPanel:function(){return Fb[0]},setTopPanelVisibility:function(a){h.showTopPanel!=a&&((h.showTopPanel=a)?Ra.slideDown("fast",na):Ra.slideUp("fast",na))},setHeaderRowVisibility:function(a){h.showHeaderRow!=a&&((h.showHeaderRow=a)?Da.slideDown("fast",na):Da.slideUp("fast",na))},getHeaderRow:function(){return va[0]},
getHeaderRowColumn:function(a){a=ya[a];return(a=va.children().eq(a))&&a[0]},getGridPosition:function(){return Cb(T[0])},flashCell:function(b,c,d){d=d||100;if(M[b]){var e=a(Ba(b,c)),f=function(a){a&&setTimeout(function(){e.queue(function(){e.toggleClass(h.cellFlashingCssClass).dequeue();f(a-1)})},d)};f(4)}},addCellCssStyles:function(a,b){if(xa[a])throw"addCellCssStyles: cell CSS hash with key '"+a+"' already exists.";xa[a]=b;v(b,null);s(J.onCellCssStylesChanged,{key:a,hash:b})},setCellCssStyles:Ga,
removeCellCssStyles:function(a){xa[a]&&(v(null,xa[a]),delete xa[a],s(J.onCellCssStylesChanged,{key:a,hash:null}))},getCellCssStyles:function(a){return xa[a]},init:d,destroy:function(){w().cancelCurrentEdit();s(J.onBeforeDestroy,{});for(var a=ta.length;a--;)g(ta[a]);h.enableColumnReorder&&Z.sortable&&Z.sortable("destroy");Gb&&(Gb.unbind("scroll."+Ca),Gb=null);T.unbind(".slickgrid");Za.remove();Fa=null;Ea.unbind("draginit dragstart dragend drag");T.empty().removeClass(Ca)},getEditorLock:w,getEditController:function(){return Yb}});
T=a(b);if(1>T.length)throw Error("SlickGrid requires a valid container, "+b+" does not exist in the DOM.");var Mb;if(!(Mb=c)){for(var uc=1E6,Pc=navigator.userAgent.toLowerCase().match(/firefox/)?6E6:1E9,ac=a("<div style='display:none' />").appendTo(document.body);;){var nb=2*uc;ac.css("height",nb);if(nb>Pc||ac.height()!==nb)break;else uc=nb}ac.remove();Mb=uc}c=Mb;var bc;if(!(bc=j)){var Ka=a("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body"),
kb={width:Ka.width()-Ka[0].clientWidth,height:Ka.height()-Ka[0].clientHeight};Ka.remove();bc=kb}j=bc;h=a.extend({},Tb,h);h.autoHeight&&(h.leaveSpaceForNewRows=!1);Ub.width=h.defaultColumnWidth;for(var ya={},yb=0;yb<e.length;yb++){var Oa=e[yb]=a.extend({},Ub,e[yb]);ya[Oa.id]=yb;Oa.minWidth&&Oa.width<Oa.minWidth&&(Oa.width=Oa.minWidth);Oa.maxWidth&&Oa.width>Oa.maxWidth&&(Oa.width=Oa.maxWidth)}if(h.enableColumnReorder&&!a.fn.sortable)throw Error("SlickGrid's 'enableColumnReorder = true' option requires jquery-ui.sortable module to be loaded");
Yb={commitCurrentEdit:function(){var b=k(N),c=e[Y];if(O){if(O.isValueChanged()){var d=O.validate();if(d.valid)return N<H()?(d={row:N,cell:Y,editor:O,serializedValue:O.serializeValue(),prevSerializedValue:rc,execute:function(){this.editor.applyValue(b,this.serializedValue);S(this.row)},undo:function(){this.editor.applyValue(b,this.prevSerializedValue);S(this.row)}},h.editCommandHandler?(F(),h.editCommandHandler(b,c,d)):(d.execute(),F()),s(J.onCellChange,{row:N,cell:Y,item:b})):(d={},O.applyValue(d,
O.serializeValue()),F(),s(J.onAddNewRow,{item:d,column:c})),!w().isActive();a(W).addClass("invalid");a(W).stop(!0,!0).effect("highlight",{color:"red"},300);s(J.onValidationError,{editor:O,cellNode:W,validationResults:d,row:N,cell:Y,column:c});O.focus();return!1}F()}return!0},cancelCurrentEdit:function(){F();return!0}};T.empty().css("overflow","hidden").css("outline",0).addClass(Ca).addClass("ui-widget");/relative|absolute|fixed/.test(T.css("position"))||T.css("position","relative");Ya=a("<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>").appendTo(T);
gb=a("<div class='slick-header ui-state-default' style='overflow:hidden;position:relative;' />").appendTo(T);Z=a("<div class='slick-header-columns' style='left:-1000px' />").appendTo(gb);Z.width(m());Da=a("<div class='slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />").appendTo(T);va=a("<div class='slick-headerrow-columns' />").appendTo(Da);Eb=a("<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>").css("width",p()+j.width+"px").appendTo(Da);
Ra=a("<div class='slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />").appendTo(T);Fb=a("<div class='slick-top-panel' style='width:10000px' />").appendTo(Ra);h.showTopPanel||Ra.hide();h.showHeaderRow||Da.hide();ea=a("<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>").appendTo(T);ea.css("overflow-y",h.autoHeight?"hidden":"auto");Ea=a("<div class='grid-canvas' />").appendTo(ea);ub=Ya.clone().appendTo(T);h.explicitInitialization||
d()}}});var j,c})(jQuery);(function(a){a.extend(!0,window,{Slick:{RowSelectionModel:function(j){function c(a){return function(){q||(q=!0,a.apply(this,arguments),q=!1)}}function b(a){for(var b=[],c=0;c<a.length;c++)for(var d=a[c].fromRow;d<=a[c].toRow;d++)b.push(d);return b}function f(a){for(var b=[],c=p.getColumns().length-1,d=0;d<a.length;d++)b.push(new Slick.Range(a[d],0,a[d],c));return b}function e(){return b(r)}function h(a){r=a;y.onSelectedRangesChanged.notify(r)}function d(a,b){u.selectActiveRow&&null!=b.row&&h([new Slick.Range(b.row,
0,b.row,p.getColumns().length-1)])}function g(a){var b=p.getActiveCell();if(b&&a.shiftKey&&!a.ctrlKey&&!a.altKey&&!a.metaKey&&(38==a.which||40==a.which)){var c=e();c.sort(function(a,b){return a-b});c.length||(c=[b.row]);var d=c[0],c=c[c.length-1],b=40==a.which?b.row<c||d==c?++c:++d:b.row<c?--c:--d;if(0<=b&&b<p.getDataLength()){p.scrollRowIntoView(b);for(var g=[],b=d;b<=c;b++)g.push(b);for(b=c;b<d;b++)g.push(b);r=f(g);h(r)}a.preventDefault();a.stopPropagation()}}function m(c){var d=p.getCellFromEvent(c);
if(!d||!p.canCellBeActive(d.row,d.cell))return!1;var e=b(r),g=a.inArray(d.row,e);if(!c.ctrlKey&&!c.shiftKey&&!c.metaKey)return!1;if(p.getOptions().multiSelect)if(-1===g&&(c.ctrlKey||c.metaKey))e.push(d.row),p.setActiveCell(d.row,d.cell);else if(-1!==g&&(c.ctrlKey||c.metaKey))e=a.grep(e,function(a){return a!==d.row}),p.setActiveCell(d.row,d.cell);else if(e.length&&c.shiftKey){for(var g=e.pop(),j=Math.min(d.row,g),m=Math.max(d.row,g),e=[];j<=m;j++)j!==g&&e.push(j);e.push(g);p.setActiveCell(d.row,d.cell)}r=
f(e);h(r);c.stopImmediatePropagation();return!0}var p,r=[],y=this,t=new Slick.EventHandler,q,u,s={selectActiveRow:!0};a.extend(this,{getSelectedRows:e,setSelectedRows:function(a){h(f(a))},getSelectedRanges:function(){return r},setSelectedRanges:h,init:function(b){u=a.extend(!0,{},s,j);p=b;t.subscribe(p.onActiveCellChanged,c(d));t.subscribe(p.onKeyDown,c(g));t.subscribe(p.onClick,c(m))},destroy:function(){t.unsubscribeAll()},onSelectedRangesChanged:new Slick.Event})}}})})(jQuery);(function(a){a.extend(!0,window,{Slick:{CheckboxSelectColumn:function(j){function c(){var a=g.getSelectedRows(),b={},c,d;for(d=0;d<a.length;d++)c=a[d],b[c]=!0,b[c]!==p[c]&&(g.invalidateRow(c),delete p[c]);for(d in p)g.invalidateRow(d);p=b;g.render();a.length&&a.length==g.getDataLength()?g.updateColumnHeader(r.columnId,"<input type='checkbox' checked='checked'>",r.toolTip):g.updateColumnHeader(r.columnId,"<input type='checkbox'>",r.toolTip)}function b(a,b){32==a.which&&g.getColumns()[b.cell].id===
r.columnId&&((!g.getEditorLock().isActive()||g.getEditorLock().commitCurrentEdit())&&e(b.row),a.preventDefault(),a.stopImmediatePropagation())}function f(b,c){g.getColumns()[c.cell].id===r.columnId&&a(b.target).is(":checkbox")&&(g.getEditorLock().isActive()&&!g.getEditorLock().commitCurrentEdit()?b.preventDefault():(e(c.row),b.stopPropagation()),b.stopImmediatePropagation())}function e(b){p[b]?g.setSelectedRows(a.grep(g.getSelectedRows(),function(a){return a!=b})):g.setSelectedRows(g.getSelectedRows().concat(b))}
function h(b,c){if(c.column.id==r.columnId&&a(b.target).is(":checkbox")){if(g.getEditorLock().isActive()&&!g.getEditorLock().commitCurrentEdit())b.preventDefault();else{if(a(b.target).is(":checked")){for(var d=[],e=0;e<g.getDataLength();e++)d.push(e);g.setSelectedRows(d)}else g.setSelectedRows([]);b.stopPropagation()}b.stopImmediatePropagation()}}function d(a,b,c,d,e){return e?p[a]?"<input type='checkbox' checked='checked'>":"<input type='checkbox'>":null}var g,m=new Slick.EventHandler,p={},r=a.extend(!0,
{},{columnId:"_checkbox_selector",cssClass:null,toolTip:"Select/Deselect All",width:30},j);a.extend(this,{init:function(a){g=a;m.subscribe(g.onSelectedRowsChanged,c).subscribe(g.onClick,f).subscribe(g.onHeaderClick,h).subscribe(g.onKeyDown,b)},destroy:function(){m.unsubscribeAll()},getColumnDefinition:function(){return{id:r.columnId,name:"<input type='checkbox'>",toolTip:r.toolTip,field:"sel",width:r.width,resizable:!1,sortable:!1,cssClass:r.cssClass,formatter:d}}})}}})})(jQuery);(function(a){a.extend(!0,window,{Slick:{Controls:{Pager:function(j,c,b){function f(){var a=!Slick.GlobalEditorLock.commitCurrentEdit(),b=j.getPagingInfo(),c=b.totalPages-1;return{canGotoFirst:!a&&0!=b.pageSize&&0<b.pageNum,canGotoLast:!a&&0!=b.pageSize&&b.pageNum!=c,canGotoPrev:!a&&0!=b.pageSize&&0<b.pageNum,canGotoNext:!a&&0!=b.pageSize&&b.pageNum<c,pagingInfo:b}}function e(a){j.setRefreshHints({isFilterUnchanged:!0});j.setPagingOptions({pageSize:a})}function h(a){var c=f();b.find(".slick-pager-nav span").removeClass("ui-state-disabled");
c.canGotoFirst||b.find(".ui-icon-seek-first").addClass("ui-state-disabled");c.canGotoLast||b.find(".ui-icon-seek-end").addClass("ui-state-disabled");c.canGotoNext||b.find(".ui-icon-seek-next").addClass("ui-state-disabled");c.canGotoPrev||b.find(".ui-icon-seek-prev").addClass("ui-state-disabled");0==a.pageSize?d.text("Showing all "+a.totalRows+" rows"):d.text("Showing page "+(a.pageNum+1)+" of "+a.totalPages)}var d;j.onPagingInfoChanged.subscribe(function(a,b){h(b)});b.empty();var g=a("<span class='slick-pager-nav' />").appendTo(b),
m=a("<span class='slick-pager-settings' />").appendTo(b);d=a("<span class='slick-pager-status' />").appendTo(b);m.append("<span class='slick-pager-settings-expanded' style='display:none'>Show: <a data=0>All</a><a data='-1'>Auto</a><a data=25>25</a><a data=50>50</a><a data=100>100</a></span>");m.find("a[data]").click(function(b){b=a(b.target).attr("data");void 0!=b&&(-1==b?(b=c.getViewport(),e(b.bottom-b.top)):e(parseInt(b)))});a("<span class='ui-state-default ui-corner-all ui-icon-container'><span class='ui-icon ui-icon-lightbulb' /></span>").click(function(){a(".slick-pager-settings-expanded").toggle()}).appendTo(m);
a("<span class='ui-state-default ui-corner-all ui-icon-container'><span class='ui-icon ui-icon-seek-first' /></span>").click(function(){f().canGotoFirst&&j.setPagingOptions({pageNum:0})}).appendTo(g);a("<span class='ui-state-default ui-corner-all ui-icon-container'><span class='ui-icon ui-icon-seek-prev' /></span>").click(function(){var a=f();a.canGotoPrev&&j.setPagingOptions({pageNum:a.pagingInfo.pageNum-1})}).appendTo(g);a("<span class='ui-state-default ui-corner-all ui-icon-container'><span class='ui-icon ui-icon-seek-next' /></span>").click(function(){var a=
f();a.canGotoNext&&j.setPagingOptions({pageNum:a.pagingInfo.pageNum+1})}).appendTo(g);a("<span class='ui-state-default ui-corner-all ui-icon-container'><span class='ui-icon ui-icon-seek-end' /></span>").click(function(){var a=f();a.canGotoLast&&j.setPagingOptions({pageNum:a.pagingInfo.totalPages-1})}).appendTo(g);b.find(".ui-icon-container").hover(function(){a(this).toggleClass("ui-state-hover")});b.children().wrapAll("<div class='slick-pager' />");h(j.getPagingInfo())}}}})})(jQuery);(function(a){a.extend(!0,window,{Slick:{Editors:{Text:function(j){var c,b;this.init=function(){c=a("<INPUT type=text class='editor-text' />").appendTo(j.container).bind("keydown.nav",function(b){(b.keyCode===a.ui.keyCode.LEFT||b.keyCode===a.ui.keyCode.RIGHT)&&b.stopImmediatePropagation()}).focus().select()};this.destroy=function(){c.remove()};this.focus=function(){c.focus()};this.getValue=function(){return c.val()};this.setValue=function(a){c.val(a)};this.loadValue=function(a){b=a[j.column.field]||
"";c.val(b);c[0].defaultValue=b;c.select()};this.serializeValue=function(){return c.val()};this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return!(""==c.val()&&null==b)&&c.val()!=b};this.validate=function(){if(j.column.validator){var a=j.column.validator(c.val());if(!a.valid)return a}return{valid:!0,msg:null}};this.init()},Integer:function(j){var c,b;this.init=function(){c=a("<INPUT type=text class='editor-text' />");c.bind("keydown.nav",function(b){(b.keyCode===
a.ui.keyCode.LEFT||b.keyCode===a.ui.keyCode.RIGHT)&&b.stopImmediatePropagation()});c.appendTo(j.container);c.focus().select()};this.destroy=function(){c.remove()};this.focus=function(){c.focus()};this.loadValue=function(a){b=a[j.column.field];c.val(b);c[0].defaultValue=b;c.select()};this.serializeValue=function(){return parseInt(c.val(),10)||0};this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return!(""==c.val()&&null==b)&&c.val()!=b};this.validate=function(){return isNaN(c.val())?
{valid:!1,msg:"Please enter a valid integer"}:{valid:!0,msg:null}};this.init()},Date:function(j){var c,b,f=!1;this.init=function(){c=a("<INPUT type=text class='editor-text' />");c.appendTo(j.container);c.focus().select();c.datepicker({showOn:"button",buttonImageOnly:!0,buttonImage:"../images/calendar.gif",beforeShow:function(){f=!0},onClose:function(){f=!1}});c.width(c.width()-18)};this.destroy=function(){a.datepicker.dpDiv.stop(!0,!0);c.datepicker("hide");c.datepicker("destroy");c.remove()};this.show=
function(){f&&a.datepicker.dpDiv.stop(!0,!0).show()};this.hide=function(){f&&a.datepicker.dpDiv.stop(!0,!0).hide()};this.position=function(b){f&&a.datepicker.dpDiv.css("top",b.top+30).css("left",b.left)};this.focus=function(){c.focus()};this.loadValue=function(a){b=a[j.column.field];c.val(b);c[0].defaultValue=b;c.select()};this.serializeValue=function(){return c.val()};this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return!(""==c.val()&&null==b)&&c.val()!=b};this.validate=
function(){return{valid:!0,msg:null}};this.init()},YesNoSelect:function(j){var c,b;this.init=function(){c=a("<SELECT tabIndex='0' class='editor-yesno'><OPTION value='yes'>Yes</OPTION><OPTION value='no'>No</OPTION></SELECT>");c.appendTo(j.container);c.focus()};this.destroy=function(){c.remove()};this.focus=function(){c.focus()};this.loadValue=function(a){c.val((b=a[j.column.field])?"yes":"no");c.select()};this.serializeValue=function(){return"yes"==c.val()};this.applyValue=function(a,b){a[j.column.field]=
b};this.isValueChanged=function(){return c.val()!=b};this.validate=function(){return{valid:!0,msg:null}};this.init()},Checkbox:function(j){var c,b;this.init=function(){c=a("<INPUT type=checkbox value='true' class='editor-checkbox' hideFocus>");c.appendTo(j.container);c.focus()};this.destroy=function(){c.remove()};this.focus=function(){c.focus()};this.loadValue=function(a){(b=!!a[j.column.field])?c.attr("checked","checked"):c.removeAttr("checked")};this.serializeValue=function(){return!!c.attr("checked")};
this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return this.serializeValue()!==b};this.validate=function(){return{valid:!0,msg:null}};this.init()},PercentComplete:function(j){var c,b,f;this.init=function(){c=a("<INPUT type=text class='editor-percentcomplete' />");c.width(a(j.container).innerWidth()-25);c.appendTo(j.container);b=a("<div class='editor-percentcomplete-picker' />").appendTo(j.container);b.append("<div class='editor-percentcomplete-helper'><div class='editor-percentcomplete-wrapper'><div class='editor-percentcomplete-slider' /><div class='editor-percentcomplete-buttons' /></div></div>");
b.find(".editor-percentcomplete-buttons").append("<button val=0>Not started</button><br/><button val=50>In Progress</button><br/><button val=100>Complete</button>");c.focus().select();b.find(".editor-percentcomplete-slider").slider({orientation:"vertical",range:"min",value:f,slide:function(a,b){c.val(b.value)}});b.find(".editor-percentcomplete-buttons button").bind("click",function(){c.val(a(this).attr("val"));b.find(".editor-percentcomplete-slider").slider("value",a(this).attr("val"))})};this.destroy=
function(){c.remove();b.remove()};this.focus=function(){c.focus()};this.loadValue=function(a){c.val(f=a[j.column.field]);c.select()};this.serializeValue=function(){return parseInt(c.val(),10)||0};this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return!(""==c.val()&&null==f)&&(parseInt(c.val(),10)||0)!=f};this.validate=function(){return isNaN(parseInt(c.val(),10))?{valid:!1,msg:"Please enter a valid positive number"}:{valid:!0,msg:null}};this.init()},LongText:function(j){var c,
b,f,e=this;this.init=function(){var f=a("body");b=a("<DIV style='z-index:10000;position:absolute;background:white;padding:5px;border:3px solid gray; -moz-border-radius:10px; border-radius:10px;'/>").appendTo(f);c=a("<TEXTAREA hidefocus rows=5 style='backround:white;width:250px;height:80px;border:0;outline:0'>").appendTo(b);a("<DIV style='text-align:right'><BUTTON>Save</BUTTON><BUTTON>Cancel</BUTTON></DIV>").appendTo(b);b.find("button:first").bind("click",this.save);b.find("button:last").bind("click",
this.cancel);c.bind("keydown",this.handleKeyDown);e.position(j.position);c.focus().select()};this.handleKeyDown=function(b){b.which==a.ui.keyCode.ENTER&&b.ctrlKey?e.save():b.which==a.ui.keyCode.ESCAPE?(b.preventDefault(),e.cancel()):b.which==a.ui.keyCode.TAB&&b.shiftKey?(b.preventDefault(),j.grid.navigatePrev()):b.which==a.ui.keyCode.TAB&&(b.preventDefault(),j.grid.navigateNext())};this.save=function(){j.commitChanges()};this.cancel=function(){c.val(f);j.cancelChanges()};this.hide=function(){b.hide()};
this.show=function(){b.show()};this.position=function(a){b.css("top",a.top-5).css("left",a.left-5)};this.destroy=function(){b.remove()};this.focus=function(){c.focus()};this.loadValue=function(a){c.val(f=a[j.column.field]);c.select()};this.serializeValue=function(){return c.val()};this.applyValue=function(a,b){a[j.column.field]=b};this.isValueChanged=function(){return!(""==c.val()&&null==f)&&c.val()!=f};this.validate=function(){return{valid:!0,msg:null}};this.init()}}}})})(jQuery);window.xrmjQuery=jQuery.noConflict();window._loadedScripts = window._loadedScripts || {};
window._loadedScripts['mscorlib'] = true;

//! Script# Core Runtime
//! More information at http://projects.nikhilk.net/ScriptSharp
//!

(function () {
  var globals = {
    version: '0.7.4.0',

    isUndefined: function (o) {
      return (o === undefined);
    },

    isNull: function (o) {
      return (o === null);
    },

    isNullOrUndefined: function (o) {
      return (o === null) || (o === undefined);
    },

    isValue: function (o) {
      return (o !== null) && (o !== undefined);
    }
  };

  var started = false;
  var startCallbacks = [];

  function onStartup(cb) {
    startCallbacks ? startCallbacks.push(cb) : setTimeout(cb, 0);
  }
  function startup() {
    if (startCallbacks) {
      var callbacks = startCallbacks;
      startCallbacks = null;
      for (var i = 0, l = callbacks.length; i < l; i++) {
        callbacks[i]();
      }
    }
  }
  if (document.addEventListener) {
    document.readyState == 'complete' ? startup() : document.addEventListener('DOMContentLoaded', startup, false);
  }
  else if (window.attachEvent) {
    window.attachEvent('onload', function () {
      startup();
    });
  }

  var ss = window.ss;
  if (!ss) {
    window.ss = ss = {
      init: onStartup,
      ready: onStartup
    };
  }
  for (var n in globals) {
    ss[n] = globals[n];
  }
})();

///////////////////////////////////////////////////////////////////////////////
// Object Extensions

Object.__typeName = 'Object';
Object.__baseType = null;

Object.clearKeys = function Object$clearKeys(d) {
    for (var n in d) {
        delete d[n];
    }
}

Object.keyExists = function Object$keyExists(d, key) {
    return d[key] !== undefined;
}

if (!Object.keys) {
    Object.keys = function Object$keys(d) {
        var keys = [];
        for (var n in d) {
            keys.push(n);
        }
        return keys;
    }

    Object.getKeyCount = function Object$getKeyCount(d) {
        var count = 0;
        for (var n in d) {
            count++;
        }
        return count;
    }
}
else {
    Object.getKeyCount = function Object$getKeyCount(d) {
        return Object.keys(d).length;
    }
}

///////////////////////////////////////////////////////////////////////////////
// Boolean Extensions

Boolean.__typeName = 'Boolean';

Boolean.parse = function Boolean$parse(s) {
    return (s.toLowerCase() == 'true');
}

///////////////////////////////////////////////////////////////////////////////
// Number Extensions

Number.__typeName = 'Number';

Number.parse = function Number$parse(s) {
    if (!s || !s.length) {
        return 0;
    }
    if ((s.indexOf('.') >= 0) || (s.indexOf('e') >= 0) ||
        s.endsWith('f') || s.endsWith('F')) {
        return parseFloat(s);
    }
    return parseInt(s, 10);
}

Number.prototype.format = function Number$format(format) {
    if (ss.isNullOrUndefined(format) || (format.length == 0) || (format == 'i')) {
        return this.toString();
    }
    return this._netFormat(format, false);
}

Number.prototype.localeFormat = function Number$format(format) {
    if (ss.isNullOrUndefined(format) || (format.length == 0) || (format == 'i')) {
        return this.toLocaleString();
    }
    return this._netFormat(format, true);
}

Number._commaFormat = function Number$_commaFormat(number, groups, decimal, comma) {
    var decimalPart = null;
    var decimalIndex = number.indexOf(decimal);
    if (decimalIndex > 0) {
        decimalPart = number.substr(decimalIndex);
        number = number.substr(0, decimalIndex);
    }

    var negative = number.startsWith('-');
    if (negative) {
        number = number.substr(1);
    }

    var groupIndex = 0;
    var groupSize = groups[groupIndex];
    if (number.length < groupSize) {
        return decimalPart ? number + decimalPart : number;
    }

    var index = number.length;
    var s = '';
    var done = false;
    while (!done) {
        var length = groupSize;
        var startIndex = index - length;
        if (startIndex < 0) {
            groupSize += startIndex;
            length += startIndex;
            startIndex = 0;
            done = true;
        }
        if (!length) {
            break;
        }
        
        var part = number.substr(startIndex, length);
        if (s.length) {
            s = part + comma + s;
        }
        else {
            s = part;
        }
        index -= length;

        if (groupIndex < groups.length - 1) {
            groupIndex++;
            groupSize = groups[groupIndex];
        }
    }

    if (negative) {
        s = '-' + s;
    }    
    return decimalPart ? s + decimalPart : s;
}

Number.prototype._netFormat = function Number$_netFormat(format, useLocale) {
    var nf = useLocale ? ss.CultureInfo.CurrentCulture.numberFormat : ss.CultureInfo.InvariantCulture.numberFormat;

    var s = '';    
    var precision = -1;
    
    if (format.length > 1) {
        precision = parseInt(format.substr(1));
    }

    var fs = format.charAt(0);
    switch (fs) {
        case 'd': case 'D':
            s = parseInt(Math.abs(this)).toString();
            if (precision != -1) {
                s = s.padLeft(precision, '0');
            }
            if (this < 0) {
                s = '-' + s;
            }
            break;
        case 'x': case 'X':
            s = parseInt(Math.abs(this)).toString(16);
            if (fs == 'X') {
                s = s.toUpperCase();
            }
            if (precision != -1) {
                s = s.padLeft(precision, '0');
            }
            break;
        case 'e': case 'E':
            if (precision == -1) {
                s = this.toExponential();
            }
            else {
                s = this.toExponential(precision);
            }
            if (fs == 'E') {
                s = s.toUpperCase();
            }
            break;
        case 'f': case 'F':
        case 'n': case 'N':
            if (precision == -1) {
                precision = nf.numberDecimalDigits;
            }
            s = this.toFixed(precision).toString();
            if (precision && (nf.numberDecimalSeparator != '.')) {
                var index = s.indexOf('.');
                s = s.substr(0, index) + nf.numberDecimalSeparator + s.substr(index + 1);
            }
            if ((fs == 'n') || (fs == 'N')) {
                s = Number._commaFormat(s, nf.numberGroupSizes, nf.numberDecimalSeparator, nf.numberGroupSeparator);
            }
            break;
        case 'c': case 'C':
            if (precision == -1) {
                precision = nf.currencyDecimalDigits;
            }
            s = Math.abs(this).toFixed(precision).toString();
            if (precision && (nf.currencyDecimalSeparator != '.')) {
                var index = s.indexOf('.');
                s = s.substr(0, index) + nf.currencyDecimalSeparator + s.substr(index + 1);
            }
            s = Number._commaFormat(s, nf.currencyGroupSizes, nf.currencyDecimalSeparator, nf.currencyGroupSeparator);
            if (this < 0) {
                s = String.format(nf.currencyNegativePattern, s);
            }
            else {
                s = String.format(nf.currencyPositivePattern, s);
            }
            break;
        case 'p': case 'P':
            if (precision == -1) {
                precision = nf.percentDecimalDigits;
            }
            s = (Math.abs(this) * 100.0).toFixed(precision).toString();
            if (precision && (nf.percentDecimalSeparator != '.')) {
                var index = s.indexOf('.');
                s = s.substr(0, index) + nf.percentDecimalSeparator + s.substr(index + 1);
            }
            s = Number._commaFormat(s, nf.percentGroupSizes, nf.percentDecimalSeparator, nf.percentGroupSeparator);
            if (this < 0) {
                s = String.format(nf.percentNegativePattern, s);
            }
            else {
                s = String.format(nf.percentPositivePattern, s);
            }
            break;
    }

    return s;
}

///////////////////////////////////////////////////////////////////////////////
// String Extensions

String.__typeName = 'String';
String.Empty = '';

String.compare = function String$compare(s1, s2, ignoreCase) {
    if (ignoreCase) {
        if (s1) {
            s1 = s1.toUpperCase();
        }
        if (s2) {
            s2 = s2.toUpperCase();
        }
    }
    s1 = s1 || '';
    s2 = s2 || '';

    if (s1 == s2) {
        return 0;
    }
    if (s1 < s2) {
        return -1;
    }
    return 1;
}

String.prototype.compareTo = function String$compareTo(s, ignoreCase) {
    return String.compare(this, s, ignoreCase);
}

String.concat = function String$concat() {
    if (arguments.length === 2) {
        return arguments[0] + arguments[1];
    }
    return Array.prototype.join.call(arguments, '');
}

String.prototype.endsWith = function String$endsWith(suffix) {
    if (!suffix.length) {
        return true;
    }
    if (suffix.length > this.length) {
        return false;
    }
    return (this.substr(this.length - suffix.length) == suffix);
}

String.equals = function String$equals1(s1, s2, ignoreCase) {
    return String.compare(s1, s2, ignoreCase) == 0;
}

String._format = function String$_format(format, values, useLocale) {
    if (!String._formatRE) {
        String._formatRE = /(\{[^\}^\{]+\})/g;
    }

    return format.replace(String._formatRE,
                          function(str, m) {
                              var index = parseInt(m.substr(1));
                              var value = values[index + 1];
                              if (ss.isNullOrUndefined(value)) {
                                  return '';
                              }
                              if (value.format) {
                                  var formatSpec = null;
                                  var formatIndex = m.indexOf(':');
                                  if (formatIndex > 0) {
                                      formatSpec = m.substring(formatIndex + 1, m.length - 1);
                                  }
                                  return useLocale ? value.localeFormat(formatSpec) : value.format(formatSpec);
                              }
                              else {
                                  return useLocale ? value.toLocaleString() : value.toString();
                              }
                          });
}

String.format = function String$format(format) {
    return String._format(format, arguments, /* useLocale */ false);
}

String.fromChar = function String$fromChar(ch, count) {
    var s = ch;
    for (var i = 1; i < count; i++) {
        s += ch;
    }
    return s;
}

String.prototype.htmlDecode = function String$htmlDecode() {
    var div = document.createElement('div');
    div.innerHTML = this;
    return div.textContent || div.innerText;
}

String.prototype.htmlEncode = function String$htmlEncode() {
    var div = document.createElement('div');
    div.appendChild(document.createTextNode(this));
    return div.innerHTML.replace(/\"/g, '&quot;');
}

String.prototype.indexOfAny = function String$indexOfAny(chars, startIndex, count) {
    var length = this.length;
    if (!length) {
        return -1;
    }

    startIndex = startIndex || 0;
    count = count || length;

    var endIndex = startIndex + count - 1;
    if (endIndex >= length) {
        endIndex = length - 1;
    }

    for (var i = startIndex; i <= endIndex; i++) {
        if (chars.indexOf(this.charAt(i)) >= 0) {
            return i;
        }
    }
    return -1;
}

String.prototype.insert = function String$insert(index, value) {
    if (!value) {
        return this.valueOf();
    }
    if (!index) {
        return value + this;
    }
    var s1 = this.substr(0, index);
    var s2 = this.substr(index);
    return s1 + value + s2;
}

String.isNullOrEmpty = function String$isNullOrEmpty(s) {
    return !s || !s.length;
}

String.prototype.lastIndexOfAny = function String$lastIndexOfAny(chars, startIndex, count) {
    var length = this.length;
    if (!length) {
        return -1;
    }

    startIndex = startIndex || length - 1;
    count = count || length;

    var endIndex = startIndex - count + 1;
    if (endIndex < 0) {
        endIndex = 0;
    }

    for (var i = startIndex; i >= endIndex; i--) {
        if (chars.indexOf(this.charAt(i)) >= 0) {
            return i;
        }
    }
    return -1;
}

String.localeFormat = function String$localeFormat(format) {
    return String._format(format, arguments, /* useLocale */ true);
}

String.prototype.padLeft = function String$padLeft(totalWidth, ch) {
    if (this.length < totalWidth) {
        ch = ch || ' ';
        return String.fromChar(ch, totalWidth - this.length) + this;
    }
    return this.valueOf();
}

String.prototype.padRight = function String$padRight(totalWidth, ch) {
    if (this.length < totalWidth) {
        ch = ch || ' ';
        return this + String.fromChar(ch, totalWidth - this.length);
    }
    return this.valueOf();
}

String.prototype.remove = function String$remove(index, count) {
    if (!count || ((index + count) > this.length)) {
        return this.substr(0, index);
    }
    return this.substr(0, index) + this.substr(index + count);
}

String.prototype.replaceAll = function String$replaceAll(oldValue, newValue) {
    newValue = newValue || '';
    return this.split(oldValue).join(newValue);
}

String.prototype.startsWith = function String$startsWith(prefix) {
    if (!prefix.length) {
        return true;
    }
    if (prefix.length > this.length) {
        return false;
    }
    return (this.substr(0, prefix.length) == prefix);
}

if (!String.prototype.trim) {
    String.prototype.trim = function String$trim() {
        return this.trimEnd().trimStart();
    }
}

String.prototype.trimEnd = function String$trimEnd() {
    return this.replace(/\s*$/, '');
}

String.prototype.trimStart = function String$trimStart() {
    return this.replace(/^\s*/, '');
}

///////////////////////////////////////////////////////////////////////////////
// Array Extensions

Array.__typeName = 'Array';
Array.__interfaces = [ ss.IEnumerable ];

Array.prototype.add = function Array$add(item) {
    this[this.length] = item;
}

Array.prototype.addRange = function Array$addRange(items) {
    this.push.apply(this, items);
}

Array.prototype.aggregate = function Array$aggregate(seed, callback, instance) {
    var length = this.length;
    for (var i = 0; i < length; i++) {
        if (i in this) {
            seed = callback.call(instance, seed, this[i], i, this);
        }
    }
    return seed;
}

Array.prototype.clear = function Array$clear() {
    this.length = 0;
}

Array.prototype.clone = function Array$clone() {
    if (this.length === 1) {
        return [this[0]];
    }
    else {
        return Array.apply(null, this);
    }
}

Array.prototype.contains = function Array$contains(item) {
    var index = this.indexOf(item);
    return (index >= 0);
}

Array.prototype.dequeue = function Array$dequeue() {
    return this.shift();
}

Array.prototype.enqueue = function Array$enqueue(item) {
    // We record that this array instance is a queue, so we
    // can implement the right behavior in the peek method.
    this._queue = true;
    this.push(item);
}

Array.prototype.peek = function Array$peek() {
    if (this.length) {
        var index = this._queue ? 0 : this.length - 1;
        return this[index];
    }
    return null;
}

if (!Array.prototype.every) {
    Array.prototype.every = function Array$every(callback, instance) {
        var length = this.length;
        for (var i = 0; i < length; i++) {
            if (i in this && !callback.call(instance, this[i], i, this)) {
                return false;
            }
        }
        return true;
    }
}

Array.prototype.extract = function Array$extract(index, count) {
    if (!count) {
        return this.slice(index);
    }
    return this.slice(index, index + count);
}

if (!Array.prototype.filter) {
    Array.prototype.filter = function Array$filter(callback, instance) {
        var length = this.length;    
        var filtered = [];
        for (var i = 0; i < length; i++) {
            if (i in this) {
                var val = this[i];
                if (callback.call(instance, val, i, this)) {
                    filtered.push(val);
                }
            }
        }
        return filtered;
    }
}

if (!Array.prototype.forEach) {
    Array.prototype.forEach = function Array$forEach(callback, instance) {
        var length = this.length;
        for (var i = 0; i < length; i++) {
            if (i in this) {
                callback.call(instance, this[i], i, this);
            }
        }
    }
}

Array.prototype.getEnumerator = function Array$getEnumerator() {
    return new ss.ArrayEnumerator(this);
}

Array.prototype.groupBy = function Array$groupBy(callback, instance) {
    var length = this.length;
    var groups = [];
    var keys = {};
    for (var i = 0; i < length; i++) {
        if (i in this) {
            var key = callback.call(instance, this[i], i);
            if (String.isNullOrEmpty(key)) {
                continue;
            }
            var items = keys[key];
            if (!items) {
                items = [];
                items.key = key;

                keys[key] = items;
                groups.add(items);
            }
            items.add(this[i]);
        }
    }
    return groups;
}

Array.prototype.index = function Array$index(callback, instance) {
    var length = this.length;
    var items = {};
    for (var i = 0; i < length; i++) {
        if (i in this) {
            var key = callback.call(instance, this[i], i);
            if (String.isNullOrEmpty(key)) {
                continue;
            }
            items[key] = this[i];
        }
    }
    return items;
}

if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function Array$indexOf(item, startIndex) {
        startIndex = startIndex || 0;
        var length = this.length;
        if (length) {
            for (var index = startIndex; index < length; index++) {
                if (this[index] === item) {
                    return index;
                }
            }
        }
        return -1;
    }
}

Array.prototype.insert = function Array$insert(index, item) {
    this.splice(index, 0, item);
}

Array.prototype.insertRange = function Array$insertRange(index, items) {
    if (index === 0) {
        this.unshift.apply(this, items);
    }
    else {
        for (var i = 0; i < items.length; i++) {
            this.splice(index + i, 0, items[i]);
        }
    }
}

if (!Array.prototype.map) {
    Array.prototype.map = function Array$map(callback, instance) {
        var length = this.length;
        var mapped = new Array(length);
        for (var i = 0; i < length; i++) {
            if (i in this) {
                mapped[i] = callback.call(instance, this[i], i, this);
            }
        }
        return mapped;
    }
}

Array.parse = function Array$parse(s) {
    return eval('(' + s + ')');
}

Array.prototype.remove = function Array$remove(item) {
    var index = this.indexOf(item);
    if (index >= 0) {
        this.splice(index, 1);
        return true;
    }
    return false;
}

Array.prototype.removeAt = function Array$removeAt(index) {
    this.splice(index, 1);
}

Array.prototype.removeRange = function Array$removeRange(index, count) {
    return this.splice(index, count);
}

if (!Array.prototype.some) {
    Array.prototype.some = function Array$some(callback, instance) {
        var length = this.length;
        for (var i = 0; i < length; i++) {
            if (i in this && callback.call(instance, this[i], i, this)) {
                return true;
            }
        }
        return false;
    }
}

Array.toArray = function Array$toArray(obj) {
    return Array.prototype.slice.call(obj);
}

///////////////////////////////////////////////////////////////////////////////
// RegExp Extensions

RegExp.__typeName = 'RegExp';

RegExp.parse = function RegExp$parse(s) {
    if (s.startsWith('/')) {
        var endSlashIndex = s.lastIndexOf('/');
        if (endSlashIndex > 1) {
            var expression = s.substring(1, endSlashIndex);
            var flags = s.substr(endSlashIndex + 1);
            return new RegExp(expression, flags);
        }
    }

    return null;    
}

///////////////////////////////////////////////////////////////////////////////
// Date Extensions

Date.__typeName = 'Date';

Date.empty = null;

Date.get_now = function Date$get_now() {
    return new Date();
}

Date.get_today = function Date$get_today() {
    var d = new Date();
    return new Date(d.getFullYear(), d.getMonth(), d.getDate());
}

Date.isEmpty = function Date$isEmpty(d) {
    return (d === null) || (d.valueOf() === 0);
}

Date.prototype.format = function Date$format(format) {
    if (ss.isNullOrUndefined(format) || (format.length == 0) || (format == 'i')) {
        return this.toString();
    }
    if (format == 'id') {
        return this.toDateString();
    }
    if (format == 'it') {
        return this.toTimeString();
    }

    return this._netFormat(format, false);
}

Date.prototype.localeFormat = function Date$localeFormat(format) {
    if (ss.isNullOrUndefined(format) || (format.length == 0) || (format == 'i')) {
        return this.toLocaleString();
    }
    if (format == 'id') {
        return this.toLocaleDateString();
    }
    if (format == 'it') {
        return this.toLocaleTimeString();
    }

    return this._netFormat(format, true);
}

Date.prototype._netFormat = function Date$_netFormat(format, useLocale) {
    var dt = this;
    var dtf = useLocale ? ss.CultureInfo.CurrentCulture.dateFormat : ss.CultureInfo.InvariantCulture.dateFormat;

    if (format.length == 1) {
        switch (format) {
            case 'f': format = dtf.longDatePattern + ' ' + dtf.shortTimePattern; break;
            case 'F': format = dtf.dateTimePattern; break;

            case 'd': format = dtf.shortDatePattern; break;
            case 'D': format = dtf.longDatePattern; break;

            case 't': format = dtf.shortTimePattern; break;
            case 'T': format = dtf.longTimePattern; break;

            case 'g': format = dtf.shortDatePattern + ' ' + dtf.shortTimePattern; break;
            case 'G': format = dtf.shortDatePattern + ' ' + dtf.longTimePattern; break;

            case 'R': case 'r':
                dtf = ss.CultureInfo.InvariantCulture.dateFormat;
                format = dtf.gmtDateTimePattern;
                break;
            case 'u': format = dtf.universalDateTimePattern; break;
            case 'U':
                format = dtf.dateTimePattern;
                dt = new Date(dt.getUTCFullYear(), dt.getUTCMonth(), dt.getUTCDate(),
                              dt.getUTCHours(), dt.getUTCMinutes(), dt.getUTCSeconds(), dt.getUTCMilliseconds());
                break;

            case 's': format = dtf.sortableDateTimePattern; break;
        }
    }

    if (format.charAt(0) == '%') {
        format = format.substr(1);
    }

    if (!Date._formatRE) {
        Date._formatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
    }

    var re = Date._formatRE;
    var sb = new ss.StringBuilder();

    re.lastIndex = 0;
    while (true) {
        var index = re.lastIndex;
        var match = re.exec(format);

        sb.append(format.slice(index, match ? match.index : format.length));
        if (!match) {
            break;
        }

        var fs = match[0];
        var part = fs;
        switch (fs) {
            case 'dddd':
                part = dtf.dayNames[dt.getDay()];
                break;
            case 'ddd':
                part = dtf.shortDayNames[dt.getDay()];
                break;
            case 'dd':
                part = dt.getDate().toString().padLeft(2, '0');
                break;
            case 'd':
                part = dt.getDate();
                break;
            case 'MMMM':
                part = dtf.monthNames[dt.getMonth()];
                break;
            case 'MMM':
                part = dtf.shortMonthNames[dt.getMonth()];
                break;
            case 'MM':
                part = (dt.getMonth() + 1).toString().padLeft(2, '0');
                break;
            case 'M':
                part = (dt.getMonth() + 1);
                break;
            case 'yyyy':
                part = dt.getFullYear();
                break;
            case 'yy':
                part = (dt.getFullYear() % 100).toString().padLeft(2, '0');
                break;
            case 'y':
                part = (dt.getFullYear() % 100);
                break;
            case 'h': case 'hh':
                part = dt.getHours() % 12;
                if (!part) {
                    part = '12';
                }
                else if (fs == 'hh') {
                    part = part.toString().padLeft(2, '0');
                }
                break;
            case 'HH':
                part = dt.getHours().toString().padLeft(2, '0');
                break;
            case 'H':
                part = dt.getHours();
                break;
            case 'mm':
                part = dt.getMinutes().toString().padLeft(2, '0');
                break;
            case 'm':
                part = dt.getMinutes();
                break;
            case 'ss':
                part = dt.getSeconds().toString().padLeft(2, '0');
                break;
            case 's':
                part = dt.getSeconds();
                break;
            case 't': case 'tt':
                part = (dt.getHours() < 12) ? dtf.amDesignator : dtf.pmDesignator;
                if (fs == 't') {
                    part = part.charAt(0);
                }
                break;
            case 'fff':
                part = dt.getMilliseconds().toString().padLeft(3, '0');
                break;
            case 'ff':
                part = dt.getMilliseconds().toString().padLeft(3).substr(0, 2);
                break;
            case 'f':
                part = dt.getMilliseconds().toString().padLeft(3).charAt(0);
                break;
            case 'z':
                part = dt.getTimezoneOffset() / 60;
                part = ((part >= 0) ? '-' : '+') + Math.floor(Math.abs(part));
                break;
            case 'zz': case 'zzz':
                part = dt.getTimezoneOffset() / 60;
                part = ((part >= 0) ? '-' : '+') + Math.floor(Math.abs(part)).toString().padLeft(2, '0');
                if (fs == 'zzz') {
                    part += dtf.timeSeparator + Math.abs(dt.getTimezoneOffset() % 60).toString().padLeft(2, '0');
                }
                break;
            default:
                if (part.charAt(0) == '\'') {
                    part = part.substr(1, part.length - 2).replace(/\\'/g, '\'');
                }
                break;
        }
        sb.append(part);
    }

    return sb.toString();
}

Date.parseDate = function Date$parse(s) {
    // Date.parse returns the number of milliseconds
    // so we use that to create an actual Date instance
    return new Date(Date.parse(s));
}

///////////////////////////////////////////////////////////////////////////////
// Error Extensions

Error.__typeName = 'Error';

Error.prototype.popStackFrame = function Error$popStackFrame() {
    if (ss.isNullOrUndefined(this.stack) ||
        ss.isNullOrUndefined(this.fileName) ||
        ss.isNullOrUndefined(this.lineNumber)) {
        return;
    }

    var stackFrames = this.stack.split('\n');
    var currentFrame = stackFrames[0];
    var pattern = this.fileName + ':' + this.lineNumber;
    while (!ss.isNullOrUndefined(currentFrame) &&
           currentFrame.indexOf(pattern) === -1) {
        stackFrames.shift();
        currentFrame = stackFrames[0];
    }

    var nextFrame = stackFrames[1];
    if (ss.isNullOrUndefined(nextFrame)) {
        return;
    }

    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/);
    if (ss.isNullOrUndefined(nextFrameParts)) {
        return;
    }

    stackFrames.shift();
    this.stack = stackFrames.join("\n");
    this.fileName = nextFrameParts[1];
    this.lineNumber = parseInt(nextFrameParts[2]);
}

Error.createError = function Error$createError(message, errorInfo, innerException) {
    var e = new Error(message);
    if (errorInfo) {
        for (var v in errorInfo) {
            e[v] = errorInfo[v];
        }
    }
    if (innerException) {
        e.innerException = innerException;
    }

    e.popStackFrame();
    return e;
}

///////////////////////////////////////////////////////////////////////////////
// Debug Extensions

ss.Debug = window.Debug || function() {};
ss.Debug.__typeName = 'Debug';

if (!ss.Debug.writeln) {
    ss.Debug.writeln = function Debug$writeln(text) {
        if (window.console) {
            if (window.console.debug) {
                window.console.debug(text);
                return;
            }
            else if (window.console.log) {
                window.console.log(text);
                return;
            }
        }
        else if (window.opera &&
            window.opera.postError) {
            window.opera.postError(text);
            return;
        }
    }
}

ss.Debug._fail = function Debug$_fail(message) {
    ss.Debug.writeln(message);
    eval('debugger;');
}

ss.Debug.assert = function Debug$assert(condition, message) {
    if (!condition) {
        message = 'Assert failed: ' + message;
        if (confirm(message + '\r\n\r\nBreak into debugger?')) {
            ss.Debug._fail(message);
        }
    }
}

ss.Debug.fail = function Debug$fail(message) {
    ss.Debug._fail(message);
}

///////////////////////////////////////////////////////////////////////////////
// Type System Implementation

window.Type = Function;
Type.__typeName = 'Type';

window.__Namespace = function(name) {
    this.__typeName = name;
}
__Namespace.prototype = {
    __namespace: true,
    getName: function() {
        return this.__typeName;
    }
}

Type.registerNamespace = function Type$registerNamespace(name) {
    if (!window.__namespaces) {
        window.__namespaces = {};
    }
    if (!window.__rootNamespaces) {
        window.__rootNamespaces = [];
    }

    if (window.__namespaces[name]) {
        return;
    }

    var ns = window;
    var nameParts = name.split('.');

    for (var i = 0; i < nameParts.length; i++) {
        var part = nameParts[i];
        var nso = ns[part];
        if (!nso) {
            ns[part] = nso = new __Namespace(nameParts.slice(0, i + 1).join('.'));
            if (i == 0) {
                window.__rootNamespaces.add(nso);
            }
        }
        ns = nso;
    }

    window.__namespaces[name] = ns;
}

Type.prototype.registerClass = function Type$registerClass(name, baseType, interfaceType) {
    this.prototype.constructor = this;
    this.__typeName = name;
    this.__class = true;
    this.__baseType = baseType || Object;
    if (baseType) {
        this.__basePrototypePending = true;
    }

    if (interfaceType) {
        this.__interfaces = [];
        for (var i = 2; i < arguments.length; i++) {
            interfaceType = arguments[i];
            this.__interfaces.add(interfaceType);
        }
    }
}

Type.prototype.registerInterface = function Type$createInterface(name) {
    this.__typeName = name;
    this.__interface = true;
}

Type.prototype.registerEnum = function Type$createEnum(name, flags) {
    for (var field in this.prototype) {
         this[field] = this.prototype[field];
    }

    this.__typeName = name;
    this.__enum = true;
    if (flags) {
        this.__flags = true;
    }
}

Type.prototype.setupBase = function Type$setupBase() {
    if (this.__basePrototypePending) {
        var baseType = this.__baseType;
        if (baseType.__basePrototypePending) {
            baseType.setupBase();
        }

        for (var memberName in baseType.prototype) {
            var memberValue = baseType.prototype[memberName];
            if (!this.prototype[memberName]) {
                this.prototype[memberName] = memberValue;
            }
        }

        delete this.__basePrototypePending;
    }
}

if (!Type.prototype.resolveInheritance) {
    // This function is not used by Script#; Visual Studio relies on it
    // for JavaScript IntelliSense support of derived types.
    Type.prototype.resolveInheritance = Type.prototype.setupBase;
}

Type.prototype.initializeBase = function Type$initializeBase(instance, args) {
    if (this.__basePrototypePending) {
        this.setupBase();
    }

    if (!args) {
        this.__baseType.apply(instance);
    }
    else {
        this.__baseType.apply(instance, args);
    }
}

Type.prototype.callBaseMethod = function Type$callBaseMethod(instance, name, args) {
    var baseMethod = this.__baseType.prototype[name];
    if (!args) {
        return baseMethod.apply(instance);
    }
    else {
        return baseMethod.apply(instance, args);
    }
}

Type.prototype.get_baseType = function Type$get_baseType() {
    return this.__baseType || null;
}

Type.prototype.get_fullName = function Type$get_fullName() {
    return this.__typeName;
}

Type.prototype.get_name = function Type$get_name() {
    var fullName = this.__typeName;
    var nsIndex = fullName.lastIndexOf('.');
    if (nsIndex > 0) {
        return fullName.substr(nsIndex + 1);
    }
    return fullName;
}

Type.prototype.getInterfaces = function Type$getInterfaces() {
    return this.__interfaces;
}

Type.prototype.isInstanceOfType = function Type$isInstanceOfType(instance) {
    if (ss.isNullOrUndefined(instance)) {
        return false;
    }
    if ((this == Object) || (instance instanceof this)) {
        return true;
    }

    var type = Type.getInstanceType(instance);
    return this.isAssignableFrom(type);
}

Type.prototype.isAssignableFrom = function Type$isAssignableFrom(type) {
    if ((this == Object) || (this == type)) {
        return true;
    }
    if (this.__class) {
        var baseType = type.__baseType;
        while (baseType) {
            if (this == baseType) {
                return true;
            }
            baseType = baseType.__baseType;
        }
    }
    else if (this.__interface) {
        var interfaces = type.__interfaces;
        if (interfaces && interfaces.contains(this)) {
            return true;
        }

        var baseType = type.__baseType;
        while (baseType) {
            interfaces = baseType.__interfaces;
            if (interfaces && interfaces.contains(this)) {
                return true;
            }
            baseType = baseType.__baseType;
        }
    }
    return false;
}

Type.isClass = function Type$isClass(type) {
    return (type.__class == true);
}

Type.isEnum = function Type$isEnum(type) {
    return (type.__enum == true);
}

Type.isFlags = function Type$isFlags(type) {
    return ((type.__enum == true) && (type.__flags == true));
}

Type.isInterface = function Type$isInterface(type) {
    return (type.__interface == true);
}

Type.isNamespace = function Type$isNamespace(object) {
    return (object.__namespace == true);
}

Type.canCast = function Type$canCast(instance, type) {
    return type.isInstanceOfType(instance);
}

Type.safeCast = function Type$safeCast(instance, type) {
    if (type.isInstanceOfType(instance)) {
        return instance;
    }
    return null;
}

Type.getInstanceType = function Type$getInstanceType(instance) {
    var ctor = null;

    // NOTE: We have to catch exceptions because the constructor
    //       cannot be looked up on native COM objects
    try {
        ctor = instance.constructor;
    }
    catch (ex) {
    }
    if (!ctor || !ctor.__typeName) {
        ctor = Object;
    }
    return ctor;
}

Type.getType = function Type$getType(typeName) {
    if (!typeName) {
        return null;
    }

    if (!Type.__typeCache) {
        Type.__typeCache = {};
    }

    var type = Type.__typeCache[typeName];
    if (!type) {
        type = eval(typeName);
        Type.__typeCache[typeName] = type;
    }
    return type;
}

Type.parse = function Type$parse(typeName) {
    return Type.getType(typeName);
}

///////////////////////////////////////////////////////////////////////////////
// Delegate

ss.Delegate = function Delegate$() {
}
ss.Delegate.registerClass('Delegate');

ss.Delegate.empty = function() { }

ss.Delegate._contains = function Delegate$_contains(targets, object, method) {
    for (var i = 0; i < targets.length; i += 2) {
        if (targets[i] === object && targets[i + 1] === method) {
            return true;
        }
    }
    return false;
}

ss.Delegate._create = function Delegate$_create(targets) {
    var delegate = function() {
        if (targets.length == 2) {
            return targets[1].apply(targets[0], arguments);
        }
        else {
            var clone = targets.clone();
            for (var i = 0; i < clone.length; i += 2) {
                if (ss.Delegate._contains(targets, clone[i], clone[i + 1])) {
                    clone[i + 1].apply(clone[i], arguments);
                }
            }
            return null;
        }
    };
    delegate._targets = targets;

    return delegate;
}

ss.Delegate.create = function Delegate$create(object, method) {
    if (!object) {
        return method;
    }
    return ss.Delegate._create([object, method]);
}

ss.Delegate.combine = function Delegate$combine(delegate1, delegate2) {
    if (!delegate1) {
        if (!delegate2._targets) {
            return ss.Delegate.create(null, delegate2);
        }
        return delegate2;
    }
    if (!delegate2) {
        if (!delegate1._targets) {
            return ss.Delegate.create(null, delegate1);
        }
        return delegate1;
    }

    var targets1 = delegate1._targets ? delegate1._targets : [null, delegate1];
    var targets2 = delegate2._targets ? delegate2._targets : [null, delegate2];

    return ss.Delegate._create(targets1.concat(targets2));
}

ss.Delegate.remove = function Delegate$remove(delegate1, delegate2) {
    if (!delegate1 || (delegate1 === delegate2)) {
        return null;
    }
    if (!delegate2) {
        return delegate1;
    }

    var targets = delegate1._targets;
    var object = null;
    var method;
    if (delegate2._targets) {
        object = delegate2._targets[0];
        method = delegate2._targets[1];
    }
    else {
        method = delegate2;
    }

    for (var i = 0; i < targets.length; i += 2) {
        if ((targets[i] === object) && (targets[i + 1] === method)) {
            if (targets.length == 2) {
                return null;
            }
            targets.splice(i, 2);
            return ss.Delegate._create(targets);
        }
    }

    return delegate1;
}

ss.Delegate.createExport = function Delegate$createExport(delegate, multiUse, name) {
    // Generate a unique name if one is not specified
    name = name || '__' + (new Date()).valueOf();

    // Exported delegates go on window (so they are callable using a simple identifier).

    // Multi-use delegates are exported directly; for the rest a stub is exported, and the stub
    // first deletes, and then invokes the actual delegate.
    window[name] = multiUse ? delegate : function() {
      try { delete window[name]; } catch(e) { window[name] = undefined; }
      delegate.apply(null, arguments);
    };

    return name;
}

ss.Delegate.deleteExport = function Delegate$deleteExport(name) {
    delete window[name];
}

ss.Delegate.clearExport = function Delegate$clearExport(name) {
    window[name] = ss.Delegate.empty;
}

///////////////////////////////////////////////////////////////////////////////
// CultureInfo

ss.CultureInfo = function CultureInfo$(name, numberFormat, dateFormat) {
    this.name = name;
    this.numberFormat = numberFormat;
    this.dateFormat = dateFormat;
}
ss.CultureInfo.registerClass('CultureInfo');

ss.CultureInfo.InvariantCulture = new ss.CultureInfo('en-US',
    {
        naNSymbol: 'NaN',
        negativeSign: '-',
        positiveSign: '+',
        negativeInfinityText: '-Infinity',
        positiveInfinityText: 'Infinity',
        
        percentSymbol: '%',
        percentGroupSizes: [3],
        percentDecimalDigits: 2,
        percentDecimalSeparator: '.',
        percentGroupSeparator: ',',
        percentPositivePattern: '{0} %',
        percentNegativePattern: '-{0} %',

        currencySymbol:'$',
        currencyGroupSizes: [3],
        currencyDecimalDigits: 2,
        currencyDecimalSeparator: '.',
        currencyGroupSeparator: ',',
        currencyNegativePattern: '(${0})',
        currencyPositivePattern: '${0}',

        numberGroupSizes: [3],
        numberDecimalDigits: 2,
        numberDecimalSeparator: '.',
        numberGroupSeparator: ','
    },
    {
        amDesignator: 'AM',
        pmDesignator: 'PM',

        dateSeparator: '/',
        timeSeparator: ':',

        gmtDateTimePattern: 'ddd, dd MMM yyyy HH:mm:ss \'GMT\'',
        universalDateTimePattern: 'yyyy-MM-dd HH:mm:ssZ',
        sortableDateTimePattern: 'yyyy-MM-ddTHH:mm:ss',
        dateTimePattern: 'dddd, MMMM dd, yyyy h:mm:ss tt',

        longDatePattern: 'dddd, MMMM dd, yyyy',
        shortDatePattern: 'M/d/yyyy',

        longTimePattern: 'h:mm:ss tt',
        shortTimePattern: 'h:mm tt',

        firstDayOfWeek: 0,
        dayNames: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],
        shortDayNames: ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],
        minimizedDayNames: ['Su','Mo','Tu','We','Th','Fr','Sa'],

        monthNames: ['January','February','March','April','May','June','July','August','September','October','November','December',''],
        shortMonthNames: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec','']
    });
ss.CultureInfo.CurrentCulture = ss.CultureInfo.InvariantCulture;

///////////////////////////////////////////////////////////////////////////////
// IEnumerator

ss.IEnumerator = function IEnumerator$() { };
ss.IEnumerator.prototype = {
    get_current: null,
    moveNext: null,
    reset: null
}

ss.IEnumerator.getEnumerator = function ss_IEnumerator$getEnumerator(enumerable) {
    if (enumerable) {
        return enumerable.getEnumerator ? enumerable.getEnumerator() : new ss.ArrayEnumerator(enumerable);
    }
    return null;
}

ss.IEnumerator.registerInterface('IEnumerator');

///////////////////////////////////////////////////////////////////////////////
// IEnumerable

ss.IEnumerable = function IEnumerable$() { };
ss.IEnumerable.prototype = {
    getEnumerator: null
}
ss.IEnumerable.registerInterface('IEnumerable');

///////////////////////////////////////////////////////////////////////////////
// ArrayEnumerator

ss.ArrayEnumerator = function ArrayEnumerator$(array) {
    this._array = array;
    this._index = -1;
    this.current = null;
}
ss.ArrayEnumerator.prototype = {
    moveNext: function ArrayEnumerator$moveNext() {
        this._index++;
        this.current = this._array[this._index];
        return (this._index < this._array.length);
    },
    reset: function ArrayEnumerator$reset() {
        this._index = -1;
        this.current = null;
    }
}

ss.ArrayEnumerator.registerClass('ArrayEnumerator', null, ss.IEnumerator);

///////////////////////////////////////////////////////////////////////////////
// IDisposable

ss.IDisposable = function IDisposable$() { };
ss.IDisposable.prototype = {
    dispose: null
}
ss.IDisposable.registerInterface('IDisposable');

///////////////////////////////////////////////////////////////////////////////
// StringBuilder

ss.StringBuilder = function StringBuilder$(s) {
    this._parts = ss.isNullOrUndefined(s) || s === '' ? [] : [s];
    this.isEmpty = this._parts.length == 0;
}
ss.StringBuilder.prototype = {
    append: function StringBuilder$append(s) {
        if (!ss.isNullOrUndefined(s) && s !== '') {
            this._parts.add(s);
            this.isEmpty = false;
        }
        return this;
    },

    appendLine: function StringBuilder$appendLine(s) {
        this.append(s);
        this.append('\r\n');
        this.isEmpty = false;
        return this;
    },

    clear: function StringBuilder$clear() {
        this._parts = [];
        this.isEmpty = true;
    },

    toString: function StringBuilder$toString(s) {
        return this._parts.join(s || '');
    }
};

ss.StringBuilder.registerClass('StringBuilder');

///////////////////////////////////////////////////////////////////////////////
// EventArgs

ss.EventArgs = function EventArgs$() {
}
ss.EventArgs.registerClass('EventArgs');

ss.EventArgs.Empty = new ss.EventArgs();

///////////////////////////////////////////////////////////////////////////////
// XMLHttpRequest and XML parsing helpers

if (!window.XMLHttpRequest) {
  window.XMLHttpRequest = function() {
    var progIDs = [ 'Msxml2.XMLHTTP', 'Microsoft.XMLHTTP' ];

    for (var i = 0; i < progIDs.length; i++) {
      try {
        var xmlHttp = new ActiveXObject(progIDs[i]);
        return xmlHttp;
      }
      catch (ex) {
      }
    }

    return null;
  }
}

ss.parseXml = function(markup) {
  try {
    if (DOMParser) {
      var domParser = new DOMParser();
      return domParser.parseFromString(markup, 'text/xml');
    }
    else {
      var progIDs = [ 'Msxml2.DOMDocument.3.0', 'Msxml2.DOMDocument' ];
        
      for (var i = 0; i < progIDs.length; i++) {
        var xmlDOM = new ActiveXObject(progIDs[i]);
        xmlDOM.async = false;
        xmlDOM.loadXML(markup);
        xmlDOM.setProperty('SelectionLanguage', 'XPath');
                
        return xmlDOM;
      }
    }
  }
  catch (ex) {
  }

  return null;
}

///////////////////////////////////////////////////////////////////////////////
// CancelEventArgs

ss.CancelEventArgs = function CancelEventArgs$() {
    ss.CancelEventArgs.initializeBase(this);
    this.cancel = false;
}
ss.CancelEventArgs.registerClass('CancelEventArgs', ss.EventArgs);

///////////////////////////////////////////////////////////////////////////////
// Tuple

ss.Tuple = function (first, second, third) {
  this.first = first;
  this.second = second;
  if (arguments.length == 3) {
    this.third = third;
  }
}
ss.Tuple.registerClass('Tuple');

///////////////////////////////////////////////////////////////////////////////
// Observable

ss.Observable = function(v) {
    this._v = v;
    this._observers = null;
}
ss.Observable.prototype = {

  getValue: function () {
    this._observers = ss.Observable._captureObservers(this._observers);
    return this._v;
  },
  setValue: function (v) {
    if (this._v !== v) {
      this._v = v;

      var observers = this._observers;
      if (observers) {
        this._observers = null;
        ss.Observable._invalidateObservers(observers);
      }
    }
  }
};

ss.Observable._observerStack = [];
ss.Observable._observerRegistration = {
  dispose: function () {
    ss.Observable._observerStack.pop();
  }
}
ss.Observable.registerObserver = function (o) {
  ss.Observable._observerStack.push(o);
  return ss.Observable._observerRegistration;
}
ss.Observable._captureObservers = function (observers) {
  var registeredObservers = ss.Observable._observerStack;
  var observerCount = registeredObservers.length;

  if (observerCount) {
    observers = observers || [];
    for (var i = 0; i < observerCount; i++) {
      var observer = registeredObservers[i];
      if (!observers.contains(observer)) {
        observers.push(observer);
      }
    }
    return observers;
  }
  return null;
}
ss.Observable._invalidateObservers = function (observers) {
  for (var i = 0, len = observers.length; i < len; i++) {
    observers[i].invalidateObserver();
  }
}

ss.Observable.registerClass('Observable');


ss.ObservableCollection = function (items) {
  this._items = items || [];
  this._observers = null;
}
ss.ObservableCollection.prototype = {

  get_item: function (index) {
    this._observers = ss.Observable._captureObservers(this._observers);
    return this._items[index];
  },
  set_item: function (index, item) {
    this._items[index] = item;
    this._updated();
  },
  get_length: function () {
    this._observers = ss.Observable._captureObservers(this._observers);
    return this._items.length;
  },
  add: function (item) {
    this._items.push(item);
    this._updated();
  },
  clear: function () {
    this._items.clear();
    this._updated();
  },
  contains: function (item) {
    return this._items.contains(item);
  },
  getEnumerator: function () {
    this._observers = ss.Observable._captureObservers(this._observers);
    return this._items.getEnumerator();
  },
  indexOf: function (item) {
    return this._items.indexOf(item);
  },
  insert: function (index, item) {
    this._items.insert(index, item);
    this._updated();
  },
  remove: function (item) {
    if (this._items.remove(item)) {
      this._updated();
      return true;
    }
    return false;
  },
  removeAt: function (index) {
    this._items.removeAt(index);
    this._updated();
  },
  toArray: function () {
    return this._items;
  },
  _updated: function() {
    var observers = this._observers;
    if (observers) {
      this._observers = null;
      ss.Observable._invalidateObservers(observers);
    }
  }
}
ss.ObservableCollection.registerClass('ObservableCollection', null, ss.IEnumerable);

///////////////////////////////////////////////////////////////////////////////
// Interfaces

ss.IApplication = function() { };
ss.IApplication.registerInterface('IApplication');

ss.IContainer = function () { };
ss.IContainer.registerInterface('IContainer');

ss.IObjectFactory = function () { };
ss.IObjectFactory.registerInterface('IObjectFactory');

ss.IEventManager = function () { };
ss.IEventManager.registerInterface('IEventManager');

ss.IInitializable = function () { };
ss.IInitializable.registerInterface('IInitializable');
//! SparkleXrm.debug.js
//
var scriptLoader = scriptLoader || {
    delayedLoads: [],
    load: function (name, requires, script) {
        window._loadedScripts = window._loadedScripts || {};
        // Check for loaded scripts, if not all loaded then register delayed Load
        if (requires == null || requires.length == 0 || scriptLoader.areLoaded(requires)) {
            scriptLoader.runScript(name, script);
        }
        else {
            // Register an onload check
            scriptLoader.delayedLoads.push({ name: name, requires: requires, script: script });
        }
    },
    runScript: function (name, script) {
        script.call(window);
        window._loadedScripts[name] = true;
        scriptLoader.onScriptLoaded(name);
    },
    onScriptLoaded: function (name) {
        // Check for any registered delayed Loads
        scriptLoader.delayedLoads.forEach(function (script) {
            if (script.loaded == null && scriptLoader.areLoaded(script.requires)) {
                script.loaded = true;
                scriptLoader.runScript(script.name, script.script);
            }
        });
    },
    areLoaded: function (requires) {
        var allLoaded = true;
        for (var i = 0; i < requires.length; i++) {
            var isLoaded = (window._loadedScripts[requires[i]] != null);
            allLoaded = allLoaded && isLoaded;
            if (!allLoaded)
                break;
        }
        return allLoaded;
    }
};

scriptLoader.load("xrm", ["mscorlib"], function () {


    Type.registerNamespace('Xrm');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.ArrayEx

    Xrm.ArrayEx = function Xrm_ArrayEx() {
    }
    Xrm.ArrayEx.add = function Xrm_ArrayEx$add(list, item) {
        list[list.length] = item;
    }
    Xrm.ArrayEx.getEnumerator = function Xrm_ArrayEx$getEnumerator(list) {
        return new ss.ArrayEnumerator(list);
    }
    Xrm.ArrayEx.join = function Xrm_ArrayEx$join(list, delimeter) {
        var result = '';
        for (var i = 0; i < list.length; i++) {
            if (i > 0) {
                result += delimeter;
            }
            result += list[i];
        }
        return result;
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.DelegateItterator

    Xrm.DelegateItterator = function Xrm_DelegateItterator() {
    }
    Xrm.DelegateItterator.callbackItterate = function Xrm_DelegateItterator$callbackItterate(action, numberOfTimes, completeCallBack, errorCallBack) {
        Xrm.DelegateItterator._callbackItterateAction(action, 0, numberOfTimes, completeCallBack, errorCallBack);
    }
    Xrm.DelegateItterator._callbackItterateAction = function Xrm_DelegateItterator$_callbackItterateAction(action, index, numberOfTimes, completeCallBack, errorCallBack) {
        if (index < numberOfTimes) {
            try {
                action(index, function () {
                    index++;
                    Xrm.DelegateItterator._callbackItterateAction(action, index, numberOfTimes, completeCallBack, errorCallBack);
                }, function (ex) {
                    errorCallBack(ex);
                });
            }
            catch (ex) {
                errorCallBack(ex);
            }
        }
        else {
            completeCallBack();
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.NumberEx

    Xrm.NumberEx = function Xrm_NumberEx() {
    }
    Xrm.NumberEx.parse = function Xrm_NumberEx$parse(value, format) {
        if (String.isNullOrEmpty(value)) {
            return null;
        }
        value = value.replaceAll(' ', '');
        if (format.decimalSymbol !== '.') {
            value = value.replaceAll(format.decimalSymbol, '.');
        }
        value = value.replaceAll(format.numberSepartor, '');
        if (value.startsWith('(')) {
            value = '-' + value.replaceAll('(', '').replaceAll(')', '');
        }
        else if (value.endsWith('-')) {
            value = '-' + value.substring(0, value.length - 1);
        }
        var numericValue = Number.parse(value);
        return numericValue;
    }
    Xrm.NumberEx.getNumberFormatInfo = function Xrm_NumberEx$getNumberFormatInfo() {
        var format = {};
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            format.decimalSymbol = Xrm.Sdk.OrganizationServiceProxy.userSettings.decimalsymbol;
            format.numberGroupFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.numbergroupformat;
            format.numberSepartor = Xrm.Sdk.OrganizationServiceProxy.userSettings.numberseparator;
            format.negativeFormatCode = Xrm.Sdk.OrganizationServiceProxy.userSettings.negativeformatcode;
        }
        else {
            format.decimalSymbol = '.';
            format.numberGroupFormat = '3';
            format.numberSepartor = ',';
            format.negativeFormatCode = 0;
        }
        format.precision = 2;
        format.minValue = -2147483648;
        format.maxValue = 2147483648;
        return format;
    }
    Xrm.NumberEx.getCurrencyEditFormatInfo = function Xrm_NumberEx$getCurrencyEditFormatInfo() {
        var format = {};
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            format.decimalSymbol = Xrm.Sdk.OrganizationServiceProxy.userSettings.decimalsymbol;
            format.numberGroupFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.numbergroupformat;
            format.numberSepartor = Xrm.Sdk.OrganizationServiceProxy.userSettings.numberseparator;
            format.negativeFormatCode = Xrm.Sdk.OrganizationServiceProxy.userSettings.negativecurrencyformatcode;
            format.precision = Xrm.Sdk.OrganizationServiceProxy.userSettings.currencydecimalprecision;
            format.currencySymbol = Xrm.Sdk.OrganizationServiceProxy.userSettings.currencysymbol;
        }
        else {
            format.decimalSymbol = '.';
            format.numberGroupFormat = '3';
            format.numberSepartor = ',';
            format.negativeFormatCode = 0;
            format.precision = 2;
            format.currencySymbol = '$';
        }
        return format;
    }
    Xrm.NumberEx.getCurrencyFormatInfo = function Xrm_NumberEx$getCurrencyFormatInfo() {
        var format = {};
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            format.decimalSymbol = Xrm.Sdk.OrganizationServiceProxy.userSettings.decimalsymbol;
            format.numberGroupFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.numbergroupformat;
            format.numberSepartor = Xrm.Sdk.OrganizationServiceProxy.userSettings.numberseparator;
            format.negativeFormatCode = Xrm.Sdk.OrganizationServiceProxy.userSettings.negativecurrencyformatcode;
            format.precision = Xrm.Sdk.OrganizationServiceProxy.userSettings.currencydecimalprecision;
            format.currencySymbol = Xrm.Sdk.OrganizationServiceProxy.userSettings.currencysymbol;
        }
        else {
            format.decimalSymbol = '.';
            format.numberGroupFormat = '3';
            format.numberSepartor = ',';
            format.negativeFormatCode = 0;
            format.precision = 2;
            format.currencySymbol = '$';
        }
        return format;
    }
    Xrm.NumberEx.format = function Xrm_NumberEx$format(value, format) {
        if (value == null) {
            return '';
        }
        var numberGroupFormats = format.numberGroupFormat.split(',');
        var formattedNumber = '';
        var wholeNumber = Math.floor(Math.abs(value));
        var wholeNumberString = wholeNumber.toString();
        var decimalPartString = value.toString().substr(wholeNumberString.length + 1 + ((value < 0) ? 1 : 0));
        var i = wholeNumberString.length;
        var j = 0;
        while (i > 0) {
            var groupSize = parseInt(numberGroupFormats[j]);
            if (j < (numberGroupFormats.length - 1)) {
                j++;
            }
            if (!groupSize) {
                groupSize = i + 1;
            }
            formattedNumber = wholeNumberString.substring(i, i - groupSize) + formattedNumber;
            if (i > groupSize) {
                formattedNumber = format.numberSepartor + formattedNumber;
            }
            i = i - groupSize;
        }
        var neg = (value < 0);
        if (format.precision > 0) {
            var paddingRequired = format.precision - decimalPartString.length;
            for (var d = 0; d < paddingRequired; d++) {
                decimalPartString = decimalPartString + '0';
            }
            formattedNumber = formattedNumber + format.decimalSymbol + decimalPartString;
        }
        if (neg) {
            switch (format.negativeFormatCode) {
                case 0:
                    formattedNumber = '(' + formattedNumber + ')';
                    break;
                case 2:
                    formattedNumber = '- ' + formattedNumber;
                    break;
                case 3:
                    formattedNumber = formattedNumber + '-';
                    break;
                case 4:
                    formattedNumber = formattedNumber + ' -';
                    break;
                case 1:
                default:
                    formattedNumber = '-' + formattedNumber;
                    break;
            }
        }
        return formattedNumber;
    }
    Xrm.NumberEx.round = function Xrm_NumberEx$round(numericValue, precision) {
        var precisionMultiplier = 1;
        if (precision > 0) {
            precisionMultiplier = Math.pow(10, precision);
        }
        return Math.round(numericValue * precisionMultiplier) / precisionMultiplier;
    }
    Xrm.NumberEx.getCurrencySymbol = function Xrm_NumberEx$getCurrencySymbol(currencyId) {
        var orgSettings = Xrm.Services.CachedOrganizationService.retrieveMultiple("<fetch distinct='false' no-lock='false' mapping='logical'><entity name='organization'><attribute name='currencydisplayoption' /><attribute name='currencysymbol' /></entity></fetch>");
        var orgSetting = orgSettings.get_entities().get_item(0);
        var currency = Xrm.Services.CachedOrganizationService.retrieve('transactioncurrency', currencyId.toString(), ['currencysymbol', 'isocurrencycode']);
        if (!orgSetting.getAttributeValueOptionSet('currencydisplayoption').value) {
            return currency.getAttributeValueString('currencysymbol') + ' ';
        }
        else {
            return currency.getAttributeValueString('isocurrencycode') + ' ';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.PageEx

    Xrm.PageEx = function Xrm_PageEx() {
    }
    Xrm.PageEx.getCacheKey = function Xrm_PageEx$getCacheKey() {
        var cacheKey = WEB_RESOURCE_ORG_VERSION_NUMBER;
        if (typeof (cacheKey) !== 'undefined') {
            return cacheKey + '/';
        }
        else {
            return '';
        }
    }
    Xrm.PageEx.getWebResourceData = function Xrm_PageEx$getWebResourceData() {
        var queryString = window.location.search;
        if (queryString != null && !!queryString) {
            var parameters = queryString.substr(1).split('&');
            var $enum1 = ss.IEnumerator.getEnumerator(parameters);
            while ($enum1.moveNext()) {
                var param = $enum1.current;
                if (param.toLowerCase().startsWith('data=')) {
                    var dataParam = param.replaceAll('+', ' ').split('=');
                    return Xrm.PageEx._parseDataParameter(dataParam[1]);
                }
            }
        }
        return {};
    }
    Xrm.PageEx._parseDataParameter = function Xrm_PageEx$_parseDataParameter(data) {
        var nameValuePairs = {};
        var values = (decodeURIComponent(data)).split('&');
        var $enum1 = ss.IEnumerator.getEnumerator(values);
        while ($enum1.moveNext()) {
            var value = $enum1.current;
            var nameValuePair = value.split('=');
            nameValuePairs[nameValuePair[0]] = nameValuePair[1];
        }
        return nameValuePairs;
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.StringEx

    Xrm.StringEx = function Xrm_StringEx() {
    }
    Xrm.StringEx.IN = function Xrm_StringEx$IN(value, values) {
        if (value != null) {
            var $enum1 = ss.IEnumerator.getEnumerator(values);
            while ($enum1.moveNext()) {
                var val = $enum1.current;
                if (value === val) {
                    return true;
                }
            }
        }
        return false;
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.TaskIterrator

    Xrm.TaskIterrator = function Xrm_TaskIterrator() {
        this._tasks = [];
    }
    Xrm.TaskIterrator.prototype = {
        _errorCallBack: null,
        _successCallBack: null,

        addTask: function Xrm_TaskIterrator$addTask(task) {
            this._tasks.add(task);
        },

        start: function Xrm_TaskIterrator$start(successCallBack, errorCallBack) {
            this._errorCallBack = errorCallBack;
            this._successCallBack = successCallBack;
            this._completeCallBack();
        },

        _completeCallBack: function Xrm_TaskIterrator$_completeCallBack() {
            var nextAction = this._tasks[0];
            if (nextAction != null) {
                this._tasks.remove(nextAction);
                nextAction(ss.Delegate.create(this, this._completeCallBack), this._errorCallBack);
            }
            else {
                if (this._successCallBack != null) {
                    this._successCallBack();
                }
            }
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.TabItem

    Xrm.TabItem = function Xrm_TabItem() {
    }
    Xrm.TabItem.prototype = {
        sections: null,

        getDisplayState: function Xrm_TabItem$getDisplayState() {
            return 'expanded';
        },

        getLabel: function Xrm_TabItem$getLabel() {
            return null;
        },

        getName: function Xrm_TabItem$getName() {
            return null;
        },

        getParent: function Xrm_TabItem$getParent() {
            return null;
        },

        getVisible: function Xrm_TabItem$getVisible() {
            return false;
        },

        setDisplayState: function Xrm_TabItem$setDisplayState(state) {
        },

        setFocus: function Xrm_TabItem$setFocus() {
        },

        setLabel: function Xrm_TabItem$setLabel(label) {
        },

        setVisible: function Xrm_TabItem$setVisible(visible) {
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.TabSection

    Xrm.TabSection = function Xrm_TabSection() {
    }
    Xrm.TabSection.prototype = {
        controls: null,

        getLabel: function Xrm_TabSection$getLabel() {
            return null;
        },

        getName: function Xrm_TabSection$getName() {
            return null;
        },

        getParent: function Xrm_TabSection$getParent() {
            return null;
        },

        getVisible: function Xrm_TabSection$getVisible() {
            return false;
        },

        setLabel: function Xrm_TabSection$setLabel(label) {
        },

        setVisible: function Xrm_TabSection$setVisible(visible) {
        }
    }


    Type.registerNamespace('Xrm.ComponentModel');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.ComponentModel.INotifyPropertyChanged

    Xrm.ComponentModel.INotifyPropertyChanged = function () { };
    Xrm.ComponentModel.INotifyPropertyChanged.prototype = {
        add_propertyChanged: null,
        remove_propertyChanged: null,
        raisePropertyChanged: null
    }
    Xrm.ComponentModel.INotifyPropertyChanged.registerInterface('Xrm.ComponentModel.INotifyPropertyChanged');


    Type.registerNamespace('Xrm.Sdk');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.EntityStates

    Xrm.Sdk.EntityStates = function () { };
    Xrm.Sdk.EntityStates.prototype = {
        unchanged: 0,
        created: 1,
        changed: 2,
        deleted: 3,
        readOnly: 4
    }
    Xrm.Sdk.EntityStates.registerEnum('Xrm.Sdk.EntityStates', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.EntityRole

    Xrm.Sdk.EntityRole = function () { };
    Xrm.Sdk.EntityRole.prototype = {
        referencing: 0,
        referenced: 1
    }
    Xrm.Sdk.EntityRole.registerEnum('Xrm.Sdk.EntityRole', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Attribute

    Xrm.Sdk.Attribute = function Xrm_Sdk_Attribute(attributeName, typeName) {
        this.attributeName = attributeName;
        this.typeName = typeName;
        this.formattedValue = null;
        this.value = null;
        this.id = null;
        this.logicalName = null;
        this.name = null;
    }
    Xrm.Sdk.Attribute.deSerialise = function Xrm_Sdk_Attribute$deSerialise(node, overrideType) {
        var isNil = (Xrm.Sdk.XmlHelper.getAttributeValue(node, 'i:nil') === 'true');
        var value = null;
        if (!isNil) {
            var typeName = overrideType;
            if (typeName == null) {
                typeName = Xrm.Sdk.Attribute._removeNsPrefix(Xrm.Sdk.XmlHelper.getAttributeValue(node, 'i:type'));
            }
            var stringValue = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
            switch (typeName) {
                case 'EntityReference':
                    var entityReferenceValue = new Xrm.Sdk.EntityReference(new Xrm.Sdk.Guid(Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'Id')), Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'LogicalName'), Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'Name'));
                    value = entityReferenceValue;
                    break;
                case 'AliasedValue':
                    value = Xrm.Sdk.Attribute.deSerialise(Xrm.Sdk.XmlHelper.selectSingleNode(node, 'Value'), null);
                    break;
                case 'boolean':
                    value = (stringValue === 'true');
                    break;
                case 'double':
                    value = parseFloat(stringValue);
                    break;
                case 'decimal':
                    value = parseFloat(stringValue);
                    break;
                case 'dateTime':
                    var dateValue = Xrm.Sdk.DateTimeEx.parse(stringValue);
                    var settings = Xrm.Sdk.OrganizationServiceProxy.userSettings;
                    if (settings != null) {
                        dateValue.setTime(dateValue.getTime() + (dateValue.getTimezoneOffset() * 60 * 1000));
                        var localDateValue = Xrm.Sdk.DateTimeEx.utcToLocalTimeFromSettings(dateValue, settings);
                        value = localDateValue;
                    }
                    else {
                        value = dateValue;
                    }
                    break;
                case 'guid':
                    value = new Xrm.Sdk.Guid(stringValue);
                    break;
                case 'int':
                    value = parseInt(stringValue);
                    break;
                case 'OptionSetValue':
                    value = Xrm.Sdk.OptionSetValue.parse(Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'Value'));
                    break;
                case 'Money':
                    value = new Xrm.Sdk.Money(parseFloat(Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'Value')));
                    break;
                case 'EntityCollection':
                    value = Xrm.Sdk.EntityCollection.deSerialise(node);
                    break;
                default:
                    value = stringValue;
                    break;
            }
        }
        return value;
    }
    Xrm.Sdk.Attribute.serialise = function Xrm_Sdk_Attribute$serialise(attributeName, value, metaData) {
        var xml = '<a:KeyValuePairOfstringanyType><b:key>' + attributeName + '</b:key>';
        var typeName = Type.getInstanceType(value).get_name();
        if (value != null && metaData != null && Object.keyExists(metaData, attributeName)) {
            typeName = metaData[attributeName];
        }
        xml += Xrm.Sdk.Attribute.serialiseValue(value, typeName);
        xml += '</a:KeyValuePairOfstringanyType>';
        return xml;
    }
    Xrm.Sdk.Attribute.serialiseValue = function Xrm_Sdk_Attribute$serialiseValue(value, overrideTypeName) {
        var valueXml = '';
        var typeName = overrideTypeName;
        if (typeName == null) {
            typeName = Type.getInstanceType(value).get_name();
        }
        switch (typeName) {
            case 'String':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('string') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                valueXml += Xrm.Sdk.XmlHelper.encode(value);
                valueXml += '</b:value>';
                break;
            case 'Boolean':
            case 'bool':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('boolean') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                valueXml += Xrm.Sdk.XmlHelper.encode(value.toString());
                valueXml += '</b:value>';
                break;
            case 'Date':
                var dateValue = value;
                var dateString = null;
                var settings = Xrm.Sdk.OrganizationServiceProxy.userSettings;
                if (settings != null) {
                    var utcDateValue = Xrm.Sdk.DateTimeEx.localTimeToUTCFromSettings(dateValue, settings);
                    dateString = Xrm.Sdk.DateTimeEx.toXrmString(utcDateValue);
                }
                else {
                    dateString = Xrm.Sdk.DateTimeEx.toXrmStringUTC(dateValue);
                }
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('dateTime') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                valueXml += Xrm.Sdk.XmlHelper.encode(dateString);
                valueXml += '</b:value>';
                break;
            case 'decimal':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('decimal') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                var decStringValue = null;
                if (value != null) {
                    decStringValue = value.toString();
                }
                valueXml += Xrm.Sdk.XmlHelper.encode(decStringValue);
                valueXml += '</b:value>';
                break;
            case 'double':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('double') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                var doubleStringValue = null;
                if (value != null) {
                    doubleStringValue = value.toString();
                }
                valueXml += Xrm.Sdk.XmlHelper.encode(doubleStringValue);
                valueXml += '</b:value>';
                break;
            case 'int':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('int') + '" xmlns:c="http://www.w3.org/2001/XMLSchema">';
                var intStringValue = null;
                if (value != null) {
                    intStringValue = value.toString();
                }
                valueXml += Xrm.Sdk.XmlHelper.encode(intStringValue);
                valueXml += '</b:value>';
                break;
            case 'Guid':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix('guid') + '" xmlns:c="http://schemas.microsoft.com/2003/10/Serialization/">';
                valueXml += (value).value;
                valueXml += '</b:value>';
                break;
            case 'EntityReference':
                var entityReferenceValue = value;
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '">';
                valueXml += '<a:Id>' + entityReferenceValue.id + '</a:Id><a:LogicalName>' + entityReferenceValue.logicalName + '</a:LogicalName>';
                valueXml += '</b:value>';
                break;
            case 'OptionSetValue':
                var opt = value;
                if (opt.value != null) {
                    valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '">';
                    valueXml += '<a:Value>' + opt.value + '</a:Value>';
                    valueXml += '</b:value>';
                }
                else {
                    valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '" i:nil="true"/>';
                }
                break;
            case 'EntityCollection':
                valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '">';
                valueXml += Xrm.Sdk.EntityCollection.serialise(value);
                valueXml += '</b:value>';
                break;
            case 'Money':
                var money = value;
                if (money != null && money.value != null) {
                    valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '">';
                    valueXml += '<a:Value>' + money.value.toString() + '</a:Value>';
                    valueXml += '</b:value>';
                }
                else {
                    valueXml += '<b:value i:type="' + Xrm.Sdk.Attribute._addNsPrefix(typeName) + '" i:nil="true"/>';
                }
                break;
            case 'EntityFilters':
                var entityFilterValue = value;
                var entityFilterValues = [];
                if ((1 & entityFilterValue) === 1) {
                    entityFilterValues.add('Entity');
                }
                if ((2 & entityFilterValue) === 2) {
                    entityFilterValues.add('Attributes');
                }
                if ((4 & entityFilterValue) === 4) {
                    entityFilterValues.add('Privileges');
                }
                if ((8 & entityFilterValue) === 8) {
                    entityFilterValues.add('Relationships');
                }
                valueXml += '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">' + Xrm.Sdk.XmlHelper.encode(entityFilterValues.join(' ')) + '</b:value>';
                break;
            default:
                valueXml += '<b:value i:nil="true"/>';
                break;
        }
        return valueXml;
    }
    Xrm.Sdk.Attribute._removeNsPrefix = function Xrm_Sdk_Attribute$_removeNsPrefix(node) {
        var i = node.indexOf(':');
        return node.substring(i + 1);// FIXED - was returning incorrect string for types, node.length - i + 1);
    }
    Xrm.Sdk.Attribute._addNsPrefix = function Xrm_Sdk_Attribute$_addNsPrefix(type) {
        switch (type) {
            case 'String':
            case 'Guid':
            case 'DateTime':
            case 'string':
            case 'decimal':
            case 'double':
            case 'boolean':
            case 'dateTime':
            case 'guid':
            case 'int':
                return 'c:' + type;
            case 'EntityReference':
            case 'OptionSetValue':
            case 'AliasedValue':
            case 'EntityCollection':
            case 'Money':
                return 'a:' + type;
        }
        throw new Error('Could not add node prefix for type ' + type);
    }
    Xrm.Sdk.Attribute.prototype = {
        attributeName: null,
        typeName: null,
        formattedValue: null,
        value: null,
        id: null,
        logicalName: null,
        name: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.AttributeTypes

    Xrm.Sdk.AttributeTypes = function Xrm_Sdk_AttributeTypes() {
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.OrganizationSettings

    Xrm.Sdk.OrganizationSettings = function Xrm_Sdk_OrganizationSettings() {
        Xrm.Sdk.OrganizationSettings.initializeBase(this, [Xrm.Sdk.OrganizationSettings.entityLogicalName]);
    }
    Xrm.Sdk.OrganizationSettings.prototype = {
        weekstartdaycode: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.UserSettingsAttributes

    Xrm.Sdk.UserSettingsAttributes = function Xrm_Sdk_UserSettingsAttributes() {
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.UserSettings

    Xrm.Sdk.UserSettings = function Xrm_Sdk_UserSettings() {
        Xrm.Sdk.UserSettings.initializeBase(this, [Xrm.Sdk.UserSettings.entityLogicalName]);
    }
    Xrm.Sdk.UserSettings.prototype = {
        usersettingsid: null,
        businessunitid: null,
        calendartype: null,
        currencydecimalprecision: null,
        currencyformatcode: null,
        currencysymbol: null,
        dateformatcode: null,
        dateformatstring: null,
        dateseparator: null,
        decimalsymbol: null,
        defaultcalendarview: null,
        defaultdashboardid: null,
        localeid: null,
        longdateformatcode: null,
        negativecurrencyformatcode: null,
        negativeformatcode: null,
        numbergroupformat: null,
        numberseparator: null,
        offlinesyncinterval: null,
        pricingdecimalprecision: null,
        showweeknumber: null,
        systemuserid: null,
        timeformatcodestring: null,
        timeformatstring: null,
        timeseparator: null,
        timezonebias: null,
        timezonecode: null,
        timezonedaylightbias: null,
        timezonedaylightday: null,
        timezonedaylightdayofweek: null,
        timezonedaylighthour: null,
        timezonedaylightminute: null,
        timezonedaylightmonth: null,
        timezonedaylightsecond: null,
        timezonedaylightyear: null,
        timezonestandardbias: null,
        timezonestandardday: null,
        timezonestandarddayofweek: null,
        timezonestandardhour: null,
        timezonestandardminute: null,
        timezonestandardmonth: null,
        timezonestandardsecond: null,
        timezonestandardyear: null,
        transactioncurrencyid: null,
        uilanguageid: null,
        workdaystarttime: null,
        workdaystoptime: null,

        getNumberFormatString: function Xrm_Sdk_UserSettings$getNumberFormatString(decimalPlaces) {
            return '###,###,###.000';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.DataCollectionOfEntity

    Xrm.Sdk.DataCollectionOfEntity = function Xrm_Sdk_DataCollectionOfEntity(entities) {
        this._internalArray = entities;
    }
    Xrm.Sdk.DataCollectionOfEntity.prototype = {
        _internalArray: null,

        items: function Xrm_Sdk_DataCollectionOfEntity$items() {
            return this._internalArray;
        },

        getEnumerator: function Xrm_Sdk_DataCollectionOfEntity$getEnumerator() {
            return Xrm.ArrayEx.getEnumerator(this._internalArray);
        },

        get_count: function Xrm_Sdk_DataCollectionOfEntity$get_count() {
            return this._internalArray.length;
        },
        get_item: function Xrm_Sdk_DataCollectionOfEntity$get_item(i) {
            return this._internalArray[i];
        },
        set_item: function Xrm_Sdk_DataCollectionOfEntity$set_item(i, value) {
            this._internalArray[i] = value;
            return value;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.DateTimeEx

    Xrm.Sdk.DateTimeEx = function Xrm_Sdk_DateTimeEx() {
    }
    Xrm.Sdk.DateTimeEx.toXrmString = function Xrm_Sdk_DateTimeEx$toXrmString(date) {
        var month = Xrm.Sdk.DateTimeEx._padNumber(date.getMonth() + 1, 2);
        var day = Xrm.Sdk.DateTimeEx._padNumber(date.getDate(), 2);
        var hours = Xrm.Sdk.DateTimeEx._padNumber(date.getHours(), 2);
        var mins = Xrm.Sdk.DateTimeEx._padNumber(date.getMinutes(), 2);
        var secs = Xrm.Sdk.DateTimeEx._padNumber(date.getSeconds(), 2);
        return String.format('{0}-{1}-{2}T{3}:{4}:{5}Z', date.getFullYear(), month, day, hours, mins, secs);
    }
    Xrm.Sdk.DateTimeEx.toXrmStringUTC = function Xrm_Sdk_DateTimeEx$toXrmStringUTC(date) {
        var month = Xrm.Sdk.DateTimeEx._padNumber(date.getUTCMonth() + 1, 2);
        var day = Xrm.Sdk.DateTimeEx._padNumber(date.getUTCDate(), 2);
        var hours = Xrm.Sdk.DateTimeEx._padNumber(date.getUTCHours(), 2);
        var mins = Xrm.Sdk.DateTimeEx._padNumber(date.getUTCMinutes(), 2);
        var secs = Xrm.Sdk.DateTimeEx._padNumber(date.getUTCSeconds(), 2);
        return String.format('{0}-{1}-{2}T{3}:{4}:{5}Z', date.getUTCFullYear(), month, day, hours, mins, secs);
    }
    Xrm.Sdk.DateTimeEx._padNumber = function Xrm_Sdk_DateTimeEx$_padNumber(number, length) {
        var str = number.toString();
        while (str.length < length) {
            str = '0' + str;
        }
        return str;
    }
    Xrm.Sdk.DateTimeEx.parse = function Xrm_Sdk_DateTimeEx$parse(dateString) {
        if (!String.isNullOrEmpty(dateString)) {
            var dateTimeParsed = (Date.parseDate(dateString));
            return dateTimeParsed;
        }
        else {
            return null;
        }
    }
    Xrm.Sdk.DateTimeEx.formatDuration = function Xrm_Sdk_DateTimeEx$formatDuration(totalMinutes) {
        if (totalMinutes != null) {
            var toatalSeconds = totalMinutes * 60;
            var days = Math.floor(toatalSeconds / 86400);
            var hours = Math.floor((toatalSeconds % 86400) / 3600);
            var minutes = Math.floor(((toatalSeconds % 86400) % 3600) / 60);
            var seconds = ((toatalSeconds % 86400) % 3600) % 60;
            var formatString = [];
            if (days > 0) {
                Xrm.ArrayEx.add(formatString, '{0}d');
            }
            if (hours > 0) {
                Xrm.ArrayEx.add(formatString, '{1}h');
            }
            if (minutes > 0) {
                Xrm.ArrayEx.add(formatString, '{2}m');
            }
            if (!days && !hours && !minutes) {
                Xrm.ArrayEx.add(formatString, '{2}m');
            }
            return String.format(Xrm.ArrayEx.join(formatString, ' '), days, hours, minutes);
        }
        else {
            return '';
        }
    }
    Xrm.Sdk.DateTimeEx.parseDuration = function Xrm_Sdk_DateTimeEx$parseDuration(duration) {
        var isEmpty = (duration == null) || (!duration.length);
        if (isEmpty) {
            return null;
        }
        var pattern = '/([0-9.]*)[ ]?((h(our)?[s]?)|(m(inute)?[s]?)|(d(ay)?[s]?))/g';
        var regex = RegExp.parse(pattern);
        var matched = false;
        var thisMatch = false;
        var totalDuration = 0;
        do {
            var match = regex.exec(duration);
            thisMatch = (match != null && match.length > 0);
            matched = matched || thisMatch;
            if (thisMatch) {
                var durationNumber = parseFloat(match[1]);
                switch (match[2].substr(0, 1).toLowerCase()) {
                    case 'd':
                        durationNumber = durationNumber * 60 * 24;
                        break;
                    case 'h':
                        durationNumber = durationNumber * 60;
                        break;
                }
                totalDuration += Math.floor(durationNumber);
                duration.replaceAll(match[0], '');
            }
        } while (thisMatch);
        if (matched) {
            return totalDuration;
        }
        else {
            return null;
        }
    }
    Xrm.Sdk.DateTimeEx.addTimeToDate = function Xrm_Sdk_DateTimeEx$addTimeToDate(date, time) {
        if (date == null) {
            date = Date.get_now();
        }
        if (time != null) {
            var dateWithTime = Date.parseDate('01 Jan 2000 ' + time.replaceAll('.', ':').replaceAll('-', ':').replaceAll(',', ':'));
            var newDate = new Date(date.getTime());
            if (!isNaN((dateWithTime))) {
                newDate.setHours(dateWithTime.getHours());
                newDate.setMinutes(dateWithTime.getMinutes());
                newDate.setSeconds(dateWithTime.getSeconds());
                newDate.setMilliseconds(dateWithTime.getMilliseconds());
                return newDate;
            }
            return null;
        }
        return date;
    }
    Xrm.Sdk.DateTimeEx.localTimeToUTCFromSettings = function Xrm_Sdk_DateTimeEx$localTimeToUTCFromSettings(LocalTime, settings) {
        return Xrm.Sdk.DateTimeEx.localTimeToUTC(LocalTime, settings.timezonebias, settings.timezonedaylightbias, settings.timezonedaylightyear, settings.timezonedaylightmonth, settings.timezonedaylightday, settings.timezonedaylighthour, settings.timezonedaylightminute, settings.timezonedaylightsecond, 0, settings.timezonedaylightdayofweek, settings.timezonestandardbias, settings.timezonestandardyear, settings.timezonestandardmonth, settings.timezonestandardday, settings.timezonestandardhour, settings.timezonestandardminute, settings.timezonestandardsecond, 0, settings.timezonestandarddayofweek);
    }
    Xrm.Sdk.DateTimeEx.localTimeToUTC = function Xrm_Sdk_DateTimeEx$localTimeToUTC(LocalTime, Bias, DaylightBias, DaylightYear, DaylightMonth, DaylightDay, DaylightHour, DaylightMinute, DaylightSecond, DaylightMilliseconds, DaylightWeekday, StandardBias, StandardYear, StandardMonth, StandardDay, StandardHour, StandardMinute, StandardSecond, StandardMilliseconds, StandardWeekday) {
        var TimeZoneBias;
        var NewTimeZoneBias;
        var LocalCustomBias;
        var StandardTime;
        var DaylightTime;
        var ComputedUniversalTime;
        var bDaylightTimeZone;
        NewTimeZoneBias = Bias;
        if ((!!StandardMonth) && (!!DaylightMonth)) {
            StandardTime = Xrm.Sdk.DateTimeEx._getCutoverTime(LocalTime, StandardYear, StandardMonth, StandardDay, StandardHour, StandardMinute, StandardSecond, StandardMilliseconds, StandardWeekday);
            if (StandardTime == null) {
                return null;
            }
            DaylightTime = Xrm.Sdk.DateTimeEx._getCutoverTime(LocalTime, DaylightYear, DaylightMonth, DaylightDay, DaylightHour, DaylightMinute, DaylightSecond, DaylightMilliseconds, DaylightWeekday);
            if (DaylightTime == null) {
                return null;
            }
            if (DaylightTime < StandardTime) {
                if ((LocalTime >= DaylightTime) && (LocalTime < StandardTime)) {
                    bDaylightTimeZone = true;
                }
                else {
                    bDaylightTimeZone = false;
                }
            }
            else {
                if ((LocalTime >= StandardTime) && (LocalTime < DaylightTime)) {
                    bDaylightTimeZone = false;
                }
                else {
                    bDaylightTimeZone = true;
                }
            }
            if (bDaylightTimeZone) {
                LocalCustomBias = DaylightBias;
            }
            else {
                LocalCustomBias = StandardBias;
            }
            TimeZoneBias = NewTimeZoneBias + LocalCustomBias;
        }
        else {
            TimeZoneBias = NewTimeZoneBias;
        }
        ComputedUniversalTime = Xrm.Sdk.DateTimeEx.dateAdd('minutes', TimeZoneBias, LocalTime);
        return ComputedUniversalTime;
    }
    Xrm.Sdk.DateTimeEx.utcToLocalTimeFromSettings = function Xrm_Sdk_DateTimeEx$utcToLocalTimeFromSettings(UTCTime, settings) {
        return Xrm.Sdk.DateTimeEx.utcToLocalTime(UTCTime, settings.timezonebias, settings.timezonedaylightbias, settings.timezonedaylightyear, settings.timezonedaylightmonth, settings.timezonedaylightday, settings.timezonedaylighthour, settings.timezonedaylightminute, settings.timezonedaylightsecond, 0, settings.timezonedaylightdayofweek, settings.timezonestandardbias, settings.timezonestandardyear, settings.timezonestandardmonth, settings.timezonestandardday, settings.timezonestandardhour, settings.timezonestandardminute, settings.timezonestandardsecond, 0, settings.timezonestandarddayofweek);
    }
    Xrm.Sdk.DateTimeEx.utcToLocalTime = function Xrm_Sdk_DateTimeEx$utcToLocalTime(UTCTime, Bias, DaylightBias, DaylightYear, DaylightMonth, DaylightDay, DaylightHour, DaylightMinute, DaylightSecond, DaylightMilliseconds, DaylightWeekday, StandardBias, StandardYear, StandardMonth, StandardDay, StandardHour, StandardMinute, StandardSecond, StandardMilliseconds, StandardWeekday) {
        var TimeZoneBias = 0;
        var NewTimeZoneBias = 0;
        var LocalCustomBias = 0;
        var StandardTime;
        var DaylightTime;
        var UtcStandardTime;
        var UtcDaylightTime;
        var ComputedLocalTime;
        var bDaylightTimeZone;
        NewTimeZoneBias = Bias;
        if ((!!StandardMonth) && (!!DaylightMonth)) {
            StandardTime = Xrm.Sdk.DateTimeEx._getCutoverTime(UTCTime, StandardYear, StandardMonth, StandardDay, StandardHour, StandardMinute, StandardSecond, StandardMilliseconds, StandardWeekday);
            if (StandardTime == null) {
                return null;
            }
            DaylightTime = Xrm.Sdk.DateTimeEx._getCutoverTime(UTCTime, DaylightYear, DaylightMonth, DaylightDay, DaylightHour, DaylightMinute, DaylightSecond, DaylightMilliseconds, DaylightWeekday);
            if (DaylightTime == null) {
                return null;
            }
            LocalCustomBias = StandardBias;
            TimeZoneBias = NewTimeZoneBias + LocalCustomBias;
            UtcDaylightTime = Xrm.Sdk.DateTimeEx.dateAdd('minutes', TimeZoneBias, DaylightTime);
            LocalCustomBias = DaylightBias;
            TimeZoneBias = NewTimeZoneBias + LocalCustomBias;
            UtcStandardTime = Xrm.Sdk.DateTimeEx.dateAdd('minutes', TimeZoneBias, StandardTime);
            if (UtcDaylightTime < UtcStandardTime) {
                if ((UTCTime >= UtcDaylightTime) && (UTCTime < UtcStandardTime)) {
                    bDaylightTimeZone = true;
                }
                else {
                    bDaylightTimeZone = false;
                }
            }
            else {
                if ((UTCTime >= UtcStandardTime) && (UTCTime < UtcDaylightTime)) {
                    bDaylightTimeZone = false;
                }
                else {
                    bDaylightTimeZone = true;
                }
            }
            if (bDaylightTimeZone) {
                LocalCustomBias = DaylightBias;
            }
            else {
                LocalCustomBias = StandardBias;
            }
            TimeZoneBias = NewTimeZoneBias + LocalCustomBias;
        }
        else {
            TimeZoneBias = NewTimeZoneBias;
        }
        ComputedLocalTime = Xrm.Sdk.DateTimeEx.dateAdd('minutes', TimeZoneBias * -1, UTCTime);
        return ComputedLocalTime;
    }
    Xrm.Sdk.DateTimeEx._getCutoverTime = function Xrm_Sdk_DateTimeEx$_getCutoverTime(CurrentTime, Year, Month, Day, Hour, Minute, Second, Milliseconds, Weekday) {
        if (!!Year) {
            return null;
        }
        var WorkingTime;
        var ScratchTime;
        var BestWeekdayDate;
        var WorkingWeekdayNumber;
        var TargetWeekdayNumber;
        var TargetYear;
        var TargetMonth;
        var TargetWeekday;
        TargetWeekdayNumber = Day;
        if ((TargetWeekdayNumber > 5) || (!TargetWeekdayNumber)) {
            return null;
        }
        TargetWeekday = Weekday;
        TargetMonth = Month;
        TargetYear = CurrentTime.getFullYear();
        BestWeekdayDate = 0;
        WorkingTime = Xrm.Sdk.DateTimeEx.firstDayOfMonth(CurrentTime, TargetMonth);
        WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('hours', Hour, WorkingTime);
        WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('minutes', Minute, WorkingTime);
        WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('seconds', Second, WorkingTime);
        WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('milliseconds', Milliseconds, WorkingTime);
        ScratchTime = WorkingTime;
        if (ScratchTime.getDay() > TargetWeekday) {
            WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('days', (7 - (ScratchTime.getDay() - TargetWeekday)), WorkingTime);
        }
        else if (ScratchTime.getDay() < TargetWeekday) {
            WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('days', (TargetWeekday - ScratchTime.getDay()), WorkingTime);
        }
        BestWeekdayDate = WorkingTime.getDay();
        WorkingWeekdayNumber = 1;
        ScratchTime = WorkingTime;
        while (WorkingWeekdayNumber < TargetWeekdayNumber) {
            WorkingTime = Xrm.Sdk.DateTimeEx.dateAdd('days', 7, WorkingTime);
            if (WorkingTime.getMonth() !== ScratchTime.getMonth()) {
                break;
            }
            ScratchTime = WorkingTime;
            WorkingWeekdayNumber = WorkingWeekdayNumber + 1;
        }
        return ScratchTime;
    }
    Xrm.Sdk.DateTimeEx.firstDayOfMonth = function Xrm_Sdk_DateTimeEx$firstDayOfMonth(date, Month) {
        var startOfMonth = new Date(date.getTime());
        startOfMonth.setMonth(Month - 1);
        startOfMonth.setDate(1);
        startOfMonth.setHours(0);
        startOfMonth.setMinutes(0);
        startOfMonth.setSeconds(0);
        startOfMonth.setMilliseconds(0);
        return startOfMonth;
    }
    Xrm.Sdk.DateTimeEx.dateAdd = function Xrm_Sdk_DateTimeEx$dateAdd(interval, value, date) {
        var ms = date.getTime();
        var result;
        switch (interval) {
            case 'milliseconds':
                result = new Date(ms + value);
                break;
            case 'seconds':
                result = new Date(ms + (value * 1000));
                break;
            case 'minutes':
                result = new Date(ms + (value * 1000 * 60));
                break;
            case 'hours':
                result = new Date(ms + (value * 1000 * 60 * 60));
                break;
            case 'days':
                result = new Date(ms + (value * 1000 * 60 * 60 * 24));
                break;
            default:
                result = date;
                break;
        }
        return result;
    }
    Xrm.Sdk.DateTimeEx.firstDayOfWeek = function Xrm_Sdk_DateTimeEx$firstDayOfWeek(date) {
        var weekStartOffset = 0;
        if (Xrm.Sdk.OrganizationServiceProxy.organizationSettings != null) {
            weekStartOffset = Xrm.Sdk.OrganizationServiceProxy.organizationSettings.weekstartdaycode.value;
        }
        var startOfWeek = new Date(date.getTime());
        var dayOfWeek = startOfWeek.getDay();
        dayOfWeek = dayOfWeek - weekStartOffset;
        if (dayOfWeek < 0) {
            dayOfWeek = 7 + dayOfWeek;
        }
        if (dayOfWeek > 0) {
            startOfWeek = Xrm.Sdk.DateTimeEx.dateAdd('days', (dayOfWeek * -1), startOfWeek);
        }
        startOfWeek.setHours(0);
        startOfWeek.setMinutes(0);
        startOfWeek.setSeconds(0);
        startOfWeek.setMilliseconds(0);
        return startOfWeek;
    }
    Xrm.Sdk.DateTimeEx.lastDayOfWeek = function Xrm_Sdk_DateTimeEx$lastDayOfWeek(date) {
        var weekStartOffset = 0;
        if (Xrm.Sdk.OrganizationServiceProxy.organizationSettings != null) {
            weekStartOffset = Xrm.Sdk.OrganizationServiceProxy.organizationSettings.weekstartdaycode.value;
        }
        var endOfWeek = new Date(date.getTime());
        var dayOfWeek = endOfWeek.getDay();
        dayOfWeek = dayOfWeek - weekStartOffset;
        if (dayOfWeek < 0) {
            dayOfWeek = 7 + dayOfWeek;
        }
        endOfWeek = Xrm.Sdk.DateTimeEx.dateAdd('days', (6 - dayOfWeek), endOfWeek);
        endOfWeek.setHours(23);
        endOfWeek.setMinutes(59);
        endOfWeek.setSeconds(59);
        endOfWeek.setMilliseconds(999);
        return endOfWeek;
    }
    Xrm.Sdk.DateTimeEx.formatTimeSpecific = function Xrm_Sdk_DateTimeEx$formatTimeSpecific(dateValue, formatString) {
        formatString = formatString.replaceAll('.', ':').replaceAll('-', ':').replaceAll(',', ':');
        if (dateValue != null && (Date === Type.getInstanceType(dateValue))) {
            return dateValue.format(formatString);
        }
        else {
            return '';
        }
    }
    Xrm.Sdk.DateTimeEx.formatDateSpecific = function Xrm_Sdk_DateTimeEx$formatDateSpecific(dateValue, formatString) {
        if (dateValue != null) {
            return xrmjQuery.datepicker.formatDate(formatString, dateValue);
        }
        else {
            return '';
        }
    }
    Xrm.Sdk.DateTimeEx.parseDateSpecific = function Xrm_Sdk_DateTimeEx$parseDateSpecific(dateValue, formatString) {
        return xrmjQuery.datepicker.parseDate(formatString, dateValue);
    }
    Xrm.Sdk.DateTimeEx.setTime = function Xrm_Sdk_DateTimeEx$setTime(date, time) {
        if (date != null && time != null) {
            date.setHours(time.getHours());
            date.setMinutes(time.getMinutes());
            date.setSeconds(time.getSeconds());
            date.setMilliseconds(time.getMilliseconds());
        }
    }
    Xrm.Sdk.DateTimeEx.setUTCTime = function Xrm_Sdk_DateTimeEx$setUTCTime(date, time) {
        if (date != null && time != null) {
            date.setUTCHours(time.getUTCHours());
            date.setUTCMinutes(time.getUTCMinutes());
            date.setUTCSeconds(time.getUTCSeconds());
            date.setUTCMilliseconds(time.getUTCMilliseconds());
        }
    }
    Xrm.Sdk.DateTimeEx.getTimeDuration = function Xrm_Sdk_DateTimeEx$getTimeDuration(date) {
        return (date.getHours() * (60 * 60)) + (date.getMinutes() * 60) + date.getSeconds();
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Entity

    Xrm.Sdk.Entity = function Xrm_Sdk_Entity(entityName) {
        this._metaData = {};
        this.logicalName = entityName;
        this._attributes = {};
        this.formattedValues = {};
    }
    Xrm.Sdk.Entity.sortDelegate = function Xrm_Sdk_Entity$sortDelegate(attributeName, a, b) {
        var l = a.getAttributeValue(attributeName);
        var r = b.getAttributeValue(attributeName);
        var result = 0;
        var typeName = '';
        if (l != null) {
            typeName = Type.getInstanceType(l).get_name();
        }
        else if (r != null) {
            typeName = Type.getInstanceType(r).get_name();
        }
        if (l !== r) {
            switch (typeName.toLowerCase()) {
                case 'string':
                    l = (l != null) ? (l).toLowerCase() : null;
                    r = (r != null) ? (r).toLowerCase() : null;
                    if (l < r) {
                        result = -1;
                    }
                    else {
                        result = 1;
                    }
                    break;
                case 'date':
                    if (l < r) {
                        result = -1;
                    }
                    else {
                        result = 1;
                    }
                    break;
                case 'number':
                    var ln = (l != null) ? (l) : 0;
                    var rn = (r != null) ? (r) : 0;
                    result = (ln - rn);
                    break;
                case 'money':
                    var lm = (l != null) ? (l).value : 0;
                    var rm = (r != null) ? (r).value : 0;
                    result = (lm - rm);
                    break;
                case 'optionsetvalue':
                    var lo = (l != null) ? (l).value : 0;
                    lo = (lo != null) ? lo : 0;
                    var ro = (r != null) ? (r).value : 0;
                    ro = (ro != null) ? ro : 0;
                    result = (lo - ro);
                    break;
                case 'entityreference':
                    var le = ((l != null) && ((l).name != null)) ? (l).name : '';
                    var re = (r != null && ((r).name != null)) ? (r).name : '';
                    if (le < re) {
                        result = -1;
                    }
                    else {
                        result = 1;
                    }
                    break;
            }
        }
        return result;
    }
    Xrm.Sdk.Entity.prototype = {
        logicalName: null,
        id: null,
        entityState: 0,
        _attributes: null,
        formattedValues: null,
        relatedEntities: null,

        deSerialise: function Xrm_Sdk_Entity$deSerialise(entityNode) {
            this.logicalName = Xrm.Sdk.XmlHelper.selectSingleNodeValue(entityNode, 'LogicalName');
            this.id = Xrm.Sdk.XmlHelper.selectSingleNodeValue(entityNode, 'Id');
            var attributes = Xrm.Sdk.XmlHelper.selectSingleNode(entityNode, 'Attributes');
            var attributeCount = attributes.childNodes.length;
            for (var i = 0; i < attributeCount; i++) {
                var node = attributes.childNodes[i];
                try {
                    var attributeName = Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'key');
                    var attributeValue = Xrm.Sdk.Attribute.deSerialise(Xrm.Sdk.XmlHelper.selectSingleNode(node, 'value'), null);
                    this._attributes[attributeName] = attributeValue;
                    this._setDictionaryValue(attributeName, attributeValue);
                }
                catch (e) {
                    throw new Error('Invalid Attribute Value :' + Xrm.Sdk.XmlHelper.getNodeTextValue(node) + ':' + e.message);
                }
            }
            var formattedValues = Xrm.Sdk.XmlHelper.selectSingleNode(entityNode, 'FormattedValues');
            if (formattedValues != null) {
                for (var i = 0; i < formattedValues.childNodes.length; i++) {
                    var node = formattedValues.childNodes[i];
                    var key = Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'key');
                    var value = Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'value');
                    this._setDictionaryValue(key + 'name', value);
                    this.formattedValues[key + 'name'] = value;
                    var att = this._attributes[key];
                    if (att != null) {
                        att.name = value;
                    }
                }
            }
            var relatedEntities = Xrm.Sdk.XmlHelper.selectSingleNode(entityNode, 'RelatedEntities');
            if (relatedEntities != null) {
                var relatedEntitiesColection = {};
                for (var i = 0; i < relatedEntities.childNodes.length; i++) {
                    var node = relatedEntities.childNodes[i];
                    var key = Xrm.Sdk.XmlHelper.selectSingleNode(node, 'key');
                    var schemaName = Xrm.Sdk.XmlHelper.selectSingleNodeValue(key, 'SchemaName');
                    var relationship = new Xrm.Sdk.Relationship(schemaName);
                    var value = Xrm.Sdk.XmlHelper.selectSingleNode(node, 'value');
                    var entities = Xrm.Sdk.EntityCollection.deSerialise(value);
                    relatedEntitiesColection[relationship.schemaName] = entities;
                }
                this.relatedEntities = relatedEntitiesColection;
            }
        },

        _setDictionaryValue: function Xrm_Sdk_Entity$_setDictionaryValue(key, value) {
            var self = this;
            var thisAsDictionary = Type.safeCast(self, Object);
            thisAsDictionary[key] = value;
        },

        serialise: function Xrm_Sdk_Entity$serialise(ommitRoot) {
            var xml = '';
            if (ommitRoot == null || !ommitRoot) {
                xml += '<a:Entity>';
            }
            xml += '<a:Attributes>';
            var record = (this);
            if (record[this.logicalName + 'id'] == null) {
                delete record[this.logicalName + 'id'];
            }
            var $enum1 = ss.IEnumerator.getEnumerator(Object.keys(record));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                if (typeof (record[key]) != "function" && Object.prototype.hasOwnProperty.call(this, key) && !Xrm.StringEx.IN(key, ['id', 'logicalName', 'entityState', 'formattedValues', 'relatedEntities']) && !key.startsWith('$') && !key.startsWith('_')) {
                    var attributeValue = record[key];
                    if (!Object.keyExists(this.formattedValues, key)) {
                        xml += Xrm.Sdk.Attribute.serialise(key, attributeValue, this._metaData);
                    }
                }
            }
            xml += '</a:Attributes>';
            xml += '<a:LogicalName>' + this.logicalName + '</a:LogicalName>';
            if (this.id != null) {
                xml += '<a:Id>' + this.id + '</a:Id>';
            }
            if (ommitRoot == null || !ommitRoot) {
                xml += '</a:Entity>';
            }
            return xml;
        },

        setAttributeValue: function Xrm_Sdk_Entity$setAttributeValue(name, value) {
            this._attributes[name] = value;
            this._setDictionaryValue(name, value);
        },

        getAttributeValue: function Xrm_Sdk_Entity$getAttributeValue(attributeName) {
            return this[attributeName];
        },

        getAttributeValueOptionSet: function Xrm_Sdk_Entity$getAttributeValueOptionSet(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        getAttributeValueGuid: function Xrm_Sdk_Entity$getAttributeValueGuid(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        getAttributeValueInt: function Xrm_Sdk_Entity$getAttributeValueInt(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        getAttributeValueFloat: function Xrm_Sdk_Entity$getAttributeValueFloat(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        getAttributeValueString: function Xrm_Sdk_Entity$getAttributeValueString(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        getAttributeValueEntityReference: function Xrm_Sdk_Entity$getAttributeValueEntityReference(attributeName) {
            return this.getAttributeValue(attributeName);
        },

        raisePropertyChanged: function Xrm_Sdk_Entity$raisePropertyChanged(propertyName) {
            var args = {};
            args.propertyName = propertyName;
            if (this.__propertyChanged != null) {
                this.__propertyChanged(this, args);
            }
            if (propertyName !== 'EntityState' && !this.entityState && this.entityState !== 1) {
                this.entityState = 2;
            }
        },

        toEntityReference: function Xrm_Sdk_Entity$toEntityReference() {
            return new Xrm.Sdk.EntityReference(new Xrm.Sdk.Guid(this.id), this.logicalName, '');
        },

        add_propertyChanged: function Xrm_Sdk_Entity$add_propertyChanged(value) {
            this.__propertyChanged = ss.Delegate.combine(this.__propertyChanged, value);
        },
        remove_propertyChanged: function Xrm_Sdk_Entity$remove_propertyChanged(value) {
            this.__propertyChanged = ss.Delegate.remove(this.__propertyChanged, value);
        },

        __propertyChanged: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.EntityCollection

    Xrm.Sdk.EntityCollection = function Xrm_Sdk_EntityCollection(entities) {
        this._entities = new Xrm.Sdk.DataCollectionOfEntity(entities);
    }
    Xrm.Sdk.EntityCollection.serialise = function Xrm_Sdk_EntityCollection$serialise(value) {
        var valueXml = '';
        if (Type.getInstanceType(value) !== Xrm.Sdk.EntityCollection) {
            throw new Error("An attribute value of type 'EntityCollection' must contain an EntityCollection instance");
        }
        var arrayValue = Type.safeCast(value, Xrm.Sdk.EntityCollection);
        valueXml += '<a:Entities>';
        for (var i = 0; i < arrayValue._entities.get_count() ; i++) {
            valueXml += (arrayValue.get_item(i)).serialise(false);
        }
        valueXml += '</a:Entities>';
        return valueXml;
    }
    Xrm.Sdk.EntityCollection.deSerialise = function Xrm_Sdk_EntityCollection$deSerialise(node) {
        var entities = [];
        var collection = new Xrm.Sdk.EntityCollection(entities);
        collection.set_entityName(Xrm.Sdk.XmlHelper.selectSingleNodeValue(node, 'EntityName'));
        var entitiesNode = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(node, 'Entities');
        var $enum1 = ss.IEnumerator.getEnumerator(entitiesNode.childNodes);
        while ($enum1.moveNext()) {
            var entityNode = $enum1.current;
            var entity = new Xrm.Sdk.Entity(collection.get_entityName());
            entity.deSerialise(entityNode);
            Xrm.ArrayEx.add(entities, entity);
        }
        return collection;
    }
    Xrm.Sdk.EntityCollection.prototype = {
        _entities: null,

        get_entities: function Xrm_Sdk_EntityCollection$get_entities() {
            return this._entities;
        },
        set_entities: function Xrm_Sdk_EntityCollection$set_entities(value) {
            this._entities = value;
            return value;
        },

        _entityName: null,

        get_entityName: function Xrm_Sdk_EntityCollection$get_entityName() {
            return this._entityName;
        },
        set_entityName: function Xrm_Sdk_EntityCollection$set_entityName(value) {
            this._entityName = value;
            return value;
        },

        _minActiveRowVersion: null,

        get_minActiveRowVersion: function Xrm_Sdk_EntityCollection$get_minActiveRowVersion() {
            return this._minActiveRowVersion;
        },
        set_minActiveRowVersion: function Xrm_Sdk_EntityCollection$set_minActiveRowVersion(value) {
            this._minActiveRowVersion = value;
            return value;
        },

        _moreRecords: false,

        get_moreRecords: function Xrm_Sdk_EntityCollection$get_moreRecords() {
            return this._moreRecords;
        },
        set_moreRecords: function Xrm_Sdk_EntityCollection$set_moreRecords(value) {
            this._moreRecords = value;
            return value;
        },

        _pagingCookie: null,

        get_pagingCookie: function Xrm_Sdk_EntityCollection$get_pagingCookie() {
            return this._pagingCookie;
        },
        set_pagingCookie: function Xrm_Sdk_EntityCollection$set_pagingCookie(value) {
            this._pagingCookie = value;
            return value;
        },

        _totalRecordCount: 0,

        get_totalRecordCount: function Xrm_Sdk_EntityCollection$get_totalRecordCount() {
            return this._totalRecordCount;
        },
        set_totalRecordCount: function Xrm_Sdk_EntityCollection$set_totalRecordCount(value) {
            this._totalRecordCount = value;
            return value;
        },

        _totalRecordCountLimitExceeded: false,

        get_totalRecordCountLimitExceeded: function Xrm_Sdk_EntityCollection$get_totalRecordCountLimitExceeded() {
            return this._totalRecordCountLimitExceeded;
        },
        set_totalRecordCountLimitExceeded: function Xrm_Sdk_EntityCollection$set_totalRecordCountLimitExceeded(value) {
            this._totalRecordCountLimitExceeded = value;
            return value;
        },
        get_item: function Xrm_Sdk_EntityCollection$get_item(index) {
            return this.get_entities().get_item(index);
        },
        set_item: function Xrm_Sdk_EntityCollection$set_item(index, value) {
            this.get_entities().set_item(index, value);
            return value;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.EntityReference

    Xrm.Sdk.EntityReference = function Xrm_Sdk_EntityReference(Id, LogicalName, Name) {
        this.id = Id;
        this.logicalName = LogicalName;
        this.name = Name;
    }
    Xrm.Sdk.EntityReference.prototype = {
        name: null,
        id: null,
        logicalName: null,

        toString: function Xrm_Sdk_EntityReference$toString() {
            return String.format('[EntityReference: {0},{1},{2}]', this.name, this.id, this.logicalName);
        },

        toSoap: function Xrm_Sdk_EntityReference$toSoap(NameSpace) {
            if (NameSpace == null || !NameSpace) {
                NameSpace = 'a';
            }
            return String.format('<{0}:EntityReference><{0}:Id>{1}</{0}:Id><{0}:LogicalName>{2}</{0}:LogicalName><{0}:Name i:nil="true" /></{0}:EntityReference>', NameSpace, this.id.value, this.logicalName);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Guid

    Xrm.Sdk.Guid = function Xrm_Sdk_Guid(Value) {
        this.value = Value;
    }
    Xrm.Sdk.Guid.prototype = {
        value: null,

        toString: function Xrm_Sdk_Guid$toString() {
            return this.value;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Money

    Xrm.Sdk.Money = function Xrm_Sdk_Money(value) {
        this.value = value;
    }
    Xrm.Sdk.Money.prototype = {
        value: 0
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.OptionSetValue

    Xrm.Sdk.OptionSetValue = function Xrm_Sdk_OptionSetValue(value) {
        this.value = value;
    }
    Xrm.Sdk.OptionSetValue.parse = function Xrm_Sdk_OptionSetValue$parse(value) {
        if (String.isNullOrEmpty(value)) {
            return new Xrm.Sdk.OptionSetValue(null);
        }
        else {
            return new Xrm.Sdk.OptionSetValue(parseInt(value));
        }
    }
    Xrm.Sdk.OptionSetValue.prototype = {
        name: null,
        value: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.OrganizationServiceProxy

    Xrm.Sdk.OrganizationServiceProxy = function Xrm_Sdk_OrganizationServiceProxy() {
    }
    Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType = function Xrm_Sdk_OrganizationServiceProxy$registerExecuteMessageResponseType(responseTypeName, organizationResponseType) {
        Xrm.Sdk.OrganizationServiceProxy.executeMessageResponseTypes[responseTypeName] = organizationResponseType;
    }
    Xrm.Sdk.OrganizationServiceProxy.getUserSettings = function Xrm_Sdk_OrganizationServiceProxy$getUserSettings() {
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings == null) {
            Xrm.Sdk.OrganizationServiceProxy.userSettings = Xrm.Sdk.OrganizationServiceProxy.retrieve(Xrm.Sdk.UserSettings.entityLogicalName, Xrm.Page.context.getUserId(), ['AllColumns']);
            Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring.replaceAll(':', Xrm.Sdk.OrganizationServiceProxy.userSettings.timeseparator);
            Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring.replaceAll('/', Xrm.Sdk.OrganizationServiceProxy.userSettings.dateseparator);
            Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring.replaceAll('MM', 'mm').replaceAll('yyyy', 'UU').replaceAll('yy', 'y').replaceAll('UU', 'yy').replaceAll('M', 'm');
        }
        if (Xrm.Sdk.OrganizationServiceProxy.organizationSettings == null) {
            var fetchXml = "<fetch>\r\n                                    <entity name='organization' >\r\n                                        <attribute name='weekstartdaycode' />\r\n                                    </entity>\r\n                                </fetch>";
            Xrm.Sdk.OrganizationServiceProxy.organizationSettings = Xrm.Sdk.OrganizationServiceProxy.retrieveMultiple(fetchXml).get_entities().get_item(0);
        }
        return Xrm.Sdk.OrganizationServiceProxy.userSettings;
    }
    Xrm.Sdk.OrganizationServiceProxy.doesNNAssociationExist = function Xrm_Sdk_OrganizationServiceProxy$doesNNAssociationExist(relationship, Entity1, Entity2) {
        var fetchXml = "<fetch mapping='logical'>" + "  <entity name='" + relationship.schemaName + "'>" + '    <all-attributes />' + '    <filter>' + "      <condition attribute='" + Entity1.logicalName + "id' operator='eq' value ='" + Entity1.id.value + "' />" + "      <condition attribute='" + Entity2.logicalName + "id' operator='eq' value='" + Entity2.id.value + "' />" + '    </filter>' + '  </entity>' + '</fetch>';
        var result = Xrm.Sdk.OrganizationServiceProxy.retrieveMultiple(fetchXml);
        if (result.get_entities().get_count() > 0) {
            return true;
        }
        return false;
    }
    Xrm.Sdk.OrganizationServiceProxy.associate = function Xrm_Sdk_OrganizationServiceProxy$associate(entityName, entityId, relationship, relatedEntities) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getAssociateRequest(entityName, entityId, relationship, relatedEntities), 'Execute', null);
        delete resultXml;
        resultXml = null;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginAssociate = function Xrm_Sdk_OrganizationServiceProxy$beginAssociate(entityName, entityId, relationship, relatedEntities, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getAssociateRequest(entityName, entityId, relationship, relatedEntities), 'Execute', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endAssociate = function Xrm_Sdk_OrganizationServiceProxy$endAssociate(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getAssociateRequest = function Xrm_Sdk_OrganizationServiceProxy$_getAssociateRequest(entityName, entityId, relationship, relatedEntities) {
        var entityReferences = '';
        var $enum1 = ss.IEnumerator.getEnumerator(relatedEntities);
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            entityReferences += item.toSoap('a');
        }
        var xmlSoapBody = '<Execute xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">';
        xmlSoapBody += '      <request i:type="a:AssociateRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">';
        xmlSoapBody += '        <a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>Target</b:key>';
        xmlSoapBody += '            <b:value i:type="a:EntityReference">';
        xmlSoapBody += '              <a:Id>' + entityId.value + '</a:Id>';
        xmlSoapBody += '              <a:LogicalName>' + entityName + '</a:LogicalName>';
        xmlSoapBody += '              <a:Name i:nil="true" />';
        xmlSoapBody += '            </b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>Relationship</b:key>';
        xmlSoapBody += '            <b:value i:type="a:Relationship">';
        xmlSoapBody += '              <a:PrimaryEntityRole i:nil="true" />';
        xmlSoapBody += '              <a:SchemaName>' + relationship.schemaName + '</a:SchemaName>';
        xmlSoapBody += '            </b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>RelatedEntities</b:key>';
        xmlSoapBody += '            <b:value i:type="a:EntityReferenceCollection">' + entityReferences + '</b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '        </a:Parameters>';
        xmlSoapBody += '        <a:RequestId i:nil="true" />';
        xmlSoapBody += '        <a:RequestName>Associate</a:RequestName>';
        xmlSoapBody += '      </request>';
        xmlSoapBody += '    </Execute>';
        return xmlSoapBody;
    }
    Xrm.Sdk.OrganizationServiceProxy.disassociate = function Xrm_Sdk_OrganizationServiceProxy$disassociate(entityName, entityId, relationship, relatedEntities) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getDisassociateRequest(entityName, entityId, relationship, relatedEntities), 'Execute', null);
        delete resultXml;
        resultXml = null;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginDisassociate = function Xrm_Sdk_OrganizationServiceProxy$beginDisassociate(entityName, entityId, relationship, relatedEntities, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getDisassociateRequest(entityName, entityId, relationship, relatedEntities), 'Execute', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endDisassociate = function Xrm_Sdk_OrganizationServiceProxy$endDisassociate(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getDisassociateRequest = function Xrm_Sdk_OrganizationServiceProxy$_getDisassociateRequest(entityName, entityId, relationship, relatedEntities) {
        var entityReferences = '';
        var $enum1 = ss.IEnumerator.getEnumerator(relatedEntities);
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            entityReferences += item.toSoap('a');
        }
        var xmlSoapBody = '<Execute xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">';
        xmlSoapBody += '      <request i:type="a:DisassociateRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">';
        xmlSoapBody += '        <a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>Target</b:key>';
        xmlSoapBody += '            <b:value i:type="a:EntityReference">';
        xmlSoapBody += '              <a:Id>' + entityId.value + '</a:Id>';
        xmlSoapBody += '              <a:LogicalName>' + entityName + '</a:LogicalName>';
        xmlSoapBody += '              <a:Name i:nil="true" />';
        xmlSoapBody += '            </b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>Relationship</b:key>';
        xmlSoapBody += '            <b:value i:type="a:Relationship">';
        xmlSoapBody += '              <a:PrimaryEntityRole i:nil="true" />';
        xmlSoapBody += '              <a:SchemaName>' + relationship.schemaName + '</a:SchemaName>';
        xmlSoapBody += '            </b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '          <a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '            <b:key>RelatedEntities</b:key>';
        xmlSoapBody += '            <b:value i:type="a:EntityReferenceCollection">' + entityReferences + '</b:value>';
        xmlSoapBody += '          </a:KeyValuePairOfstringanyType>';
        xmlSoapBody += '        </a:Parameters>';
        xmlSoapBody += '        <a:RequestId i:nil="true" />';
        xmlSoapBody += '        <a:RequestName>Disassociate</a:RequestName>';
        xmlSoapBody += '      </request>';
        xmlSoapBody += '    </Execute>';
        return xmlSoapBody;
    }
    Xrm.Sdk.OrganizationServiceProxy.retrieveMultiple = function Xrm_Sdk_OrganizationServiceProxy$retrieveMultiple(fetchXml) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getRetrieveMultipleRequest(fetchXml), 'RetrieveMultiple', null);
        var entities = Xrm.Sdk.OrganizationServiceProxy._getEntityCollectionResults(resultXml, Xrm.Sdk.Entity);
        delete resultXml;
        resultXml = null;
        return entities;
    }
    Xrm.Sdk.OrganizationServiceProxy._getRetrieveMultipleRequest = function Xrm_Sdk_OrganizationServiceProxy$_getRetrieveMultipleRequest(fetchXml) {
        var xml = '<RetrieveMultiple xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" ><query i:type="a:FetchExpression" ><a:Query>';
        xml += Xrm.Sdk.XmlHelper.encode(fetchXml);
        xml += '</a:Query></query></RetrieveMultiple>';
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple = function Xrm_Sdk_OrganizationServiceProxy$beginRetrieveMultiple(fetchXml, callBack) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getRetrieveMultipleRequest(fetchXml), 'RetrieveMultiple', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple = function Xrm_Sdk_OrganizationServiceProxy$endRetrieveMultiple(asyncState, entityType) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
            var entities = Xrm.Sdk.OrganizationServiceProxy._getEntityCollectionResults(xmlDocument, entityType);
            return entities;
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getEntityCollectionResults = function Xrm_Sdk_OrganizationServiceProxy$_getEntityCollectionResults(resultXml, entityType) {
        var soapBody = resultXml.firstChild.firstChild;
        var resultNode = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(soapBody, 'RetrieveMultipleResult');
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(resultNode, 'Entities');
        var resultCount = 0;
        if (results != null) {
            resultCount = results.childNodes.length;
        }
        var businessEntities = [];
        for (var i = 0; i < resultCount; i++) {
            var entityNode = results.childNodes[i];
            var entity = new entityType(null);
            entity.deSerialise(entityNode);
            businessEntities[i] = entity;
        }
        var entities = new Xrm.Sdk.EntityCollection(businessEntities);
        entities.set_moreRecords(Xrm.Sdk.XmlHelper.selectSingleNodeValue(resultNode, 'MoreRecords') === 'true');
        entities.set_pagingCookie(Xrm.Sdk.XmlHelper.selectSingleNodeValue(resultNode, 'PagingCookie'));
        entities.set_totalRecordCount(parseInt(Xrm.Sdk.XmlHelper.selectSingleNodeValue(resultNode, 'TotalRecordCount')));
        entities.set_totalRecordCountLimitExceeded(Xrm.Sdk.XmlHelper.selectSingleNodeValue(resultNode, 'TotalRecordCountLimitExceeded') === 'true');
        return entities;
    }
    Xrm.Sdk.OrganizationServiceProxy.retrieve = function Xrm_Sdk_OrganizationServiceProxy$retrieve(entityName, entityId, attributesList) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getRetrieveRequest(entityName, entityId, attributesList), 'Retrieve', null);
        var entityNode = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(resultXml, 'RetrieveResult');
        var entity = new Xrm.Sdk.Entity(entityName);
        entity.deSerialise(entityNode);
        delete resultXml;
        resultXml = null;
        return entity;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginRetrieve = function Xrm_Sdk_OrganizationServiceProxy$beginRetrieve(entityName, entityId, attributesList, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getRetrieveRequest(entityName, entityId, attributesList), 'Retrieve', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endRetrieve = function Xrm_Sdk_OrganizationServiceProxy$endRetrieve(asyncState, entityType) {
        var resultXml = asyncState;
        var entityNode = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(resultXml, 'RetrieveResult');
        var entity = new Xrm.Sdk.Entity(null);
        entity.deSerialise(entityNode);
        return entity;
    }
    Xrm.Sdk.OrganizationServiceProxy._getRetrieveRequest = function Xrm_Sdk_OrganizationServiceProxy$_getRetrieveRequest(entityName, entityId, attributesList) {
        var xml = '<Retrieve xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services">';
        xml += '<entityName>' + entityName + '</entityName>';
        xml += '<id>' + entityId + '</id>';
        xml += '<columnSet xmlns:d4p1="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">';
        if ((attributesList != null) && (attributesList[0] !== 'AllColumns')) {
            xml += '<d4p1:AllColumns>false</d4p1:AllColumns>';
            xml += '<d4p1:Columns xmlns:d5p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays">';
            for (var i = 0; i < attributesList.length; i++) {
                xml += '<d5p1:string>' + attributesList[i] + '</d5p1:string>';
            }
            xml += '</d4p1:Columns>';
        }
        else {
            xml += '<d4p1:AllColumns>true</d4p1:AllColumns>';
        }
        xml += '</columnSet></Retrieve>';
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy.create = function Xrm_Sdk_OrganizationServiceProxy$create(entity) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getCreateRequest(entity), 'Create', null);
        var newGuid = Xrm.Sdk.XmlHelper.selectSingleNodeValueDeep(resultXml, 'CreateResult');
        delete resultXml;
        resultXml = null;
        return new Xrm.Sdk.Guid(newGuid);
    }
    Xrm.Sdk.OrganizationServiceProxy._getCreateRequest = function Xrm_Sdk_OrganizationServiceProxy$_getCreateRequest(entity) {
        var xml = '<Create xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" ><entity>';
        xml += entity.serialise(true);
        xml += '</entity></Create>';
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginCreate = function Xrm_Sdk_OrganizationServiceProxy$beginCreate(entity, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getCreateRequest(entity), 'Create', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endCreate = function Xrm_Sdk_OrganizationServiceProxy$endCreate(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
            var newGuid = Xrm.Sdk.XmlHelper.selectSingleNodeValueDeep(xmlDocument, 'CreateResult');
            return new Xrm.Sdk.Guid(newGuid);
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy.setState = function Xrm_Sdk_OrganizationServiceProxy$setState(id, entityName, stateCode, statusCode) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getSetStateRequest(id, entityName, stateCode, statusCode), 'Execute', null);
        delete resultXml;
        resultXml = null;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginSetState = function Xrm_Sdk_OrganizationServiceProxy$beginSetState(id, entityName, stateCode, statusCode, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getSetStateRequest(id, entityName, stateCode, statusCode), 'Execute', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endSetState = function Xrm_Sdk_OrganizationServiceProxy$endSetState(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getSetStateRequest = function Xrm_Sdk_OrganizationServiceProxy$_getSetStateRequest(id, entityName, stateCode, statusCode) {
        return String.format('<Execute xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services">' + '<request i:type="b:SetStateRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">' + '<a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '<a:KeyValuePairOfstringanyType>' + '<c:key>EntityMoniker</c:key>' + '<c:value i:type="a:EntityReference">' + '<a:Id>{0}</a:Id>' + '<a:LogicalName>{1}</a:LogicalName>' + '<a:Name i:nil="true" />' + '</c:value>' + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<c:key>State</c:key>' + '<c:value i:type="a:OptionSetValue">' + '<a:Value>{2}</a:Value>' + '</c:value>' + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<c:key>Status</c:key>' + '<c:value i:type="a:OptionSetValue">' + '<a:Value>{3}</a:Value>' + '</c:value>' + '</a:KeyValuePairOfstringanyType>' + '</a:Parameters>' + '<a:RequestId i:nil="true" />' + '<a:RequestName>SetState</a:RequestName>' + '</request></Execute>', id.value, entityName, stateCode, statusCode);
    }
    Xrm.Sdk.OrganizationServiceProxy.delete_ = function Xrm_Sdk_OrganizationServiceProxy$delete_(entityName, id) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getDeleteRequest(entityName, id), 'Delete', null);
        var newGuid = Xrm.Sdk.XmlHelper.selectSingleNodeValueDeep(resultXml, 'DeleteResult');
        delete resultXml;
        resultXml = null;
        return newGuid;
    }
    Xrm.Sdk.OrganizationServiceProxy._getDeleteRequest = function Xrm_Sdk_OrganizationServiceProxy$_getDeleteRequest(entityName, id) {
        var xml = String.format('<Delete xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" ><entityName>{0}</entityName><id>{1}</id></Delete>', entityName, id.value);
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginDelete = function Xrm_Sdk_OrganizationServiceProxy$beginDelete(entityName, id, callBack) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getDeleteRequest(entityName, id), 'Delete', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endDelete = function Xrm_Sdk_OrganizationServiceProxy$endDelete(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
            return;
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy.update = function Xrm_Sdk_OrganizationServiceProxy$update(entity) {
        var xml = '<Update xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" ><entity>';
        xml += entity.serialise(true);
        xml += '</entity></Update>';
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(xml, 'Update', null);
        delete resultXml;
        resultXml = null;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginUpdate = function Xrm_Sdk_OrganizationServiceProxy$beginUpdate(entity, callBack) {
        var xml = '<Update xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services" ><entity>';
        xml += entity.serialise(true);
        xml += '</entity></Update>';
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(xml, 'Update', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endUpdate = function Xrm_Sdk_OrganizationServiceProxy$endUpdate(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
            return;
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy.execute = function Xrm_Sdk_OrganizationServiceProxy$execute(request) {
        var resultXml = Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getExecuteRequest(request), 'Execute', null);
        return Xrm.Sdk.OrganizationServiceProxy.endExecute(resultXml);
    }
    Xrm.Sdk.OrganizationServiceProxy._getExecuteRequest = function Xrm_Sdk_OrganizationServiceProxy$_getExecuteRequest(request) {
        var xml = '<Execute xmlns="http://schemas.microsoft.com/xrm/2011/Contracts/Services">';
        xml += request.serialise();
        xml += '</Execute>';
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy.beginExecute = function Xrm_Sdk_OrganizationServiceProxy$beginExecute(request, callBack) {
        Xrm.Sdk.OrganizationServiceProxy._getResponse(Xrm.Sdk.OrganizationServiceProxy._getExecuteRequest(request), 'Execute', callBack);
    }
    Xrm.Sdk.OrganizationServiceProxy.endExecute = function Xrm_Sdk_OrganizationServiceProxy$endExecute(asyncState) {
        var xmlDocument = asyncState;
        if (xmlDocument.childNodes != null) {
            var response = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(xmlDocument, 'ExecuteResult');
            var type = Xrm.Sdk.XmlHelper.selectSingleNodeValue(response, 'ResponseName');
            switch (type) {
                case 'RetrieveAttribute':
                    return new Xrm.Sdk.Messages.RetrieveAttributeResponse(response);
                case 'RetrieveAllEntities':
                    return new Xrm.Sdk.Messages.RetrieveAllEntitiesResponse(response);
                case 'RetrieveEntity':
                    return new Xrm.Sdk.Messages.RetrieveEntityResponse(response);
                case 'BulkDeleteResponse':
                    return new Xrm.Sdk.Messages.BulkDeleteResponse(response);
                case 'FetchXmlToQueryExpression':
                    return new Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse(response);
                case 'RetrieveMetadataChanges':
                    return new Xrm.Sdk.Messages.RetrieveMetadataChangesResponse(response);
                case 'RetrieveRelationship':
                    return new Xrm.Sdk.RetrieveRelationshipResponse(response);
                case 'ExecuteWorkflow':
                    return new Xrm.Sdk.Messages.ExecuteWorkflowResponse(response);
                case 'Assign':
                    return new Xrm.Sdk.Messages.AssignResponse(response);
                default:
                    if (Object.keyExists(Xrm.Sdk.OrganizationServiceProxy.executeMessageResponseTypes, type)) {
                        var responseType = Xrm.Sdk.OrganizationServiceProxy.executeMessageResponseTypes[type];
                        var exectueResponse = new responseType(response);
                        return exectueResponse;
                    }
                    else {
                        return null;
                    }
            }
        }
        else {
            throw asyncState;
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getSoapEnvelope = function Xrm_Sdk_OrganizationServiceProxy$_getSoapEnvelope(payLoadXml) {
        var xml = '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" xmlns:d="http://schemas.microsoft.com/xrm/2011/Contracts/Services"  xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '<s:Body>' + payLoadXml + '</s:Body>' + '</s:Envelope>';
        return xml;
    }
    Xrm.Sdk.OrganizationServiceProxy._getServerUrl = function Xrm_Sdk_OrganizationServiceProxy$_getServerUrl() {
        if (typeof (Xrm.Page.context.getClientUrl) === 'undefined') {
            var context = Xrm.Page.context;
            var crmServerUrl;
            if (context.isOutlookClient() && !context.isOutlookOnline()) {
                crmServerUrl = window.location.protocol + '//' + window.location.hostname;
            }
            else {
                crmServerUrl = Xrm.Page.context.getServerUrl();
                crmServerUrl = crmServerUrl.replace(new RegExp('/^(http|https):\\/\\/([_a-zA-Z0-9\\-\\.]+)(:([0-9]{1,5}))?/'), window.location.protocol + '//' + window.location.hostname);
                crmServerUrl = crmServerUrl.replace(new RegExp('/\\/$/'), '');
            }
            return crmServerUrl;
        }
        else {
            return Xrm.Page.context.getClientUrl();
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getResponse = function Xrm_Sdk_OrganizationServiceProxy$_getResponse(soapXmlPacket, action, asyncCallback) {
        var isAsync = (asyncCallback != null);
        var xml = Xrm.Sdk.OrganizationServiceProxy._getSoapEnvelope(soapXmlPacket);
        var msg = null;
        var xmlHttpRequest = new XMLHttpRequest();
        xmlHttpRequest.open('POST', Xrm.Sdk.OrganizationServiceProxy._getServerUrl() + '/XRMServices/2011/Organization.svc/web', isAsync);
        xmlHttpRequest.setRequestHeader('SOAPAction', 'http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/' + action);
        xmlHttpRequest.setRequestHeader('Content-Type', 'text/xml; charset=utf-8');
        if (Xrm.Sdk.OrganizationServiceProxy.withCredentials) {
            xmlHttpRequest.withCredentials = true;;
        }
        if (isAsync) {
            xmlHttpRequest.onreadystatechange = function () {
                if (xmlHttpRequest == null) {
                    return;
                }
                if (xmlHttpRequest.readyState === 4) {
                    var resultXml = xmlHttpRequest.responseXML;
                    var errorMsg = null;
                    if (xmlHttpRequest.status !== 200) {
                        errorMsg = Xrm.Sdk.OrganizationServiceProxy._getSoapFault(resultXml);
                    }
                    delete xmlHttpRequest;
                    xmlHttpRequest = null;
                    if (errorMsg != null) {
                        asyncCallback(errorMsg);
                    }
                    else {
                        asyncCallback(resultXml);
                    }
                }
            };
            xmlHttpRequest.send(xml);
            return null;
        }
        else {
            xmlHttpRequest.send(xml);
            var resultXml = xmlHttpRequest.responseXML;
            if (xmlHttpRequest.status !== 200) {
                msg = Xrm.Sdk.OrganizationServiceProxy._getSoapFault(resultXml);
            }
            delete xmlHttpRequest;;
            xmlHttpRequest = null;
            if (msg != null) {
                throw msg;
            }
            else {
                return resultXml;
            }
        }
    }
    Xrm.Sdk.OrganizationServiceProxy._getSoapFault = function Xrm_Sdk_OrganizationServiceProxy$_getSoapFault(response) {
        var errorMsg = null;
        var traceDetails = null;
        var errorCode = null;
        if (response == null || response.firstChild.nodeName !== 's:Envelope') {
            return new Error('No SOAP Envelope in response');
        }
        var soapResponseBody = response.firstChild.firstChild;
        var errorNode = Xrm.Sdk.XmlHelper.selectSingleNode(soapResponseBody, 'Fault');
        if (errorNode != null) {
            var details = Xrm.Sdk.XmlHelper.selectSingleNode(errorNode, 'detail');
            if (details != null) {
                var serviceFaultNode = Xrm.Sdk.XmlHelper.selectSingleNode(details, 'OrganizationServiceFault');
                if (serviceFaultNode != null) {
                    errorMsg = Xrm.Sdk.XmlHelper.selectSingleNodeValue(serviceFaultNode, 'Message');
                    traceDetails = Xrm.Sdk.XmlHelper.selectSingleNodeValue(serviceFaultNode, 'TraceText');
                    errorCode = Xrm.Sdk.XmlHelper.selectSingleNodeValue(serviceFaultNode, 'ErrorCode');
                }
            }
            if (errorMsg == null) {
                var faultMessage = Xrm.Sdk.XmlHelper.selectSingleNode(errorNode, 'faultstring');
                if (faultMessage != null) {
                    errorMsg = Xrm.Sdk.XmlHelper.getNodeTextValue(faultMessage);
                }
            }
        }
        var info = {};
        info['Trace'] = traceDetails;
        info['ErrorCode'] = errorCode;
        return Error.createError(errorMsg, info);
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Relationship

    Xrm.Sdk.Relationship = function Xrm_Sdk_Relationship(schemaName) {
        this.schemaName = schemaName;
    }
    Xrm.Sdk.Relationship.prototype = {
        primaryEntityRole: 0,
        schemaName: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.RetrieveRelationshipRequest

    Xrm.Sdk.RetrieveRelationshipRequest = function Xrm_Sdk_RetrieveRelationshipRequest() {
        this.metadataId = Xrm.Sdk.Guid.empty;
    }
    Xrm.Sdk.RetrieveRelationshipRequest.prototype = {
        name: null,
        retrieveAsIfPublished: false,

        serialise: function Xrm_Sdk_RetrieveRelationshipRequest$serialise() {
            return '<request i:type="a:RetrieveRelationshipRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">' + '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '<a:KeyValuePairOfstringanyType>' + '<b:key>MetadataId</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.metadataId, null) + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>Name</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.name, null) + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>RetrieveAsIfPublished</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.retrieveAsIfPublished, null) + '</a:KeyValuePairOfstringanyType>' + '</a:Parameters>' + '<a:RequestId i:nil="true" />' + '<a:RequestName>RetrieveRelationship</a:RequestName>' + '</request>';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.RetrieveRelationshipResponse

    Xrm.Sdk.RetrieveRelationshipResponse = function Xrm_Sdk_RetrieveRelationshipResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            if (Xrm.Sdk.XmlHelper.getNodeTextValue(key) === 'RelationshipMetadata') {
                var entity = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
                this.relationshipMetadata = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseRelationshipMetadata(entity);
            }
        }
    }
    Xrm.Sdk.RetrieveRelationshipResponse.prototype = {
        relationshipMetadata: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.XmlHelper

    Xrm.Sdk.XmlHelper = function Xrm_Sdk_XmlHelper() {
    }
    Xrm.Sdk.XmlHelper.encode = function Xrm_Sdk_XmlHelper$encode(value) {
        if (value == null) {
            return value;
        }
        return value.replace(new RegExp("([\\&\"<>'])", 'g'), Xrm.Sdk.XmlHelper.replaceCallBackEncode);
    }
    Xrm.Sdk.XmlHelper.serialiseNode = function Xrm_Sdk_XmlHelper$serialiseNode(node) {
        if (typeof (node.xml) === 'undefined') {
            return new XMLSerializer().serializeToString(node);
        }
        else {
            return node.xml;
        }
    }
    Xrm.Sdk.XmlHelper.Decode = function Xrm_Sdk_XmlHelper$Decode(value) {
        if (value == null) {
            return null;
        }
        return value.replace(new RegExp('(&quot;|&lt;|&gt;|&amp;|&#39;)', 'g'), Xrm.Sdk.XmlHelper.replaceCallBackDecode);
    }
    Xrm.Sdk.XmlHelper.replaceCallBackEncode = function Xrm_Sdk_XmlHelper$replaceCallBackEncode(item) {
        return Xrm.Sdk.XmlHelper._encode_map[item];
    }
    Xrm.Sdk.XmlHelper.replaceCallBackDecode = function Xrm_Sdk_XmlHelper$replaceCallBackDecode(item) {
        return Xrm.Sdk.XmlHelper._decode_map[item];
    }
    Xrm.Sdk.XmlHelper.selectSingleNodeValue = function Xrm_Sdk_XmlHelper$selectSingleNodeValue(doc, baseName) {
        var node = Xrm.Sdk.XmlHelper.selectSingleNode(doc, baseName);
        if (node != null) {
            return Xrm.Sdk.XmlHelper.getNodeTextValue(node);
        }
        else {
            return null;
        }
    }
    Xrm.Sdk.XmlHelper.selectSingleNode = function Xrm_Sdk_XmlHelper$selectSingleNode(doc, baseName) {
        var $enum1 = ss.IEnumerator.getEnumerator(doc.childNodes);
        while ($enum1.moveNext()) {
            var n = $enum1.current;
            if (Xrm.Sdk.XmlHelper.getLocalName(n) === baseName) {
                return n;
            }
        }
        return null;
    }
    Xrm.Sdk.XmlHelper.getLocalName = function Xrm_Sdk_XmlHelper$getLocalName(node) {
        if (node.baseName != null) {
            return node.baseName;
        }
        else {
            return node.localName;
        }
    }
    Xrm.Sdk.XmlHelper.selectSingleNodeValueDeep = function Xrm_Sdk_XmlHelper$selectSingleNodeValueDeep(doc, baseName) {
        var node = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(doc, baseName);
        if (node != null) {
            return Xrm.Sdk.XmlHelper.getNodeTextValue(node);
        }
        else {
            return null;
        }
    }
    Xrm.Sdk.XmlHelper.selectSingleNodeDeep = function Xrm_Sdk_XmlHelper$selectSingleNodeDeep(doc, baseName) {
        var $enum1 = ss.IEnumerator.getEnumerator(doc.childNodes);
        while ($enum1.moveNext()) {
            var n = $enum1.current;
            if (Xrm.Sdk.XmlHelper.getLocalName(n) === baseName) {
                return n;
            }
            var resultDeep = Xrm.Sdk.XmlHelper.selectSingleNodeDeep(n, baseName);
            if (resultDeep != null) {
                return resultDeep;
            }
        }
        return null;
    }
    Xrm.Sdk.XmlHelper.nsResolver = function Xrm_Sdk_XmlHelper$nsResolver(prefix) {
        switch (prefix) {
            case 's':
                return 'http://schemas.xmlsoap.org/soap/envelope/';
            case 'a':
                return 'http://schemas.microsoft.com/xrm/2011/Contracts';
            case 'i':
                return 'http://www.w3.org/2001/XMLSchema-instance';
            case 'b':
                return 'http://schemas.datacontract.org/2004/07/System.Collections.Generic';
            case 'c':
                return 'http://schemas.microsoft.com/xrm/2011/Metadata';
            default:
                return null;
        }
    }
    Xrm.Sdk.XmlHelper.isSelectSingleNodeUndefined = function Xrm_Sdk_XmlHelper$isSelectSingleNodeUndefined(value) {
        return typeof (value.selectSingleNode) === 'undefined';
    }
    Xrm.Sdk.XmlHelper.loadXml = function Xrm_Sdk_XmlHelper$loadXml(xml) {
        if (typeof (ActiveXObject) === 'undefined') {
            var domParser = new DOMParser();
            return domParser.parseFromString(xml, 'text/xml');
        }
        else {
            var xmlDOM = (new ActiveXObject('Msxml2.DOMDocument'));
            xmlDOM.async = false;
            xmlDOM.loadXML(xml);
            xmlDOM.setProperty('SelectionLanguage', 'XPath');
            return xmlDOM;
        }
    }
    Xrm.Sdk.XmlHelper.selectSingleNodeXpath = function Xrm_Sdk_XmlHelper$selectSingleNodeXpath(node, xpath) {
        if (!Xrm.Sdk.XmlHelper.isSelectSingleNodeUndefined(node)) {
            return node.selectSingleNode(xpath);
        }
        else {
            var xpe = new XPathEvaluator();
            var xPathNode = xpe.evaluate(xpath, node, Xrm.Sdk.XmlHelper.nsResolver, 9, null);
            return (xPathNode != null) ? xPathNode.singleNodeValue : null;
        }
    }
    Xrm.Sdk.XmlHelper.getNodeTextValue = function Xrm_Sdk_XmlHelper$getNodeTextValue(node) {
        if ((node != null) && (node.firstChild != null)) {
            return node.firstChild.nodeValue;
        }
        else {
            return null;
        }
    }
    Xrm.Sdk.XmlHelper.getAttributeValue = function Xrm_Sdk_XmlHelper$getAttributeValue(node, attributeName) {
        var attribute = node.attributes.getNamedItem(attributeName);
        if (attribute != null) {
            return attribute.nodeValue;
        }
        else {
            return null;
        }
    }


    Type.registerNamespace('Xrm.Sdk.Messages');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.EntityFilters

    Xrm.Sdk.Messages.EntityFilters = function () { };
    Xrm.Sdk.Messages.EntityFilters.prototype = {
        default_: 1,
        entity: 1,
        attributes: 2,
        privileges: 4,
        relationships: 8,
        all: 15
    }
    Xrm.Sdk.Messages.EntityFilters.registerEnum('Xrm.Sdk.Messages.EntityFilters', true);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.AssignRequest

    Xrm.Sdk.Messages.AssignRequest = function Xrm_Sdk_Messages_AssignRequest() {
    }
    Xrm.Sdk.Messages.AssignRequest.prototype = {
        target: null,
        assignee: null,

        serialise: function Xrm_Sdk_Messages_AssignRequest$serialise() {
            return '<request i:type="c:AssignRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:c="http://schemas.microsoft.com/crm/2011/Contracts">' + '        <a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '          <a:KeyValuePairOfstringanyType>' + '            <b:key>Target</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.target, null) + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <b:key>Assignee</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.assignee, null) + '          </a:KeyValuePairOfstringanyType>' + '        </a:Parameters>' + '        <a:RequestId i:nil="true" />' + '        <a:RequestName>Assign</a:RequestName>' + '      </request>';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.AssignResponse

    Xrm.Sdk.Messages.AssignResponse = function Xrm_Sdk_Messages_AssignResponse(response) {
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.BulkDeleteRequest

    Xrm.Sdk.Messages.BulkDeleteRequest = function Xrm_Sdk_Messages_BulkDeleteRequest() {
    }
    Xrm.Sdk.Messages.BulkDeleteRequest.prototype = {

        serialise: function Xrm_Sdk_Messages_BulkDeleteRequest$serialise() {
            var recipientsXml = '';
            if (this.toRecipients != null) {
                var $enum1 = ss.IEnumerator.getEnumerator(this.toRecipients);
                while ($enum1.moveNext()) {
                    var id = $enum1.current;
                    recipientsXml += ('<d:guid>' + id.toString() + '</d:guid>');
                }
            }
            var ccRecipientsXml = '';
            if (this.ccRecipients != null) {
                var $enum2 = ss.IEnumerator.getEnumerator(this.ccRecipients);
                while ($enum2.moveNext()) {
                    var id = $enum2.current;
                    ccRecipientsXml += ('<d:guid>' + id.toString() + '</d:guid>');
                }
            }
            return String.format('<request i:type="b:BulkDeleteRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">' + '        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>QuerySet</c:key>' + '            <c:value i:type="a:ArrayOfQueryExpression">' + '              <a:QueryExpression>' + this.querySet + '              </a:QueryExpression>' + '            </c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>JobName</c:key>' + '            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema">' + this.jobName + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>SendEmailNotification</c:key>' + '            <c:value i:type="d:boolean" xmlns:d="http://www.w3.org/2001/XMLSchema">' + this.sendEmailNotification.toString() + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>ToRecipients</c:key>' + '            <c:value i:type="d:ArrayOfguid" xmlns:d="http://schemas.microsoft.com/2003/10/Serialization/Arrays">' + recipientsXml + '            </c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>CCRecipients</c:key>' + '            <c:value i:type="d:ArrayOfguid" xmlns:d="http://schemas.microsoft.com/2003/10/Serialization/Arrays">' + ccRecipientsXml + '            </c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>RecurrencePattern</c:key>' + '            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema" >' + this.recurrencePattern + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>StartDateTime</c:key>' + '            <c:value i:type="d:dateTime" xmlns:d="http://www.w3.org/2001/XMLSchema">' + Xrm.Sdk.DateTimeEx.toXrmStringUTC(Xrm.Sdk.DateTimeEx.localTimeToUTCFromSettings(this.startDateTime, Xrm.Sdk.OrganizationServiceProxy.getUserSettings())) + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '        </a:Parameters>' + '        <a:RequestId i:nil="true" />' + '        <a:RequestName>BulkDelete</a:RequestName>' + '      </request>');
        },

        ccRecipients: null,
        jobName: null,
        querySet: null,
        recurrencePattern: null,
        sendEmailNotification: false,
        sourceImportId: null,
        startDateTime: null,
        toRecipients: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.BulkDeleteResponse

    Xrm.Sdk.Messages.BulkDeleteResponse = function Xrm_Sdk_Messages_BulkDeleteResponse(response) {
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.ExecuteWorkflowRequest

    Xrm.Sdk.Messages.ExecuteWorkflowRequest = function Xrm_Sdk_Messages_ExecuteWorkflowRequest() {
    }
    Xrm.Sdk.Messages.ExecuteWorkflowRequest.prototype = {
        entityId: null,
        workflowId: null,

        serialise: function Xrm_Sdk_Messages_ExecuteWorkflowRequest$serialise() {
            return String.format('<request i:type="b:ExecuteWorkflowRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">' + '        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>EntityId</c:key>' + '            <c:value i:type="e:guid" xmlns:e="http://schemas.microsoft.com/2003/10/Serialization/">' + this.entityId + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '          <a:KeyValuePairOfstringanyType>' + '            <c:key>WorkflowId</c:key>' + '            <c:value i:type="e:guid" xmlns:e="http://schemas.microsoft.com/2003/10/Serialization/">' + this.workflowId + '</c:value>' + '          </a:KeyValuePairOfstringanyType>' + '        </a:Parameters>' + '        <a:RequestId i:nil="true" />' + '        <a:RequestName>ExecuteWorkflow</a:RequestName>' + '      </request>');
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.ExecuteWorkflowResponse

    Xrm.Sdk.Messages.ExecuteWorkflowResponse = function Xrm_Sdk_Messages_ExecuteWorkflowResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            if (Xrm.Sdk.XmlHelper.getNodeTextValue(key) === 'Id') {
                var value = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
                this.id = Xrm.Sdk.XmlHelper.getNodeTextValue(value);
            }
        }
    }
    Xrm.Sdk.Messages.ExecuteWorkflowResponse.prototype = {
        id: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.FetchXmlToQueryExpressionRequest

    Xrm.Sdk.Messages.FetchXmlToQueryExpressionRequest = function Xrm_Sdk_Messages_FetchXmlToQueryExpressionRequest() {
    }
    Xrm.Sdk.Messages.FetchXmlToQueryExpressionRequest.prototype = {
        fetchXml: null,

        serialise: function Xrm_Sdk_Messages_FetchXmlToQueryExpressionRequest$serialise() {
            var requestXml = '';
            requestXml += '      <request i:type="b:FetchXmlToQueryExpressionRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">';
            requestXml += '        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">';
            requestXml += '          <a:KeyValuePairOfstringanyType>';
            requestXml += '            <c:key>FetchXml</c:key>';
            requestXml += '            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema">{0}</c:value>';
            requestXml += '          </a:KeyValuePairOfstringanyType>';
            requestXml += '        </a:Parameters>';
            requestXml += '        <a:RequestId i:nil="true" />';
            requestXml += '        <a:RequestName>FetchXmlToQueryExpression</a:RequestName>';
            requestXml += '      </request>';
            return String.format(requestXml, Xrm.Sdk.XmlHelper.encode(this.fetchXml));
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse

    Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse = function Xrm_Sdk_Messages_FetchXmlToQueryExpressionResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            if (Xrm.Sdk.XmlHelper.getNodeTextValue(key) === 'Query') {
                var queryNode = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
                var queryXml = Xrm.Sdk.XmlHelper.serialiseNode(queryNode).substr(165);
                queryXml = queryXml.substr(0, queryXml.length - 10);
                this.query = queryXml;
            }
        }
    }
    Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse.prototype = {
        query: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveAllEntitiesRequest

    Xrm.Sdk.Messages.RetrieveAllEntitiesRequest = function Xrm_Sdk_Messages_RetrieveAllEntitiesRequest() {
    }
    Xrm.Sdk.Messages.RetrieveAllEntitiesRequest.prototype = {

        serialise: function Xrm_Sdk_Messages_RetrieveAllEntitiesRequest$serialise() {
            return '\r\n                              <request i:type="a:RetrieveAllEntitiesRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">\r\n                                <a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">\r\n                                  <a:KeyValuePairOfstringanyType>\r\n                                    <b:key>EntityFilters</b:key>\r\n                                    <b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">Entity</b:value>\r\n                                  </a:KeyValuePairOfstringanyType>\r\n                                  <a:KeyValuePairOfstringanyType>\r\n                                    <b:key>RetrieveAsIfPublished</b:key>\r\n                                    <b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">true</b:value>\r\n                                  </a:KeyValuePairOfstringanyType>\r\n                                </a:Parameters>\r\n                                <a:RequestId i:nil="true" />\r\n                                <a:RequestName>RetrieveAllEntities</a:RequestName>\r\n                              </request>\r\n                            ';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveAllEntitiesResponse

    Xrm.Sdk.Messages.RetrieveAllEntitiesResponse = function Xrm_Sdk_Messages_RetrieveAllEntitiesResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            if (Xrm.Sdk.XmlHelper.getNodeTextValue(key) === 'EntityMetadata') {
                var values = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
                this.entityMetadata = new Array(values.childNodes.length);
                for (var i = 0; i < values.childNodes.length; i++) {
                    var entity = values.childNodes[i];
                    var metaData = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseEntityMetadata({}, entity);
                    this.entityMetadata[i] = metaData;
                }
            }
        }
    }
    Xrm.Sdk.Messages.RetrieveAllEntitiesResponse.prototype = {
        entityMetadata: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveAttributeRequest

    Xrm.Sdk.Messages.RetrieveAttributeRequest = function Xrm_Sdk_Messages_RetrieveAttributeRequest() {
    }
    Xrm.Sdk.Messages.RetrieveAttributeRequest.prototype = {
        entityLogicalName: null,
        logicalName: null,
        retrieveAsIfPublished: false,

        serialise: function Xrm_Sdk_Messages_RetrieveAttributeRequest$serialise() {
            return String.format('<request i:type="a:RetrieveAttributeRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">' + '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '<a:KeyValuePairOfstringanyType>' + '<b:key>EntityLogicalName</b:key>' + '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">{0}</b:value>' + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>MetadataId</b:key>' + '<b:value i:type="ser:guid"  xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">00000000-0000-0000-0000-000000000000</b:value>' + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>RetrieveAsIfPublished</b:key>' + '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">{2}</b:value>' + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>LogicalName</b:key>' + '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">{1}</b:value>' + '</a:KeyValuePairOfstringanyType>' + '</a:Parameters>' + '<a:RequestId i:nil="true" />' + '<a:RequestName>RetrieveAttribute</a:RequestName>' + '</request>', this.entityLogicalName, this.logicalName, this.retrieveAsIfPublished);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveAttributeResponse

    Xrm.Sdk.Messages.RetrieveAttributeResponse = function Xrm_Sdk_Messages_RetrieveAttributeResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var metaData = Xrm.Sdk.XmlHelper.selectSingleNode(results.firstChild, 'value');
        var type = Xrm.Sdk.XmlHelper.getAttributeValue(metaData, 'i:type');
        switch (type) {
            case 'c:PicklistAttributeMetadata':
                this.attributeMetadata = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialisePicklistAttributeMetadata({}, metaData);
                break;
        }
    }
    Xrm.Sdk.Messages.RetrieveAttributeResponse.prototype = {
        attributeMetadata: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveEntityRequest

    Xrm.Sdk.Messages.RetrieveEntityRequest = function Xrm_Sdk_Messages_RetrieveEntityRequest() {
    }
    Xrm.Sdk.Messages.RetrieveEntityRequest.prototype = {
        entityFilters: 0,
        logicalName: null,
        metadataId: null,
        retrieveAsIfPublished: false,

        serialise: function Xrm_Sdk_Messages_RetrieveEntityRequest$serialise() {
            return '<request i:type="a:RetrieveEntityRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">' + '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">' + '<a:KeyValuePairOfstringanyType>' + '<b:key>EntityFilters</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.entityFilters, 'EntityFilters') + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>MetadataId</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.metadataId, null) + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>RetrieveAsIfPublished</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.retrieveAsIfPublished, null) + '</a:KeyValuePairOfstringanyType>' + '<a:KeyValuePairOfstringanyType>' + '<b:key>LogicalName</b:key>' + Xrm.Sdk.Attribute.serialiseValue(this.logicalName, null) + '</a:KeyValuePairOfstringanyType>' + '</a:Parameters>' + '<a:RequestId i:nil="true" />' + '<a:RequestName>RetrieveEntity</a:RequestName>' + '</request>';
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveEntityResponse

    Xrm.Sdk.Messages.RetrieveEntityResponse = function Xrm_Sdk_Messages_RetrieveEntityResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            if (Xrm.Sdk.XmlHelper.getNodeTextValue(key) === 'EntityMetadata') {
                var entity = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
                this.entityMetadata = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseEntityMetadata({}, entity);
            }
        }
    }
    Xrm.Sdk.Messages.RetrieveEntityResponse.prototype = {
        entityMetadata: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveMetadataChangesRequest

    Xrm.Sdk.Messages.RetrieveMetadataChangesRequest = function Xrm_Sdk_Messages_RetrieveMetadataChangesRequest() {
    }
    Xrm.Sdk.Messages.RetrieveMetadataChangesRequest.prototype = {
        clientVersionStamp: null,
        deletedMetadataFilters: null,
        query: null,

        serialise: function Xrm_Sdk_Messages_RetrieveMetadataChangesRequest$serialise() {
            return "<request i:type='a:RetrieveMetadataChangesRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>\r\n                <a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\r\n                  <a:KeyValuePairOfstringanyType>\r\n                    <b:key>ClientVersionStamp</b:key>" + Xrm.Sdk.Attribute.serialiseValue(this.clientVersionStamp, null) + '\r\n                  </a:KeyValuePairOfstringanyType>\r\n                  <a:KeyValuePairOfstringanyType>\r\n                    <b:key>Query</b:key>\r\n                    ' + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseEntityQueryExpression(this.query) + "\r\n                  </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil='true' />\r\n                <a:RequestName>RetrieveMetadataChanges</a:RequestName>\r\n              </request>";
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Messages.RetrieveMetadataChangesResponse

    Xrm.Sdk.Messages.RetrieveMetadataChangesResponse = function Xrm_Sdk_Messages_RetrieveMetadataChangesResponse(response) {
        var results = Xrm.Sdk.XmlHelper.selectSingleNode(response, 'Results');
        var $enum1 = ss.IEnumerator.getEnumerator(results.childNodes);
        while ($enum1.moveNext()) {
            var nameValuePair = $enum1.current;
            var key = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'key');
            var value = Xrm.Sdk.XmlHelper.selectSingleNode(nameValuePair, 'value');
            switch (Xrm.Sdk.XmlHelper.getNodeTextValue(key)) {
                case 'ServerVersionStamp':
                    this.serverVersionStamp = Xrm.Sdk.XmlHelper.getNodeTextValue(value);
                    break;
                case 'DeletedMetadata':
                    break;
                case 'EntityMetadata':
                    this.entityMetadata = [];
                    for (var i = 0; i < value.childNodes.length; i++) {
                        var entity = value.childNodes[i];
                        var metaData = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseEntityMetadata({}, entity);
                        this.entityMetadata.add(metaData);
                    }
                    break;
            }
        }
    }
    Xrm.Sdk.Messages.RetrieveMetadataChangesResponse.prototype = {
        entityMetadata: null,
        serverVersionStamp: null
    }


    Type.registerNamespace('Xrm.Sdk.Metadata');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.AttributeRequiredLevel

    Xrm.Sdk.Metadata.AttributeRequiredLevel = function () { };
    Xrm.Sdk.Metadata.AttributeRequiredLevel.prototype = {
        None: 'None',
        SystemRequired: 'SystemRequired',
        ApplicationRequired: 'ApplicationRequired',
        Recommended: 'Recommended'
    }
    Xrm.Sdk.Metadata.AttributeRequiredLevel.registerEnum('Xrm.Sdk.Metadata.AttributeRequiredLevel', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.AttributeTypeCode

    Xrm.Sdk.Metadata.AttributeTypeCode = function () { };
    Xrm.Sdk.Metadata.AttributeTypeCode.prototype = {
        Boolean: 'Boolean',
        Customer: 'Customer',
        DateTime: 'DateTime',
        Decimal: 'Decimal',
        Double: 'Double',
        Integer: 'Integer',
        Lookup: 'Lookup',
        Memo: 'Memo',
        None: 'None',
        Owner: 'Owner',
        PartyList: 'PartyList',
        Picklist: 'Picklist',
        State: 'State',
        Status: 'Status',
        String: 'String',
        Uniqueidentifier: 'Uniqueidentifier',
        CalendarRules: 'CalendarRules',
        Virtual: 'Virtual',
        BigInt: 'BigInt',
        ManagedProperty: 'ManagedProperty',
        EntityName: 'EntityName'
    }
    Xrm.Sdk.Metadata.AttributeTypeCode.registerEnum('Xrm.Sdk.Metadata.AttributeTypeCode', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.DateTimeFormat

    Xrm.Sdk.Metadata.DateTimeFormat = function () { };
    Xrm.Sdk.Metadata.DateTimeFormat.prototype = {
        DateOnly: 'DateOnly',
        DateAndTime: 'DateAndTime'
    }
    Xrm.Sdk.Metadata.DateTimeFormat.registerEnum('Xrm.Sdk.Metadata.DateTimeFormat', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.IntegerFormat

    Xrm.Sdk.Metadata.IntegerFormat = function () { };
    Xrm.Sdk.Metadata.IntegerFormat.prototype = {
        None: 'None',
        Duration: 'Duration',
        TimeZone: 'TimeZone',
        Language: 'Language',
        Locale: 'Locale'
    }
    Xrm.Sdk.Metadata.IntegerFormat.registerEnum('Xrm.Sdk.Metadata.IntegerFormat', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.OptionSetType

    Xrm.Sdk.Metadata.OptionSetType = function () { };
    Xrm.Sdk.Metadata.OptionSetType.prototype = {
        Picklist: 'Picklist',
        State: 'State',
        Status: 'Status',
        Boolean: 'Boolean'
    }
    Xrm.Sdk.Metadata.OptionSetType.registerEnum('Xrm.Sdk.Metadata.OptionSetType', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.RelationshipType

    Xrm.Sdk.Metadata.RelationshipType = function () { };
    Xrm.Sdk.Metadata.RelationshipType.prototype = {
        OneToManyRelationship: 'OneToManyRelationship',
        Default: 'Default',
        ManyToManyRelationship: 'ManyToManyRelationship'
    }
    Xrm.Sdk.Metadata.RelationshipType.registerEnum('Xrm.Sdk.Metadata.RelationshipType', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.StringFormat

    Xrm.Sdk.Metadata.StringFormat = function () { };
    Xrm.Sdk.Metadata.StringFormat.prototype = {
        Email: 'Email',
        Text: 'Text',
        TextArea: 'TextArea',
        Url: 'Url',
        TickerSymbol: 'TickerSymbol',
        PhoneticGuide: 'PhoneticGuide',
        VersionNumber: 'VersionNumber',
        Phone: 'Phone'
    }
    Xrm.Sdk.Metadata.StringFormat.registerEnum('Xrm.Sdk.Metadata.StringFormat', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.MetadataSerialiser

    Xrm.Sdk.Metadata.MetadataSerialiser = function Xrm_Sdk_Metadata_MetadataSerialiser() {
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseAttributeMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseAttributeMetadata(item, attribute) {
        var $enum1 = ss.IEnumerator.getEnumerator(attribute.childNodes);
        while ($enum1.moveNext()) {
            var node = $enum1.current;
            var itemValues = item;
            var localName = Xrm.Sdk.XmlHelper.getLocalName(node);
            var fieldName = localName.substr(0, 1).toLowerCase() + localName.substr(1);
            if (node.attributes.length === 1 && node.attributes[0].nodeName === 'i:nil') {
                continue;
            }
            switch (localName) {
                case 'AttributeOf':
                case 'DeprecatedVersion':
                case 'EntityLogicalName':
                case 'LogicalName':
                case 'SchemaName':
                case 'CalculationOf':
                    itemValues[fieldName] = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
                    break;
                case 'CanBeSecuredForCreate':
                case 'CanBeSecuredForRead':
                case 'CanBeSecuredForUpdate':
                case 'CanModifyAdditionalSettings':
                case 'IsAuditEnabled':
                case 'IsCustomAttribute':
                case 'IsCustomizable':
                case 'IsManaged':
                case 'IsPrimaryId':
                case 'IsPrimaryName':
                case 'IsRenameable':
                case 'IsSecured':
                case 'IsValidForAdvancedFind':
                case 'IsValidForCreate':
                case 'IsValidForRead':
                case 'IsValidForUpdate':
                case 'DefaultValue':
                    itemValues[fieldName] = Xrm.Sdk.Attribute.deSerialise(node, 'boolean');
                    break;
                case 'ColumnNumber':
                case 'Precision':
                case 'DefaultFormValue':
                case 'MaxLength':
                case 'PrecisionSource':
                    itemValues[fieldName] = Xrm.Sdk.Attribute.deSerialise(node, 'int');
                    break;
                case 'Description':
                case 'DisplayName':
                    var label = {};
                    itemValues[fieldName] = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLabel(label, node);
                    break;
                case 'OptionSet':
                    var options = {};
                    itemValues[fieldName] = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseOptionSetMetadata(options, node);
                    break;
                case 'AttributeType':
                    item.attributeType = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
                    break;
            }
        }
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseEntityMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseEntityMetadata(item, entity) {
        var $enum1 = ss.IEnumerator.getEnumerator(entity.childNodes);
        while ($enum1.moveNext()) {
            var node = $enum1.current;
            var itemValues = item;
            var localName = Xrm.Sdk.XmlHelper.getLocalName(node);
            var fieldName = localName.substr(0, 1).toLowerCase() + localName.substr(1);
            if (node.attributes.length === 1 && node.attributes[0].nodeName === 'i:nil') {
                continue;
            }
            switch (localName) {
                case 'IconLargeName':
                case 'IconMediumName':
                case 'IconSmallName':
                case 'LogicalName':
                case 'PrimaryIdAttribute':
                case 'PrimaryNameAttribute':
                case 'RecurrenceBaseEntityLogicalName':
                case 'ReportViewName':
                case 'SchemaName':
                case 'PrimaryImageAttribute':
                    itemValues[fieldName] = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
                    break;
                case 'AutoRouteToOwnerQueue':
                case 'CanBeInManyToMany':
                case 'CanBePrimaryEntityInRelationship':
                case 'CanBeRelatedEntityInRelationship':
                case 'CanCreateAttributes':
                case 'CanCreateCharts':
                case 'CanCreateForms':
                case 'CanCreateViews':
                case 'CanModifyAdditionalSettings':
                case 'CanTriggerWorkflow':
                case 'IsActivity':
                case 'IsActivityParty':
                case 'IsAuditEnabled':
                case 'IsAvailableOffline':
                case 'IsChildEntity':
                case 'IsConnectionsEnabled':
                case 'IsCustomEntity':
                case 'IsCustomizable':
                case 'IsDocumentManagementEnabled':
                case 'IsDuplicateDetectionEnabled':
                case 'IsEnabledForCharts':
                case 'IsImportable':
                case 'IsIntersect':
                case 'IsMailMergeEnabled':
                case 'IsManaged':
                case 'IsReadingPaneEnabled':
                case 'IsRenameable':
                case 'IsValidForAdvancedFind':
                case 'IsValidForQueue':
                case 'IsVisibleInMobile':
                    itemValues[fieldName] = Xrm.Sdk.Attribute.deSerialise(node, 'boolean');
                    break;
                case 'ActivityTypeMask':
                case 'ObjectTypeCode':
                    itemValues[fieldName] = Xrm.Sdk.Attribute.deSerialise(node, 'int');
                    break;
                case 'Attributes':
                    item.attributes = [];
                    var $enum2 = ss.IEnumerator.getEnumerator(node.childNodes);
                    while ($enum2.moveNext()) {
                        var childNode = $enum2.current;
                        var a = {};
                        item.attributes.add(Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseAttributeMetadata(a, childNode));
                    }
                    break;
                case 'Description':
                case 'DisplayCollectionName':
                case 'DisplayName':
                    var label = {};
                    itemValues[fieldName] = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLabel(label, node);
                    break;
            }
        }
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLabel = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseLabel(item, metaData) {
        item.localizedLabels = [];
        var labels = Xrm.Sdk.XmlHelper.selectSingleNode(metaData, 'LocalizedLabels');
        if (labels != null && labels.childNodes != null) {
            var $enum1 = ss.IEnumerator.getEnumerator(labels.childNodes);
            while ($enum1.moveNext()) {
                var label = $enum1.current;
                item.localizedLabels.add(Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLocalizedLabel({}, label));
            }
            item.userLocalizedLabel = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLocalizedLabel({}, Xrm.Sdk.XmlHelper.selectSingleNode(metaData, 'UserLocalizedLabel'));
        }
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLocalizedLabel = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseLocalizedLabel(item, metaData) {
        item.label = Xrm.Sdk.XmlHelper.selectSingleNodeValue(metaData, 'Label');
        item.languageCode = parseInt(Xrm.Sdk.XmlHelper.selectSingleNodeValue(metaData, 'LanguageCode'));
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseRelationshipMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseRelationshipMetadata(attribute) {
        var item;
        var type = Xrm.Sdk.XmlHelper.getAttributeValue(attribute, 'i:type');
        switch (type) {
            case 'c:OneToManyRelationshipMetadata':
                item = {};
                break;
            case 'c:ManyToManyRelationshipMetadata':
                item = {};
                break;
            default:
                throw new Error('Unknown relationship type');
        }
        var $enum1 = ss.IEnumerator.getEnumerator(attribute.childNodes);
        while ($enum1.moveNext()) {
            var node = $enum1.current;
            var itemValues = item;
            var localName = Xrm.Sdk.XmlHelper.getLocalName(node);
            var fieldName = localName.substr(0, 1).toLowerCase() + localName.substr(1);
            if (node.attributes.length === 1 && node.attributes[0].nodeName === 'i:nil') {
                continue;
            }
            switch (localName) {
                case 'SchemaName':
                case 'ReferencedAttribute':
                case 'ReferencedEntity':
                case 'ReferencingAttribute':
                case 'ReferencingEntity':
                case 'Entity1IntersectAttribute':
                case 'Entity1LogicalName':
                case 'Entity2IntersectAttribute':
                case 'Entity2LogicalName':
                case 'IntersectEntityName':
                    itemValues[fieldName] = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
                    break;
                case 'IsCustomRelationship':
                case 'IsManaged':
                case 'IsValidForAdvancedFind':
                    itemValues[fieldName] = Xrm.Sdk.Attribute.deSerialise(node, 'boolean');
                    break;
                case 'RelationshipType':
                    itemValues[fieldName] = Xrm.Sdk.XmlHelper.getNodeTextValue(node);
                    break;
            }
        }
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseOptionMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseOptionMetadata(item, metaData) {
        item.value = parseInt(Xrm.Sdk.XmlHelper.selectSingleNodeValue(metaData, 'Value'));
        item.label = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseLabel({}, Xrm.Sdk.XmlHelper.selectSingleNode(metaData, 'Label'));
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseOptionSetMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialiseOptionSetMetadata(item, metaData) {
        var options = Xrm.Sdk.XmlHelper.selectSingleNode(metaData, 'Options');
        if (options != null) {
            item.options = [];
            var $enum1 = ss.IEnumerator.getEnumerator(options.childNodes);
            while ($enum1.moveNext()) {
                var option = $enum1.current;
                item.options.add(Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseOptionMetadata({}, option));
            }
        }
        return item;
    }
    Xrm.Sdk.Metadata.MetadataSerialiser.deSerialisePicklistAttributeMetadata = function Xrm_Sdk_Metadata_MetadataSerialiser$deSerialisePicklistAttributeMetadata(item, metaData) {
        var options = Xrm.Sdk.XmlHelper.selectSingleNode(metaData, 'OptionSet');
        if (options != null) {
            item.optionSet = Xrm.Sdk.Metadata.MetadataSerialiser.deSerialiseOptionSetMetadata({}, options);
        }
        return item;
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.MetadataCache

    Xrm.Sdk.Metadata.MetadataCache = function Xrm_Sdk_Metadata_MetadataCache() {
    }
    Xrm.Sdk.Metadata.MetadataCache.get_entityMetaData = function Xrm_Sdk_Metadata_MetadataCache$get_entityMetaData() {
        return Xrm.Sdk.Metadata.MetadataCache._entityMetaData;
    }
    Xrm.Sdk.Metadata.MetadataCache.get_attributeMetaData = function Xrm_Sdk_Metadata_MetadataCache$get_attributeMetaData() {
        return Xrm.Sdk.Metadata.MetadataCache._attributeMetaData;
    }
    Xrm.Sdk.Metadata.MetadataCache.get_optionsetMetaData = function Xrm_Sdk_Metadata_MetadataCache$get_optionsetMetaData() {
        return Xrm.Sdk.Metadata.MetadataCache._optionsCache;
    }
    Xrm.Sdk.Metadata.MetadataCache.getOptionSetValues = function Xrm_Sdk_Metadata_MetadataCache$getOptionSetValues(entityLogicalName, attributeLogicalName, allowEmpty) {
        if (allowEmpty == null) {
            allowEmpty = false;
        }
        var cacheKey = entityLogicalName + '.' + attributeLogicalName + '.' + allowEmpty.toString();
        if (Object.keyExists(Xrm.Sdk.Metadata.MetadataCache._optionsCache, cacheKey)) {
            return Xrm.Sdk.Metadata.MetadataCache._optionsCache[cacheKey];
        }
        else {
            var attribute = Xrm.Sdk.Metadata.MetadataCache._loadAttributeMetadata(entityLogicalName, attributeLogicalName);
            var pickList = attribute;
            var opts = [];
            if (allowEmpty) {
                opts.add({});
            }
            var $enum1 = ss.IEnumerator.getEnumerator(pickList.optionSet.options);
            while ($enum1.moveNext()) {
                var o = $enum1.current;
                var a = {};
                a.name = o.label.userLocalizedLabel.label;
                a.value = o.value;
                opts.add(a);
            }
            Xrm.Sdk.Metadata.MetadataCache._optionsCache[cacheKey] = opts;
            return opts;
        }
    }
    Xrm.Sdk.Metadata.MetadataCache.getEntityTypeCodeFromName = function Xrm_Sdk_Metadata_MetadataCache$getEntityTypeCodeFromName(typeName) {
        var entity = Xrm.Sdk.Metadata.MetadataCache._loadEntityMetadata(typeName);
        return entity.objectTypeCode;
    }
    Xrm.Sdk.Metadata.MetadataCache.getSmallIconUrl = function Xrm_Sdk_Metadata_MetadataCache$getSmallIconUrl(typeName) {
        var entity = Xrm.Sdk.Metadata.MetadataCache._loadEntityMetadata(typeName);
        if (entity.isCustomEntity != null && !!entity.isCustomEntity) {
            if (entity.iconSmallName != null) {
                return '../../' + entity.iconSmallName;
            }
            else {
                return '../../../../_Common/icon.aspx?cache=1&iconType=NavigationIcon&objectTypeCode=' + entity.objectTypeCode.toString();
            }
        }
        else {
            return '/_imgs/ico_16_' + entity.objectTypeCode.toString() + '.gif';
        }
    }
    Xrm.Sdk.Metadata.MetadataCache._loadEntityMetadata = function Xrm_Sdk_Metadata_MetadataCache$_loadEntityMetadata(entityLogicalName) {
        var cacheKey = entityLogicalName;
        var metaData = Xrm.Sdk.Metadata.MetadataCache._entityMetaData[cacheKey];
        if (metaData == null) {
            var request = new Xrm.Sdk.Messages.RetrieveEntityRequest();
            request.entityFilters = 1;
            request.logicalName = entityLogicalName;
            request.retrieveAsIfPublished = true;
            request.metadataId = new Xrm.Sdk.Guid('00000000-0000-0000-0000-000000000000');
            var response = Xrm.Sdk.OrganizationServiceProxy.execute(request);
            metaData = response.entityMetadata;
            Xrm.Sdk.Metadata.MetadataCache._entityMetaData[cacheKey] = metaData;
        }
        return metaData;
    }
    Xrm.Sdk.Metadata.MetadataCache._loadAttributeMetadata = function Xrm_Sdk_Metadata_MetadataCache$_loadAttributeMetadata(entityLogicalName, attributeLogicalName) {
        var cacheKey = entityLogicalName + '|' + attributeLogicalName;
        var metaData = Xrm.Sdk.Metadata.MetadataCache._attributeMetaData[cacheKey];
        if (metaData == null) {
            var request = new Xrm.Sdk.Messages.RetrieveAttributeRequest();
            request.entityLogicalName = entityLogicalName;
            request.logicalName = attributeLogicalName;
            request.retrieveAsIfPublished = true;
            var response = Xrm.Sdk.OrganizationServiceProxy.execute(request);
            metaData = response.attributeMetadata;
            Xrm.Sdk.Metadata.MetadataCache._attributeMetaData[cacheKey] = metaData;
        }
        return metaData;
    }
    Xrm.Sdk.Metadata.MetadataCache.AddOptionsetMetadata = function Xrm_Sdk_Metadata_MetadataCache$AddOptionsetMetadata(entityLogicalName, attributeLogicalName, allowEmpty, metatdata) {
        var cacheKey = entityLogicalName + '.' + attributeLogicalName + '.' + allowEmpty.toString();
        var opts = [];
        if (allowEmpty) {
            opts.add({});
        }
        var $enum1 = ss.IEnumerator.getEnumerator(metatdata);
        while ($enum1.moveNext()) {
            var o = $enum1.current;
            var a = {};
            a.name = o['label'];
            a.value = o['value'];
            opts.add(a);
        }
        Xrm.Sdk.Metadata.MetadataCache.get_optionsetMetaData()[cacheKey] = opts;
    }


    Type.registerNamespace('Xrm.Sdk.Metadata.Query');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.Query.DeletedMetadataFilters

    Xrm.Sdk.Metadata.Query.DeletedMetadataFilters = function () { };
    Xrm.Sdk.Metadata.Query.DeletedMetadataFilters.prototype = {
        default_: 'default_',
        entity: 'entity',
        attribute: 'attribute',
        relationship: 'relationship',
        label: 'label',
        optionSet: 'optionSet',
        all: 'all'
    }
    Xrm.Sdk.Metadata.Query.DeletedMetadataFilters.registerEnum('Xrm.Sdk.Metadata.Query.DeletedMetadataFilters', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.Query.MetadataConditionOperator

    Xrm.Sdk.Metadata.Query.MetadataConditionOperator = function () { };
    Xrm.Sdk.Metadata.Query.MetadataConditionOperator.prototype = {
        Equals: 'Equals',
        NotEquals: 'NotEquals',
        In: 'In',
        NotIn: 'NotIn',
        GreaterThan: 'GreaterThan',
        LessThan: 'LessThan'
    }
    Xrm.Sdk.Metadata.Query.MetadataConditionOperator.registerEnum('Xrm.Sdk.Metadata.Query.MetadataConditionOperator', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.Query.LogicalOperator

    Xrm.Sdk.Metadata.Query.LogicalOperator = function () { };
    Xrm.Sdk.Metadata.Query.LogicalOperator.prototype = {
        And: 'And',
        Or: 'Or'
    }
    Xrm.Sdk.Metadata.Query.LogicalOperator.registerEnum('Xrm.Sdk.Metadata.Query.LogicalOperator', false);


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.Query.MetadataSerialiser

    Xrm.Sdk.Metadata.Query.MetadataSerialiser = function Xrm_Sdk_Metadata_Query_MetadataSerialiser() {
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseAttributeQueryExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseAttributeQueryExpression(item) {
        return Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataQueryExpression(item);
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseEntityQueryExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseEntityQueryExpression(item) {
        if (item != null) {
            var xml = "<b:value i:type='c:EntityQueryExpression' xmlns:c='http://schemas.microsoft.com/xrm/2011/Metadata/Query'>" + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataQueryExpression(item);
            if (item.attributeQuery != null) {
                xml += '<c:AttributeQuery>' + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseAttributeQueryExpression(item.attributeQuery) + '</c:AttributeQuery>';
            }
            xml += '<c:LabelQuery>' + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseLabelQueryExpression(item.labelQuery) + "</c:LabelQuery>\r\n                <c:RelationshipQuery i:nil='true' />\r\n                </b:value>";
            return xml;
        }
        else {
            return "<b:value i:nil='true'/>";
        }
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseLabelQueryExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseLabelQueryExpression(item) {
        if (item != null) {
            var xml = "<c:FilterLanguages xmlns:d='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>";
            var $enum1 = ss.IEnumerator.getEnumerator(item.filterLanguages);
            while ($enum1.moveNext()) {
                var lcid = $enum1.current;
                xml = xml + '<d:int>' + lcid.toString() + '</d:int>';
            }
            xml = xml + '</c:FilterLanguages>';
            return xml;
        }
        else {
            return '';
        }
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataConditionExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseMetadataConditionExpression(item) {
        return '<c:MetadataConditionExpression>\r\n                            <c:ConditionOperator>' + item.conditionOperator + '</c:ConditionOperator>\r\n                            <c:PropertyName>' + item.propertyName + "</c:PropertyName>\r\n                            <c:Value i:type='d:string' xmlns:d='http://www.w3.org/2001/XMLSchema'>" + item.value + '</c:Value>\r\n                          </c:MetadataConditionExpression>';
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataFilterExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseMetadataFilterExpression(item) {
        if (item != null) {
            var xml = '<c:Conditions>';
            var $enum1 = ss.IEnumerator.getEnumerator(item.conditions);
            while ($enum1.moveNext()) {
                var ex = $enum1.current;
                xml += Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataConditionExpression(ex);
            }
            xml = xml + '</c:Conditions>\r\n                        <c:FilterOperator>' + item.filterOperator + '</c:FilterOperator>\r\n                        <c:Filters />';
            return xml;
        }
        return '';
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataPropertiesExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseMetadataPropertiesExpression(item) {
        if (item != null) {
            var xml = '\r\n                <c:AllProperties>' + ((item.allProperties != null) ? item.allProperties.toString().toLowerCase() : 'false') + "</c:AllProperties>\r\n                <c:PropertyNames xmlns:d='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>";
            if (item.propertyNames != null) {
                var $enum1 = ss.IEnumerator.getEnumerator(item.propertyNames);
                while ($enum1.moveNext()) {
                    var value = $enum1.current;
                    xml = xml + '<d:string>' + value + '</d:string>';
                }
            }
            xml = xml + '\r\n                </c:PropertyNames>\r\n              ';
            return xml;
        }
        return '';
    }
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataQueryExpression = function Xrm_Sdk_Metadata_Query_MetadataSerialiser$serialiseMetadataQueryExpression(item) {
        if (item != null) {
            var xml = '<c:Criteria>' + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataFilterExpression(item.criteria) + '</c:Criteria>\r\n                    <c:Properties>' + Xrm.Sdk.Metadata.Query.MetadataSerialiser.serialiseMetadataPropertiesExpression(item.properties) + ' </c:Properties>';
            return xml;
        }
        return '';
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Metadata.Query.MetadataQueryBuilder

    Xrm.Sdk.Metadata.Query.MetadataQueryBuilder = function Xrm_Sdk_Metadata_Query_MetadataQueryBuilder() {
        this.request = new Xrm.Sdk.Messages.RetrieveMetadataChangesRequest();
        this.request.query = {};
        this.request.query.criteria = {};
        this.request.query.criteria.filterOperator = 'Or';
        this.request.query.criteria.conditions = [];
    }
    Xrm.Sdk.Metadata.Query.MetadataQueryBuilder.prototype = {
        request: null,

        addEntities: function Xrm_Sdk_Metadata_Query_MetadataQueryBuilder$addEntities(entityLogicalNames, propertiesToReturn) {
            this.request.query.criteria = {};
            this.request.query.criteria.filterOperator = 'Or';
            this.request.query.criteria.conditions = [];
            var $enum1 = ss.IEnumerator.getEnumerator(entityLogicalNames);
            while ($enum1.moveNext()) {
                var entity = $enum1.current;
                var condition = {};
                condition.conditionOperator = 'Equals';
                condition.propertyName = 'LogicalName';
                condition.value = entity;
                this.request.query.criteria.conditions.add(condition);
            }
            this.request.query.properties = {};
            this.request.query.properties.propertyNames = propertiesToReturn;
        },

        addAttributes: function Xrm_Sdk_Metadata_Query_MetadataQueryBuilder$addAttributes(attributeLogicalNames, propertiesToReturn) {
            var attributeQuery = {};
            attributeQuery.properties = {};
            attributeQuery.properties.propertyNames = propertiesToReturn;
            this.request.query.attributeQuery = attributeQuery;
            var critiera = {};
            attributeQuery.criteria = critiera;
            critiera.filterOperator = 'Or';
            critiera.conditions = [];
            var $enum1 = ss.IEnumerator.getEnumerator(attributeLogicalNames);
            while ($enum1.moveNext()) {
                var attribute = $enum1.current;
                var condition = {};
                condition.propertyName = 'LogicalName';
                condition.conditionOperator = 'Equals';
                condition.value = attribute;
                critiera.conditions.add(condition);
            }
        },

        setLanguage: function Xrm_Sdk_Metadata_Query_MetadataQueryBuilder$setLanguage(lcid) {
            this.request.query.labelQuery = {};
            this.request.query.labelQuery.filterLanguages = [];
            this.request.query.labelQuery.filterLanguages.add(lcid);
        }
    }


    Type.registerNamespace('Xrm.Sdk.Ribbon');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Ribbon.RibbonButton

    Xrm.Sdk.Ribbon.RibbonButton = function Xrm_Sdk_Ribbon_RibbonButton(Id, Sequence, LabelText, Command, Image16, Image32) {
        Xrm.Sdk.Ribbon.RibbonButton.initializeBase(this, [Id, Sequence, LabelText, Command, Image16, Image32]);
    }
    Xrm.Sdk.Ribbon.RibbonButton.prototype = {

        serialiseToRibbonXml: function Xrm_Sdk_Ribbon_RibbonButton$serialiseToRibbonXml(sb) {
            sb.appendLine('<Button Id="' + Xrm.Sdk.XmlHelper.encode(this.Id) + '" LabelText="' + Xrm.Sdk.XmlHelper.encode(this.LabelText) + '" Sequence="' + this.Sequence.toString() + '" Command="' + Xrm.Sdk.XmlHelper.encode(this.Command) + '"' + ((this.Image32by32 != null) ? (' Image32by32="' + Xrm.Sdk.XmlHelper.encode(this.Image32by32) + '"') : '') + ((this.Image16by16 != null) ? (' Image16by16="' + Xrm.Sdk.XmlHelper.encode(this.Image16by16) + '"') : '') + ' />');
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Ribbon.RibbonControl

    Xrm.Sdk.Ribbon.RibbonControl = function Xrm_Sdk_Ribbon_RibbonControl(Id, Sequence, LabelText, Command, Image16, Image32) {
        this.Id = Id;
        this.Sequence = Sequence;
        this.LabelText = LabelText;
        this.Command = Command;
        this.Image16by16 = Image16;
        this.Image32by32 = Image32;
    }
    Xrm.Sdk.Ribbon.RibbonControl.prototype = {
        Id: null,
        LabelText: null,
        Sequence: 0,
        Command: null,
        Image16by16: null,
        Image32by32: null,

        serialiseToRibbonXml: function Xrm_Sdk_Ribbon_RibbonControl$serialiseToRibbonXml(sb) {
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Ribbon.RibbonFlyoutAnchor

    Xrm.Sdk.Ribbon.RibbonFlyoutAnchor = function Xrm_Sdk_Ribbon_RibbonFlyoutAnchor(Id, Sequence, LabelText, Command, Image16, Image32) {
        Xrm.Sdk.Ribbon.RibbonFlyoutAnchor.initializeBase(this, [Id, Sequence, LabelText, Command, Image16, Image32]);
    }
    Xrm.Sdk.Ribbon.RibbonFlyoutAnchor.prototype = {
        menu: null,

        serialiseToRibbonXml: function Xrm_Sdk_Ribbon_RibbonFlyoutAnchor$serialiseToRibbonXml(sb) {
            sb.appendLine('<FlyoutAnchor Id="' + Xrm.Sdk.XmlHelper.encode(this.Id) + '" LabelText="' + Xrm.Sdk.XmlHelper.encode(this.LabelText) + '" Sequence="' + this.Sequence.toString() + '" Command="' + Xrm.Sdk.XmlHelper.encode(this.Command) + '"' + ((this.Image32by32 != null) ? (' Image32by32="' + Xrm.Sdk.XmlHelper.encode(this.Image32by32) + '"') : '') + ((this.Image16by16 != null) ? (' Image16by16="' + Xrm.Sdk.XmlHelper.encode(this.Image16by16) + '"') : '') + ' PopulateDynamically="false">');
            sb.appendLine(this.menu.serialiseToRibbonXml());
            sb.appendLine('</FlyoutAnchor>');
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Ribbon.RibbonMenu

    Xrm.Sdk.Ribbon.RibbonMenu = function Xrm_Sdk_Ribbon_RibbonMenu(Id) {
        this.sections = [];
        this.Id = Id;
    }
    Xrm.Sdk.Ribbon.RibbonMenu.prototype = {
        Id: null,

        serialiseToRibbonXml: function Xrm_Sdk_Ribbon_RibbonMenu$serialiseToRibbonXml() {
            var sb = new ss.StringBuilder();
            sb.appendLine('<Menu Id="' + this.Id + '">');
            var $enum1 = ss.IEnumerator.getEnumerator(this.sections);
            while ($enum1.moveNext()) {
                var section = $enum1.current;
                section.serialiseToRibbonXml(sb);
            }
            sb.appendLine('</Menu>');
            return sb.toString();
        },

        addSection: function Xrm_Sdk_Ribbon_RibbonMenu$addSection(section) {
            Xrm.ArrayEx.add(this.sections, section);
            return this;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Sdk.Ribbon.RibbonMenuSection

    Xrm.Sdk.Ribbon.RibbonMenuSection = function Xrm_Sdk_Ribbon_RibbonMenuSection(Id, LabelText, Sequence, DisplayMode) {
        this.buttons = [];
        this.Id = Id;
        this.Title = LabelText;
        this.Sequence = Sequence;
        this.DisplayMode = DisplayMode;
    }
    Xrm.Sdk.Ribbon.RibbonMenuSection.prototype = {
        Id: null,
        Title: null,
        Sequence: 0,
        DisplayMode: null,

        serialiseToRibbonXml: function Xrm_Sdk_Ribbon_RibbonMenuSection$serialiseToRibbonXml(sb) {
            sb.appendLine('<MenuSection Id="' + Xrm.Sdk.XmlHelper.encode(this.Id) + ((this.Title != null) ? '" Title="' + this.Title : '') + '" Sequence="' + this.Sequence.toString() + '" DisplayMode="' + this.DisplayMode + '">');
            sb.appendLine('<Controls Id="' + Xrm.Sdk.XmlHelper.encode(this.Id + '.Controls') + '">');
            var $enum1 = ss.IEnumerator.getEnumerator(this.buttons);
            while ($enum1.moveNext()) {
                var button = $enum1.current;
                button.serialiseToRibbonXml(sb);
            }
            sb.appendLine('</Controls>');
            sb.appendLine('</MenuSection>');
        },

        addButton: function Xrm_Sdk_Ribbon_RibbonMenuSection$addButton(button) {
            Xrm.ArrayEx.add(this.buttons, button);
            return this;
        }
    }


    Type.registerNamespace('Xrm.Services');

    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Services.CachedOrganizationService

    Xrm.Services.CachedOrganizationService = function Xrm_Services_CachedOrganizationService() {
    }
    Xrm.Services.CachedOrganizationService.retrieve = function Xrm_Services_CachedOrganizationService$retrieve(entityName, entityId, attributesList) {
        var result = Xrm.Services.CachedOrganizationService.cache.get(entityName, entityId);
        if (result == null) {
            result = Xrm.Sdk.OrganizationServiceProxy.retrieve(entityName, entityId, attributesList);
            Xrm.Services.CachedOrganizationService.cache.insert(entityName, entityId, result);
            return result;
        }
        else {
            return result;
        }
    }
    Xrm.Services.CachedOrganizationService.retrieveMultiple = function Xrm_Services_CachedOrganizationService$retrieveMultiple(fetchXml) {
        var result = Xrm.Services.CachedOrganizationService.cache.get('query', fetchXml);
        if (result == null) {
            result = Xrm.Sdk.OrganizationServiceProxy.retrieveMultiple(fetchXml);
            Xrm.Services.CachedOrganizationService.cache.insert('query', fetchXml, result);
            return result;
        }
        else {
            return result;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // Xrm.Services.OrganizationServiceCache

    Xrm.Services.OrganizationServiceCache = function Xrm_Services_OrganizationServiceCache() {
        this._innerCache = {};
    }
    Xrm.Services.OrganizationServiceCache.prototype = {

        remove: function Xrm_Services_OrganizationServiceCache$remove(entityName, id) {
        },

        insert: function Xrm_Services_OrganizationServiceCache$insert(key, query, results) {
            this._innerCache[key + '_' + query] = results;
        },

        get: function Xrm_Services_OrganizationServiceCache$get(key, query) {
            return this._innerCache[key + '_' + query];
        }
    }


    Xrm.ArrayEx.registerClass('Xrm.ArrayEx');
    Xrm.DelegateItterator.registerClass('Xrm.DelegateItterator');
    Xrm.NumberEx.registerClass('Xrm.NumberEx');
    Xrm.PageEx.registerClass('Xrm.PageEx');
    Xrm.StringEx.registerClass('Xrm.StringEx');
    Xrm.TaskIterrator.registerClass('Xrm.TaskIterrator');
    Xrm.TabItem.registerClass('Xrm.TabItem');
    Xrm.TabSection.registerClass('Xrm.TabSection');
    Xrm.Sdk.Attribute.registerClass('Xrm.Sdk.Attribute');
    Xrm.Sdk.AttributeTypes.registerClass('Xrm.Sdk.AttributeTypes');
    Xrm.Sdk.Entity.registerClass('Xrm.Sdk.Entity', null, Xrm.ComponentModel.INotifyPropertyChanged);
    Xrm.Sdk.OrganizationSettings.registerClass('Xrm.Sdk.OrganizationSettings', Xrm.Sdk.Entity);
    Xrm.Sdk.UserSettingsAttributes.registerClass('Xrm.Sdk.UserSettingsAttributes');
    Xrm.Sdk.UserSettings.registerClass('Xrm.Sdk.UserSettings', Xrm.Sdk.Entity);
    Xrm.Sdk.DataCollectionOfEntity.registerClass('Xrm.Sdk.DataCollectionOfEntity', null, ss.IEnumerable);
    Xrm.Sdk.DateTimeEx.registerClass('Xrm.Sdk.DateTimeEx');
    Xrm.Sdk.EntityCollection.registerClass('Xrm.Sdk.EntityCollection');
    Xrm.Sdk.EntityReference.registerClass('Xrm.Sdk.EntityReference');
    Xrm.Sdk.Guid.registerClass('Xrm.Sdk.Guid');
    Xrm.Sdk.Money.registerClass('Xrm.Sdk.Money');
    Xrm.Sdk.OptionSetValue.registerClass('Xrm.Sdk.OptionSetValue');
    Xrm.Sdk.OrganizationServiceProxy.registerClass('Xrm.Sdk.OrganizationServiceProxy');
    Xrm.Sdk.Relationship.registerClass('Xrm.Sdk.Relationship');
    Xrm.Sdk.RetrieveRelationshipRequest.registerClass('Xrm.Sdk.RetrieveRelationshipRequest', null, Object);
    Xrm.Sdk.RetrieveRelationshipResponse.registerClass('Xrm.Sdk.RetrieveRelationshipResponse', null, Object);
    Xrm.Sdk.XmlHelper.registerClass('Xrm.Sdk.XmlHelper');
    Xrm.Sdk.Messages.AssignRequest.registerClass('Xrm.Sdk.Messages.AssignRequest', null, Object);
    Xrm.Sdk.Messages.AssignResponse.registerClass('Xrm.Sdk.Messages.AssignResponse', null, Object);
    Xrm.Sdk.Messages.BulkDeleteRequest.registerClass('Xrm.Sdk.Messages.BulkDeleteRequest', null, Object);
    Xrm.Sdk.Messages.BulkDeleteResponse.registerClass('Xrm.Sdk.Messages.BulkDeleteResponse', null, Object);
    Xrm.Sdk.Messages.ExecuteWorkflowRequest.registerClass('Xrm.Sdk.Messages.ExecuteWorkflowRequest', null, Object);
    Xrm.Sdk.Messages.ExecuteWorkflowResponse.registerClass('Xrm.Sdk.Messages.ExecuteWorkflowResponse', null, Object);
    Xrm.Sdk.Messages.FetchXmlToQueryExpressionRequest.registerClass('Xrm.Sdk.Messages.FetchXmlToQueryExpressionRequest', null, Object);
    Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse.registerClass('Xrm.Sdk.Messages.FetchXmlToQueryExpressionResponse', null, Object);
    Xrm.Sdk.Messages.RetrieveAllEntitiesRequest.registerClass('Xrm.Sdk.Messages.RetrieveAllEntitiesRequest', null, Object);
    Xrm.Sdk.Messages.RetrieveAllEntitiesResponse.registerClass('Xrm.Sdk.Messages.RetrieveAllEntitiesResponse', null, Object);
    Xrm.Sdk.Messages.RetrieveAttributeRequest.registerClass('Xrm.Sdk.Messages.RetrieveAttributeRequest', null, Object);
    Xrm.Sdk.Messages.RetrieveAttributeResponse.registerClass('Xrm.Sdk.Messages.RetrieveAttributeResponse', null, Object);
    Xrm.Sdk.Messages.RetrieveEntityRequest.registerClass('Xrm.Sdk.Messages.RetrieveEntityRequest', null, Object);
    Xrm.Sdk.Messages.RetrieveEntityResponse.registerClass('Xrm.Sdk.Messages.RetrieveEntityResponse', null, Object);
    Xrm.Sdk.Messages.RetrieveMetadataChangesRequest.registerClass('Xrm.Sdk.Messages.RetrieveMetadataChangesRequest', null, Object);
    Xrm.Sdk.Messages.RetrieveMetadataChangesResponse.registerClass('Xrm.Sdk.Messages.RetrieveMetadataChangesResponse', null, Object);
    Xrm.Sdk.Metadata.MetadataSerialiser.registerClass('Xrm.Sdk.Metadata.MetadataSerialiser');
    Xrm.Sdk.Metadata.MetadataCache.registerClass('Xrm.Sdk.Metadata.MetadataCache');
    Xrm.Sdk.Metadata.Query.MetadataSerialiser.registerClass('Xrm.Sdk.Metadata.Query.MetadataSerialiser');
    Xrm.Sdk.Metadata.Query.MetadataQueryBuilder.registerClass('Xrm.Sdk.Metadata.Query.MetadataQueryBuilder');
    Xrm.Sdk.Ribbon.RibbonControl.registerClass('Xrm.Sdk.Ribbon.RibbonControl');
    Xrm.Sdk.Ribbon.RibbonButton.registerClass('Xrm.Sdk.Ribbon.RibbonButton', Xrm.Sdk.Ribbon.RibbonControl);
    Xrm.Sdk.Ribbon.RibbonFlyoutAnchor.registerClass('Xrm.Sdk.Ribbon.RibbonFlyoutAnchor', Xrm.Sdk.Ribbon.RibbonControl);
    Xrm.Sdk.Ribbon.RibbonMenu.registerClass('Xrm.Sdk.Ribbon.RibbonMenu');
    Xrm.Sdk.Ribbon.RibbonMenuSection.registerClass('Xrm.Sdk.Ribbon.RibbonMenuSection');
    Xrm.Services.CachedOrganizationService.registerClass('Xrm.Services.CachedOrganizationService');
    Xrm.Services.OrganizationServiceCache.registerClass('Xrm.Services.OrganizationServiceCache');
    Xrm.PageEx.majorVersion = 0;
    (function () {
        Xrm.PageEx.majorVersion = 2011;
        if (typeof (window.APPLICATION_VERSION) !== 'undefined') {
            var applicationVersion = window.APPLICATION_VERSION;
            if (applicationVersion !== '5.0') {
                Xrm.PageEx.majorVersion = 2013;
            }
        }
    })();
    Xrm.Sdk.AttributeTypes.string_ = 'string';
    Xrm.Sdk.AttributeTypes.decimal_ = 'decimal';
    Xrm.Sdk.AttributeTypes.int_ = 'int';
    Xrm.Sdk.AttributeTypes.double_ = 'double';
    Xrm.Sdk.AttributeTypes.dateTime_ = 'dateTime';
    Xrm.Sdk.AttributeTypes.boolean_ = 'boolean';
    Xrm.Sdk.AttributeTypes.entityReference = 'EntityReference';
    Xrm.Sdk.AttributeTypes.guid_ = 'guid';
    Xrm.Sdk.AttributeTypes.optionSetValue = 'OptionSetValue';
    Xrm.Sdk.AttributeTypes.aliasedValue = 'AliasedValue';
    Xrm.Sdk.AttributeTypes.entityCollection = 'EntityCollection';
    Xrm.Sdk.AttributeTypes.money = 'Money';
    Xrm.Sdk.OrganizationSettings.entityLogicalName = 'organization';
    Xrm.Sdk.UserSettingsAttributes.userSettingsId = 'usersettingsid';
    Xrm.Sdk.UserSettingsAttributes.businessUnitId = 'businessunitid';
    Xrm.Sdk.UserSettingsAttributes.calendarType = 'calendartype';
    Xrm.Sdk.UserSettingsAttributes.currencyDecimalPrecision = 'currencydecimalprecision';
    Xrm.Sdk.UserSettingsAttributes.currencyFormatCode = 'currencyformatcode';
    Xrm.Sdk.UserSettingsAttributes.currencySymbol = 'currencysymbol';
    Xrm.Sdk.UserSettingsAttributes.dateFormatCode = 'dateformatcode';
    Xrm.Sdk.UserSettingsAttributes.dateFormatString = 'dateformatstring';
    Xrm.Sdk.UserSettingsAttributes.dateSeparator = 'dateseparator';
    Xrm.Sdk.UserSettingsAttributes.decimalSymbol = 'decimalsymbol';
    Xrm.Sdk.UserSettingsAttributes.defaultCalendarView = 'defaultcalendarview';
    Xrm.Sdk.UserSettingsAttributes.defaultDashboardId = 'defaultdashboardid';
    Xrm.Sdk.UserSettingsAttributes.localeId = 'localeid';
    Xrm.Sdk.UserSettingsAttributes.longDateFormatCode = 'longdateformatcode';
    Xrm.Sdk.UserSettingsAttributes.negativeCurrencyFormatCode = 'negativecurrencyformatcode';
    Xrm.Sdk.UserSettingsAttributes.negativeFormatCode = 'negativeformatcode';
    Xrm.Sdk.UserSettingsAttributes.numberGroupFormat = 'numbergroupformat';
    Xrm.Sdk.UserSettingsAttributes.numberSeparator = 'numberseparator';
    Xrm.Sdk.UserSettingsAttributes.offlineSyncInterval = 'offlinesyncinterval';
    Xrm.Sdk.UserSettingsAttributes.pricingDecimalPrecision = 'pricingdecimalprecision';
    Xrm.Sdk.UserSettingsAttributes.showWeekNumber = 'showweeknumber';
    Xrm.Sdk.UserSettingsAttributes.systemUserId = 'systemuserid';
    Xrm.Sdk.UserSettingsAttributes.timeFormatCodestring = 'timeformatcodestring';
    Xrm.Sdk.UserSettingsAttributes.timeFormatString = 'timeformatstring';
    Xrm.Sdk.UserSettingsAttributes.timeSeparator = 'timeseparator';
    Xrm.Sdk.UserSettingsAttributes.timeZoneBias = 'timezonebias';
    Xrm.Sdk.UserSettingsAttributes.timeZoneCode = 'timezonecode';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightBias = 'timezonedaylightbias';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightDay = 'timezonedaylightday';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightDayOfWeek = 'timezonedaylightdayofweek';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightHour = 'timezonedaylighthour';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightMinute = 'timezonedaylightminute';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightMonth = 'timezonedaylightmonth';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightSecond = 'timezonedaylightsecond';
    Xrm.Sdk.UserSettingsAttributes.timeZoneDaylightYear = 'timezonedaylightyear';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardBias = 'timezonestandardbias';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardDay = 'timezonestandardday';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardDayOfWeek = 'timezonestandarddayofweek';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardHour = 'timezonestandardhour';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardMinute = 'timezonestandardminute';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardMonth = 'timezonestandardmonth';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardSecond = 'timezonestandardsecond';
    Xrm.Sdk.UserSettingsAttributes.timeZoneStandardYear = 'timezonestandardyear';
    Xrm.Sdk.UserSettingsAttributes.transactionCurrencyId = 'transactioncurrencyid';
    Xrm.Sdk.UserSettingsAttributes.uiLanguageId = 'uilanguageid';
    Xrm.Sdk.UserSettingsAttributes.workdayStartTime = 'workdaystarttime';
    Xrm.Sdk.UserSettingsAttributes.workdayStopTime = 'workdaystoptime';
    Xrm.Sdk.UserSettings.entityLogicalName = 'usersettings';
    Xrm.Sdk.Guid.empty = new Xrm.Sdk.Guid('00000000-0000-0000-0000-000000000000');
    Xrm.Sdk.OrganizationServiceProxy.withCredentials = false;
    Xrm.Sdk.OrganizationServiceProxy.userSettings = null;
    Xrm.Sdk.OrganizationServiceProxy.executeMessageResponseTypes = {};
    Xrm.Sdk.OrganizationServiceProxy.organizationSettings = null;
    Xrm.Sdk.XmlHelper._encode_map = { '&': '&amp;', '"': '&quot;', '<': '&lt;', '>': '&gt;', "'": '&#39;' };
    Xrm.Sdk.XmlHelper._decode_map = { '&amp;': '&', '&quot;': '"', '&lt;': '<', '&gt;': '>', '&#39;': "'" };
    Xrm.Sdk.Metadata.MetadataCache._attributeMetaData = {};
    Xrm.Sdk.Metadata.MetadataCache._entityMetaData = {};
    Xrm.Sdk.Metadata.MetadataCache._optionsCache = {};
    Xrm.Services.CachedOrganizationService.cache = new Xrm.Services.OrganizationServiceCache();
});

//! SparkleXrmUI.debug.js
//
window._loadedScripts = window._loadedScripts || {};
window._loadedScripts['xrmui'] = true;
(function ($) {

    Type.registerNamespace('SparkleXrm.CustomBinding');

    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.EnterKeyBinding

    SparkleXrm.CustomBinding.EnterKeyBinding = function SparkleXrm_CustomBinding_EnterKeyBinding() {
        SparkleXrm.CustomBinding.EnterKeyBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.EnterKeyBinding.prototype = {

        init: function SparkleXrm_CustomBinding_EnterKeyBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            ko.utils.registerEventHandler(element, 'keydown', function (sender, e) {
                var eventTyped = sender;
                if (eventTyped.keyCode === 13) {
                    eventTyped.preventDefault();
                    eventTyped.target.blur();
                    valueAccessor().call(viewModel);
                }
            });
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmCurrencySymbolBinding

    SparkleXrm.CustomBinding.XrmCurrencySymbolBinding = function SparkleXrm_CustomBinding_XrmCurrencySymbolBinding() {
        SparkleXrm.CustomBinding.XrmCurrencySymbolBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmCurrencySymbolBinding.getCurrencySymbol = function SparkleXrm_CustomBinding_XrmCurrencySymbolBinding$getCurrencySymbol(valueAccessor) {
        var value = ko.utils.unwrapObservable(valueAccessor());
        if (value != null && value.id != null) {
            return Xrm.NumberEx.getCurrencySymbol(value.id);
        }
        return '';
    }
    SparkleXrm.CustomBinding.XrmCurrencySymbolBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmCurrencySymbolBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
        },

        update: function SparkleXrm_CustomBinding_XrmCurrencySymbolBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var currencyIndicatorSpan = $(element).find('.sparkle-input-currencyprefix-part');
            var interceptAccesor = function () {
                var currencySymbol = SparkleXrm.CustomBinding.XrmCurrencySymbolBinding.getCurrencySymbol(valueAccessor);
                return currencySymbol;
            };
            ko.bindingHandlers.text.update(currencyIndicatorSpan.get(0), interceptAccesor, allBindingsAccessor, viewModel, context);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmMoneyBinding

    SparkleXrm.CustomBinding.XrmMoneyBinding = function SparkleXrm_CustomBinding_XrmMoneyBinding() {
        SparkleXrm.CustomBinding.XrmMoneyBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmMoneyBinding._getNumberFormatInfo$1 = function SparkleXrm_CustomBinding_XrmMoneyBinding$_getNumberFormatInfo$1(allBindingsAccessor) {
        var format = Xrm.NumberEx.getCurrencyEditFormatInfo();
        if (allBindingsAccessor()['minvalue'] == null) {
            format.minValue = -2147483648;
        }
        else {
            format.minValue = allBindingsAccessor()['minvalue'];
        }
        if (allBindingsAccessor()['maxvalue'] == null) {
            format.maxValue = 2147483647;
        }
        else {
            format.maxValue = allBindingsAccessor()['maxvalue'];
        }
        return format;
    }
    SparkleXrm.CustomBinding.XrmMoneyBinding._formatNumber$1 = function SparkleXrm_CustomBinding_XrmMoneyBinding$_formatNumber$1(value, format) {
        if (value != null) {
            return Xrm.NumberEx.format(value.value, format);
        }
        else {
            return '';
        }
    }
    SparkleXrm.CustomBinding.XrmMoneyBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_XrmMoneyBinding$_trySetObservable$1(valueAccessor, inputField, value, format) {
        var observable = valueAccessor();
        var isValid = true;
        var numericValue = Xrm.NumberEx.parse(value, format);
        if (!isNaN(numericValue) && numericValue >= format.minValue && numericValue <= format.maxValue) {
            var newValue = null;
            if (numericValue != null) {
                numericValue = Xrm.NumberEx.round(numericValue, format.precision);
                newValue = new Xrm.Sdk.Money(numericValue);
            }
            observable(newValue);
            if ((typeof (observable.isValid)) !== 'undefined') {
                isValid = !!(observable).isValid();
            }
            if (isValid) {
                var formattedNumber = SparkleXrm.CustomBinding.XrmMoneyBinding._formatNumber$1(newValue, format);
                inputField.val(formattedNumber);
            }
        }
        else {
            alert(String.format('You must enter a number between {0} and {1}', format.minValue, format.maxValue));
            var currentValue = observable();
            var formattedNumber = SparkleXrm.CustomBinding.XrmMoneyBinding._formatNumber$1(currentValue, format);
            inputField.val(formattedNumber);
            inputField.focus();
        }
    }
    SparkleXrm.CustomBinding.XrmMoneyBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmMoneyBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            var format = SparkleXrm.CustomBinding.XrmMoneyBinding._getNumberFormatInfo$1(allBindingsAccessor);
            var args = arguments;
            var onChangeHandler = function (e) {
                var observable = valueAccessor();
                var newValue = textBox.val();
                SparkleXrm.CustomBinding.XrmMoneyBinding._trySetObservable$1(valueAccessor, textBox, newValue, format);
            };
            textBox.change(onChangeHandler);
        },

        update: function SparkleXrm_CustomBinding_XrmMoneyBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            var format = SparkleXrm.CustomBinding.XrmMoneyBinding._getNumberFormatInfo$1(allBindingsAccessor);
            var interceptAccesor = function () {
                var value = (valueAccessor())();
                if (value != null) {
                    return Xrm.NumberEx.format(value.value, format);
                }
                else {
                    return '';
                }
            };
            ko.bindingHandlers.value.update(textBox.get(0), interceptAccesor, allBindingsAccessor, viewModel, context);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmNumericBinding

    SparkleXrm.CustomBinding.XrmNumericBinding = function SparkleXrm_CustomBinding_XrmNumericBinding() {
        SparkleXrm.CustomBinding.XrmNumericBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmNumericBinding._getNumberFormatInfo$1 = function SparkleXrm_CustomBinding_XrmNumericBinding$_getNumberFormatInfo$1(allBindingsAccessor) {
        var format = Xrm.NumberEx.getNumberFormatInfo();
        format.precision = parseInt(allBindingsAccessor()['precision']);
        if (allBindingsAccessor()['minvalue'] == null) {
            format.minValue = -2147483648;
        }
        else {
            format.minValue = allBindingsAccessor()['minvalue'];
        }
        if (allBindingsAccessor()['maxvalue'] == null) {
            format.maxValue = 2147483647;
        }
        else {
            format.maxValue = allBindingsAccessor()['maxvalue'];
        }
        return format;
    }
    SparkleXrm.CustomBinding.XrmNumericBinding._formatNumber$1 = function SparkleXrm_CustomBinding_XrmNumericBinding$_formatNumber$1(value, format) {
        if (value != null) {
            return Xrm.NumberEx.format(value, format);
        }
        else {
            return '';
        }
    }
    SparkleXrm.CustomBinding.XrmNumericBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_XrmNumericBinding$_trySetObservable$1(valueAccessor, inputField, value, format) {
        var observable = valueAccessor();
        var isValid = true;
        var numericValue = Xrm.NumberEx.parse(value, format);
        if (!isNaN(numericValue) && numericValue >= format.minValue && numericValue <= format.maxValue) {
            if (numericValue != null) {
                numericValue = Xrm.NumberEx.round(numericValue, format.precision);
            }
            observable(numericValue);
            if ((typeof (observable.isValid)) !== 'undefined') {
                isValid = !!(observable).isValid();
            }
            if (isValid) {
                var formattedNumber = SparkleXrm.CustomBinding.XrmNumericBinding._formatNumber$1(numericValue, format);
                inputField.val(formattedNumber);
            }
        }
        else {
            alert(String.format('You must enter a number between {0} and {1}', format.minValue, format.maxValue));
            var currentValue = observable();
            var formattedNumber = SparkleXrm.CustomBinding.XrmNumericBinding._formatNumber$1(currentValue, format);
            inputField.val(formattedNumber);
            inputField.focus();
        }
    }
    SparkleXrm.CustomBinding.XrmNumericBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmNumericBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            var format = SparkleXrm.CustomBinding.XrmNumericBinding._getNumberFormatInfo$1(allBindingsAccessor);
            var onChangeHandler = function (e) {
                var observable = valueAccessor();
                var newValue = textBox.val();
                SparkleXrm.CustomBinding.XrmNumericBinding._trySetObservable$1(valueAccessor, textBox, newValue, format);
            };
            textBox.change(onChangeHandler);
        },

        update: function SparkleXrm_CustomBinding_XrmNumericBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            var format = SparkleXrm.CustomBinding.XrmNumericBinding._getNumberFormatInfo$1(allBindingsAccessor);
            var interceptAccesor = function () {
                var value = (valueAccessor())();
                if (value != null) {
                    return Xrm.NumberEx.format(value, format);
                }
                else {
                    return '';
                }
            };
            ko.bindingHandlers.value.update(textBox.get(0), interceptAccesor, allBindingsAccessor, viewModel, context);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmOptionSetBinding

    SparkleXrm.CustomBinding.XrmOptionSetBinding = function SparkleXrm_CustomBinding_XrmOptionSetBinding() {
        SparkleXrm.CustomBinding.XrmOptionSetBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmOptionSetBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmOptionSetBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var select = $(element).find('.sparkle-input-optionset-part');
            var onChangeHandler = function (e) {
                var observable = valueAccessor();
                var newValue = select.val();
                var newValueInt = null;
                if (!String.isNullOrEmpty(newValue)) {
                    newValueInt = parseInt(newValue);
                }
                var newValueOptionSetValue = new Xrm.Sdk.OptionSetValue(newValueInt);
                newValueOptionSetValue.name = select.find('option:selected').text();
                observable(newValueOptionSetValue);
            };
            select.change(onChangeHandler);
            allBindingsAccessor()['optionsValue'] = 'value';
            allBindingsAccessor()['optionsText'] = 'name';
            var optionSetOptions = (allBindingsAccessor()['optionSetOptions']);
            var optionsValueAccessor;
            if (optionSetOptions.getOptionSetsDelegate != null) {
                optionsValueAccessor = function () {
                    return optionSetOptions.getOptionSetsDelegate(viewModel);
                };
            }
            else {
                optionsValueAccessor = function () {
                    return Xrm.Sdk.Metadata.MetadataCache.getOptionSetValues(optionSetOptions.entityLogicalName, optionSetOptions.attributeLogicalName, optionSetOptions.allowEmpty);
                };
            }
            ko.bindingHandlers.options.update(select.get(0), optionsValueAccessor, allBindingsAccessor, viewModel, context);
        },

        update: function SparkleXrm_CustomBinding_XrmOptionSetBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var select = $(element).find('.sparkle-input-optionset-part');
            var observable = valueAccessor();
            var value = observable();
            var newValue = '';
            if (value != null && value.value != null) {
                newValue = value.value.toString();
            }
            select.val(newValue);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.AnimateVisible

    SparkleXrm.CustomBinding.AnimateVisible = function SparkleXrm_CustomBinding_AnimateVisible() {
        SparkleXrm.CustomBinding.AnimateVisible.initializeBase(this);
    }
    SparkleXrm.CustomBinding.AnimateVisible.prototype = {

        init: function SparkleXrm_CustomBinding_AnimateVisible$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observable = valueAccessor();
            $(element).toggle(ko.utils.unwrapObservable(observable));
        },

        update: function SparkleXrm_CustomBinding_AnimateVisible$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observable = valueAccessor();
            var effectIn = (allBindingsAccessor()['effectIn']);
            var effectOut = (allBindingsAccessor()['effectOut']);
            var item = $(element);
            var effect = (ko.utils.unwrapObservable(observable)) ? effectIn : effectOut;
            switch (effect) {
                case 'fadeIn':
                    item.fadeIn();
                    break;
                case 'fadeOut':
                    item.fadeOut();
                    break;
                case 'slideUp':
                    item.slideUp();
                    break;
                case 'slideDown':
                    item.slideDown();
                    break;
            }
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.AutocompleteBinding

    SparkleXrm.CustomBinding.AutocompleteBinding = function SparkleXrm_CustomBinding_AutocompleteBinding() {
        SparkleXrm.CustomBinding.AutocompleteBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.AutocompleteBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_AutocompleteBinding$_trySetObservable$1(valueAccessor, inputField, value) {
        var observable = valueAccessor();
        var isValid = true;
        observable(value);
        if ((typeof (observable.isValid)) !== 'undefined') {
            isValid = !!(observable).isValid();
        }
        if (isValid) {
            inputField.blur();
        }
    }
    SparkleXrm.CustomBinding.AutocompleteBinding.prototype = {

        init: function SparkleXrm_CustomBinding_AutocompleteBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var inputField = $(element);
            var options = (allBindingsAccessor()['autocompleteOptions']);
            options.position = { collision: 'fit' };
            options.select = function (e, uiEvent) {
                var value = (uiEvent.item)['value'].toString();
                SparkleXrm.CustomBinding.AutocompleteBinding._trySetObservable$1(valueAccessor, inputField, value);
            };
            inputField = inputField.autocomplete(options);
            var selectButton = inputField.siblings('.timeSelectButton');
            selectButton.click(function (e) {
                inputField.autocomplete('search');
            });
            ko.utils.registerEventHandler(element, 'change', function (sender, e) {
                var value = inputField.val();
                SparkleXrm.CustomBinding.AutocompleteBinding._trySetObservable$1(valueAccessor, inputField, value);
            });
            var disposeCallBack = function () {
                $(element).autocomplete("destroy");
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallBack);
            ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindingsAccessor, null, null);
        },

        update: function SparkleXrm_CustomBinding_AutocompleteBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var value = ko.utils.unwrapObservable(valueAccessor());
            $(element).val(value);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmBooleanBinding

    SparkleXrm.CustomBinding.XrmBooleanBinding = function SparkleXrm_CustomBinding_XrmBooleanBinding() {
        SparkleXrm.CustomBinding.XrmBooleanBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmBooleanBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmBooleanBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observableBool = valueAccessor();
            var interceptor = {};
            interceptor.read = function () {
                return observableBool().toString();
            };
            interceptor.write = function (newValue) {
                observableBool(newValue === 'true');
            };
            var targetBinding = (allBindingsAccessor()['targetBinding']);
            var bindings = {};
            bindings[targetBinding] = ko.computed(interceptor);
            ko.applyBindingsToNode(element, bindings);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmLookupBinding

    SparkleXrm.CustomBinding.XrmLookupBinding = function SparkleXrm_CustomBinding_XrmLookupBinding() {
        SparkleXrm.CustomBinding.XrmLookupBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmLookupBinding._getExtraColumns = function SparkleXrm_CustomBinding_XrmLookupBinding$_getExtraColumns(columnAttributes, fetchResult, results, i) {
        if (columnAttributes != null) {
            var columnValues = [];
            var first = true;
            var $enum1 = ss.IEnumerator.getEnumerator(columnAttributes);
            while ($enum1.moveNext()) {
                var attribute = $enum1.current;
                if (first) {
                    first = false;
                    continue;
                }
                var value = '';
                var record = fetchResult.get_entities().get_item(i);
                if (Object.keyExists(record.formattedValues, attribute + 'name')) {
                    value = record.formattedValues[attribute + 'name'];
                }
                else {
                    var attributeValue = record.getAttributeValue(attribute);
                    if (attributeValue != null) {
                        switch (Type.getInstanceType(attributeValue).get_name()) {
                            case 'EntityReference':
                                value = (attributeValue).name;
                                break;
                            default:
                                value = attributeValue.toString();
                                break;
                        }
                    }
                }
                if (value != null && value.length > 0) {
                    columnValues.add(value);
                }
            }
            results[i].columnValues = columnValues;
        }
    }
    SparkleXrm.CustomBinding.XrmLookupBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_XrmLookupBinding$_trySetObservable$1(valueAccessor, inputField, value) {
        var observable = valueAccessor();
        var isValid = true;
        observable(value);
        if ((typeof (observable.isValid)) !== 'undefined') {
            isValid = !!(observable).isValid();
        }
        if (isValid) {
            inputField.blur();
            inputField.focus();
        }
    }
    SparkleXrm.CustomBinding.XrmLookupBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmLookupBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var inputField = container.find('.sparkle-input-lookup-part');
            var selectButton = container.find('.sparkle-input-lookup-button-part');
            var _value = new Xrm.Sdk.EntityReference(null, null, null);
            var options = {};
            options.minLength = 100000;
            options.delay = 0;
            options.position = { collision: 'fit' };
            var justSelected = false;
            options.select = function (e, uiEvent) {
                var item = uiEvent.item;
                if (_value == null) {
                    _value = new Xrm.Sdk.EntityReference(null, null, null);
                }
                var value = item.label;
                inputField.val(value);
                _value.id = (item.value);
                _value.name = item.label;
                _value.logicalName = item.data;
                justSelected = true;
                SparkleXrm.CustomBinding.XrmLookupBinding._trySetObservable$1(valueAccessor, inputField, _value);
                return false;;
            };
            var queryCommand = (allBindingsAccessor()['queryCommand']);
            var nameAttribute = (allBindingsAccessor()['nameAttribute']);
            var idAttribute = (allBindingsAccessor()['idAttribute']);
            var typeCodeAttribute = (allBindingsAccessor()['typeCodeAttribute']);
            var columnAttributes = null;
            var columns = nameAttribute.split(',');
            if (columns.length > 1) {
                columnAttributes = columns;
                nameAttribute = columnAttributes[0];
            }
            var queryDelegate = function (request, response) {
                var queryCallBack = function (fetchResult) {
                    var results = new Array(fetchResult.get_entities().get_count());
                    for (var i = 0; i < fetchResult.get_entities().get_count() ; i++) {
                        results[i] = {};
                        results[i].label = fetchResult.get_entities().get_item(i).getAttributeValue(nameAttribute);
                        results[i].value = fetchResult.get_entities().get_item(i).getAttributeValue(idAttribute);
                        results[i].data = fetchResult.get_entities().get_item(i).logicalName;
                        SparkleXrm.CustomBinding.XrmLookupBinding._getExtraColumns(columnAttributes, fetchResult, results, i);
                        var typeCodeName = fetchResult.get_entities().get_item(i).logicalName;
                        if (!String.isNullOrEmpty(typeCodeAttribute)) {
                            typeCodeName = fetchResult.get_entities().get_item(i).getAttributeValue(typeCodeAttribute).toString();
                        }
                        results[i].image = Xrm.Sdk.Metadata.MetadataCache.getSmallIconUrl(typeCodeName);
                    }
                    response(results);
                    var disableOption = {};
                    disableOption.minLength = 100000;
                    inputField.autocomplete(disableOption);
                };
                queryCommand.call(context.$parent, request.term, queryCallBack);
            };
            options.source = queryDelegate;
            options.focus = function (e, uiEvent) {
                return false;;
            };
            inputField = inputField.autocomplete(options);
            (inputField.data('ui-autocomplete'))._renderItem = function (ul, item) {
                var html = "<a class='sparkle-menu-item'><span class='sparkle-menu-item-img'><img src='" + item.image + "'/></span><span class='sparkle-menu-item-label'>" + item.label + '</span><br>';
                if (item.columnValues != null && item.columnValues.length > 0) {
                    var $enum1 = ss.IEnumerator.getEnumerator(item.columnValues);
                    while ($enum1.moveNext()) {
                        var value = $enum1.current;
                        html += "<span class='sparkle-menu-item-moreinfo'>" + value + '</span>';
                    }
                }
                html += '</a>';
                return $('<li>').append(html).appendTo(ul);
            };
            selectButton.click(function (e) {
                var enableOption = {};
                enableOption.minLength = 0;
                inputField.focus();
                inputField.autocomplete(enableOption);
                inputField.autocomplete('search');
            });
            inputField.change(function (e) {
                if (inputField.val() !== _value.name) {
                    SparkleXrm.CustomBinding.XrmLookupBinding._trySetObservable$1(valueAccessor, inputField, null);
                }
            });
            var disposeCallBack = function () {
                if ($(inputField).data('ui-autocomplete') != undefined) {
                    $(inputField).autocomplete("destroy");
                }
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallBack);
            ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindingsAccessor, null, null);
            inputField.keydown(function (e) {
                if (e.which === 13 && !justSelected) {
                    selectButton.click();
                }
                else if (e.which === 13) {
                    return;
                }
                switch (e.which) {
                    case 13:
                    case 38:
                    case 40:
                        e.preventDefault();
                        e.stopPropagation();
                        break;
                }
                justSelected = false;
            });
        },

        update: function SparkleXrm_CustomBinding_XrmLookupBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var inputField = container.find('.sparkle-input-lookup-part');
            var value = ko.utils.unwrapObservable(valueAccessor());
            var displayName = '';
            if (value != null) {
                displayName = value.name;
            }
            inputField.val(displayName);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmTextBinding

    SparkleXrm.CustomBinding.XrmTextBinding = function SparkleXrm_CustomBinding_XrmTextBinding() {
        SparkleXrm.CustomBinding.XrmTextBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmTextBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmTextBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            var onChangeHandler = function (e) {
                var observable = valueAccessor();
                var newValue = textBox.val();
                observable(newValue);
            };
            textBox.change(onChangeHandler);
            textBox.keyup(onChangeHandler);
        },

        update: function SparkleXrm_CustomBinding_XrmTextBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var textBox = $(element).find('.sparkle-input-textbox-part');
            ko.bindingHandlers.value.update(textBox.get(0), valueAccessor, allBindingsAccessor, viewModel, context);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmDatePickerBinding

    SparkleXrm.CustomBinding.XrmDatePickerBinding = function SparkleXrm_CustomBinding_XrmDatePickerBinding() {
        SparkleXrm.CustomBinding.XrmDatePickerBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmDatePickerBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmDatePickerBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var dateTime = container.find('.sparkle-input-datepicker-part');
            var dateButton = container.find('.sparkle-input-datepicker-button-part');
            var options = {};
            options.showOn = '';
            options.buttonImageOnly = true;
            options.firstDay = (Xrm.Sdk.OrganizationServiceProxy.organizationSettings != null) ? Xrm.Sdk.OrganizationServiceProxy.organizationSettings.weekstartdaycode.value : 0;
            var dateFormat = 'dd/MM/yy';
            if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
                dateFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring;
            }
            options.dateFormat = dateFormat;
            dateTime.datepicker(options);
            dateButton.click(function (e) {
                dateTime.datepicker('show');
            });
            ko.utils.registerEventHandler(dateTime.get(0), 'change', function (sender, e) {
                var observable = valueAccessor();
                var isValid = true;
                if ((typeof (observable.IsValid)) !== 'undefined') {
                    isValid = !!(observable).isValid();
                }
                if (isValid) {
                    var selectedDate = dateTime.datepicker('getDate');
                    var currentValue = observable();
                    Xrm.Sdk.DateTimeEx.setTime(selectedDate, currentValue);
                    observable(selectedDate);
                }
                dateTime.blur();
            });
            var disposeCallBack = function () {
                $(element).datepicker("destroy");
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallBack);
        },

        update: function SparkleXrm_CustomBinding_XrmDatePickerBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var dateTime = container.find('.sparkle-input-datepicker-part');
            var value = ko.utils.unwrapObservable(valueAccessor());
            if (typeof (value) === 'string') {
                value = Date.parseDate(value);
            }
            dateTime.datepicker('setDate', value);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmDurationBinding

    SparkleXrm.CustomBinding.XrmDurationBinding = function SparkleXrm_CustomBinding_XrmDurationBinding() {
        SparkleXrm.CustomBinding.XrmDurationBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmDurationBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_XrmDurationBinding$_trySetObservable$1(valueAccessor, inputField, value) {
        var observable = valueAccessor();
        var isValid = true;
        var isEmpty = (value == null) || (!value.length);
        var pattern = '/([0-9]*)[ ]?((h(our)?[s]?)|(m(inute)?[s]?)|(d(ay)?[s]?))/g';
        var regex = RegExp.parse(pattern);
        var match = regex.exec(value);
        if (isEmpty) {
            observable(null);
        }
        else if (match != null && match.length > 0) {
            var durationNumber = parseFloat(match[1]);
            switch (match[2].substr(0, 1).toLowerCase()) {
                case 'd':
                    durationNumber = durationNumber * 60 * 24;
                    break;
                case 'h':
                    durationNumber = durationNumber * 60;
                    break;
            }
            observable(durationNumber);
            if ((typeof (observable.isValid)) !== 'undefined') {
                isValid = !!(observable).isValid();
            }
            if (isValid) {
            }
        }
        else {
            alert('Invalid Duration Format');
            var currentValue = observable();
            var durationString = SparkleXrm.CustomBinding.XrmDurationBinding._formatDuration$1(currentValue);
            inputField.val(durationString);
            inputField.focus();
        }
    }
    SparkleXrm.CustomBinding.XrmDurationBinding._formatDuration$1 = function SparkleXrm_CustomBinding_XrmDurationBinding$_formatDuration$1(duration) {
        var durationString = null;
        if (duration != null) {
            if (duration > (60 * 24)) {
                durationString = String.format('{0} d', duration / (60 * 24));
            }
            else if (duration === (60 * 24)) {
                durationString = String.format('{0} d', duration / (60 * 24));
            }
            else if (duration > 60) {
                durationString = String.format('{0} h', duration / (60));
            }
            else if (duration === 60) {
                durationString = String.format('{0} h', duration / (60));
            }
            else {
                durationString = String.format('{0} m', duration);
            }
        }
        else {
            durationString = null;
        }
        return durationString;
    }
    SparkleXrm.CustomBinding.XrmDurationBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmDurationBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var inputField = container.find('.sparkle-input-duration-part');
            var selectButton = container.find('.sparkle-input-duration-button-part');
            var options = {};
            options.position = { collision: 'fit' };
            options.source = ['1 m', '2 m', '1 h', '2 h', '1 d'];
            options.delay = 0;
            options.minLength = 0;
            options.select = function (e, uiEvent) {
                var value = (uiEvent.item)['value'].toString();
                SparkleXrm.CustomBinding.XrmDurationBinding._trySetObservable$1(valueAccessor, inputField, value);
            };
            inputField = inputField.autocomplete(options);
            selectButton.click(function (e) {
                inputField.autocomplete('search', '');
            });
            ko.utils.registerEventHandler(element, 'change', function (sender, e) {
                var value = inputField.val();
                SparkleXrm.CustomBinding.XrmDurationBinding._trySetObservable$1(valueAccessor, inputField, value);
            });
            var disposeCallBack = function () {
                $(element).autocomplete("destroy");
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallBack);
        },

        update: function SparkleXrm_CustomBinding_XrmDurationBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var inputField = container.find('.sparkle-input-duration-part');
            var value = ko.utils.unwrapObservable(valueAccessor());
            var duration = value;
            var durationString = SparkleXrm.CustomBinding.XrmDurationBinding._formatDuration$1(duration);
            inputField.val(durationString);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.FadeVisibleBinding

    SparkleXrm.CustomBinding.FadeVisibleBinding = function SparkleXrm_CustomBinding_FadeVisibleBinding() {
        SparkleXrm.CustomBinding.FadeVisibleBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.FadeVisibleBinding.prototype = {

        init: function SparkleXrm_CustomBinding_FadeVisibleBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observable = valueAccessor();
            $(element).toggle(ko.utils.unwrapObservable(observable));
        },

        update: function SparkleXrm_CustomBinding_FadeVisibleBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observable = valueAccessor();
            if (ko.utils.unwrapObservable(observable)) {
                $(element).fadeIn();
            }
            else {
                $(element).fadeOut();
            }
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.ProgressBarBinding

    SparkleXrm.CustomBinding.ProgressBarBinding = function SparkleXrm_CustomBinding_ProgressBarBinding() {
        SparkleXrm.CustomBinding.ProgressBarBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.ProgressBarBinding.prototype = {

        init: function SparkleXrm_CustomBinding_ProgressBarBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            $(element).progressbar();
        },

        update: function SparkleXrm_CustomBinding_ProgressBarBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var observable = valueAccessor();
            var value = ko.utils.unwrapObservable(observable);
            $(element).progressbar('value', value);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.CustomBinding.XrmTimeOfDayBinding

    SparkleXrm.CustomBinding.XrmTimeOfDayBinding = function SparkleXrm_CustomBinding_XrmTimeOfDayBinding() {
        SparkleXrm.CustomBinding.XrmTimeOfDayBinding.initializeBase(this);
    }
    SparkleXrm.CustomBinding.XrmTimeOfDayBinding._trySetObservable$1 = function SparkleXrm_CustomBinding_XrmTimeOfDayBinding$_trySetObservable$1(valueAccessor, inputField, value) {
        var observable = valueAccessor();
        var isValid = true;
        var testDate = Xrm.Sdk.DateTimeEx.addTimeToDate(observable(), value);
        var newValue = (testDate == null) ? '' : testDate.toString();
        var originalValue = (observable() == null) ? '' : observable().toString();
        if (newValue === originalValue) {
            return;
        }
        if (testDate == null) {
            alert('Invalid Time');
            inputField.focus();
            var currentValue = observable();
            SparkleXrm.CustomBinding.XrmTimeOfDayBinding._formatterUpdate$1(inputField, currentValue);
        }
        else {
            observable(testDate);
            if ((typeof (observable.isValid)) !== 'undefined') {
                isValid = !!(observable).isValid();
            }
            if (isValid) {
            }
        }
    }
    SparkleXrm.CustomBinding.XrmTimeOfDayBinding._formatterUpdate$1 = function SparkleXrm_CustomBinding_XrmTimeOfDayBinding$_formatterUpdate$1(inputField, value) {
        var formatString = SparkleXrm.CustomBinding.XrmTimeOfDayBinding._getFormatString$1();
        var formattedValue = '';
        if (value != null) {
            formattedValue = value.format(formatString);
        }
        inputField.val(formattedValue);
    }
    SparkleXrm.CustomBinding.XrmTimeOfDayBinding._getFormatString$1 = function SparkleXrm_CustomBinding_XrmTimeOfDayBinding$_getFormatString$1() {
        var timeFormatString = 'h:mm tt';
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            timeFormatString = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
        }
        return timeFormatString;
    }
    SparkleXrm.CustomBinding.XrmTimeOfDayBinding.prototype = {

        init: function SparkleXrm_CustomBinding_XrmTimeOfDayBinding$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var formatString = SparkleXrm.CustomBinding.XrmTimeOfDayBinding._getFormatString$1();
            var container = $(element);
            var inputField = container.find('.sparkle-input-timeofday-part');
            var selectButton = container.find('.sparkle-input-timeofday-button-part');
            var options = SparkleXrm.GridEditor.XrmTimeEditor.getTimePickerAutoCompleteOptions(formatString);
            options.position = { collision: 'fit' };
            options.select = function (e, uiEvent) {
                var value = (uiEvent.item)['value'].toString();
                SparkleXrm.CustomBinding.XrmTimeOfDayBinding._trySetObservable$1(valueAccessor, inputField, value);
            };
            inputField = inputField.autocomplete(options);
            selectButton.click(function (e) {
                inputField.autocomplete('search', '');
            });
            ko.utils.registerEventHandler(inputField.get(0), 'change', function (sender, e) {
                var value = inputField.val();
                SparkleXrm.CustomBinding.XrmTimeOfDayBinding._trySetObservable$1(valueAccessor, inputField, value);
            });
            var disposeCallBack = function () {
                $(element).autocomplete("destroy");
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallBack);
        },

        update: function SparkleXrm_CustomBinding_XrmTimeOfDayBinding$update(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var container = $(element);
            var inputField = container.find('.sparkle-input-timeofday-part');
            var value = ko.utils.unwrapObservable(valueAccessor());
            var formatString = SparkleXrm.CustomBinding.XrmTimeOfDayBinding._getFormatString$1();
            var formattedValue = Xrm.Sdk.DateTimeEx.formatTimeSpecific(value, formatString);
            inputField.val(formattedValue);
        }
    }


    Type.registerNamespace('SparkleXrm.GridEditor');

    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.SortCol

    SparkleXrm.GridEditor.SortCol = function SparkleXrm_GridEditor_SortCol(attributeName, ascending) {
        this.attributeName = attributeName;
        this.ascending = ascending;
    }
    SparkleXrm.GridEditor.SortCol.prototype = {
        attributeName: null,
        ascending: false
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmBooleanEditor

    SparkleXrm.GridEditor.XrmBooleanEditor = function SparkleXrm_GridEditor_XrmBooleanEditor(args) {
        SparkleXrm.GridEditor.XrmBooleanEditor.initializeBase(this, [args]);
        this._input$1 = $("<input type='checkbox' class='editor-boolean'/>").appendTo(args.container).bind('keydown.nav', function (e) {
            if (e.which === 37 || e.which === 39) {
                e.stopImmediatePropagation();
            }
        }).focus().select();
    }
    SparkleXrm.GridEditor.XrmBooleanEditor.bindColumn = function SparkleXrm_GridEditor_XrmBooleanEditor$bindColumn(column, TrueOptionDisplayName, FalseOptionDisplayName) {
        column.editor = SparkleXrm.GridEditor.XrmBooleanEditor.booleanEditor;
        column.formatter = SparkleXrm.GridEditor.XrmBooleanEditor.formatter;
        var opts = {};
        opts.trueOptionDisplayName = TrueOptionDisplayName;
        opts.falseOptionDisplayName = FalseOptionDisplayName;
        column.options = opts;
        return column;
    }
    SparkleXrm.GridEditor.XrmBooleanEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmBooleanEditor$bindReadOnlyColumn(column, TrueOptionDisplayName, FalseOptionDisplayName) {
        column.formatter = SparkleXrm.GridEditor.XrmBooleanEditor.formatter;
        var opts = {};
        opts.trueOptionDisplayName = TrueOptionDisplayName;
        opts.falseOptionDisplayName = FalseOptionDisplayName;
        column.options = opts;
        return column;
    }
    SparkleXrm.GridEditor.XrmBooleanEditor.formatter = function SparkleXrm_GridEditor_XrmBooleanEditor$formatter(row, cell, value, columnDef, dataContext) {
        var trueValue = 'True';
        var falseValue = 'False';
        var opts = columnDef.options;
        if (opts != null && opts.trueOptionDisplayName != null) {
            trueValue = opts.trueOptionDisplayName;
        }
        if (opts != null && opts.falseOptionDisplayName != null) {
            falseValue = opts.falseOptionDisplayName;
        }
        if (value != null) {
            return (value) ? trueValue : falseValue;
        }
        else {
            return falseValue;
        }
    }
    SparkleXrm.GridEditor.XrmBooleanEditor.prototype = {
        _input$1: null,
        _defaultValue$1: false,

        destroy: function SparkleXrm_GridEditor_XrmBooleanEditor$destroy() {
            SparkleXrm.GridEditor.XrmBooleanEditor.callBaseMethod(this, 'destroy');
            this._input$1.remove();
        },

        focus: function SparkleXrm_GridEditor_XrmBooleanEditor$focus() {
            SparkleXrm.GridEditor.XrmBooleanEditor.callBaseMethod(this, 'focus');
            this._input$1.focus();
        },

        _getValue$1: function SparkleXrm_GridEditor_XrmBooleanEditor$_getValue$1() {
            return this._input$1.is(':checked');
        },

        loadValue: function SparkleXrm_GridEditor_XrmBooleanEditor$loadValue(item) {
            this._defaultValue$1 = item[this._args.column.field];
            if (this._defaultValue$1) {
                this._input$1[0].setAttribute('checked', 'checked');
            }
            else {
                this._input$1[0].removeAttribute('checked');
            }
            this._input$1[0].setAttribute('defaultValue', this._defaultValue$1);
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmBooleanEditor$serializeValue() {
            return this._getValue$1();
        },

        applyValue: function SparkleXrm_GridEditor_XrmBooleanEditor$applyValue(item, state) {
            item[this._args.column.field] = state;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmBooleanEditor$isValueChanged() {
            var val = this._getValue$1();
            return (val !== this._defaultValue$1);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmMoneyEditor

    SparkleXrm.GridEditor.XrmMoneyEditor = function SparkleXrm_GridEditor_XrmMoneyEditor(args) {
        SparkleXrm.GridEditor.XrmMoneyEditor.initializeBase(this, [args]);
        this._numberFormatInfo$1 = args.column.options;
        this._currencySymbol$1 = $('<SPAN/>').appendTo(args.container);
        this._input$1 = $("<INPUT type=text class='editor-text' />").appendTo(args.container).bind('keydown.nav', function (e) {
            if (e.which === 37 || e.which === 39) {
                e.stopImmediatePropagation();
            }
        }).focus().select();
    }
    SparkleXrm.GridEditor.XrmMoneyEditor.formatter = function SparkleXrm_GridEditor_XrmMoneyEditor$formatter(row, cell, value, columnDef, dataContext) {
        if (value != null) {
            var currencySymbol = SparkleXrm.GridEditor.XrmMoneyEditor.getCurrencySymbol((dataContext).transactioncurrencyid);
            var numeric = value;
            return currencySymbol + ' ' + Xrm.NumberEx.format(numeric.value, columnDef.options);
        }
        else {
            return '';
        }
    }
    SparkleXrm.GridEditor.XrmMoneyEditor.bindColumn = function SparkleXrm_GridEditor_XrmMoneyEditor$bindColumn(column, minValue, maxValue) {
        column.editor = SparkleXrm.GridEditor.XrmMoneyEditor.moneyEditor;
        column.formatter = SparkleXrm.GridEditor.XrmMoneyEditor.formatter;
        var numberFormatInfo = Xrm.NumberEx.getCurrencyEditFormatInfo();
        numberFormatInfo.minValue = minValue;
        numberFormatInfo.maxValue = maxValue;
        column.options = numberFormatInfo;
        return column;
    }
    SparkleXrm.GridEditor.XrmMoneyEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmMoneyEditor$bindReadOnlyColumn(column) {
        column.formatter = SparkleXrm.GridEditor.XrmMoneyEditor.formatter;
        var numberFormatInfo = Xrm.NumberEx.getCurrencyEditFormatInfo();
        column.options = numberFormatInfo;
        return column;
    }
    SparkleXrm.GridEditor.XrmMoneyEditor.getCurrencySymbol = function SparkleXrm_GridEditor_XrmMoneyEditor$getCurrencySymbol(currencyid) {
        if (currencyid != null && currencyid.id != null && currencyid.id.value != null) {
            return Xrm.NumberEx.getCurrencySymbol(currencyid.id);
        }
        return '';
    }
    SparkleXrm.GridEditor.XrmMoneyEditor.prototype = {
        _input$1: null,
        _currencySymbol$1: null,
        _defaultValue$1: null,
        _numberFormatInfo$1: null,

        destroy: function SparkleXrm_GridEditor_XrmMoneyEditor$destroy() {
            SparkleXrm.GridEditor.XrmMoneyEditor.callBaseMethod(this, 'destroy');
            this._input$1.remove();
            this._currencySymbol$1.remove();
        },

        focus: function SparkleXrm_GridEditor_XrmMoneyEditor$focus() {
            SparkleXrm.GridEditor.XrmMoneyEditor.callBaseMethod(this, 'focus');
            this._input$1.focus();
        },

        getValue: function SparkleXrm_GridEditor_XrmMoneyEditor$getValue() {
            return this._input$1.val();
        },

        setValue: function SparkleXrm_GridEditor_XrmMoneyEditor$setValue(value) {
            this._input$1.val(value);
        },

        loadValue: function SparkleXrm_GridEditor_XrmMoneyEditor$loadValue(item) {
            var currencySymbolString = SparkleXrm.GridEditor.XrmMoneyEditor.getCurrencySymbol(((item)).transactioncurrencyid);
            this._currencySymbol$1.text(currencySymbolString + ' ');
            var value = item[this._args.column.field];
            this._defaultValue$1 = '';
            if (value != null) {
                this._defaultValue$1 = Xrm.NumberEx.format(value.value, this._numberFormatInfo$1);
            }
            this._input$1.val(this._defaultValue$1);
            this._input$1[0].setAttribute('defaultValue', this._defaultValue$1);
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmMoneyEditor$serializeValue() {
            return this._input$1.val();
        },

        applyValue: function SparkleXrm_GridEditor_XrmMoneyEditor$applyValue(item, state) {
            var money = new Xrm.Sdk.Money(Xrm.NumberEx.parse(state, this._numberFormatInfo$1));
            item[this._args.column.field] = money;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmMoneyEditor$isValueChanged() {
            return (!(!this._input$1.val() && this._defaultValue$1 == null)) && (this._input$1.val() !== this._defaultValue$1);
        },

        nativeValidation: function SparkleXrm_GridEditor_XrmMoneyEditor$nativeValidation(newValue) {
            var isValid = true;
            var newValueNumber = Xrm.NumberEx.parse(newValue, this._numberFormatInfo$1);
            isValid = !isNaN(newValueNumber);
            isValid = isValid && (newValueNumber >= this._numberFormatInfo$1.minValue) && (newValueNumber <= this._numberFormatInfo$1.maxValue);
            if (!isValid) {
                var result = {};
                result.valid = false;
                result.message = String.format('Please enter a number between {0} and {1}.', this._numberFormatInfo$1.minValue, this._numberFormatInfo$1.maxValue);
                return result;
            }
            return null;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmNumberEditor

    SparkleXrm.GridEditor.XrmNumberEditor = function SparkleXrm_GridEditor_XrmNumberEditor(args) {
        SparkleXrm.GridEditor.XrmNumberEditor.initializeBase(this, [args]);
        this._numberFormatInfo$1 = args.column.options;
        this._input$1 = $("<INPUT type=text class='editor-text' />").appendTo(args.container).bind('keydown.nav', function (e) {
            if (e.which === 37 || e.which === 39) {
                e.stopImmediatePropagation();
            }
        }).focus().select();
    }
    SparkleXrm.GridEditor.XrmNumberEditor.formatter = function SparkleXrm_GridEditor_XrmNumberEditor$formatter(row, cell, value, columnDef, dataContext) {
        if (value != null) {
            var numeric = value;
            return Xrm.NumberEx.format(numeric, columnDef.options);
        }
        else {
            return '';
        }
    }
    SparkleXrm.GridEditor.XrmNumberEditor.bindColumn = function SparkleXrm_GridEditor_XrmNumberEditor$bindColumn(column, minValue, maxValue, precision) {
        column.editor = SparkleXrm.GridEditor.XrmNumberEditor.numberEditor;
        column.formatter = SparkleXrm.GridEditor.XrmNumberEditor.formatter;
        var numberFormatInfo = Xrm.NumberEx.getNumberFormatInfo();
        numberFormatInfo.minValue = minValue;
        numberFormatInfo.maxValue = maxValue;
        numberFormatInfo.precision = precision;
        column.options = numberFormatInfo;
        return column;
    }
    SparkleXrm.GridEditor.XrmNumberEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmNumberEditor$bindReadOnlyColumn(column, precision) {
        column.formatter = SparkleXrm.GridEditor.XrmNumberEditor.formatter;
        var numberFormatInfo = Xrm.NumberEx.getNumberFormatInfo();
        numberFormatInfo.precision = precision;
        column.options = numberFormatInfo;
        return column;
    }
    SparkleXrm.GridEditor.XrmNumberEditor.prototype = {
        _input$1: null,
        _defaultValue$1: null,
        _numberFormatInfo$1: null,

        destroy: function SparkleXrm_GridEditor_XrmNumberEditor$destroy() {
            SparkleXrm.GridEditor.XrmNumberEditor.callBaseMethod(this, 'destroy');
            this._input$1.remove();
        },

        focus: function SparkleXrm_GridEditor_XrmNumberEditor$focus() {
            SparkleXrm.GridEditor.XrmNumberEditor.callBaseMethod(this, 'focus');
            this._input$1.focus();
        },

        getValue: function SparkleXrm_GridEditor_XrmNumberEditor$getValue() {
            return this._input$1.val();
        },

        setValue: function SparkleXrm_GridEditor_XrmNumberEditor$setValue(value) {
            this._input$1.val(value);
        },

        loadValue: function SparkleXrm_GridEditor_XrmNumberEditor$loadValue(item) {
            this._defaultValue$1 = Xrm.NumberEx.format(item[this._args.column.field], this._numberFormatInfo$1);
            if (this._defaultValue$1 == null) {
                this._defaultValue$1 = '';
            }
            this._input$1.val(this._defaultValue$1);
            this._input$1[0].setAttribute('defaultValue', this._defaultValue$1);
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmNumberEditor$serializeValue() {
            return this._input$1.val();
        },

        applyValue: function SparkleXrm_GridEditor_XrmNumberEditor$applyValue(item, state) {
            item[this._args.column.field] = Xrm.NumberEx.parse(state, this._numberFormatInfo$1);
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmNumberEditor$isValueChanged() {
            return (!(!this._input$1.val() && this._defaultValue$1 == null)) && (this._input$1.val() !== this._defaultValue$1);
        },

        nativeValidation: function SparkleXrm_GridEditor_XrmNumberEditor$nativeValidation(newValue) {
            var isValid = true;
            var newValueNumber = Xrm.NumberEx.parse(newValue, this._numberFormatInfo$1);
            isValid = !isNaN(newValueNumber);
            isValid = isValid && (newValueNumber >= this._numberFormatInfo$1.minValue) && (newValueNumber <= this._numberFormatInfo$1.maxValue);
            if (!isValid) {
                var result = {};
                result.valid = false;
                result.message = String.format('Please enter a number between {0} and {1}.', this._numberFormatInfo$1.minValue, this._numberFormatInfo$1.maxValue);
                return result;
            }
            return null;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.EntityDataViewModel

    SparkleXrm.GridEditor.EntityDataViewModel = function SparkleXrm_GridEditor_EntityDataViewModel(pageSize, entityType, lazyLoadPages) {
        this._rows = new Array(0);
        this._sortCols = [];
        SparkleXrm.GridEditor.EntityDataViewModel.initializeBase(this);
        this._entityType = entityType;
        this._lazyLoadPages = lazyLoadPages;
        this._data = [];
        this.paging.pageSize = pageSize;
        this.paging.pageNum = 0;
        this.paging.totalPages = 0;
        this.paging.totalRows = 0;
        this.paging.fromRecord = 0;
        this.paging.toRecord = 0;
    }
    SparkleXrm.GridEditor.EntityDataViewModel.prototype = {
        _suspendRefresh: false,
        _data: null,
        _entityType: null,
        _fetchXml: '',
        _itemAdded: false,
        _lazyLoadPages: true,
        errorMessage: '',
        deleteData: null,

        add_onBeginClearPageCache: function SparkleXrm_GridEditor_EntityDataViewModel$add_onBeginClearPageCache(value) {
            this.__onBeginClearPageCache$1 = ss.Delegate.combine(this.__onBeginClearPageCache$1, value);
        },
        remove_onBeginClearPageCache: function SparkleXrm_GridEditor_EntityDataViewModel$remove_onBeginClearPageCache(value) {
            this.__onBeginClearPageCache$1 = ss.Delegate.remove(this.__onBeginClearPageCache$1, value);
        },

        __onBeginClearPageCache$1: null,

        get_fetchXml: function SparkleXrm_GridEditor_EntityDataViewModel$get_fetchXml() {
            return this._fetchXml;
        },
        set_fetchXml: function SparkleXrm_GridEditor_EntityDataViewModel$set_fetchXml(value) {
            this._fetchXml = value;
            return value;
        },

        getItem: function SparkleXrm_GridEditor_EntityDataViewModel$getItem(index) {
            if (index >= this.paging.pageSize) {
                return null;
            }
            else {
                return this._data[index + (this.paging.pageNum * this.paging.pageSize)];
            }
        },

        reset: function SparkleXrm_GridEditor_EntityDataViewModel$reset() {
            this.clearPageCache();
            this.deleteData = [];
        },

        resetPaging: function SparkleXrm_GridEditor_EntityDataViewModel$resetPaging() {
            this.paging.pageNum = 0;
        },

        sort: function SparkleXrm_GridEditor_EntityDataViewModel$sort(sorting) {
            var col = new SparkleXrm.GridEditor.SortCol(sorting.sortCol.field, sorting.sortAsc);
            this.sortBy(col);
        },

        sortBy: function SparkleXrm_GridEditor_EntityDataViewModel$sortBy(col) {
            this._sortCols.clear();
            this._sortCols.add(col);
            if (this._lazyLoadPages) {
                this.clearPageCache();
                this.paging.extraInfo = '';
                this.refresh();
            }
            else {
                if (!col.ascending) {
                    this._data.reverse();
                }
                this._data.sort(function (a, b) {
                    return Xrm.Sdk.Entity.sortDelegate(col.attributeName, a, b);
                });
                if (!col.ascending) {
                    this._data.reverse();
                }
            }
        },

        getDirtyItems: function SparkleXrm_GridEditor_EntityDataViewModel$getDirtyItems() {
            var dirtyCollection = [];
            var $enum1 = ss.IEnumerator.getEnumerator(this._data);
            while ($enum1.moveNext()) {
                var item = $enum1.current;
                if (item != null && item.entityState !== Xrm.Sdk.EntityStates.unchanged) {
                    dirtyCollection.add(item);
                }
            }
            if (this.deleteData != null) {
                var $enum2 = ss.IEnumerator.getEnumerator(this.deleteData);
                while ($enum2.moveNext()) {
                    var item = $enum2.current;
                    if (item.entityState === Xrm.Sdk.EntityStates.deleted) {
                        dirtyCollection.add(item);
                    }
                }
            }
            return dirtyCollection;
        },

        contains: function SparkleXrm_GridEditor_EntityDataViewModel$contains(Item) {
            var $enum1 = ss.IEnumerator.getEnumerator(this._data);
            while ($enum1.moveNext()) {
                var value = $enum1.current;
                if (Item.logicalName === value.logicalName && Item.id === value.id) {
                    return true;
                }
            }
            return false;
        },

        preProcessResultsData: function SparkleXrm_GridEditor_EntityDataViewModel$preProcessResultsData(results) {
        },

        refresh: function SparkleXrm_GridEditor_EntityDataViewModel$refresh() {
            if (this._suspendRefresh) {
                return;
            }
            this._suspendRefresh = true;
            var firstRowIndex = this.paging.pageNum * this.paging.pageSize;
            var allDataDeleted = (!this.paging.totalRows) && (this.deleteData != null) && (this.deleteData.length > 0);
            if (this._data[firstRowIndex] == null && !allDataDeleted) {
                this.onDataLoading.notify(null, null, null);
                var orderBy = this.applySorting();
                var fetchPageSize;
                if (this._lazyLoadPages) {
                    fetchPageSize = this.paging.pageSize;
                }
                else {
                    fetchPageSize = 1000;
                    this.paging.extraInfo = '';
                    this.paging.pageNum = 0;
                    firstRowIndex = 0;
                }
                if (String.isNullOrEmpty(this._fetchXml)) {
                    return;
                }
                var parameterisedFetchXml = String.format(this._fetchXml, fetchPageSize, Xrm.Sdk.XmlHelper.encode(this.paging.extraInfo), this.paging.pageNum + 1, orderBy);
                Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple(parameterisedFetchXml, ss.Delegate.create(this, function (result) {
                    try {
                        var results = Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple(result, this._entityType);
                        this.preProcessResultsData(results);
                        var i = firstRowIndex;
                        if (this._lazyLoadPages) {
                            var $enum1 = ss.IEnumerator.getEnumerator(results.get_entities());
                            while ($enum1.moveNext()) {
                                var e = $enum1.current;
                                this._data[i] = e;
                                i = i + 1;
                            }
                        }
                        else {
                            this._data = results.get_entities().items();
                        }
                        var args = {};
                        args.from = 0;
                        args.to = this.paging.pageSize - 1;
                        this.paging.totalRows = results.get_totalRecordCount();
                        this.paging.extraInfo = results.get_pagingCookie();
                        this.paging.fromRecord = firstRowIndex + 1;
                        this.paging.totalPages = Math.ceil(results.get_totalRecordCount() / this.paging.pageSize);
                        this.paging.toRecord = Math.min(results.get_totalRecordCount(), firstRowIndex + this.paging.pageSize);
                        if (this._itemAdded) {
                            this.paging.totalRows++;
                            this.paging.toRecord++;
                            this._itemAdded = false;
                        }
                        this.calculatePaging(this.getPagingInfo());
                        this.onPagingInfoChanged.notify(this.paging, null, this);
                        this.onDataLoaded.notify(args, null, null);
                    }
                    catch (ex) {
                        this.errorMessage = ex.message;
                        var args = {};
                        args.errorMessage = ex.message;
                        this.onDataLoaded.notify(args, null, null);
                    }
                }));
            }
            else {
                var args = {};
                args.from = 0;
                args.to = this.paging.pageSize - 1;
                this.paging.fromRecord = firstRowIndex + 1;
                this.paging.toRecord = Math.min(this.paging.totalRows, firstRowIndex + this.paging.pageSize);
                this.calculatePaging(this.getPagingInfo());
                this.onPagingInfoChanged.notify(this.paging, null, this);
                this.onDataLoaded.notify(args, null, null);
                this._itemAdded = false;
            }
            this.onRowsChanged.notify(null, null, this);
            this._suspendRefresh = false;
        },

        newItemFactory: null,

        removeItem: function SparkleXrm_GridEditor_EntityDataViewModel$removeItem(id) {
            if (id != null) {
                if (this.deleteData == null) {
                    this.deleteData = [];
                }
                this.deleteData.add(id);
                this._data.remove(id);
                this.paging.totalRows--;
                this.setPagingOptions(this.getPagingInfo());
                this._selectedRows = null;
                this.raiseOnSelectedRowsChanged(null);
            }
        },

        addItem: function SparkleXrm_GridEditor_EntityDataViewModel$addItem(newItem) {
            if (!this.paging.totalPages) {
                this.paging.pageNum = 0;
                this.paging.totalPages = 1;
            }
            var item;
            if (this.newItemFactory == null) {
                item = new this._entityType();
                $.extend(item, newItem);
            }
            else {
                item = this.newItemFactory(newItem);
            }
            this._data[this.paging.totalRows] = (item);
            this._itemAdded = true;
            var lastPageSize = (this.paging.totalRows % this.paging.pageSize);
            if (lastPageSize === this.paging.pageSize) {
                this.paging.totalPages++;
                this.paging.pageNum = this.paging.totalPages - 1;
            }
            else {
                this.paging.totalRows++;
                this.paging.pageNum = this.getTotalPages();
            }
            item.raisePropertyChanged(null);
            this.setPagingOptions(this.getPagingInfo());
        },

        applySorting: function SparkleXrm_GridEditor_EntityDataViewModel$applySorting() {
            var orderBy = '';
            var $enum1 = ss.IEnumerator.getEnumerator(this._sortCols);
            while ($enum1.moveNext()) {
                var col = $enum1.current;
                orderBy = orderBy + String.format('<order attribute="{0}" descending="{1}" />', col.attributeName, (!col.ascending) ? 'true' : 'false');
            }
            return orderBy;
        },

        clearPageCache: function SparkleXrm_GridEditor_EntityDataViewModel$clearPageCache() {
            if (this.__onBeginClearPageCache$1 != null) {
                this.__onBeginClearPageCache$1();
            }
            this._data = [];
            this.paging.extraInfo = null;
        },

        get_data: function SparkleXrm_GridEditor_EntityDataViewModel$get_data() {
            return this._data;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmDateEditor

    SparkleXrm.GridEditor.XrmDateEditor = function SparkleXrm_GridEditor_XrmDateEditor(args) {
        SparkleXrm.GridEditor.XrmDateEditor.initializeBase(this, [args]);
        var self = this;
        this._container$1 = $("<div ><table class='inline-edit-container' cellspacing='0' cellpadding='0'><tr>" + "<td><INPUT type=text class='sparkle-input-inline' /></td>" + "<td class='lookup-button-td'><input type=button class='sparkle-imagestrip-inlineedit_calendar_icon' /></td></tr></table></div>");
        this._container$1.appendTo(this._args.container);
        this._input$1 = this._container$1.find('.sparkle-input-inline');
        this._input$1.bind('keydown.nav', ss.Delegate.create(this, function (e) {
            if (!this._calendarOpen$1 && (e.which === 38 || e.which === 40) && e.ctrlKey) {
                this._input$1.datepicker('show');
                e.stopImmediatePropagation();
            }
            else if (this._calendarOpen$1 && e.which === 13) {
                e.preventDefault();
            }
        }));
        var selectButton = this._container$1.find('.sparkle-imagestrip-inlineedit_calendar_icon');
        this._input$1.focus().select();
        var options2 = {};
        options2.showOtherMonths = true;
        options2.showOn = '';
        options2.firstDay = (Xrm.Sdk.OrganizationServiceProxy.organizationSettings != null) ? Xrm.Sdk.OrganizationServiceProxy.organizationSettings.weekstartdaycode.value : 0;
        options2.beforeShow = ss.Delegate.create(this, function () {
            this._calendarOpen$1 = true;
        });
        options2.onClose = ss.Delegate.create(this, function () {
            this._calendarOpen$1 = false;
            this._selectedValue$1 = this._getSelectedValue$1();
        });
        options2.onSelect = ss.Delegate.create(this, function (dateString, instance) {
            this.focus();
        });
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            this._dateFormat$1 = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring;
        }
        options2.dateFormat = this._dateFormat$1;
        this._input$1.datepicker(options2);
        selectButton.click(ss.Delegate.create(this, function (e) {
            this._input$1.datepicker('show');
            this.focus();
        }));
    }
    SparkleXrm.GridEditor.XrmDateEditor.formatterDateOnly = function SparkleXrm_GridEditor_XrmDateEditor$formatterDateOnly(row, cell, value, columnDef, dataContext) {
        var dateFormat = columnDef.options;
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            dateFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring;
        }
        var dateValue = value;
        return Xrm.Sdk.DateTimeEx.formatDateSpecific(dateValue, dateFormat);
    }
    SparkleXrm.GridEditor.XrmDateEditor.formatterDateAndTime = function SparkleXrm_GridEditor_XrmDateEditor$formatterDateAndTime(row, cell, value, columnDef, dataContext) {
        var dateFormat = columnDef.options;
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            dateFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring + ' ' + Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
        }
        var dateValue = value;
        return Xrm.Sdk.DateTimeEx.formatDateSpecific(dateValue, dateFormat);
    }
    SparkleXrm.GridEditor.XrmDateEditor.bindColumn = function SparkleXrm_GridEditor_XrmDateEditor$bindColumn(column, dateOnly) {
        column.editor = SparkleXrm.GridEditor.XrmDateEditor.crmDateEditor;
        column.formatter = SparkleXrm.GridEditor.XrmDateEditor.formatterDateOnly;
        return column;
    }
    SparkleXrm.GridEditor.XrmDateEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmDateEditor$bindReadOnlyColumn(column, dateOnly) {
        column.formatter = SparkleXrm.GridEditor.XrmDateEditor.formatterDateOnly;
        return column;
    }
    SparkleXrm.GridEditor.XrmDateEditor.prototype = {
        _input$1: null,
        _container$1: null,
        _defaultValue$1: null,
        _calendarOpen$1: false,
        _selectedValue$1: null,
        _dateFormat$1: 'dd/mm/yy',

        destroy: function SparkleXrm_GridEditor_XrmDateEditor$destroy() {
            ($.datepicker.dpDiv).stop(true, true);
            this._input$1.datepicker('hide');
            this._input$1.datepicker('destroy');
            this.hide();
            this._container$1.remove();
        },

        show: function SparkleXrm_GridEditor_XrmDateEditor$show() {
            if (this._calendarOpen$1) {
                ($.datepicker.dpDiv).stop(true, true).show();
            }
        },

        hide: function SparkleXrm_GridEditor_XrmDateEditor$hide() {
            if (this._calendarOpen$1) {
                ($.datepicker.dpDiv).stop(true, true).hide();
            }
        },

        position: function SparkleXrm_GridEditor_XrmDateEditor$position(position) {
            if (!this._calendarOpen$1) {
                return;
            }
            ($.datepicker.dpDiv).css('top', (position.top + 30).toString()).css('left', position.left.toString());
        },

        focus: function SparkleXrm_GridEditor_XrmDateEditor$focus() {
            this._input$1.focus();
        },

        loadValue: function SparkleXrm_GridEditor_XrmDateEditor$loadValue(item) {
            var currentValue = item[this._args.column.field];
            this._defaultValue$1 = (currentValue != null) ? currentValue : null;
            var valueFormated = (this._defaultValue$1 != null) ? this._defaultValue$1.toLocaleDateString() : '';
            if (this._args.column.formatter != null) {
                valueFormated = this._args.column.formatter(0, 0, this._defaultValue$1, this._args.column, null);
            }
            this._setSelectedValue$1(this._defaultValue$1);
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmDateEditor$serializeValue() {
            return this._getSelectedValue$1();
        },

        applyValue: function SparkleXrm_GridEditor_XrmDateEditor$applyValue(item, state) {
            var previousValue = item[this._args.column.field];
            var newValue = state;
            Xrm.Sdk.DateTimeEx.setTime(newValue, previousValue);
            item[this._args.column.field] = newValue;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmDateEditor$isValueChanged() {
            var selectedValue = this._getSelectedValue$1();
            var selected = (selectedValue == null) ? '' : selectedValue.toString();
            var defaultValueString = (this._defaultValue$1 == null) ? '' : this._defaultValue$1.toString();
            return (selected !== defaultValueString);
        },

        _getSelectedValue$1: function SparkleXrm_GridEditor_XrmDateEditor$_getSelectedValue$1() {
            var selectedValue = null;
            if (!this._calendarOpen$1) {
                selectedValue = Xrm.Sdk.DateTimeEx.parseDateSpecific(this._input$1.val(), this._dateFormat$1);
            }
            else {
                selectedValue = this._input$1.datepicker('getDate');
            }
            return selectedValue;
        },

        _setSelectedValue$1: function SparkleXrm_GridEditor_XrmDateEditor$_setSelectedValue$1(date) {
            this._input$1.datepicker('setDate', date);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmDurationEditor

    SparkleXrm.GridEditor.XrmDurationEditor = function SparkleXrm_GridEditor_XrmDurationEditor(args) {
        SparkleXrm.GridEditor.XrmDurationEditor.initializeBase(this, [args]);
        this._args = args;
        this._input$1 = $("<INPUT type=text class='editor-text' />");
        this._input$1.appendTo(this._args.container);
        this.focus();
    }
    SparkleXrm.GridEditor.XrmDurationEditor.formatter = function SparkleXrm_GridEditor_XrmDurationEditor$formatter(row, cell, value, columnDef, dataContext) {
        var durationValue = value;
        return Xrm.Sdk.DateTimeEx.formatDuration(durationValue);
    }
    SparkleXrm.GridEditor.XrmDurationEditor.bindColumn = function SparkleXrm_GridEditor_XrmDurationEditor$bindColumn(column) {
        column.editor = SparkleXrm.GridEditor.XrmDurationEditor.durationEditor;
        column.formatter = SparkleXrm.GridEditor.XrmDurationEditor.formatter;
        return column;
    }
    SparkleXrm.GridEditor.XrmDurationEditor.prototype = {
        _input$1: null,
        _originalValue$1: null,

        destroy: function SparkleXrm_GridEditor_XrmDurationEditor$destroy() {
            this._input$1.remove();
        },

        focus: function SparkleXrm_GridEditor_XrmDurationEditor$focus() {
            this._input$1.focus().select();
        },

        loadValue: function SparkleXrm_GridEditor_XrmDurationEditor$loadValue(item) {
            var value = item[this._args.column.field];
            this._input$1.val(Xrm.Sdk.DateTimeEx.formatDuration(value));
            this._originalValue$1 = value;
            this.focus();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmDurationEditor$serializeValue() {
            var durationString = this._input$1.val();
            if (!durationString) {
                return null;
            }
            var duration = Xrm.Sdk.DateTimeEx.parseDuration(durationString);
            return duration;
        },

        applyValue: function SparkleXrm_GridEditor_XrmDurationEditor$applyValue(item, state) {
            item[this._args.column.field] = state;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmDurationEditor$isValueChanged() {
            var durationString = this._input$1.val();
            var originalDurationString = Xrm.Sdk.DateTimeEx.formatDuration(this._originalValue$1);
            return originalDurationString !== durationString;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmLookupEditorOptions

    SparkleXrm.GridEditor.XrmLookupEditorOptions = function SparkleXrm_GridEditor_XrmLookupEditorOptions() {
    }
    SparkleXrm.GridEditor.XrmLookupEditorOptions.prototype = {
        queryCommand: null,
        nameAttribute: null,
        idAttribute: null,
        typeCodeAttribute: null,
        columns: null,
        showImage: true
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmLookupEditor

    SparkleXrm.GridEditor.XrmLookupEditor = function SparkleXrm_GridEditor_XrmLookupEditor(args) {
        this._value$1 = new Xrm.Sdk.EntityReference(null, null, '');
        this._originalValue$1 = new Xrm.Sdk.EntityReference(null, null, '');
        SparkleXrm.GridEditor.XrmLookupEditor.initializeBase(this, [args]);
        var self = this;
        this._args = args;
        this._container$1 = $("<div ><table class='inline-edit-container' cellspacing='0' cellpadding='0'><tr><td><INPUT type=text class='sparkle-input-inline' /></td><td class='lookup-button-td'><input type=button class='sparkle-lookup-button' /></td></tr></table></div>");
        this._container$1.appendTo(this._args.container);
        var inputField = this._container$1.find('.sparkle-input-inline');
        var selectButton = this._container$1.find('.sparkle-lookup-button');
        this._input$1 = inputField;
        this._input$1.focus().select();
        this._autoComplete$1 = inputField;
        var options = {};
        options.position = { collision: 'fit' };
        options.minLength = 100000;
        options.delay = 0;
        var justSelected = false;
        options.select = ss.Delegate.create(this, function (e, uiEvent) {
            if (this._value$1 == null) {
                this._value$1 = new Xrm.Sdk.EntityReference(null, null, null);
            }
            var item = uiEvent.item;
            var value = item.label;
            this._input$1.val(value);
            this._value$1.id = (item.value).id;
            this._value$1.name = (item.value).name;
            this._value$1.logicalName = (item.value).logicalName;
            justSelected = true;
            return false;;
        });
        options.focus = function (e, uiEvent) {
            return false;;
        };
        options.open = function (e, o) {
            self._searchOpen$1 = true;
        };
        options.close = function (e, o) {
            self._searchOpen$1 = false;
        };
        var editorOptions = args.column.options;
        var columns = editorOptions.nameAttribute.split(',');
        if (columns.length > 1) {
            editorOptions.columns = columns;
            editorOptions.nameAttribute = columns[0];
        }
        var queryDelegate = ss.Delegate.create(this, function (request, response) {
            editorOptions.queryCommand(request.term, ss.Delegate.create(this, function (fetchResult) {
                var results = new Array(fetchResult.get_entities().get_count());
                for (var i = 0; i < fetchResult.get_entities().get_count() ; i++) {
                    results[i] = {};
                    results[i].label = fetchResult.get_entities().get_item(i).getAttributeValue(editorOptions.nameAttribute);
                    var id = new Xrm.Sdk.EntityReference(null, null, null);
                    id.name = results[i].label;
                    id.logicalName = fetchResult.get_entities().get_item(i).logicalName;
                    id.id = fetchResult.get_entities().get_item(i).getAttributeValue(editorOptions.idAttribute);
                    results[i].value = id;
                    SparkleXrm.CustomBinding.XrmLookupBinding._getExtraColumns(editorOptions.columns, fetchResult, results, i);
                    var typeCodeName = fetchResult.get_entities().get_item(i).logicalName;
                    if (!String.isNullOrEmpty(editorOptions.typeCodeAttribute)) {
                        typeCodeName = fetchResult.get_entities().get_item(i).getAttributeValue(editorOptions.typeCodeAttribute).toString();
                    }
                    if (editorOptions.showImage) {
                        results[i].image = Xrm.Sdk.Metadata.MetadataCache.getSmallIconUrl(typeCodeName);
                    }
                }
                response(results);
                var disableOption = {};
                disableOption.minLength = 100000;
                this._autoComplete$1.autocomplete(disableOption);
            }));
        });
        options.source = queryDelegate;
        inputField = this._autoComplete$1.autocomplete(options);
        (inputField.data('ui-autocomplete'))._renderItem = function (ul, item) {
            var itemHtml = "<a class='sparkle-menu-item'>";
            if (item.image != null) {
                itemHtml += "<span class='sparkle-menu-item-img'><img src='" + item.image + "'/></span>";
            }
            itemHtml += "<span class='sparkle-menu-item-label'>" + item.label + '</span><br/>';
            if (item.columnValues != null && item.columnValues.length > 0) {
                var $enum1 = ss.IEnumerator.getEnumerator(item.columnValues);
                while ($enum1.moveNext()) {
                    var value = $enum1.current;
                    itemHtml += "<span class='sparkle-menu-item-moreinfo'>" + value + '</span>';
                }
            }
            itemHtml += '</a>';
            return $('<li>').append(itemHtml).appendTo(ul);
        };
        selectButton.click(ss.Delegate.create(this, function (e) {
            var enableOption = {};
            enableOption.minLength = 0;
            this._autoComplete$1.autocomplete(enableOption);
            this._autoComplete$1.autocomplete('search', inputField.val());
        }));
        this._input$1.keydown(ss.Delegate.create(this, function (e) {
            if (e.which === 13 && !justSelected) {
                if (inputField.val().length > 0) {
                    selectButton.click();
                }
                else {
                    this._value$1 = null;
                    return;
                }
            }
            else if (e.which === 13) {
                return;
            }
            if (self._searchOpen$1) {
                switch (e.which) {
                    case 13:
                    case 38:
                    case 40:
                        e.preventDefault();
                        e.stopPropagation();
                        break;
                }
            }
            else {
                switch (e.which) {
                    case 13:
                        e.preventDefault();
                        e.stopPropagation();
                        break;
                }
            }
            justSelected = false;
        }));
    }
    SparkleXrm.GridEditor.XrmLookupEditor.formatter = function SparkleXrm_GridEditor_XrmLookupEditor$formatter(row, cell, value, columnDef, dataContext) {
        if (value != null) {
            var entityRef = value;
            return "<a href='#' class='sparkle-lookup-link' entityid='" + entityRef.id + "' typename='" + entityRef.logicalName + "'>" + Xrm.Sdk.XmlHelper.encode(entityRef.name) + '</a>';
        }
        else {
            return '';
        }
    }
    SparkleXrm.GridEditor.XrmLookupEditor.bindColumn = function SparkleXrm_GridEditor_XrmLookupEditor$bindColumn(column, queryCommand, idAttribute, nameAttribute, typeCodeAttribute) {
        column.editor = SparkleXrm.GridEditor.XrmLookupEditor.lookupEditor;
        var currencyLookupOptions = new SparkleXrm.GridEditor.XrmLookupEditorOptions();
        currencyLookupOptions.queryCommand = queryCommand;
        currencyLookupOptions.idAttribute = idAttribute;
        currencyLookupOptions.nameAttribute = nameAttribute;
        currencyLookupOptions.typeCodeAttribute = typeCodeAttribute;
        column.options = currencyLookupOptions;
        column.formatter = SparkleXrm.GridEditor.XrmLookupEditor.formatter;
        return column;
    }
    SparkleXrm.GridEditor.XrmLookupEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmLookupEditor$bindReadOnlyColumn(column, typeCodeAttribute) {
        var currencyLookupOptions = new SparkleXrm.GridEditor.XrmLookupEditorOptions();
        currencyLookupOptions.typeCodeAttribute = typeCodeAttribute;
        column.options = currencyLookupOptions;
        column.formatter = SparkleXrm.GridEditor.XrmLookupEditor.formatter;
        return column;
    }
    SparkleXrm.GridEditor.XrmLookupEditor.prototype = {
        _input$1: null,
        _container$1: null,
        _autoComplete$1: null,
        _searchOpen$1: false,

        destroy: function SparkleXrm_GridEditor_XrmLookupEditor$destroy() {
            this._input$1.autocomplete('close');
            this._input$1.autocomplete('destroy');
            this._container$1.remove();
            this._autoComplete$1.remove();
            this._autoComplete$1 = null;
        },

        show: function SparkleXrm_GridEditor_XrmLookupEditor$show() {
        },

        hide: function SparkleXrm_GridEditor_XrmLookupEditor$hide() {
        },

        position: function SparkleXrm_GridEditor_XrmLookupEditor$position(position) {
        },

        focus: function SparkleXrm_GridEditor_XrmLookupEditor$focus() {
            this._input$1.focus();
        },

        loadValue: function SparkleXrm_GridEditor_XrmLookupEditor$loadValue(item) {
            this._originalValue$1 = item[this._args.column.field];
            if (this._originalValue$1 != null) {
                this._value$1 = new Xrm.Sdk.EntityReference(this._originalValue$1.id, this._originalValue$1.logicalName, this._originalValue$1.name);
                this._input$1.val(this._originalValue$1.name);
            }
        },

        serializeValue: function SparkleXrm_GridEditor_XrmLookupEditor$serializeValue() {
            if (this._value$1 != null && this._value$1.id == null) {
                return null;
            }
            else {
                return this._value$1;
            }
        },

        applyValue: function SparkleXrm_GridEditor_XrmLookupEditor$applyValue(item, state) {
            item[this._args.column.field] = state;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmLookupEditor$isValueChanged() {
            if (this._originalValue$1 != null && this._value$1 != null) {
                var lvalue = (this._originalValue$1.id != null) ? this._originalValue$1.id.toString() : '';
                var rvalue = (this._value$1.id != null) ? this._value$1.id.toString() : '';
                return lvalue !== rvalue;
            }
            else {
                return ((this._originalValue$1 != null) || (this._value$1 != null));
            }
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.CrmPagerControl

    SparkleXrm.GridEditor.CrmPagerControl = function SparkleXrm_GridEditor_CrmPagerControl(dataView, grid, container) {
        this._dataView = dataView;
        this._grid = grid;
        this._container = container;
        $(ss.Delegate.create(this, function () {
            this.init();
        }));
    }
    SparkleXrm.GridEditor.CrmPagerControl.prototype = {
        _dataView: null,
        _grid: null,
        _container: null,

        init: function SparkleXrm_GridEditor_CrmPagerControl$init() {
            this._dataView.onPagingInfoChanged.subscribe(ss.Delegate.create(this, function (e, pagingInfo) {
                this.updatePager(pagingInfo);
            }));
            this._dataView.add_onSelectedRowsChanged(ss.Delegate.create(this, this._dataView_OnSelectedRowsChanged));
            this.constructPagerUI();
            this.updatePager(this._dataView.getPagingInfo());
        },

        _dataView_OnSelectedRowsChanged: function SparkleXrm_GridEditor_CrmPagerControl$_dataView_OnSelectedRowsChanged() {
            this.updatePager(this._dataView.getPagingInfo());
        },

        getNavState: function SparkleXrm_GridEditor_CrmPagerControl$getNavState() {
            var cannotLeaveEditMode = !Slick.GlobalEditorLock.commitCurrentEdit();
            var pagingInfo = this._dataView.getPagingInfo();
            var lastPage = pagingInfo.totalPages - 1;
            var info = {};
            info.canGotoFirst = !cannotLeaveEditMode && !!pagingInfo.pageSize && pagingInfo.pageNum > 0;
            info.canGotoLast = !cannotLeaveEditMode && !!pagingInfo.pageSize && pagingInfo.pageNum !== lastPage;
            info.canGotoPrev = !cannotLeaveEditMode && !!pagingInfo.pageSize && pagingInfo.pageNum > 0;
            info.canGotoNext = !cannotLeaveEditMode && !!pagingInfo.pageSize && pagingInfo.pageNum < lastPage;
            info.pagingInfo = pagingInfo;
            return info;
        },

        setPageSize: function SparkleXrm_GridEditor_CrmPagerControl$setPageSize(n) {
            this._dataView.setRefreshHints({ isFilterUnchanged: true });
            var paging = {};
            paging.pageSize = n;
            this._dataView.setPagingOptions(paging);
        },

        gotoFirst: function SparkleXrm_GridEditor_CrmPagerControl$gotoFirst(e) {
            if (this.getNavState().canGotoFirst) {
                var paging = {};
                paging.pageNum = 0;
                this._dataView.setPagingOptions(paging);
            }
        },

        gotoLast: function SparkleXrm_GridEditor_CrmPagerControl$gotoLast(e) {
            var state = this.getNavState();
            if (state.canGotoLast) {
                var paging = {};
                paging.pageNum = state.pagingInfo.totalPages - 1;
                this._dataView.setPagingOptions(paging);
            }
        },

        gotoPrev: function SparkleXrm_GridEditor_CrmPagerControl$gotoPrev(e) {
            var state = this.getNavState();
            if (state.canGotoPrev) {
                var paging = {};
                paging.pageNum = state.pagingInfo.pageNum - 1;
                this._dataView.setPagingOptions(paging);
                this._grid.scrollRowToTop(0);
            }
        },

        gotoNext: function SparkleXrm_GridEditor_CrmPagerControl$gotoNext(e) {
            var state = this.getNavState();
            if (state.canGotoNext) {
                var paging = {};
                paging.pageNum = state.pagingInfo.pageNum + 1;
                this._dataView.setPagingOptions(paging);
                this._grid.scrollRowToTop(0);
            }
        },

        constructPagerUI: function SparkleXrm_GridEditor_CrmPagerControl$constructPagerUI() {
            this._container.empty();
            var pager = $("<table cellspacing='0' cellpadding='0' class='sparkle-grid-status'><tbody><tr>" + "<td class='sparkle-grid-status-label'>1 - 1 of 1&nbsp;(0 selected)</td>" + "<td class='sparkle-grid-status-paging'>" + "<img src='../../sparkle_/css/images/transparent_spacer.gif' class='sparkle-grid-paging-first'>" + "<img src='../../sparkle_/css/images/transparent_spacer.gif' class='sparkle-grid-paging-back'>" + "<span class='sparkle-grid-status-paging-page'>Page 1</span>" + "<img src='../../sparkle_/css/images/transparent_spacer.gif' class='sparkle-grid-paging-next'>" + '&nbsp;</td></tr></tbody></table>');
            var firstButton = pager.find('.sparkle-grid-paging-first');
            var backButton = pager.find('.sparkle-grid-paging-back');
            var nextButton = pager.find('.sparkle-grid-paging-next');
            var label = pager.find('.sparkle-grid-status-label');
            var pageInfo = pager.find('.sparkle-grid-status-paging-page');
            this._container.append(pager);
            firstButton.click(ss.Delegate.create(this, this.gotoFirst));
            backButton.click(ss.Delegate.create(this, this.gotoPrev));
            nextButton.click(ss.Delegate.create(this, this.gotoNext));
        },

        updatePager: function SparkleXrm_GridEditor_CrmPagerControl$updatePager(pagingInfo) {
            var state = this.getNavState();
            var firstButton = this._container.find('.sparkle-grid-paging-first');
            var backButton = this._container.find('.sparkle-grid-paging-back');
            var nextButton = this._container.find('.sparkle-grid-paging-next');
            var label = this._container.find('.sparkle-grid-status-label');
            var pageInfo = this._container.find('.sparkle-grid-status-paging-page');
            var status = this._container.find('.sparkle-grid-status-label');
            if (state.canGotoFirst) {
                firstButton.removeClass('disabled');
            }
            else {
                firstButton.addClass('disabled');
            }
            if (state.canGotoPrev) {
                backButton.removeClass('disabled');
            }
            else {
                backButton.addClass('disabled');
            }
            if (state.canGotoNext) {
                nextButton.removeClass('disabled');
            }
            else {
                nextButton.addClass('disabled');
            }
            status.text(String.format('{0} - {1} of {2} ({3} selected)', pagingInfo.fromRecord, pagingInfo.toRecord, pagingInfo.totalRows, this._dataView.getSelectedRows().length.toString()));
            pageInfo.text(String.format('Page {0}', pagingInfo.pageNum + 1));
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmTextEditor

    SparkleXrm.GridEditor.XrmTextEditor = function SparkleXrm_GridEditor_XrmTextEditor(args) {
        SparkleXrm.GridEditor.XrmTextEditor.initializeBase(this, [args]);
        this._input$1 = $("<INPUT type=text class='editor-text' />").appendTo(args.container).bind('keydown.nav', function (e) {
            if (e.which === 37 || e.which === 39) {
                e.stopImmediatePropagation();
            }
        }).focus().select();
    }
    SparkleXrm.GridEditor.XrmTextEditor.bindColumn = function SparkleXrm_GridEditor_XrmTextEditor$bindColumn(column) {
        column.editor = SparkleXrm.GridEditor.XrmTextEditor.textEditor;
        column.formatter = SparkleXrm.GridEditor.XrmTextEditor.formatter;
        return column;
    }
    SparkleXrm.GridEditor.XrmTextEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmTextEditor$bindReadOnlyColumn(column) {
        column.formatter = SparkleXrm.GridEditor.XrmTextEditor.formatter;
        return column;
    }
    SparkleXrm.GridEditor.XrmTextEditor.formatter = function SparkleXrm_GridEditor_XrmTextEditor$formatter(row, cell, value, columnDef, dataContext) {
        if (value != null) {
            return value;
        }
        else {
            return '';
        }
    }
    SparkleXrm.GridEditor.XrmTextEditor.prototype = {
        _input$1: null,
        _defaultValue$1: null,

        destroy: function SparkleXrm_GridEditor_XrmTextEditor$destroy() {
            SparkleXrm.GridEditor.XrmTextEditor.callBaseMethod(this, 'destroy');
            this._input$1.remove();
        },

        focus: function SparkleXrm_GridEditor_XrmTextEditor$focus() {
            SparkleXrm.GridEditor.XrmTextEditor.callBaseMethod(this, 'focus');
            this._input$1.focus();
        },

        getValue: function SparkleXrm_GridEditor_XrmTextEditor$getValue() {
            return this._input$1.val();
        },

        setValue: function SparkleXrm_GridEditor_XrmTextEditor$setValue(value) {
            this._input$1.val(value);
        },

        loadValue: function SparkleXrm_GridEditor_XrmTextEditor$loadValue(item) {
            this._defaultValue$1 = item[this._args.column.field];
            if (this._defaultValue$1 == null) {
                this._defaultValue$1 = '';
            }
            this._input$1.val(this._defaultValue$1);
            this._input$1[0].setAttribute('defaultValue', this._defaultValue$1);
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmTextEditor$serializeValue() {
            return this._input$1.val();
        },

        applyValue: function SparkleXrm_GridEditor_XrmTextEditor$applyValue(item, state) {
            item[this._args.column.field] = state;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmTextEditor$isValueChanged() {
            return (!(!this._input$1.val() && this._defaultValue$1 == null)) && (this._input$1.val() !== this._defaultValue$1);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmTimeEditor

    SparkleXrm.GridEditor.XrmTimeEditor = function SparkleXrm_GridEditor_XrmTimeEditor(args) {
        SparkleXrm.GridEditor.XrmTimeEditor.initializeBase(this, [args]);
        var justSelected = false;
        var self = this;
        if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
            this._formatString$1 = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
        }
        this._container$1 = $("<div ><table class='inline-edit-container' cellspacing='0' cellpadding='0'><tr><td><INPUT type=text class='sparkle-input-inline' /></td><td class='lookup-button-td'><input type=button class='autocompleteButton' /></td></tr></table></div>");
        this._container$1.appendTo(this._args.container);
        var inputField = this._container$1.find('.sparkle-input-inline');
        this._input$1 = inputField;
        this._input$1.focus().select();
        var timeFormatString = this._formatString$1;
        var options = SparkleXrm.GridEditor.XrmTimeEditor.getTimePickerAutoCompleteOptions(timeFormatString);
        options.select = function (e, uiEvent) {
            justSelected = true;
        };
        options.open = function (e, o) {
            self._searchOpen$1 = true;
        };
        options.close = function (e, o) {
            self._searchOpen$1 = false;
        };
        inputField = inputField.autocomplete(options);
        var selectButton = this._container$1.find('.autocompleteButton');
        selectButton.click(function (e) {
            inputField.autocomplete('search', '');
        });
        this._input$1.keydown(function (e) {
            if (self._searchOpen$1) {
                switch (e.which) {
                    case 13:
                    case 38:
                    case 40:
                        e.preventDefault();
                        e.stopPropagation();
                        break;
                }
            }
            justSelected = false;
        });
    }
    SparkleXrm.GridEditor.XrmTimeEditor.formatter = function SparkleXrm_GridEditor_XrmTimeEditor$formatter(row, cell, value, columnDef, dataContext) {
        var dateValue = value;
        return SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1(dateValue, columnDef.options);
    }
    SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1 = function SparkleXrm_GridEditor_XrmTimeEditor$_formatTime$1(dateValue, format) {
        var timeFormatted = '';
        if (dateValue != null) {
            timeFormatted = dateValue.format(format);
        }
        return timeFormatted;
    }
    SparkleXrm.GridEditor.XrmTimeEditor.getTimePickerAutoCompleteOptions = function SparkleXrm_GridEditor_XrmTimeEditor$getTimePickerAutoCompleteOptions(timeFormatString) {
        var options = {};
        var timeOptions = new Array(48);
        var autoCompleteDate = Date.parseDate('2000-01-01T00:00:00');
        for (var i = 0; i < 48; i++) {
            timeOptions[i] = SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1(autoCompleteDate, timeFormatString);
            autoCompleteDate = Xrm.Sdk.DateTimeEx.dateAdd('minutes', 30, autoCompleteDate);
        }
        options.source = timeOptions;
        options.minLength = 0;
        options.delay = 0;
        options.position = { collision: 'fit' };
        return options;
    }
    SparkleXrm.GridEditor.XrmTimeEditor.bindColumn = function SparkleXrm_GridEditor_XrmTimeEditor$bindColumn(column) {
        column.editor = SparkleXrm.GridEditor.XrmTimeEditor.timeEditor;
        column.formatter = SparkleXrm.GridEditor.XrmTimeEditor.formatter;
        column.options = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
        return column;
    }
    SparkleXrm.GridEditor.XrmTimeEditor.bindReadOnlyColumn = function SparkleXrm_GridEditor_XrmTimeEditor$bindReadOnlyColumn(column) {
        column.formatter = SparkleXrm.GridEditor.XrmTimeEditor.formatter;
        column.options = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
        return column;
    }
    SparkleXrm.GridEditor.XrmTimeEditor.prototype = {
        _input$1: null,
        _container$1: null,
        _searchOpen$1: false,
        _dateTimeValue$1: null,
        _originalDateTimeValue$1: null,
        _formatString$1: 'h:mm tt',

        destroy: function SparkleXrm_GridEditor_XrmTimeEditor$destroy() {
            this._input$1.autocomplete('close');
            this._input$1.autocomplete('destroy');
            this._container$1.remove();
        },

        show: function SparkleXrm_GridEditor_XrmTimeEditor$show() {
        },

        hide: function SparkleXrm_GridEditor_XrmTimeEditor$hide() {
        },

        position: function SparkleXrm_GridEditor_XrmTimeEditor$position(position) {
        },

        focus: function SparkleXrm_GridEditor_XrmTimeEditor$focus() {
            this._input$1.focus();
        },

        loadValue: function SparkleXrm_GridEditor_XrmTimeEditor$loadValue(item) {
            SparkleXrm.GridEditor.XrmTimeEditor.callBaseMethod(this, 'loadValue', [item]);
            this._dateTimeValue$1 = item[this._args.column.field];
            this._originalDateTimeValue$1 = this._dateTimeValue$1;
            this._input$1.val(SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1(this._dateTimeValue$1, this._formatString$1));
            this._input$1.select();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmTimeEditor$serializeValue() {
            var timeString = this._input$1.val();
            if (!timeString) {
                return null;
            }
            var currentDate = Xrm.Sdk.DateTimeEx.addTimeToDate(this._dateTimeValue$1, timeString);
            return currentDate;
        },

        applyValue: function SparkleXrm_GridEditor_XrmTimeEditor$applyValue(item, state) {
            item[this._args.column.field] = state;
            this.raiseOnChange(item);
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmTimeEditor$isValueChanged() {
            var timeString = this._input$1.val();
            var originalDateString = SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1(this._originalDateTimeValue$1, this._formatString$1);
            var newDateString = '';
            if (!!timeString) {
                var currentDate = Xrm.Sdk.DateTimeEx.addTimeToDate(this._dateTimeValue$1, timeString);
                newDateString = SparkleXrm.GridEditor.XrmTimeEditor._formatTime$1(currentDate, this._formatString$1);
            }
            return originalDateString !== newDateString;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.DataViewBase

    SparkleXrm.GridEditor.DataViewBase = function SparkleXrm_GridEditor_DataViewBase() {
        this.onRowsChanged = new Slick.Event();
        this.onPagingInfoChanged = new Slick.Event();
        this.onDataLoading = new Slick.Event();
        this.onDataLoaded = new Slick.Event();
        this.paging = {};
        this.validationBinder = new SparkleXrm.DataViewValidationBinder();
    }
    SparkleXrm.GridEditor.DataViewBase.rangesToRows = function SparkleXrm_GridEditor_DataViewBase$rangesToRows(ranges) {
        var rows = [];
        for (var i = 0; i < ranges.length; i++) {
            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {
                rows.add(j);
            }
        }
        return rows;
    }
    SparkleXrm.GridEditor.DataViewBase.prototype = {

        add_onGetItemMetaData: function SparkleXrm_GridEditor_DataViewBase$add_onGetItemMetaData(value) {
            this.__onGetItemMetaData = ss.Delegate.combine(this.__onGetItemMetaData, value);
        },
        remove_onGetItemMetaData: function SparkleXrm_GridEditor_DataViewBase$remove_onGetItemMetaData(value) {
            this.__onGetItemMetaData = ss.Delegate.remove(this.__onGetItemMetaData, value);
        },

        __onGetItemMetaData: null,

        add_onSelectedRowsChanged: function SparkleXrm_GridEditor_DataViewBase$add_onSelectedRowsChanged(value) {
            this.__onSelectedRowsChanged = ss.Delegate.combine(this.__onSelectedRowsChanged, value);
        },
        remove_onSelectedRowsChanged: function SparkleXrm_GridEditor_DataViewBase$remove_onSelectedRowsChanged(value) {
            this.__onSelectedRowsChanged = ss.Delegate.remove(this.__onSelectedRowsChanged, value);
        },

        __onSelectedRowsChanged: null,
        _selectedRows: null,

        raiseOnSelectedRowsChanged: function SparkleXrm_GridEditor_DataViewBase$raiseOnSelectedRowsChanged(rows) {
            this._selectedRows = rows;
            if (this.__onSelectedRowsChanged != null) {
                this.__onSelectedRowsChanged();
            }
        },

        getSelectedRows: function SparkleXrm_GridEditor_DataViewBase$getSelectedRows() {
            if (this._selectedRows == null) {
                this._selectedRows = new Array(0);
            }
            return this._selectedRows;
        },

        raisePropertyChanged: function SparkleXrm_GridEditor_DataViewBase$raisePropertyChanged(propertyName) {
            this.onRowsChanged.notify(null, null, null);
        },

        getPagingInfo: function SparkleXrm_GridEditor_DataViewBase$getPagingInfo() {
            return this.paging;
        },

        calculatePaging: function SparkleXrm_GridEditor_DataViewBase$calculatePaging(p) {
            if (p.pageSize != null) {
                this.paging.pageSize = p.pageSize;
                this.paging.pageNum = (!!this.paging.pageSize) ? Math.min(this.paging.pageNum, Math.max(0, Math.ceil(this.paging.totalRows / this.paging.pageSize) - 1)) : 0;
            }
            if (p.pageNum != null) {
                this.paging.pageNum = Math.min(p.pageNum, Math.max(0, Math.ceil(this.paging.totalRows / this.paging.pageSize) - 1));
            }
            this.paging.totalPages = this.getTotalPages();
            this.paging.fromRecord = (this.paging.pageNum * this.paging.pageSize) + 1;
            this.paging.toRecord = Math.min(this.paging.totalRows, this.paging.fromRecord + this.paging.pageSize - 1);
        },

        setPagingOptions: function SparkleXrm_GridEditor_DataViewBase$setPagingOptions(p) {
            this.calculatePaging(p);
            this._selectedRows = null;
            this.raiseOnSelectedRowsChanged(null);
            this.onPagingInfoChanged.notify(this.paging, null, this);
            this.refresh();
        },

        getTotalPages: function SparkleXrm_GridEditor_DataViewBase$getTotalPages() {
            return Math.ceil(this.paging.totalRows / this.paging.pageSize);
        },

        refresh: function SparkleXrm_GridEditor_DataViewBase$refresh() {
        },

        reset: function SparkleXrm_GridEditor_DataViewBase$reset() {
        },

        insertItem: function SparkleXrm_GridEditor_DataViewBase$insertItem(insertBefore, item) {
        },

        addItem: function SparkleXrm_GridEditor_DataViewBase$addItem(item) {
        },

        removeItem: function SparkleXrm_GridEditor_DataViewBase$removeItem(id) {
        },

        getLength: function SparkleXrm_GridEditor_DataViewBase$getLength() {
            return Math.min(this.paging.pageSize, this.paging.toRecord - this.paging.fromRecord + 1);
        },

        getItem: function SparkleXrm_GridEditor_DataViewBase$getItem(index) {
            return null;
        },

        getItemMetadata: function SparkleXrm_GridEditor_DataViewBase$getItemMetadata(i) {
            if (this.__onGetItemMetaData != null) {
                return this.__onGetItemMetaData(this.getItem(i));
            }
            else {
                return null;
            }
        },

        sort: function SparkleXrm_GridEditor_DataViewBase$sort(sorting) {
        },

        gridValidationIndexer: function SparkleXrm_GridEditor_DataViewBase$gridValidationIndexer() {
            return ss.Delegate.create(this.validationBinder, this.validationBinder.gridValidationIndexer);
        },

        onBeforeEdit: function SparkleXrm_GridEditor_DataViewBase$onBeforeEdit(item) {
            return true;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.Formatters

    SparkleXrm.GridEditor.Formatters = function SparkleXrm_GridEditor_Formatters() {
    }
    SparkleXrm.GridEditor.Formatters.defaultFormatter = function SparkleXrm_GridEditor_Formatters$defaultFormatter(row, cell, value, columnDef, dataContext) {
        if (value == null) {
            return '';
        }
        else {
            return value.toString().replaceAll('&', '&amp;').replaceAll('<', '&lt;').replaceAll('>', '&gt;');
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.GridDataViewBinder

    SparkleXrm.GridEditor.GridDataViewBinder = function SparkleXrm_GridEditor_GridDataViewBinder() {
    }
    SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns = function SparkleXrm_GridEditor_GridDataViewBinder$_freezeColumns(grid, freeze) {
        var cols = grid.getColumns();
        for (var i = 0; i < cols.length - 1; i++) {
            var col = cols[i];
            if (freeze) {
                col.maxWidth = col.width;
                col.minWidth = col.width;
            }
            else {
                col.maxWidth = null;
                col.minWidth = null;
            }
        }
    }
    SparkleXrm.GridEditor.GridDataViewBinder._showLoadingIndicator = function SparkleXrm_GridEditor_GridDataViewBinder$_showLoadingIndicator(loadingIndicator, gridContainerDivId) {
        var g = $('#' + gridContainerDivId);
        var vp = $('#' + gridContainerDivId + ' > .slick-viewport');
        loadingIndicator = g;
        var blockOpts = {};
        blockOpts.showOverlay = false;
        blockOpts.ignoreIfBlocked = true;
        var css = {};
        css.border = '0px';
        css.backgroundColor = 'transparent';
        var overlayCss = {};
        overlayCss.opacity = '0';
        blockOpts.css = css;
        blockOpts.message = "<span class='loading-indicator'><label>Loading...</label></span>";
        loadingIndicator.block(blockOpts);
        return loadingIndicator;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.addColumn = function SparkleXrm_GridEditor_GridDataViewBinder$addColumn(cols, displayName, width, field) {
        var col = SparkleXrm.GridEditor.GridDataViewBinder.newColumn(field, displayName, width);
        Xrm.ArrayEx.add(cols, col);
        return col;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.parseLayout = function SparkleXrm_GridEditor_GridDataViewBinder$parseLayout(layout) {
        var layoutParts = layout.split(',');
        var cols = [];
        for (var i = 0; i < layoutParts.length; i = i + 3) {
            var field = layoutParts[i + 1];
            var name = layoutParts[i];
            var width = parseInt(layoutParts[i + 2]);
            var col = SparkleXrm.GridEditor.GridDataViewBinder.newColumn(field, name, width);
            Xrm.ArrayEx.add(cols, col);
        }
        return cols;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.newColumn = function SparkleXrm_GridEditor_GridDataViewBinder$newColumn(field, name, width) {
        var col = {};
        col.id = name;
        col.name = name;
        col.width = width;
        col.minWidth = col.width;
        col.field = field;
        col.sortable = true;
        col.formatter = SparkleXrm.GridEditor.GridDataViewBinder.columnFormatter;
        return col;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.columnFormatter = function SparkleXrm_GridEditor_GridDataViewBinder$columnFormatter(row, cell, value, columnDef, dataContext) {
        var typeName;
        var returnValue = '';
        if (columnDef.dataType != null) {
            typeName = columnDef.dataType;
        }
        else {
            typeName = Type.getInstanceType(value).get_name();
        }
        var entityContext = dataContext;
        var unchanged = (entityContext.entityState == null) || (entityContext.entityState === Xrm.Sdk.EntityStates.unchanged);
        if (unchanged && entityContext.formattedValues != null && Object.keyExists(entityContext.formattedValues, columnDef.field + 'name')) {
            returnValue = entityContext.formattedValues[columnDef.field + 'name'];
            return returnValue;
        }
        if (value != null) {
            switch (typeName.toLowerCase()) {
                case 'string':
                    returnValue = value.toString();
                    break;
                case 'boolean':
                case 'bool':
                    returnValue = value.toString();
                    break;
                case 'dateTime':
                case 'date':
                    var dateValue = value;
                    var dateFormat = 'dd/mm/yy';
                    var timeFormat = 'hh:MM';
                    if (Xrm.Sdk.OrganizationServiceProxy.userSettings != null) {
                        dateFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.dateformatstring;
                        timeFormat = Xrm.Sdk.OrganizationServiceProxy.userSettings.timeformatstring;
                    }
                    returnValue = Xrm.Sdk.DateTimeEx.formatDateSpecific(dateValue, dateFormat) + ' ' + Xrm.Sdk.DateTimeEx.formatTimeSpecific(dateValue, timeFormat);
                    break;
                case 'decimal':
                    returnValue = value.toString();
                    break;
                case 'double':
                    returnValue = value.toString();
                    break;
                case 'int':
                    returnValue = value.toString();
                    break;
                case 'guid':
                    returnValue = value.toString();
                    break;
                case 'money':
                    var moneyValue = value;
                    returnValue = moneyValue.value.toString();
                    break;
                case 'customer':
                case 'owner':
                case 'lookup':
                case 'entityreference':
                    var refValue = value;
                    returnValue = '<a class="sparkle-grid-link" href="#" logicalName="' + refValue.logicalName + '" id="' + refValue.id + '">' + refValue.name + '</a>';
                    break;
                case 'picklist':
                case 'status':
                case 'state':
                case 'optionsetvalue':
                    var optionValue = value;
                    returnValue = optionValue.name;
                    break;
                case 'primarynamelookup':
                    var lookupName = (value == null) ? '' : value.toString();
                    returnValue = '<a class="sparkle-grid-link" href="#" primaryNameLookup="1">' + lookupName + '</a>';
                    break;
            }
        }
        return returnValue;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.bindRowIcon = function SparkleXrm_GridEditor_GridDataViewBinder$bindRowIcon(column, entityLogicalName) {
        column.formatter = SparkleXrm.GridEditor.GridDataViewBinder.rowIcon;
        column.options = entityLogicalName;
        return column;
    }
    SparkleXrm.GridEditor.GridDataViewBinder.rowIcon = function SparkleXrm_GridEditor_GridDataViewBinder$rowIcon(row, cell, value, columnDef, dataContext) {
        var item = dataContext;
        if (item == null) {
            return '';
        }
        else {
            var lookup = item[columnDef.options];
            if (lookup == null || lookup.logicalName == null) {
                return '';
            }
            else {
                return "<span class='sparkle-grid-row-img'><img src='" + Xrm.Sdk.Metadata.MetadataCache.getSmallIconUrl(lookup.logicalName) + "'/></span>";
            }
        }
    }
    SparkleXrm.GridEditor.GridDataViewBinder.addEditIndicatorColumn = function SparkleXrm_GridEditor_GridDataViewBinder$addEditIndicatorColumn(columns) {
        SparkleXrm.GridEditor.GridDataViewBinder.addColumn(columns, '', 20, 'entityState').formatter = function (row, cell, value, columnDef, dataContext) {
            var state = value;
            switch (state) {
                case Xrm.Sdk.EntityStates.created:
                case Xrm.Sdk.EntityStates.changed:
                    return "<span class='grid-edit-indicator'></span>";
                case Xrm.Sdk.EntityStates.readOnly:
                    return "<span class='grid-readonly-indicator'></span>";
                default:
                    return '';
            }
        };
    }
    SparkleXrm.GridEditor.GridDataViewBinder.prototype = {
        selectActiveRow: true,
        addCheckBoxSelectColumn: true,
        multiSelect: true,
        validationPopupUseFitPosition: false,
        _sortColumnName: null,
        _grid: null,

        dataBindXrmGrid: function SparkleXrm_GridEditor_GridDataViewBinder$dataBindXrmGrid(dataView, columns, gridId, pagerId, editable, allowAddNewRow) {
            Xrm.ArrayEx.add(columns, {});
            var gridOptions = {};
            gridOptions.enableCellNavigation = true;
            gridOptions.autoEdit = editable;
            gridOptions.editable = editable;
            gridOptions.asyncEditorLoading = true;
            gridOptions.enableAddRow = allowAddNewRow;
            gridOptions.rowHeight = (Xrm.PageEx.majorVersion === 2013) ? 30 : 20;
            gridOptions.headerRowHeight = 25;
            gridOptions.enableColumnReorder = false;
            var checkBoxSelector = null;
            if (this.addCheckBoxSelectColumn) {
                var checkboxOptions = {};
                checkboxOptions.cssClass = 'sparkle-checkbox-column';
                checkBoxSelector = new Slick.CheckboxSelectColumn(checkboxOptions);
                var checkBoxColumn = checkBoxSelector.getColumnDefinition();
                columns.insert(0, checkBoxColumn);
            }
            var grid = new Slick.Grid('#' + gridId, dataView, columns, gridOptions);
            if (this.addCheckBoxSelectColumn) {
                grid.registerPlugin(checkBoxSelector);
            }
            this.dataBindSelectionModel(grid, dataView);
            if (!String.isNullOrEmpty(pagerId)) {
                var pager = new SparkleXrm.GridEditor.CrmPagerControl(dataView, grid, $('#' + pagerId));
            }
            this.dataBindEvents(grid, dataView, gridId);
            this.addValidation(grid, dataView);
            this.addRefreshButton(gridId, dataView);
            $(window).resize(function (e) {
                SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns(grid, true);
                grid.resizeCanvas();
                SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns(grid, false);
            });
            dataView.onDataLoaded.subscribe(function (e, o) {
                SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns(grid, false);
            });
            this._grid = grid;
            return grid;
        },

        dataBindDataViewGrid: function SparkleXrm_GridEditor_GridDataViewBinder$dataBindDataViewGrid(dataView, columns, gridId, pagerId, editable, allowAddNewRow) {
            Xrm.ArrayEx.add(columns, {});
            var gridOptions = {};
            gridOptions.enableCellNavigation = true;
            gridOptions.autoEdit = editable;
            gridOptions.editable = editable;
            gridOptions.enableAddRow = allowAddNewRow;
            gridOptions.rowHeight = 20;
            gridOptions.headerRowHeight = 25;
            gridOptions.enableColumnReorder = false;
            var checkBoxSelector = null;
            if (this.addCheckBoxSelectColumn) {
                var checkboxOptions = {};
                checkboxOptions.cssClass = 'sparkle-checkbox-column';
                checkBoxSelector = new Slick.CheckboxSelectColumn(checkboxOptions);
                var checkBoxColumn = checkBoxSelector.getColumnDefinition();
                columns.insert(0, checkBoxColumn);
            }
            var grid = new Slick.Grid('#' + gridId, dataView, columns, gridOptions);
            grid.registerPlugin(checkBoxSelector);
            dataView.onRowsChanged.subscribe(function (e, a) {
                var args = a;
                if (args != null && args.rows != null) {
                    grid.invalidateRows(args.rows);
                    grid.render();
                }
            });
            $(window).resize(function (e) {
                SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns(grid, true);
                grid.resizeCanvas();
                SparkleXrm.GridEditor.GridDataViewBinder._freezeColumns(grid, false);
            });
            var reset = function () {
            };
            dataView.reset = reset;
            this.addRefreshButton(gridId, dataView);
            var selectionModelOptions = {};
            selectionModelOptions.selectActiveRow = true;
            var selectionModel = new Slick.RowSelectionModel(selectionModelOptions);
            grid.setSelectionModel(selectionModel);
            var onSort = ss.Delegate.create(this, function (e, a) {
                var args = a;
                this._sortColumnName = args.sortCol.field;
                dataView.sort(ss.Delegate.create(this, this.comparer), args.sortAsc);
            });
            grid.onSort.subscribe(onSort);
            return grid;
        },

        comparer: function SparkleXrm_GridEditor_GridDataViewBinder$comparer(l, r) {
            var a = l;
            var b = r;
            var x = a[this._sortColumnName], y = b[this._sortColumnName];
            return ((x === y) ? 0 : ((x > y) ? 1 : -1));
        },

        bindClickHandler: function SparkleXrm_GridEditor_GridDataViewBinder$bindClickHandler(grid) {
            var openEntityRecord = function (logicalName, id) {
                Xrm.Utility.openEntityForm(logicalName, id, null);
            };
            grid.onClick.subscribe(function (e, sender) {
                var cell = sender;
                var handled = false;
                var element = e.srcElement;
                var logicalName = element.getAttribute('logicalName');
                var id = element.getAttribute('id');
                var primaryNameLookup = element.getAttribute('primaryNameLookup');
                if ((logicalName != null & id != null) === 1) {
                    handled = true;
                }
                else if (primaryNameLookup != null) {
                    handled = true;
                    var entity = cell.grid.getDataItem(cell.row);
                    logicalName = entity.logicalName;
                    var activitytypecode = entity.getAttributeValueString('activitytypecode');
                    if (activitytypecode != null) {
                        logicalName = activitytypecode;
                    }
                    id = entity.id;
                }
                if (handled) {
                    openEntityRecord(logicalName, id);
                    e.stopImmediatePropagation();
                    e.stopPropagation();
                }
            });
            grid.onDblClick.subscribe(function (e, sender) {
                var cell = sender;
                var entity = cell.grid.getDataItem(cell.row);
                var logicalName = entity.logicalName;
                var activitytypecode = entity.getAttributeValueString('activitytypecode');
                if (activitytypecode != null) {
                    logicalName = activitytypecode;
                }
                openEntityRecord(logicalName, entity.id);
                e.stopImmediatePropagation();
                e.stopPropagation();
            });
        },

        addValidation: function SparkleXrm_GridEditor_GridDataViewBinder$addValidation(grid, dataView) {
            var setValidator = function (attributeName, col) {
                col.validator = function (value, item) {
                    var indexer = dataView.gridValidationIndexer();
                    var validationRule = indexer(attributeName);
                    if (validationRule != null) {
                        return validationRule(value, item);
                    }
                    else {
                        var result = {};
                        result.valid = true;
                        return result;
                    }
                };
            };
            if (dataView.gridValidationIndexer() != null) {
                var $enum1 = ss.IEnumerator.getEnumerator(grid.getColumns());
                while ($enum1.moveNext()) {
                    var col = $enum1.current;
                    var fieldName = col.field;
                    setValidator(fieldName, col);
                }
            }
        },

        dataBindSelectionModel: function SparkleXrm_GridEditor_GridDataViewBinder$dataBindSelectionModel(grid, dataView) {
            var selectionModelOptions = {};
            selectionModelOptions.selectActiveRow = this.selectActiveRow;
            selectionModelOptions.multiRowSelect = this.multiSelect;
            var selectionModel = new Slick.RowSelectionModel(selectionModelOptions);
            var inHandler = false;
            selectionModel.onSelectedRangesChanged.subscribe(function (e, args) {
                if (inHandler) {
                    return;
                }
                inHandler = true;
                var selectedRows = dataView.getSelectedRows();
                var newSelectedRows = args;
                var changed = selectedRows.length !== newSelectedRows.length;
                if (!changed) {
                    for (var i = 0; i < selectedRows.length; i++) {
                        if (selectedRows[i].fromRow !== newSelectedRows[i].fromRow) {
                            changed = true;
                            break;
                        }
                    }
                }
                if (changed) {
                    dataView.raiseOnSelectedRowsChanged(newSelectedRows);
                }
                inHandler = false;
            });
            dataView.add_onSelectedRowsChanged(function () {
                if (inHandler) {
                    return;
                }
                inHandler = true;
                var ranges = dataView.getSelectedRows();
                var selectedRows = new Array(ranges.length);
                for (var i = 0; i < selectedRows.length; i++) {
                    selectedRows[i] = ranges[i].fromRow;
                }
                grid.setSelectedRows(selectedRows);
                inHandler = false;
            });
            grid.setSelectionModel(selectionModel);
        },

        addRefreshButton: function SparkleXrm_GridEditor_GridDataViewBinder$addRefreshButton(gridId, dataView) {
            var gridDiv = $('#' + gridId);
            var refreshButton = $("<div id='refreshButton' class='sparkle-grid-refresh-button' style='left: auto; right: 0px; display: inline;'><a href='#' id='refreshButtonLink' tabindex='0'><span id='grid_refresh' class='sparkle-grid-refresh-button-img' style='cursor:pointer'></span></a></div>").appendTo(gridDiv);
            refreshButton.find('#refreshButtonLink').click(function (e) {
                dataView.reset();
                dataView.refresh();
            });
        },

        dataBindEvents: function SparkleXrm_GridEditor_GridDataViewBinder$dataBindEvents(grid, dataView, gridContainerDivId) {
            grid.onSort.subscribe(function (o, item) {
                var sorting = item;
                dataView.sort(sorting);
                grid.invalidate();
                grid.render();
            });
            grid.onAddNewRow.subscribe(function (o, item) {
                var data = item;
                dataView.addItem(data.item);
                var column = data.column;
                grid.invalidateRow(dataView.getLength() - 1);
                grid.updateRowCount();
                grid.render();
            });
            dataView.onRowsChanged.subscribe(function (e, a) {
                var args = a;
                if (args != null && args.rows != null) {
                    grid.invalidateRows(args.rows);
                    grid.render();
                }
                else {
                    grid.invalidateRow(dataView.getLength());
                    grid.updateRowCount();
                    grid.render();
                }
                grid.resizeCanvas();
            });
            var loadingIndicator = null;
            var validationIndicator = null;
            var clearValidationIndicator = function (e, a) {
                if (validationIndicator != null) {
                    validationIndicator.hide();
                    validationIndicator.remove();
                }
            };
            grid.onCellChange.subscribe(clearValidationIndicator);
            grid.onActiveCellChanged.subscribe(clearValidationIndicator);
            grid.onBeforeCellEditorDestroy.subscribe(clearValidationIndicator);
            grid.onValidationError.subscribe(ss.Delegate.create(this, function (e, a) {
                var args = a;
                var validationResult = args.validationResults;
                var activeCellNode = args.cellNode;
                var editor = args.editor;
                var errorMessage = '';
                if (validationResult.message != null) {
                    errorMessage = validationResult.message;
                }
                var valid_result = validationResult.valid;
                if (!valid_result) {
                    $(activeCellNode).attr('title', errorMessage);
                    clearValidationIndicator(e, a);
                    validationIndicator = $("<div class='popup-box-container'><div width='16px' height='16px' class='sparkle-imagestrip-inlineedit_warning popup-box-icon' alt='Error' id='icon'/><div class='popup-box validation-text'/></div>").appendTo(document.body);
                    validationIndicator.find('.validation-text').text(errorMessage);
                    var colisionPosition = (this.validationPopupUseFitPosition) ? 'fit fit' : 'none none';
                    validationIndicator.position({
                        my: 'left bottom',
                        at: 'left top',
                        collision: 'colisionPosition',
                        of: activeCellNode
                    })
                                            .show({
                                                effect: 'blind'
                                            })
                                            .delay(500000)
                                            .hide({
                                                effect: 'fade',
                                                duration: 'slow',
                                            },
                                                function () {
                                                    $(this).remove();

                                                });
                    ;
                }
                else {
                    clearValidationIndicator(e, a);
                    $(activeCellNode).attr('title', '');
                }
            }));
            dataView.onDataLoading.subscribe(function (e, a) {
                loadingIndicator = SparkleXrm.GridEditor.GridDataViewBinder._showLoadingIndicator(loadingIndicator, gridContainerDivId);
                var $enum1 = ss.IEnumerator.getEnumerator(grid.getColumns());
                while ($enum1.moveNext()) {
                    var col = $enum1.current;
                    if (col.maxWidth != null) {
                        col.maxWidth = 400;
                    }
                }
            });
            dataView.onDataLoaded.subscribe(function (e, a) {
                var args = a;
                if (args != null) {
                    if (args.errorMessage == null) {
                        for (var i = args.from; i <= args.to; i++) {
                            grid.invalidateRow(i);
                        }
                        grid.updateRowCount();
                        grid.render();
                    }
                    else {
                        alert('There was a problem refreshing the grid.\nPlease contact your system administrator:\n' + args.errorMessage);
                    }
                }
                if (loadingIndicator != null) {
                    loadingIndicator.unblock();
                }
            });
            grid.onCellChange.subscribe(function (e, data) {
                var eventData = data;
                dataView.raisePropertyChanged('');
            });
        },

        bindCommitEdit: function SparkleXrm_GridEditor_GridDataViewBinder$bindCommitEdit(vm) {
            vm.add_onCommitEdit(ss.Delegate.create(this, function (sender, e) {
                if (this._grid.getEditorLock().isActive()) {
                    e.cancel = !this._grid.getEditorLock().commitCurrentEdit();
                }
            }));
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.GridEditorBase

    SparkleXrm.GridEditor.GridEditorBase = function SparkleXrm_GridEditor_GridEditorBase(args) {
        this._args = args;
    }
    SparkleXrm.GridEditor.GridEditorBase.prototype = {
        _args: null,
        _item: null,

        destroy: function SparkleXrm_GridEditor_GridEditorBase$destroy() {
        },

        show: function SparkleXrm_GridEditor_GridEditorBase$show() {
        },

        hide: function SparkleXrm_GridEditor_GridEditorBase$hide() {
        },

        position: function SparkleXrm_GridEditor_GridEditorBase$position(position) {
        },

        focus: function SparkleXrm_GridEditor_GridEditorBase$focus() {
        },

        loadValue: function SparkleXrm_GridEditor_GridEditorBase$loadValue(item) {
            this._item = item;
        },

        serializeValue: function SparkleXrm_GridEditor_GridEditorBase$serializeValue() {
            return null;
        },

        applyValue: function SparkleXrm_GridEditor_GridEditorBase$applyValue(item, state) {
        },

        raiseOnChange: function SparkleXrm_GridEditor_GridEditorBase$raiseOnChange(item) {
            var itemObject = Type.safeCast(item, Xrm.ComponentModel.INotifyPropertyChanged);
            if (itemObject != null) {
                itemObject.raisePropertyChanged(this._args.column.field);
            }
        },

        isValueChanged: function SparkleXrm_GridEditor_GridEditorBase$isValueChanged() {
            return false;
        },

        nativeValidation: function SparkleXrm_GridEditor_GridEditorBase$nativeValidation(newValue) {
            return null;
        },

        validate: function SparkleXrm_GridEditor_GridEditorBase$validate() {
            var newValue = this.serializeValue();
            var result = this.nativeValidation(newValue);
            if (result == null && this._args.column.validator != null) {
                var validationResults = this._args.column.validator(newValue, this._args.item);
                if (!validationResults.valid) {
                    result = validationResults;
                }
            }
            if (result == null) {
                result = {};
                result.valid = true;
                result.message = null;
            }
            return result;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.GridEditor.XrmOptionSetEditor

    SparkleXrm.GridEditor.XrmOptionSetEditor = function SparkleXrm_GridEditor_XrmOptionSetEditor(args) {
        this._defaultValue$1 = new Xrm.Sdk.OptionSetValue(null);
        SparkleXrm.GridEditor.XrmOptionSetEditor.initializeBase(this, [args]);
        var self = this;
        var opts = args.column.options;
        if (this._options$1 == null) {
            if (opts.getOptionSetsDelegate != null) {
                this._options$1 = opts.getOptionSetsDelegate(args.item);
            }
            else {
                this._options$1 = Xrm.Sdk.Metadata.MetadataCache.getOptionSetValues(opts.entityLogicalName, opts.attributeLogicalName, opts.allowEmpty);
            }
        }
        this.createSelect(self);
    }
    SparkleXrm.GridEditor.XrmOptionSetEditor.formatter = function SparkleXrm_GridEditor_XrmOptionSetEditor$formatter(row, cell, value, columnDef, dataContext) {
        var opt = value;
        return (opt == null) ? '' : opt.name;
    }
    SparkleXrm.GridEditor.XrmOptionSetEditor.bindColumn = function SparkleXrm_GridEditor_XrmOptionSetEditor$bindColumn(column, entityLogicalName, attributeLogicalName, allowEmpty) {
        column.editor = SparkleXrm.GridEditor.XrmOptionSetEditor.editorFactory;
        column.formatter = SparkleXrm.GridEditor.XrmOptionSetEditor.formatter;
        var opts = {};
        opts.attributeLogicalName = attributeLogicalName;
        opts.entityLogicalName = entityLogicalName;
        opts.allowEmpty = allowEmpty;
        column.options = opts;
        return column;
    }
    SparkleXrm.GridEditor.XrmOptionSetEditor.bindColumnWithOptions = function SparkleXrm_GridEditor_XrmOptionSetEditor$bindColumnWithOptions(column, options) {
        column.editor = SparkleXrm.GridEditor.XrmOptionSetEditor.editorFactory;
        column.formatter = SparkleXrm.GridEditor.XrmOptionSetEditor.formatter;
        column.options = options;
        return column;
    }
    SparkleXrm.GridEditor.XrmOptionSetEditor.prototype = {
        _options$1: null,
        _input$1: null,

        createSelect: function SparkleXrm_GridEditor_XrmOptionSetEditor$createSelect(self) {
            var optionSet = '<SELECT>';
            var $enum1 = ss.IEnumerator.getEnumerator(this._options$1);
            while ($enum1.moveNext()) {
                var o = $enum1.current;
                optionSet += String.format('<OPTION title="{0}" value="{1}" {2}>{0}</OPTION>', o.name, o.value, (self._defaultValue$1.value === o.value) ? 'selected' : '');
            }
            optionSet += '</SELECT>';
            self._input$1 = $(optionSet);
            self._input$1.bind('keydown.nav', function (e) {
                if (e.which === 40 || e.which === 38) {
                    e.stopImmediatePropagation();
                }
            });
            self._input$1.appendTo(this._args.container);
            self._input$1.focus().select();
        },

        destroy: function SparkleXrm_GridEditor_XrmOptionSetEditor$destroy() {
            if (this._input$1 != null) {
                this._input$1.remove();
            }
        },

        focus: function SparkleXrm_GridEditor_XrmOptionSetEditor$focus() {
            this._input$1.focus();
        },

        loadValue: function SparkleXrm_GridEditor_XrmOptionSetEditor$loadValue(item) {
            var opt = item[this._args.column.field];
            this._defaultValue$1 = opt;
            this._setDefaultValue$1();
        },

        serializeValue: function SparkleXrm_GridEditor_XrmOptionSetEditor$serializeValue() {
            if (this._input$1 != null) {
                var opt = new Xrm.Sdk.OptionSetValue(this._getValue$1());
                opt.name = $('option:selected', this._input$1).text();
                return opt;
            }
            else {
                return null;
            }
        },

        applyValue: function SparkleXrm_GridEditor_XrmOptionSetEditor$applyValue(item, state) {
            var opt = state;
            item[this._args.column.field] = opt;
            item[this._args.column.field + 'name'] = opt.name;
            var itemObject = Type.safeCast((item), Xrm.ComponentModel.INotifyPropertyChanged);
            if (itemObject != null) {
                itemObject.raisePropertyChanged(this._args.column.field);
            }
        },

        isValueChanged: function SparkleXrm_GridEditor_XrmOptionSetEditor$isValueChanged() {
            if (this._input$1 != null) {
                var valueAsString = (this._defaultValue$1 != null && this._defaultValue$1.value != null) ? this._defaultValue$1.value.toString() : '';
                return (this._input$1.val() !== valueAsString);
            }
            else {
                return false;
            }
        },

        _getValue$1: function SparkleXrm_GridEditor_XrmOptionSetEditor$_getValue$1() {
            var val = this._input$1.val();
            if (String.isNullOrEmpty(val)) {
                return null;
            }
            else {
                return parseInt(val);
            }
        },

        _setDefaultValue$1: function SparkleXrm_GridEditor_XrmOptionSetEditor$_setDefaultValue$1() {
            if (this._input$1 != null) {
                this._input$1.val((this._defaultValue$1 != null && this._defaultValue$1.value != null) ? this._defaultValue$1.value.toString() : null);
                this._input$1.select();
            }
        }
    }


    Type.registerNamespace('SparkleXrm');

    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.LocalisedContentLoader

    SparkleXrm.LocalisedContentLoader = function SparkleXrm_LocalisedContentLoader() {
    }
    SparkleXrm.LocalisedContentLoader.loadContent = function SparkleXrm_LocalisedContentLoader$loadContent(webresourceFileName, lcid, callback) {
        var lcidSupported = SparkleXrm.LocalisedContentLoader.supportedLCIDs.contains(0) || SparkleXrm.LocalisedContentLoader.supportedLCIDs.contains(lcid);
        if (!lcidSupported || (lcid === SparkleXrm.LocalisedContentLoader.fallBackLCID)) {
            callback();
            return;
        }
        var pos = webresourceFileName.lastIndexOf('.');
        var resourceFileName = Xrm.Page.context.getClientUrl() + '/' + Xrm.PageEx.getCacheKey() + 'WebResources/' + webresourceFileName.substr(0, pos) + '_' + lcid.toString() + webresourceFileName.substr(pos);
        var options = {};
        options.type = 'GET';
        options.url = resourceFileName;
        options.dataType = 'script';
        options.cache = true;
        options.success = function (data, textStatus, request) {
            callback();
        };
        options.error = function (request, textStatus, error) {
            alert(String.format("Could not load resource file '{0}'. Please contact your system adminsitrator.\n\n{1}:{2}", resourceFileName, textStatus, error.message));
            callback();
        };
        $.ajax(options);
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ValidationRules

    SparkleXrm.ValidationRules = function SparkleXrm_ValidationRules() {
    }
    SparkleXrm.ValidationRules.areValid = function SparkleXrm_ValidationRules$areValid(fields) {
        var valid = true;
        var $enum1 = ss.IEnumerator.getEnumerator(fields);
        while ($enum1.moveNext()) {
            var field = $enum1.current;
            valid = valid && (field).isValid();
            if (!valid) {
                break;
            }
        }
        return valid;
    }
    SparkleXrm.ValidationRules.createRules = function SparkleXrm_ValidationRules$createRules() {
        return new SparkleXrm.ValidationRules();
    }
    SparkleXrm.ValidationRules.convertToGridValidation = function SparkleXrm_ValidationRules$convertToGridValidation(ruleDelegate) {
        var validationFunction = function (value, item) {
            var rules = new SparkleXrm.ValidationRules();
            rules = ruleDelegate(rules, item, null);
            var result = {};
            result.valid = true;
            var validationRules = rules;
            var $enum1 = ss.IEnumerator.getEnumerator(Object.keys(validationRules));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                if (Object.keyExists(ko.validation.rules, key)) {
                    var targetRule = ko.validation.rules[key];
                    var sourceRule = validationRules[key];
                    result.valid = targetRule.validator(value, (sourceRule.params == null) ? targetRule.params : sourceRule.params);
                    result.message = (String.isNullOrEmpty(targetRule.message)) ? sourceRule.message : targetRule.message;
                }
                else if (key === 'validation') {
                    var anonRules = validationRules[key];
                    var $enum2 = ss.IEnumerator.getEnumerator(anonRules);
                    while ($enum2.moveNext()) {
                        var rule = $enum2.current;
                        result.valid = rule.validator(value);
                        result.message = rule.message;
                        if (!result.valid) {
                            break;
                        }
                    }
                }
                if (!result.valid) {
                    break;
                }
            }
            return result;
        };
        return validationFunction;
    }
    SparkleXrm.ValidationRules.prototype = {

        register: function SparkleXrm_ValidationRules$register(model) {
            (model).extend(this);
        },

        addRequired: function SparkleXrm_ValidationRules$addRequired() {
            this['required'] = true;
            return this;
        },

        addRequiredMsg: function SparkleXrm_ValidationRules$addRequiredMsg(message) {
            this['required'] = new SparkleXrm.ValidationMessage(message);
            return this;
        },

        addRule: function SparkleXrm_ValidationRules$addRule(message, validator) {
            var rule = new SparkleXrm.AnonymousRule();
            var anonRules = this['validation'];
            if (anonRules == null) {
                anonRules = [];
                this['validation'] = anonRules;
            }
            rule.message = message;
            rule.validator = validator;
            anonRules.add(rule);
            return this;
        },

        addPattern: function SparkleXrm_ValidationRules$addPattern(message, pattern) {
            var patternOptions = {};
            patternOptions.message = message;
            patternOptions.params = pattern;
            this['pattern'] = patternOptions;
            return this;
        },

        addCustom: function SparkleXrm_ValidationRules$addCustom(type, options) {
            this[type] = options;
            return this;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.AnonymousRule

    SparkleXrm.AnonymousRule = function SparkleXrm_AnonymousRule() {
    }
    SparkleXrm.AnonymousRule.prototype = {
        validator: null,
        message: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ValidationMessage

    SparkleXrm.ValidationMessage = function SparkleXrm_ValidationMessage(message) {
        this.message = message;
    }
    SparkleXrm.ValidationMessage.prototype = {
        message: null
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ValidationBinder

    SparkleXrm.ValidationBinder = function SparkleXrm_ValidationBinder() {
    }
    SparkleXrm.ValidationBinder.prototype = {

        register: function SparkleXrm_ValidationBinder$register(fieldName, rule) {
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.DataViewValidationBinder

    SparkleXrm.DataViewValidationBinder = function SparkleXrm_DataViewValidationBinder() {
        this._validationRules$1 = {};
        SparkleXrm.DataViewValidationBinder.initializeBase(this);
    }
    SparkleXrm.DataViewValidationBinder.prototype = {

        register: function SparkleXrm_DataViewValidationBinder$register(fieldName, rule) {
            this._validationRules$1[fieldName] = rule;
        },

        gridValidationIndexer: function SparkleXrm_DataViewValidationBinder$gridValidationIndexer(attributeLogicalName) {
            if (this._validationRules$1[attributeLogicalName] != null) {
                return SparkleXrm.ValidationRules.convertToGridValidation(this._validationRules$1[attributeLogicalName]);
            }
            else {
                return null;
            }
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ObservableValidationBinder

    SparkleXrm.ObservableValidationBinder = function SparkleXrm_ObservableValidationBinder(observable) {
        SparkleXrm.ObservableValidationBinder.initializeBase(this);
        this._observable$1 = observable;
    }
    SparkleXrm.ObservableValidationBinder.prototype = {
        _observable$1: null,

        register: function SparkleXrm_ObservableValidationBinder$register(fieldName, ruleDelegate) {
            var viewModel = ko.utils.unwrapObservable(this._observable$1);
            var observableField = viewModel[fieldName];
            var rule = ruleDelegate(SparkleXrm.ValidationRules.createRules(), this._observable$1, null);
            (observableField).extend(rule);
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ViewBase

    SparkleXrm.ViewBase = function SparkleXrm_ViewBase() {
    }
    SparkleXrm.ViewBase.registerViewModel = function SparkleXrm_ViewBase$registerViewModel(viewModel) {
        $(function () {
            if (!SparkleXrm.ViewBase._templateLoaded) {
                $.get(SparkleXrm.ViewBase.sparkleXrmTemplatePath, function (template) {
                    $('body').append(template);
                    ko.validation.registerExtenders();
                    Xrm.Sdk.OrganizationServiceProxy.getUserSettings();
                    SparkleXrm.ViewBase._templateLoaded = true;
                    ko.applyBindings(viewModel);
                });
            }
            else {
                ko.applyBindings(viewModel);
            }
        });
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.ViewModelBase

    SparkleXrm.ViewModelBase = function SparkleXrm_ViewModelBase() {
        this.isBusy = ko.observable(false);
        this.isBusyProgress = ko.observable(null);
        this.isBusyMessage = ko.observable('Please Wait...');
    }
    SparkleXrm.ViewModelBase.prototype = {

        add_onCommitEdit: function SparkleXrm_ViewModelBase$add_onCommitEdit(value) {
            this.__onCommitEdit = ss.Delegate.combine(this.__onCommitEdit, value);
        },
        remove_onCommitEdit: function SparkleXrm_ViewModelBase$remove_onCommitEdit(value) {
            this.__onCommitEdit = ss.Delegate.remove(this.__onCommitEdit, value);
        },

        __onCommitEdit: null,

        commitEdit: function SparkleXrm_ViewModelBase$commitEdit() {
            if (this.__onCommitEdit != null) {
                var args = new ss.CancelEventArgs();
                this.__onCommitEdit(this, args);
                return !args.cancel;
            }
            return true;
        }
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.DoubleClickBindingHandler

    SparkleXrm.DoubleClickBindingHandler = function SparkleXrm_DoubleClickBindingHandler() {
        SparkleXrm.DoubleClickBindingHandler.initializeBase(this);
    }
    SparkleXrm.DoubleClickBindingHandler.prototype = {
        _delay$1: 400,
        _clickTimeoutId$1: 0,

        init: function SparkleXrm_DoubleClickBindingHandler$init(element, valueAccessor, allBindingsAccessor, viewModel, context) {
            var hander = valueAccessor;
            $(null, element).click(ss.Delegate.create(this, function (e) {
                if (!!this._clickTimeoutId$1) {
                    window.clearTimeout(0);
                    this._clickTimeoutId$1 = 0;
                }
                else {
                    this._clickTimeoutId$1 = window.setTimeout(ss.Delegate.create(this, function () {
                        this._clickTimeoutId$1 = 0;
                        hander();
                    }), this._delay$1);
                }
            }));
        }
    }


    Type.registerNamespace('SparkleXrm.Validation');

    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.Validation.DurationValidation

    SparkleXrm.Validation.DurationValidation = function SparkleXrm_Validation_DurationValidation() {
    }
    SparkleXrm.Validation.DurationValidation.validator = function SparkleXrm_Validation_DurationValidation$validator(val, otherval) {
        var parseDate = Xrm.Sdk.DateTimeEx.addTimeToDate(Date.get_now(), val);
        return parseDate != null;
    }


    ////////////////////////////////////////////////////////////////////////////////
    // SparkleXrm.Validation.TimeValidation

    SparkleXrm.Validation.TimeValidation = function SparkleXrm_Validation_TimeValidation() {
    }
    SparkleXrm.Validation.TimeValidation.validator = function SparkleXrm_Validation_TimeValidation$validator(val, otherval) {
        var parseDate = Xrm.Sdk.DateTimeEx.addTimeToDate(Date.get_now(), val);
        return parseDate != null;
    }


    SparkleXrm.CustomBinding.EnterKeyBinding.registerClass('SparkleXrm.CustomBinding.EnterKeyBinding', Object);
    SparkleXrm.CustomBinding.XrmCurrencySymbolBinding.registerClass('SparkleXrm.CustomBinding.XrmCurrencySymbolBinding', Object);
    SparkleXrm.CustomBinding.XrmMoneyBinding.registerClass('SparkleXrm.CustomBinding.XrmMoneyBinding', Object);
    SparkleXrm.CustomBinding.XrmNumericBinding.registerClass('SparkleXrm.CustomBinding.XrmNumericBinding', Object);
    SparkleXrm.CustomBinding.XrmOptionSetBinding.registerClass('SparkleXrm.CustomBinding.XrmOptionSetBinding', Object);
    SparkleXrm.CustomBinding.AnimateVisible.registerClass('SparkleXrm.CustomBinding.AnimateVisible', Object);
    SparkleXrm.CustomBinding.AutocompleteBinding.registerClass('SparkleXrm.CustomBinding.AutocompleteBinding', Object);
    SparkleXrm.CustomBinding.XrmBooleanBinding.registerClass('SparkleXrm.CustomBinding.XrmBooleanBinding', Object);
    SparkleXrm.CustomBinding.XrmLookupBinding.registerClass('SparkleXrm.CustomBinding.XrmLookupBinding', Object);
    SparkleXrm.CustomBinding.XrmTextBinding.registerClass('SparkleXrm.CustomBinding.XrmTextBinding', Object);
    SparkleXrm.CustomBinding.XrmDatePickerBinding.registerClass('SparkleXrm.CustomBinding.XrmDatePickerBinding', Object);
    SparkleXrm.CustomBinding.XrmDurationBinding.registerClass('SparkleXrm.CustomBinding.XrmDurationBinding', Object);
    SparkleXrm.CustomBinding.FadeVisibleBinding.registerClass('SparkleXrm.CustomBinding.FadeVisibleBinding', Object);
    SparkleXrm.CustomBinding.ProgressBarBinding.registerClass('SparkleXrm.CustomBinding.ProgressBarBinding', Object);
    SparkleXrm.CustomBinding.XrmTimeOfDayBinding.registerClass('SparkleXrm.CustomBinding.XrmTimeOfDayBinding', Object);
    SparkleXrm.GridEditor.SortCol.registerClass('SparkleXrm.GridEditor.SortCol');
    SparkleXrm.GridEditor.GridEditorBase.registerClass('SparkleXrm.GridEditor.GridEditorBase');
    SparkleXrm.GridEditor.XrmBooleanEditor.registerClass('SparkleXrm.GridEditor.XrmBooleanEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.XrmMoneyEditor.registerClass('SparkleXrm.GridEditor.XrmMoneyEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.XrmNumberEditor.registerClass('SparkleXrm.GridEditor.XrmNumberEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.DataViewBase.registerClass('SparkleXrm.GridEditor.DataViewBase', null, Object, Object);
    SparkleXrm.GridEditor.EntityDataViewModel.registerClass('SparkleXrm.GridEditor.EntityDataViewModel', SparkleXrm.GridEditor.DataViewBase);
    SparkleXrm.GridEditor.XrmDateEditor.registerClass('SparkleXrm.GridEditor.XrmDateEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.XrmDurationEditor.registerClass('SparkleXrm.GridEditor.XrmDurationEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.XrmLookupEditorOptions.registerClass('SparkleXrm.GridEditor.XrmLookupEditorOptions');
    SparkleXrm.GridEditor.XrmLookupEditor.registerClass('SparkleXrm.GridEditor.XrmLookupEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.CrmPagerControl.registerClass('SparkleXrm.GridEditor.CrmPagerControl');
    SparkleXrm.GridEditor.XrmTextEditor.registerClass('SparkleXrm.GridEditor.XrmTextEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.XrmTimeEditor.registerClass('SparkleXrm.GridEditor.XrmTimeEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.GridEditor.Formatters.registerClass('SparkleXrm.GridEditor.Formatters');
    SparkleXrm.GridEditor.GridDataViewBinder.registerClass('SparkleXrm.GridEditor.GridDataViewBinder');
    SparkleXrm.GridEditor.XrmOptionSetEditor.registerClass('SparkleXrm.GridEditor.XrmOptionSetEditor', SparkleXrm.GridEditor.GridEditorBase);
    SparkleXrm.LocalisedContentLoader.registerClass('SparkleXrm.LocalisedContentLoader');
    SparkleXrm.ValidationRules.registerClass('SparkleXrm.ValidationRules');
    SparkleXrm.AnonymousRule.registerClass('SparkleXrm.AnonymousRule');
    SparkleXrm.ValidationMessage.registerClass('SparkleXrm.ValidationMessage');
    SparkleXrm.ValidationBinder.registerClass('SparkleXrm.ValidationBinder');
    SparkleXrm.DataViewValidationBinder.registerClass('SparkleXrm.DataViewValidationBinder', SparkleXrm.ValidationBinder);
    SparkleXrm.ObservableValidationBinder.registerClass('SparkleXrm.ObservableValidationBinder', SparkleXrm.ValidationBinder);
    SparkleXrm.ViewBase.registerClass('SparkleXrm.ViewBase');
    SparkleXrm.ViewModelBase.registerClass('SparkleXrm.ViewModelBase');
    SparkleXrm.DoubleClickBindingHandler.registerClass('SparkleXrm.DoubleClickBindingHandler', Object);
    SparkleXrm.Validation.DurationValidation.registerClass('SparkleXrm.Validation.DurationValidation');
    SparkleXrm.Validation.TimeValidation.registerClass('SparkleXrm.Validation.TimeValidation');
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['enterKey'] = new SparkleXrm.CustomBinding.EnterKeyBinding();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['xrmcurrencysymbol'] = new SparkleXrm.CustomBinding.XrmCurrencySymbolBinding();
            ko.validation.makeBindingHandlerValidatable('xrmcurrencysymbol');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['xrmmoney'] = new SparkleXrm.CustomBinding.XrmMoneyBinding();
            ko.validation.makeBindingHandlerValidatable('xrmmoney');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['xrmnumeric'] = new SparkleXrm.CustomBinding.XrmNumericBinding();
            ko.validation.makeBindingHandlerValidatable('xrmnumeric');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['optionset'] = new SparkleXrm.CustomBinding.XrmOptionSetBinding();
            ko.validation.makeBindingHandlerValidatable('optionset');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['animateVisible'] = new SparkleXrm.CustomBinding.AnimateVisible();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['autocomplete'] = new SparkleXrm.CustomBinding.AutocompleteBinding();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['booleanValue'] = new SparkleXrm.CustomBinding.XrmBooleanBinding();
            ko.validation.makeBindingHandlerValidatable('booleanValue');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['lookup'] = new SparkleXrm.CustomBinding.XrmLookupBinding();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['xrmtextbox'] = new SparkleXrm.CustomBinding.XrmTextBinding();
            ko.validation.makeBindingHandlerValidatable('xrmtextbox');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['datepicker'] = new SparkleXrm.CustomBinding.XrmDatePickerBinding();
            ko.validation.makeBindingHandlerValidatable('datepicker');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['duration'] = new SparkleXrm.CustomBinding.XrmDurationBinding();
            ko.validation.makeBindingHandlerValidatable('duration');
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['fadeVisible'] = new SparkleXrm.CustomBinding.FadeVisibleBinding();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['progressBar'] = new SparkleXrm.CustomBinding.ProgressBarBinding();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['timeofday'] = new SparkleXrm.CustomBinding.XrmTimeOfDayBinding();
        }
    })();
    SparkleXrm.GridEditor.XrmBooleanEditor.booleanEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmBooleanEditor.booleanEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmBooleanEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmMoneyEditor.moneyEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmMoneyEditor.moneyEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmMoneyEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmNumberEditor.numberEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmNumberEditor.numberEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmNumberEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmDateEditor.crmDateEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmDateEditor.crmDateEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmDateEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmDurationEditor.durationEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmDurationEditor.durationEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmDurationEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmLookupEditor.lookupEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmLookupEditor.lookupEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmLookupEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmTextEditor.textEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmTextEditor.textEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmTextEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmTimeEditor.timeEditor = null;
    (function () {
        SparkleXrm.GridEditor.XrmTimeEditor.timeEditor = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmTimeEditor(args);
            return editor;
        };
    })();
    SparkleXrm.GridEditor.XrmOptionSetEditor.editorFactory = null;
    (function () {
        SparkleXrm.GridEditor.XrmOptionSetEditor.editorFactory = function (args) {
            var editor = new SparkleXrm.GridEditor.XrmOptionSetEditor(args);
            return editor;
        };
    })();
    SparkleXrm.LocalisedContentLoader.supportedLCIDs = new Array(1033);
    SparkleXrm.LocalisedContentLoader.fallBackLCID = 1033;
    SparkleXrm.ViewBase._templateLoaded = false;
    SparkleXrm.ViewBase.sparkleXrmTemplatePath = '../../sparkle_/html/form.templates.htm';
    (function () {
        if (typeof (ko) !== 'undefined') {
            ko.bindingHandlers['singleClick'] = new SparkleXrm.DoubleClickBindingHandler();
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            var rule = {};
            rule.message = '{0} is an invalid duration.';
            rule.validator = SparkleXrm.Validation.DurationValidation.validator;
            ko.validation.rules['durationValidation'] = rule;
        }
    })();
    (function () {
        if (typeof (ko) !== 'undefined') {
            var rule = {};
            rule.message = '{0} is an invalid time.';
            rule.validator = SparkleXrm.Validation.TimeValidation.validator;
            ko.validation.rules['timeValidation'] = rule;
        }
    })();
})(window.xrmjQuery);


/*!
 * jQuery contextMenu v2.0.0 - Plugin for simple contextMenu handling
 *
 * Version: v2.0.0
 *
 * Authors: Björn Brala (SWIS.nl), Rodney Rehm, Addy Osmani (patches for FF)
 * Web: http://swisnl.github.io/jQuery-contextMenu/
 *
 * Copyright (c) 2011-2015 SWIS BV and contributors
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *   GPL v3 http://opensource.org/licenses/GPL-3.0
 *
 * Date: 2015-10-28T15:16:15.572Z
 */

(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node / CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals.
        factory(jQuery);
    }
})(function ($) {

    'use strict';

    // TODO: -
    // ARIA stuff: menuitem, menuitemcheckbox und menuitemradio
    // create <menu> structure if $.support[htmlCommand || htmlMenuitem] and !opt.disableNative

    // determine html5 compatibility
    $.support.htmlMenuitem = ('HTMLMenuItemElement' in window);
    $.support.htmlCommand = ('HTMLCommandElement' in window);
    $.support.eventSelectstart = ('onselectstart' in document.documentElement);
    /* // should the need arise, test for css user-select
     $.support.cssUserSelect = (function(){
     var t = false,
     e = document.createElement('div');

     $.each('Moz|Webkit|Khtml|O|ms|Icab|'.split('|'), function(i, prefix) {
     var propCC = prefix + (prefix ? 'U' : 'u') + 'serSelect',
     prop = (prefix ? ('-' + prefix.toLowerCase() + '-') : '') + 'user-select';

     e.style.cssText = prop + ': text;';
     if (e.style[propCC] == 'text') {
     t = true;
     return false;
     }

     return true;
     });

     return t;
     })();
     */

    if (!$.ui || !$.widget) {
        // duck punch $.cleanData like jQueryUI does to get that remove event
        $.cleanData = (function (orig) {
            return function (elems) {
                var events, elem, i;
                for (i = 0; (elem = elems[i]) != null; i++) {
                    try {
                        // Only trigger remove when necessary to save time
                        events = $._data(elem, 'events');
                        if (events && events.remove) {
                            $(elem).triggerHandler('remove');
                        }

                        // Http://bugs.jquery.com/ticket/8235
                    } catch (e) { }
                }
                orig(elems);
            };
        })($.cleanData);
    }

    var // currently active contextMenu trigger
        $currentTrigger = null,
    // is contextMenu initialized with at least one menu?
        initialized = false,
    // window handle
        $win = $(window),
    // number of registered menus
        counter = 0,
    // mapping selector to namespace
        namespaces = {},
    // mapping namespace to options
        menus = {},
    // custom command type handlers
        types = {},
    // default values
        defaults = {
            // selector of contextMenu trigger
            selector: null,
            // where to append the menu to
            appendTo: null,
            // method to trigger context menu ["right", "left", "hover"]
            trigger: 'right',
            // hide menu when mouse leaves trigger / menu elements
            autoHide: false,
            // ms to wait before showing a hover-triggered context menu
            delay: 200,
            // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu
            // as long as the trigger happened on one of the trigger-element's child nodes
            reposition: true,

            // Default classname configuration to be able avoid conflicts in frameworks
            classNames: {

                hover: 'context-menu-hover', // Item hover
                disabled: 'context-menu-disabled', // Item disabled
                visible: 'context-menu-visible', // Item visible
                notSelectable: 'context-menu-not-selectable', // Item not selectable

                icon: 'context-menu-icon',
                iconEdit: 'context-menu-icon-edit',
                iconCut: 'context-menu-icon-cut',
                iconCopy: 'context-menu-icon-copy',
                iconPaste: 'context-menu-icon-paste',
                iconDelete: 'context-menu-icon-delete',
                iconAdd: 'context-menu-icon-add',
                iconQuit: 'context-menu-icon-quit'
            },

            // determine position to show menu at
            determinePosition: function ($menu) {
                // position to the lower middle of the trigger element
                if ($.ui && $.ui.position) {
                    // .position() is provided as a jQuery UI utility
                    // (...and it won't work on hidden elements)
                    $menu.css('display', 'block').position({
                        my: 'center top',
                        at: 'center bottom',
                        of: this,
                        offset: '0 5',
                        collision: 'fit'
                    }).css('display', 'none');
                } else {
                    // determine contextMenu position
                    var offset = this.offset();
                    offset.top += this.outerHeight();
                    offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;
                    $menu.css(offset);
                }
            },
            // position menu
            position: function (opt, x, y) {
                var offset;
                // determine contextMenu position
                if (!x && !y) {
                    opt.determinePosition.call(this, opt.$menu);
                    return;
                } else if (x === 'maintain' && y === 'maintain') {
                    // x and y must not be changed (after re-show on command click)
                    offset = opt.$menu.position();
                } else {
                    // x and y are given (by mouse event)
                    offset = { top: y, left: x };
                }

                // correct offset if viewport demands it
                var bottom = $win.scrollTop() + $win.height(),
                    right = $win.scrollLeft() + $win.width(),
                    height = opt.$menu.outerHeight(),
                    width = opt.$menu.outerWidth();

                if (offset.top + height > bottom) {
                    offset.top -= height;
                }

                if (offset.top < 0) {
                    offset.top = 0;
                }

                if (offset.left + width > right) {
                    offset.left -= width;
                }

                if (offset.left < 0) {
                    offset.left = 0;
                }

                opt.$menu.css(offset);
            },
            // position the sub-menu
            positionSubmenu: function ($menu) {
                if ($.ui && $.ui.position) {
                    // .position() is provided as a jQuery UI utility
                    // (...and it won't work on hidden elements)
                    $menu.css('display', 'block').position({
                        my: 'left top',
                        at: 'right top',
                        of: this,
                        collision: 'flipfit fit'
                    }).css('display', '');
                } else {
                    // determine contextMenu position
                    var offset = {
                        top: 0,
                        left: this.outerWidth()
                    };
                    $menu.css(offset);
                }
            },
            // offset to add to zIndex
            zIndex: 1,
            // show hide animation settings
            animation: {
                duration: 50,
                show: 'slideDown',
                hide: 'slideUp'
            },
            // events
            events: {
                show: $.noop,
                hide: $.noop
            },
            // default callback
            callback: null,
            // list of contextMenu items
            items: {}
        },
    // mouse position for hover activation
        hoveract = {
            timer: null,
            pageX: null,
            pageY: null
        },
    // determine zIndex
        zindex = function ($t) {
            var zin = 0,
                $tt = $t;

            while (true) {
                zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);
                $tt = $tt.parent();
                if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {
                    break;
                }
            }
            return zin;
        },
    // event handlers
        handle = {
            // abort anything
            abortevent: function (e) {
                e.preventDefault();
                e.stopImmediatePropagation();
            },
            // contextmenu show dispatcher
            contextmenu: function (e) {
                var $this = $(this);

                // disable actual context-menu if we are using the right mouse button as the trigger
                if (e.data.trigger === 'right') {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                }

                // abort native-triggered events unless we're triggering on right click
                if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {
                    return;
                }

                // abort event if menu is visible for this trigger
                if ($this.hasClass('context-menu-active')) {
                    return;
                }

                if (!$this.hasClass('context-menu-disabled')) {
                    // theoretically need to fire a show event at <menu>
                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus
                    // var evt = jQuery.Event("show", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });
                    // e.data.$menu.trigger(evt);

                    $currentTrigger = $this;
                    if (e.data.build) {
                        var built = e.data.build($currentTrigger, e);
                        // abort if build() returned false
                        if (built === false) {
                            return;
                        }

                        // dynamically build menu on invocation
                        e.data = $.extend(true, {}, defaults, e.data, built || {});

                        // abort if there are no items to display
                        if (!e.data.items || $.isEmptyObject(e.data.items)) {
                            // Note: jQuery captures and ignores errors from event handlers
                            if (window.console) {
                                (console.error || console.log).call(console, 'No items specified to show in contextMenu');
                            }

                            throw new Error('No Items specified');
                        }

                        // backreference for custom command type creation
                        e.data.$trigger = $currentTrigger;

                        op.create(e.data);
                    }
                    var showMenu = false;
                    for (var item in e.data.items) {
                        if (e.data.items.hasOwnProperty(item)) {
                            var visible;
                            if ($.isFunction(e.data.items[item].visible)) {
                                visible = e.data.items[item].visible.call($(e.currentTarget), item, e.data);
                            } else if (typeof item.visible !== 'undefined') {
                                visible = e.data.items[item].visible === true;
                            } else {
                                visible = true;
                            }
                            if (visible) {
                                showMenu = true;
                            }
                        }
                    }
                    if (showMenu) {
                        // show menu
                        op.show.call($this, e.data, e.pageX, e.pageY);
                    }
                }
            },
            // contextMenu left-click trigger
            click: function (e) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $(this).trigger($.Event('contextmenu', { data: e.data, pageX: e.pageX, pageY: e.pageY }));
            },
            // contextMenu right-click trigger
            mousedown: function (e) {
                // register mouse down
                var $this = $(this);

                // hide any previous menus
                if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {
                    $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');
                }

                // activate on right click
                if (e.button === 2) {
                    $currentTrigger = $this.data('contextMenuActive', true);
                }
            },
            // contextMenu right-click trigger
            mouseup: function (e) {
                // show menu
                var $this = $(this);
                if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    $currentTrigger = $this;
                    $this.trigger($.Event('contextmenu', { data: e.data, pageX: e.pageX, pageY: e.pageY }));
                }

                $this.removeData('contextMenuActive');
            },
            // contextMenu hover trigger
            mouseenter: function (e) {
                var $this = $(this),
                    $related = $(e.relatedTarget),
                    $document = $(document);

                // abort if we're coming from a menu
                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {
                    return;
                }

                // abort if a menu is shown
                if ($currentTrigger && $currentTrigger.length) {
                    return;
                }

                hoveract.pageX = e.pageX;
                hoveract.pageY = e.pageY;
                hoveract.data = e.data;
                $document.on('mousemove.contextMenuShow', handle.mousemove);
                hoveract.timer = setTimeout(function () {
                    hoveract.timer = null;
                    $document.off('mousemove.contextMenuShow');
                    $currentTrigger = $this;
                    $this.trigger($.Event('contextmenu', {
                        data: hoveract.data,
                        pageX: hoveract.pageX,
                        pageY: hoveract.pageY
                    }));
                }, e.data.delay);
            },
            // contextMenu hover trigger
            mousemove: function (e) {
                hoveract.pageX = e.pageX;
                hoveract.pageY = e.pageY;
            },
            // contextMenu hover trigger
            mouseleave: function (e) {
                // abort if we're leaving for a menu
                var $related = $(e.relatedTarget);
                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {
                    return;
                }

                try {
                    clearTimeout(hoveract.timer);
                } catch (e) {
                }

                hoveract.timer = null;
            },
            // click on layer to hide contextMenu
            layerClick: function (e) {
                var $this = $(this),
                    root = $this.data('contextMenuRoot'),
                    button = e.button,
                    x = e.pageX,
                    y = e.pageY,
                    target,
                    offset;

                e.preventDefault();
                e.stopImmediatePropagation();

                setTimeout(function () {
                    var $window;
                    var triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));

                    // find the element that would've been clicked, wasn't the layer in the way
                    if (document.elementFromPoint) {
                        root.$layer.hide();
                        target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop());
                        root.$layer.show();
                    }

                    if (root.reposition && triggerAction) {
                        if (document.elementFromPoint) {
                            if (root.$trigger.is(target) || root.$trigger.has(target).length) {
                                root.position.call(root.$trigger, root, x, y);
                                return;
                            }
                        } else {
                            offset = root.$trigger.offset();
                            $window = $(window);
                            // while this looks kinda awful, it's the best way to avoid
                            // unnecessarily calculating any positions
                            offset.top += $window.scrollTop();
                            if (offset.top <= e.pageY) {
                                offset.left += $window.scrollLeft();
                                if (offset.left <= e.pageX) {
                                    offset.bottom = offset.top + root.$trigger.outerHeight();
                                    if (offset.bottom >= e.pageY) {
                                        offset.right = offset.left + root.$trigger.outerWidth();
                                        if (offset.right >= e.pageX) {
                                            // reposition
                                            root.position.call(root.$trigger, root, x, y);
                                            return;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    if (target && triggerAction) {
                        root.$trigger.one('contextmenu:hidden', function () {
                            $(target).contextMenu({ x: x, y: y });
                        });
                    }

                    root.$menu.trigger('contextmenu:hide');
                }, 50);
            },
            // key handled :hover
            keyStop: function (e, opt) {
                if (!opt.isInput) {
                    e.preventDefault();
                }

                e.stopPropagation();
            },
            key: function (e) {

                var opt = {};

                // Only get the data from $currentTrigger if it exists
                if ($currentTrigger) {
                    opt = $currentTrigger.data('contextMenu') || {};
                }

                switch (e.keyCode) {
                    case 9:
                    case 38: // up
                        handle.keyStop(e, opt);
                        // if keyCode is [38 (up)] or [9 (tab) with shift]
                        if (opt.isInput) {
                            if (e.keyCode === 9 && e.shiftKey) {
                                e.preventDefault();
                                opt.$selected && opt.$selected.find('input, textarea, select').blur();
                                opt.$menu.trigger('prevcommand');
                                return;
                            } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {
                                // checkboxes don't capture this key
                                e.preventDefault();
                                return;
                            }
                        } else if (e.keyCode !== 9 || e.shiftKey) {
                            opt.$menu.trigger('prevcommand');
                            return;
                        }
                        // omitting break;
                        // case 9: // tab - reached through omitted break;
                    case 40: // down
                        handle.keyStop(e, opt);
                        if (opt.isInput) {
                            if (e.keyCode === 9) {
                                e.preventDefault();
                                opt.$selected && opt.$selected.find('input, textarea, select').blur();
                                opt.$menu.trigger('nextcommand');
                                return;
                            } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {
                                // checkboxes don't capture this key
                                e.preventDefault();
                                return;
                            }
                        } else {
                            opt.$menu.trigger('nextcommand');
                            return;
                        }
                        break;

                    case 37: // left
                        handle.keyStop(e, opt);
                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {
                            break;
                        }

                        if (!opt.$selected.parent().hasClass('context-menu-root')) {
                            var $parent = opt.$selected.parent().parent();
                            opt.$selected.trigger('contextmenu:blur');
                            opt.$selected = $parent;
                            return;
                        }
                        break;

                    case 39: // right
                        handle.keyStop(e, opt);
                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {
                            break;
                        }

                        var itemdata = opt.$selected.data('contextMenu') || {};
                        if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {
                            opt.$selected = null;
                            itemdata.$selected = null;
                            itemdata.$menu.trigger('nextcommand');
                            return;
                        }
                        break;

                    case 35: // end
                    case 36: // home
                        if (opt.$selected && opt.$selected.find('input, textarea, select').length) {
                            return;
                        } else {
                            (opt.$selected && opt.$selected.parent() || opt.$menu)
                                .children(':not(.' + opt.classNames.disabled + ', .' + opt.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()
                                .trigger('contextmenu:focus');
                            e.preventDefault();
                            return;
                        }
                        break;

                    case 13: // enter
                        handle.keyStop(e, opt);
                        if (opt.isInput) {
                            if (opt.$selected && !opt.$selected.is('textarea, select')) {
                                e.preventDefault();
                                return;
                            }
                            break;
                        }
                        if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {
                            opt.$selected.trigger('mouseup');
                        }
                        return;

                    case 32: // space
                    case 33: // page up
                    case 34: // page down
                        // prevent browser from scrolling down while menu is visible
                        handle.keyStop(e, opt);
                        return;

                    case 27: // esc
                        handle.keyStop(e, opt);
                        opt.$menu.trigger('contextmenu:hide');
                        return;

                    default: // 0-9, a-z
                        var k = (String.fromCharCode(e.keyCode)).toUpperCase();
                        if (opt.accesskeys && opt.accesskeys[k]) {
                            // according to the specs accesskeys must be invoked immediately
                            opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup');
                            return;
                        }
                        break;
                }
                // pass event to selected item,
                // stop propagation to avoid endless recursion
                e.stopPropagation();
                if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {
                    opt.$selected.trigger(e);
                }
            },
            // select previous possible command in menu
            prevItem: function (e) {
                e.stopPropagation();
                var opt = $(this).data('contextMenu') || {};
                var root = $(this).data('contextMenuRoot') || {};

                // obtain currently selected menu
                if (opt.$selected) {
                    var $s = opt.$selected;
                    opt = opt.$selected.parent().data('contextMenu') || {};
                    opt.$selected = $s;
                }

                var $children = opt.$menu.children(),
                    $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),
                    $round = $prev;

                // skip disabled
                while ($prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable)) {
                    if ($prev.prev().length) {
                        $prev = $prev.prev();
                    } else {
                        $prev = $children.last();
                    }
                    if ($prev.is($round)) {
                        // break endless loop
                        return;
                    }
                }

                // leave current
                if (opt.$selected) {
                    handle.itemMouseleave.call(opt.$selected.get(0), e);
                }

                // activate next
                handle.itemMouseenter.call($prev.get(0), e);

                // focus input
                var $input = $prev.find('input, textarea, select');
                if ($input.length) {
                    $input.focus();
                }
            },
            // select next possible command in menu
            nextItem: function (e) {
                e.stopPropagation();
                var opt = $(this).data('contextMenu') || {};
                var root = $(this).data('contextMenuRoot') || {};

                // obtain currently selected menu
                if (opt.$selected) {
                    var $s = opt.$selected;
                    opt = opt.$selected.parent().data('contextMenu') || {};
                    opt.$selected = $s;
                }

                var $children = opt.$menu.children(),
                    $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),
                    $round = $next;

                // skip disabled
                while ($next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable)) {
                    if ($next.next().length) {
                        $next = $next.next();
                    } else {
                        $next = $children.first();
                    }
                    if ($next.is($round)) {
                        // break endless loop
                        return;
                    }
                }

                // leave current
                if (opt.$selected) {
                    handle.itemMouseleave.call(opt.$selected.get(0), e);
                }

                // activate next
                handle.itemMouseenter.call($next.get(0), e);

                // focus input
                var $input = $next.find('input, textarea, select');
                if ($input.length) {
                    $input.focus();
                }
            },
            // flag that we're inside an input so the key handler can act accordingly
            focusInput: function () {
                var $this = $(this).closest('.context-menu-item'),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                root.$selected = opt.$selected = $this;
                root.isInput = opt.isInput = true;
            },
            // flag that we're inside an input so the key handler can act accordingly
            blurInput: function () {
                var $this = $(this).closest('.context-menu-item'),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                root.isInput = opt.isInput = false;
            },
            // :hover on menu
            menuMouseenter: function () {
                var root = $(this).data().contextMenuRoot;
                root.hovering = true;
            },
            // :hover on menu
            menuMouseleave: function (e) {
                var root = $(this).data().contextMenuRoot;
                if (root.$layer && root.$layer.is(e.relatedTarget)) {
                    root.hovering = false;
                }
            },
            // :hover done manually so key handling is possible
            itemMouseenter: function (e) {
                var $this = $(this),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                root.hovering = true;

                // abort if we're re-entering
                if (e && root.$layer && root.$layer.is(e.relatedTarget)) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                }

                // make sure only one item is selected
                (opt.$menu ? opt : root).$menu
                    .children('.hover').trigger('contextmenu:blur');

                if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {
                    opt.$selected = null;
                    return;
                }

                $this.trigger('contextmenu:focus');
            },
            // :hover done manually so key handling is possible
            itemMouseleave: function (e) {
                var $this = $(this),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {
                    if (typeof root.$selected !== 'undefined' && root.$selected !== null) {
                        root.$selected.trigger('contextmenu:blur');
                    }
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    root.$selected = opt.$selected = opt.$node;
                    return;
                }

                $this.trigger('contextmenu:blur');
            },
            // contextMenu item click
            itemClick: function (e) {
                var $this = $(this),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot,
                    key = data.contextMenuKey,
                    callback;

                // abort if the key is unknown or disabled or is a menu
                if (!opt.items[key] || $this.is('.' + root.classNames.disabled + ', .context-menu-submenu, .context-menu-separator, .' + root.classNames.notSelectable)) {
                    return;
                }

                e.preventDefault();
                e.stopImmediatePropagation();

                if ($.isFunction(root.callbacks[key]) && Object.prototype.hasOwnProperty.call(root.callbacks, key)) {
                    // item-specific callback
                    callback = root.callbacks[key];
                } else if ($.isFunction(root.callback)) {
                    // default callback
                    callback = root.callback;
                } else {
                    // no callback, no action
                    return;
                }

                // hide menu if callback doesn't stop that
                if (callback.call(root.$trigger, key, root) !== false) {
                    root.$menu.trigger('contextmenu:hide');
                } else if (root.$menu.parent().length) {
                    op.update.call(root.$trigger, root);
                }
            },
            // ignore click events on input elements
            inputClick: function (e) {
                e.stopImmediatePropagation();
            },
            // hide <menu>
            hideMenu: function (e, data) {
                var root = $(this).data('contextMenuRoot');
                op.hide.call(root.$trigger, root, data && data.force);
            },
            // focus <command>
            focusItem: function (e) {
                e.stopPropagation();
                var $this = $(this),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                $this
                    .addClass([root.classNames.hover, root.classNames.visible].join(' '))
                    .siblings()
                    .removeClass(root.classNames.visible)
                    .filter(root.classNames.hover)
                    .trigger('contextmenu:blur');

                // remember selected
                opt.$selected = root.$selected = $this;

                // position sub-menu - do after show so dumb $.ui.position can keep up
                if (opt.$node) {
                    root.positionSubmenu.call(opt.$node, opt.$menu);
                }
            },
            // blur <command>
            blurItem: function (e) {
                e.stopPropagation();
                var $this = $(this),
                    data = $this.data(),
                    opt = data.contextMenu,
                    root = data.contextMenuRoot;

                if (opt.autoHide) { // for tablets and touch screens this needs to remain
                    $this.removeClass(root.classNames.visible);
                }
                $this.removeClass(root.classNames.hover);
                opt.$selected = null;
            }
        },
    // operations
        op = {
            show: function (opt, x, y) {
                var $trigger = $(this),
                    css = {};

                // hide any open menus
                $('#context-menu-layer').trigger('mousedown');

                // backreference for callbacks
                opt.$trigger = $trigger;

                // show event
                if (opt.events.show.call($trigger, opt) === false) {
                    $currentTrigger = null;
                    return;
                }

                // create or update context menu
                op.update.call($trigger, opt);

                // position menu
                opt.position.call($trigger, opt, x, y);

                // make sure we're in front
                if (opt.zIndex) {
                    css.zIndex = zindex($trigger) + opt.zIndex;
                }

                // add layer
                op.layer.call(opt.$menu, opt, css.zIndex);

                // adjust sub-menu zIndexes
                opt.$menu.find('ul').css('zIndex', css.zIndex + 1);

                // position and show context menu
                opt.$menu.css(css)[opt.animation.show](opt.animation.duration, function () {
                    $trigger.trigger('contextmenu:visible');
                });
                // make options available and set state
                $trigger
                    .data('contextMenu', opt)
                    .addClass('context-menu-active');

                // register key handler
                $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);
                // register autoHide handler
                if (opt.autoHide) {
                    // mouse position handler
                    $(document).on('mousemove.contextMenuAutoHide', function (e) {
                        // need to capture the offset on mousemove,
                        // since the page might've been scrolled since activation
                        var pos = $trigger.offset();
                        pos.right = pos.left + $trigger.outerWidth();
                        pos.bottom = pos.top + $trigger.outerHeight();

                        if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {
                            // if mouse in menu...
                            opt.$menu.trigger('contextmenu:hide');
                        }
                    });
                }
            },
            hide: function (opt, force) {
                var $trigger = $(this);
                if (!opt) {
                    opt = $trigger.data('contextMenu') || {};
                }

                // hide event
                if (!force && opt.events && opt.events.hide.call($trigger, opt) === false) {
                    return;
                }

                // remove options and revert state
                $trigger
                    .removeData('contextMenu')
                    .removeClass('context-menu-active');

                if (opt.$layer) {
                    // keep layer for a bit so the contextmenu event can be aborted properly by opera
                    setTimeout((function ($layer) {
                        return function () {
                            $layer.remove();
                        };
                    })(opt.$layer), 10);

                    try {
                        delete opt.$layer;
                    } catch (e) {
                        opt.$layer = null;
                    }
                }

                // remove handle
                $currentTrigger = null;
                // remove selected
                opt.$menu.find('.' + opt.classNames.hover).trigger('contextmenu:blur');
                opt.$selected = null;
                // unregister key and mouse handlers
                // $(document).off('.contextMenuAutoHide keydown.contextMenu'); // http://bugs.jquery.com/ticket/10705
                $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');
                // hide menu
                opt.$menu && opt.$menu[opt.animation.hide](opt.animation.duration, function () {
                    // tear down dynamically built menu after animation is completed.
                    if (opt.build) {
                        opt.$menu.remove();
                        $.each(opt, function (key) {
                            switch (key) {
                                case 'ns':
                                case 'selector':
                                case 'build':
                                case 'trigger':
                                    return true;

                                default:
                                    opt[key] = undefined;
                                    try {
                                        delete opt[key];
                                    } catch (e) {
                                    }
                                    return true;
                            }
                        });
                    }

                    setTimeout(function () {
                        $trigger.trigger('contextmenu:hidden');
                    }, 10);
                });
            },
            create: function (opt, root) {
                if (root === undefined) {
                    root = opt;
                }
                // create contextMenu
                opt.$menu = $('<ul class="context-menu-list"></ul>').addClass(opt.className || '').data({
                    'contextMenu': opt,
                    'contextMenuRoot': root
                });

                $.each(['callbacks', 'commands', 'inputs'], function (i, k) {
                    opt[k] = {};
                    if (!root[k]) {
                        root[k] = {};
                    }
                });

                root.accesskeys || (root.accesskeys = {});

                function createNameNode(item) {
                    var $name = $('<span></span>');
                    if (item._accesskey) {
                        if (item._beforeAccesskey) {
                            $name.append(document.createTextNode(item._beforeAccesskey));
                        }
                        $('<span></span>')
                            .addClass('context-menu-accesskey')
                            .text(item._accesskey)
                            .appendTo($name);
                        if (item._afterAccesskey) {
                            $name.append(document.createTextNode(item._afterAccesskey));
                        }
                    } else {
                        $name.text(item.name);
                    }
                    return $name;
                }

                // create contextMenu items
                $.each(opt.items, function (key, item) {
                    var $t = $('<li class="context-menu-item"></li>').addClass(item.className || ''),
                        $label = null,
                        $input = null;

                    // iOS needs to see a click-event bound to an element to actually
                    // have the TouchEvents infrastructure trigger the click event
                    $t.on('click', $.noop);

                    // Make old school string seperator a real item so checks wont be
                    // akward later.
                    if (typeof item === 'string') {
                        item = { type: 'cm_seperator' };
                    }

                    item.$node = $t.data({
                        'contextMenu': opt,
                        'contextMenuRoot': root,
                        'contextMenuKey': key
                    });

                    // register accesskey
                    // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that
                    if (typeof item.accesskey !== 'undefined') {
                        var aks = splitAccesskey(item.accesskey);
                        for (var i = 0, ak; ak = aks[i]; i++) {
                            if (!root.accesskeys[ak]) {
                                root.accesskeys[ak] = item;
                                var matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));
                                if (matched) {
                                    item._beforeAccesskey = matched[1];
                                    item._accesskey = matched[2];
                                    item._afterAccesskey = matched[3];
                                }
                                break;
                            }
                        }
                    }

                    if (item.type && types[item.type]) {
                        // run custom type handler
                        types[item.type].call($t, item, opt, root);
                        // register commands
                        $.each([opt, root], function (i, k) {
                            k.commands[key] = item;
                            if ($.isFunction(item.callback)) {
                                k.callbacks[key] = item.callback;
                            }
                        });
                    } else {
                        // add label for input
                        if (item.type === 'cm_seperator') {
                            $t.addClass('context-menu-separator ' + root.classNames.notSelectable);
                        } else if (item.type === 'html') {
                            $t.addClass('context-menu-html ' + root.classNames.notSelectable);
                        } else if (item.type) {
                            $label = $('<label></label>').appendTo($t);
                            createNameNode(item).appendTo($t);

                            $t.addClass('context-menu-input');
                            opt.hasTypes = true;
                            $.each([opt, root], function (i, k) {
                                k.commands[key] = item;
                                k.inputs[key] = item;
                            });
                        } else if (item.items) {
                            item.type = 'sub';
                        }

                        switch (item.type) {
                            case 'seperator':
                                break;

                            case 'text':
                                $input = $('<input type="text" value="1" name="" value="">')
                                    .attr('name', 'context-menu-input-' + key)
                                    .val(item.value || '')
                                    .appendTo($label);
                                break;

                            case 'textarea':
                                $input = $('<textarea name=""></textarea>')
                                    .attr('name', 'context-menu-input-' + key)
                                    .val(item.value || '')
                                    .appendTo($label);

                                if (item.height) {
                                    $input.height(item.height);
                                }
                                break;

                            case 'checkbox':
                                $input = $('<input type="checkbox" value="1" name="" value="">')
                                    .attr('name', 'context-menu-input-' + key)
                                    .val(item.value || '')
                                    .prop('checked', !!item.selected)
                                    .prependTo($label);
                                break;

                            case 'radio':
                                $input = $('<input type="radio" value="1" name="" value="">')
                                    .attr('name', 'context-menu-input-' + item.radio)
                                    .val(item.value || '')
                                    .prop('checked', !!item.selected)
                                    .prependTo($label);
                                break;

                            case 'select':
                                $input = $('<select name="">')
                                    .attr('name', 'context-menu-input-' + key)
                                    .appendTo($label);
                                if (item.options) {
                                    $.each(item.options, function (value, text) {
                                        $('<option></option>').val(value).text(text).appendTo($input);
                                    });
                                    $input.val(item.selected);
                                }
                                break;

                            case 'sub':
                                createNameNode(item).appendTo($t);

                                item.appendTo = item.$node;
                                op.create(item, root);
                                $t.data('contextMenu', item).addClass('context-menu-submenu');
                                item.callback = null;
                                break;

                            case 'html':
                                $(item.html).appendTo($t);
                                break;

                            default:
                                $.each([opt, root], function (i, k) {
                                    k.commands[key] = item;
                                    if ($.isFunction(item.callback)) {
                                        k.callbacks[key] = item.callback;
                                    }
                                });
                                createNameNode(item).appendTo($t);
                                break;
                        }

                        // disable key listener in <input>
                        if (item.type && item.type !== 'sub' && item.type !== 'html' && item.type !== 'cm_seperator') {
                            $input
                                .on('focus', handle.focusInput)
                                .on('blur', handle.blurInput);

                            if (item.events) {
                                $input.on(item.events, opt);
                            }
                        }

                        // add icons
                        if (item.icon) {
                            if ($.isFunction(item.icon)) {
                                item._icon = item.icon.call(this, $t, key, item);
                            } else {
                                item._icon = root.classNames.icon + '-' + item.icon;

                            }
                            $t.addClass(item._icon);
                        }
                    }

                    // cache contained elements
                    item.$input = $input;
                    item.$label = $label;

                    // attach item to menu
                    $t.appendTo(opt.$menu);

                    // Disable text selection
                    if (!opt.hasTypes && $.support.eventSelectstart) {
                        // browsers support user-select: none,
                        // IE has a special event for text-selection
                        // browsers supporting neither will not be preventing text-selection
                        $t.on('selectstart.disableTextSelect', handle.abortevent);
                    }
                });
                // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)
                if (!opt.$node) {
                    opt.$menu.css('display', 'none').addClass('context-menu-root');
                }
                opt.$menu.appendTo(opt.appendTo || document.body);
            },
            resize: function ($menu, nested) {
                // determine widths of submenus, as CSS won't grow them automatically
                // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;
                // kinda sucks hard...

                // determine width of absolutely positioned element
                $menu.css({ position: 'absolute', display: 'block' });
                // don't apply yet, because that would break nested elements' widths
                $menu.data('width', Math.ceil($menu.width()));
                // reset styles so they allow nested elements to grow/shrink naturally
                $menu.css({
                    position: 'static',
                    minWidth: '0px',
                    maxWidth: '100000px'
                });
                // identify width of nested menus
                $menu.find('> li > ul').each(function () {
                    op.resize($(this), true);
                });
                // reset and apply changes in the end because nested
                // elements' widths wouldn't be calculatable otherwise
                if (!nested) {
                    $menu.find('ul').addBack().css({
                        position: '',
                        display: '',
                        minWidth: '',
                        maxWidth: ''
                    }).width(function () {
                        return $(this).data('width');
                    });
                }
            },
            update: function (opt, root) {
                var $trigger = this;
                if (root === undefined) {
                    root = opt;
                    op.resize(opt.$menu);
                }
                // re-check disabled for each item
                opt.$menu.children().each(function () {
                    var $item = $(this),
                        key = $item.data('contextMenuKey'),
                        item = opt.items[key],
                        disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || item.disabled === true,
                        visible;
                    if ($.isFunction(item.visible)) {
                        visible = item.visible.call($trigger, key, root);
                    } else if (typeof item.visible !== 'undefined') {
                        visible = item.visible === true;
                    } else {
                        visible = true;
                    }
                    $item[visible ? 'show' : 'hide']();

                    // dis- / enable item
                    $item[disabled ? 'addClass' : 'removeClass'](root.classNames.disabled);

                    if ($.isFunction(item.icon)) {
                        $item.removeClass(item._icon);
                        item._icon = item.icon.call(this, $trigger, key, item);
                        $item.addClass(item._icon);
                    }

                    if (item.type) {
                        // dis- / enable input elements
                        $item.find('input, select, textarea').prop('disabled', disabled);

                        // update input states
                        switch (item.type) {
                            case 'text':
                            case 'textarea':
                                item.$input.val(item.value || '');
                                break;

                            case 'checkbox':
                            case 'radio':
                                item.$input.val(item.value || '').prop('checked', !!item.selected);
                                break;

                            case 'select':
                                item.$input.val(item.selected || '');
                                break;
                        }
                    }

                    if (item.$menu) {
                        // update sub-menu
                        op.update.call($trigger, item, root);
                    }
                });
            },
            layer: function (opt, zIndex) {
                // add transparent layer for click area
                // filter and background for Internet Explorer, Issue #23
                var $layer = opt.$layer = $('<div id="context-menu-layer" style="position:fixed; z-index:' + zIndex + '; top:0; left:0; opacity: 0; filter: alpha(opacity=0); background-color: #000;"></div>')
                    .css({ height: $win.height(), width: $win.width(), display: 'block' })
                    .data('contextMenuRoot', opt)
                    .insertBefore(this)
                    .on('contextmenu', handle.abortevent)
                    .on('mousedown', handle.layerClick);

                // IE6 doesn't know position:fixed;
                if (document.body.style.maxWidth === undefined) { // IE6 doesn't support maxWidth
                    $layer.css({
                        'position': 'absolute',
                        'height': $(document).height()
                    });
                }

                return $layer;
            }
        };

    // split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key
    function splitAccesskey(val) {
        var t = val.split(/\s+/),
            keys = [];

        for (var i = 0, k; k = t[i]; i++) {
            k = k.charAt(0).toUpperCase(); // first character only
            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.
            // a map to look up already used access keys would be nice
            keys.push(k);
        }

        return keys;
    }

    // handle contextMenu triggers
    $.fn.contextMenu = function (operation) {
        var $t = this, $o = operation;
        if (this.length > 0) {  // this is not a build on demand menu
            if (operation === undefined) {
                this.first().trigger('contextmenu');
            } else if (operation.x !== undefined && operation.y !== undefined) {
                this.first().trigger($.Event('contextmenu', { pageX: operation.x, pageY: operation.y }));
            } else if (operation === 'hide') {
                var $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;
                $menu && $menu.trigger('contextmenu:hide');
            } else if (operation === 'destroy') {
                $.contextMenu('destroy', { context: this });
            } else if ($.isPlainObject(operation)) {
                operation.context = this;
                $.contextMenu('create', operation);
            } else if (operation) {
                this.removeClass('context-menu-disabled');
            } else if (!operation) {
                this.addClass('context-menu-disabled');
            }
        } else {
            $.each(menus, function () {
                if (this.selector === $t.selector) {
                    $o.data = this;

                    $.extend($o.data, { trigger: 'demand' });
                }
            });

            handle.contextmenu.call($o.target, $o);
        }

        return this;
    };

    // manage contextMenu instances
    $.contextMenu = function (operation, options) {
        if (typeof operation !== 'string') {
            options = operation;
            operation = 'create';
        }

        if (typeof options === 'string') {
            options = { selector: options };
        } else if (options === undefined) {
            options = {};
        }

        // merge with default options
        var o = $.extend(true, {}, defaults, options || {});
        var $document = $(document);
        var $context = $document;
        var _hasContext = false;

        if (!o.context || !o.context.length) {
            o.context = document;
        } else {
            // you never know what they throw at you...
            $context = $(o.context).first();
            o.context = $context.get(0);
            _hasContext = o.context !== document;
        }

        switch (operation) {
            case 'create':
                // no selector no joy
                if (!o.selector) {
                    throw new Error('No selector specified');
                }
                // make sure internal classes are not bound to
                if (o.selector.match(/.context-menu-(list|item|input)($|\s)/)) {
                    throw new Error('Cannot bind to selector "' + o.selector + '" as it contains a reserved className');
                }
                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {
                    throw new Error('No Items specified');
                }
                counter++;
                o.ns = '.contextMenu' + counter;
                if (!_hasContext) {
                    namespaces[o.selector] = o.ns;
                }
                menus[o.ns] = o;

                // default to right click
                if (!o.trigger) {
                    o.trigger = 'right';
                }

                if (!initialized) {
                    // make sure item click is registered first
                    $document
                        .on({
                            'contextmenu:hide.contextMenu': handle.hideMenu,
                            'prevcommand.contextMenu': handle.prevItem,
                            'nextcommand.contextMenu': handle.nextItem,
                            'contextmenu.contextMenu': handle.abortevent,
                            'mouseenter.contextMenu': handle.menuMouseenter,
                            'mouseleave.contextMenu': handle.menuMouseleave
                        }, '.context-menu-list')
                        .on('mouseup.contextMenu', '.context-menu-input', handle.inputClick)
                        .on({
                            'mouseup.contextMenu': handle.itemClick,
                            'contextmenu:focus.contextMenu': handle.focusItem,
                            'contextmenu:blur.contextMenu': handle.blurItem,
                            'contextmenu.contextMenu': handle.abortevent,
                            'mouseenter.contextMenu': handle.itemMouseenter,
                            'mouseleave.contextMenu': handle.itemMouseleave
                        }, '.context-menu-item');

                    initialized = true;
                }

                // engage native contextmenu event
                $context
                    .on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);

                if (_hasContext) {
                    // add remove hook, just in case
                    $context.on('remove' + o.ns, function () {
                        $(this).contextMenu('destroy');
                    });
                }

                switch (o.trigger) {
                    case 'hover':
                        $context
                            .on('mouseenter' + o.ns, o.selector, o, handle.mouseenter)
                            .on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);
                        break;

                    case 'left':
                        $context.on('click' + o.ns, o.selector, o, handle.click);
                        break;
                        /*
                         default:
                         // http://www.quirksmode.org/dom/events/contextmenu.html
                         $document
                         .on('mousedown' + o.ns, o.selector, o, handle.mousedown)
                         .on('mouseup' + o.ns, o.selector, o, handle.mouseup);
                         break;
                         */
                }

                // create menu
                if (!o.build) {
                    op.create(o);
                }
                break;

            case 'destroy':
                var $visibleMenu;
                if (_hasContext) {
                    // get proper options
                    var context = o.context;
                    $.each(menus, function (ns, o) {
                        if (o.context !== context) {
                            return true;
                        }

                        $visibleMenu = $('.context-menu-list').filter(':visible');
                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {
                            $visibleMenu.trigger('contextmenu:hide', { force: true });
                        }

                        try {
                            if (menus[o.ns].$menu) {
                                menus[o.ns].$menu.remove();
                            }

                            delete menus[o.ns];
                        } catch (e) {
                            menus[o.ns] = null;
                        }

                        $(o.context).off(o.ns);

                        return true;
                    });
                } else if (!o.selector) {
                    $document.off('.contextMenu .contextMenuAutoHide');
                    $.each(menus, function (ns, o) {
                        $(o.context).off(o.ns);
                    });

                    namespaces = {};
                    menus = {};
                    counter = 0;
                    initialized = false;

                    $('#context-menu-layer, .context-menu-list').remove();
                } else if (namespaces[o.selector]) {
                    $visibleMenu = $('.context-menu-list').filter(':visible');
                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {
                        $visibleMenu.trigger('contextmenu:hide', { force: true });
                    }

                    try {
                        if (menus[namespaces[o.selector]].$menu) {
                            menus[namespaces[o.selector]].$menu.remove();
                        }

                        delete menus[namespaces[o.selector]];
                    } catch (e) {
                        menus[namespaces[o.selector]] = null;
                    }

                    $document.off(namespaces[o.selector]);
                }
                break;

            case 'html5':
                // if <command> or <menuitem> are not handled by the browser,
                // or options was a bool true,
                // initialize $.contextMenu for them
                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {
                    $('menu[type="context"]').each(function () {
                        if (this.id) {
                            $.contextMenu({
                                selector: '[contextmenu=' + this.id + ']',
                                items: $.contextMenu.fromMenu(this)
                            });
                        }
                    }).css('display', 'none');
                }
                break;

            default:
                throw new Error('Unknown operation "' + operation + '"');
        }

        return this;
    };

    // import values into <input> commands
    $.contextMenu.setInputValues = function (opt, data) {
        if (data === undefined) {
            data = {};
        }

        $.each(opt.inputs, function (key, item) {
            switch (item.type) {
                case 'text':
                case 'textarea':
                    item.value = data[key] || '';
                    break;

                case 'checkbox':
                    item.selected = data[key] ? true : false;
                    break;

                case 'radio':
                    item.selected = (data[item.radio] || '') === item.value;
                    break;

                case 'select':
                    item.selected = data[key] || '';
                    break;
            }
        });
    };

    // export values from <input> commands
    $.contextMenu.getInputValues = function (opt, data) {
        if (data === undefined) {
            data = {};
        }

        $.each(opt.inputs, function (key, item) {
            switch (item.type) {
                case 'text':
                case 'textarea':
                case 'select':
                    data[key] = item.$input.val();
                    break;

                case 'checkbox':
                    data[key] = item.$input.prop('checked');
                    break;

                case 'radio':
                    if (item.$input.prop('checked')) {
                        data[item.radio] = item.value;
                    }
                    break;
            }
        });

        return data;
    };

    // find <label for="xyz">
    function inputLabel(node) {
        return (node.id && $('label[for="' + node.id + '"]').val()) || node.name;
    }

    // convert <menu> to items object
    function menuChildren(items, $children, counter) {
        if (!counter) {
            counter = 0;
        }

        $children.each(function () {
            var $node = $(this),
                node = this,
                nodeName = this.nodeName.toLowerCase(),
                label,
                item;

            // extract <label><input>
            if (nodeName === 'label' && $node.find('input, textarea, select').length) {
                label = $node.text();
                $node = $node.children().first();
                node = $node.get(0);
                nodeName = node.nodeName.toLowerCase();
            }

            /*
             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.
             * Not being the sadistic kind, $.contextMenu only accepts:
             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.
             * Everything else will be imported as an html node, which is not interfaced with contextMenu.
             */

            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command
            switch (nodeName) {
                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element
                case 'menu':
                    item = { name: $node.attr('label'), items: {} };
                    counter = menuChildren(item.items, $node.children(), counter);
                    break;

                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command
                case 'a':
                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command
                case 'button':
                    item = {
                        name: $node.text(),
                        disabled: !!$node.attr('disabled'),
                        callback: (function () {
                            return function () {
                                $node.click();
                            };
                        })()
                    };
                    break;

                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command

                case 'menuitem':
                case 'command':
                    switch ($node.attr('type')) {
                        case undefined:
                        case 'command':
                        case 'menuitem':
                            item = {
                                name: $node.attr('label'),
                                disabled: !!$node.attr('disabled'),
                                icon: $node.attr('icon'),
                                callback: (function () {
                                    return function () {
                                        $node.click();
                                    };
                                })()
                            };
                            break;

                        case 'checkbox':
                            item = {
                                type: 'checkbox',
                                disabled: !!$node.attr('disabled'),
                                name: $node.attr('label'),
                                selected: !!$node.attr('checked')
                            };
                            break;
                        case 'radio':
                            item = {
                                type: 'radio',
                                disabled: !!$node.attr('disabled'),
                                name: $node.attr('label'),
                                radio: $node.attr('radiogroup'),
                                value: $node.attr('id'),
                                selected: !!$node.attr('checked')
                            };
                            break;

                        default:
                            item = undefined;
                    }
                    break;

                case 'hr':
                    item = '-------';
                    break;

                case 'input':
                    switch ($node.attr('type')) {
                        case 'text':
                            item = {
                                type: 'text',
                                name: label || inputLabel(node),
                                disabled: !!$node.attr('disabled'),
                                value: $node.val()
                            };
                            break;

                        case 'checkbox':
                            item = {
                                type: 'checkbox',
                                name: label || inputLabel(node),
                                disabled: !!$node.attr('disabled'),
                                selected: !!$node.attr('checked')
                            };
                            break;

                        case 'radio':
                            item = {
                                type: 'radio',
                                name: label || inputLabel(node),
                                disabled: !!$node.attr('disabled'),
                                radio: !!$node.attr('name'),
                                value: $node.val(),
                                selected: !!$node.attr('checked')
                            };
                            break;

                        default:
                            item = undefined;
                            break;
                    }
                    break;

                case 'select':
                    item = {
                        type: 'select',
                        name: label || inputLabel(node),
                        disabled: !!$node.attr('disabled'),
                        selected: $node.val(),
                        options: {}
                    };
                    $node.children().each(function () {
                        item.options[this.value] = $(this).text();
                    });
                    break;

                case 'textarea':
                    item = {
                        type: 'textarea',
                        name: label || inputLabel(node),
                        disabled: !!$node.attr('disabled'),
                        value: $node.val()
                    };
                    break;

                case 'label':
                    break;

                default:
                    item = { type: 'html', html: $node.clone(true) };
                    break;
            }

            if (item) {
                counter++;
                items['key' + counter] = item;
            }
        });

        return counter;
    }

    // convert html5 menu
    $.contextMenu.fromMenu = function (element) {
        var $this = $(element),
            items = {};

        menuChildren(items, $this.children());

        return items;
    };

    // make defaults accessible
    $.contextMenu.defaults = defaults;
    $.contextMenu.types = types;
    // export internal functions - undocumented, for hacking only!
    $.contextMenu.handle = handle;
    $.contextMenu.op = op;
    $.contextMenu.menus = menus;


});
/**
 * @preserve
 * jquery.layout 1.4.4
 * $Date: 2014-11-29 08:00:00 (Sat, 29 November 2014) $
 * $Rev: 1.0404 $
 *
 * Copyright (c) 2014 Kevin Dalman (http://jquery-dev.com)
 * Based on work by Fabrizio Balliano (http://www.fabrizioballiano.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * SEE: http://layout.jquery-dev.com/LICENSE.txt
 *
 * Changelog: http://layout.jquery-dev.com/changelog.cfm
 *
 * Docs: http://layout.jquery-dev.com/documentation.html
 * Tips: http://layout.jquery-dev.com/tips.html
 * Help: http://groups.google.com/group/jquery-ui-layout
 */

/* JavaDoc Info: http://code.google.com/closure/compiler/docs/js-for-compiler.html
 * {!Object}	non-nullable type (never NULL)
 * {?string}	nullable type (sometimes NULL) - default for {Object}
 * {number=}	optional parameter
 * {*}			ALL types
 */
/*	TODO for jQ 2.x 
 *	check $.fn.disableSelection - this is in jQuery UI 1.9.x
 */

// NOTE: For best readability, view with a fixed-width font and tabs equal to 4-chars

;(function ($) {

// alias Math methods - used a lot!
var	min		= Math.min
,	max		= Math.max
,	round	= Math.floor

,	isStr	=  function (v) { return $.type(v) === "string"; }

	/**
	 * @param {!Object}			Instance
	 * @param {Array.<string>}	a_fn
	 */
,	runPluginCallbacks = function (Instance, a_fn) {
		if ($.isArray(a_fn))
			for (var i=0, c=a_fn.length; i<c; i++) {
				var fn = a_fn[i];
				try {
					if (isStr(fn)) // 'name' of a function
						fn = eval(fn);
					if ($.isFunction(fn))
						g(fn)( Instance );
				} catch (ex) {}
			}
		function g (f) { return f; }; // compiler hack
	}
;

/*
 *	GENERIC $.layout METHODS - used by all layouts
 */
$.layout = {

	version:	"1.4.4"
,	revision:	1.0404 // eg: ver 1.4.4 = rev 1.0404 - major(n+).minor(nn)+patch(nn+)

	// $.layout.browser REPLACES $.browser
,	browser:	{} // set below

	// *PREDEFINED* EFFECTS & DEFAULTS 
	// MUST list effect here - OR MUST set an fxSettings option (can be an empty hash: {})
,	effects: {

	//	Pane Open/Close Animations
		slide: {
			all:	{ duration:  "fast"	} // eg: duration: 1000, easing: "easeOutBounce"
		,	north:	{ direction: "up"	}
		,	south:	{ direction: "down"	}
		,	east:	{ direction: "right"}
		,	west:	{ direction: "left"	}
		}
	,	drop: {
			all:	{ duration:  "slow"	}
		,	north:	{ direction: "up"	}
		,	south:	{ direction: "down"	}
		,	east:	{ direction: "right"}
		,	west:	{ direction: "left"	}
		}
	,	scale: {
			all:	{ duration:	"fast"	}
		}
	//	these are not recommended, but can be used
	,	blind:		{}
	,	clip:		{}
	,	explode:	{}
	,	fade:		{}
	,	fold:		{}
	,	puff:		{}

	//	Pane Resize Animations
	,	size: {
			all:	{ easing:	"swing"	}
		}
	}

	// INTERNAL CONFIG DATA - DO NOT CHANGE THIS!
,	config: {
		optionRootKeys:	"effects,panes,north,south,west,east,center".split(",")
	,	allPanes:		"north,south,west,east,center".split(",")
	,	borderPanes:	"north,south,west,east".split(",")
	,	oppositeEdge: {
			north:	"south"
		,	south:	"north"
		,	east: 	"west"
		,	west: 	"east"
		}
	//	offscreen data
	,	offscreenCSS:	{ left: "-99999px", right: "auto" } // used by hide/close if useOffscreenClose=true
	,	offscreenReset:	"offscreenReset" // key used for data
	//	CSS used in multiple places
	,	hidden:		{ visibility: "hidden" }
	,	visible:	{ visibility: "visible" }
	//	layout element settings
	,	resizers: {
			cssReq: {
				position: 	"absolute"
			,	padding: 	0
			,	margin: 	0
			,	fontSize:	"1px"
			,	textAlign:	"left"	// to counter-act "center" alignment!
			,	overflow: 	"hidden" // prevent toggler-button from overflowing
			//	SEE $.layout.defaults.zIndexes.resizer_normal
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				background: "#DDD"
			,	border:		"none"
			}
		}
	,	togglers: {
			cssReq: {
				position: 	"absolute"
			,	display: 	"block"
			,	padding: 	0
			,	margin: 	0
			,	overflow:	"hidden"
			,	textAlign:	"center"
			,	fontSize:	"1px"
			,	cursor: 	"pointer"
			,	zIndex: 	1
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				background: "#AAA"
			}
		}
	,	content: {
			cssReq: {
				position:	"relative" /* contain floated or positioned elements */
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				overflow:	"auto"
			,	padding:	"10px"
			}
		,	cssDemoPane: { // DEMO CSS - REMOVE scrolling from 'pane' when it has a content-div
				overflow:	"hidden"
			,	padding:	0
			}
		}
	,	panes: { // defaults for ALL panes - overridden by 'per-pane settings' below
			cssReq: {
				position: 	"absolute"
			,	margin:		0
			//	$.layout.defaults.zIndexes.pane_normal
			}
		,	cssDemo: { // DEMO CSS - applied if: options.PANE.applyDemoStyles=true
				padding:	"10px"
			,	background:	"#FFF"
			,	border:		"1px solid #BBB"
			,	overflow:	"auto"
			}
		}
	,	north: {
			side:			"top"
		,	sizeType:		"Height"
		,	dir:			"horz"
		,	cssReq: {
				top: 		0
			,	bottom: 	"auto"
			,	left: 		0
			,	right: 		0
			,	width: 		"auto"
			//	height: 	DYNAMIC
			}
		}
	,	south: {
			side:			"bottom"
		,	sizeType:		"Height"
		,	dir:			"horz"
		,	cssReq: {
				top: 		"auto"
			,	bottom: 	0
			,	left: 		0
			,	right: 		0
			,	width: 		"auto"
			//	height: 	DYNAMIC
			}
		}
	,	east: {
			side:			"right"
		,	sizeType:		"Width"
		,	dir:			"vert"
		,	cssReq: {
				left: 		"auto"
			,	right: 		0
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			//	width: 		DYNAMIC
			}
		}
	,	west: {
			side:			"left"
		,	sizeType:		"Width"
		,	dir:			"vert"
		,	cssReq: {
				left: 		0
			,	right: 		"auto"
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			//	width: 		DYNAMIC
			}
		}
	,	center: {
			dir:			"center"
		,	cssReq: {
				left: 		"auto" // DYNAMIC
			,	right: 		"auto" // DYNAMIC
			,	top: 		"auto" // DYNAMIC
			,	bottom: 	"auto" // DYNAMIC
			,	height: 	"auto"
			,	width: 		"auto"
			}
		}
	}

	// CALLBACK FUNCTION NAMESPACE - used to store reusable callback functions
,	callbacks: {}

,	getParentPaneElem: function (el) {
		// must pass either a container or pane element
		var $el = $(el)
		,	layout = $el.data("layout") || $el.data("parentLayout");
		if (layout) {
			var $cont = layout.container;
			// see if this container is directly-nested inside an outer-pane
			if ($cont.data("layoutPane")) return $cont;
			var $pane = $cont.closest("."+ $.layout.defaults.panes.paneClass);
			// if a pane was found, return it
			if ($pane.data("layoutPane")) return $pane;
		}
		return null;
	}

,	getParentPaneInstance: function (el) {
		// must pass either a container or pane element
		var $pane = $.layout.getParentPaneElem(el);
		return $pane ? $pane.data("layoutPane") : null;
	}

,	getParentLayoutInstance: function (el) {
		// must pass either a container or pane element
		var $pane = $.layout.getParentPaneElem(el);
		return $pane ? $pane.data("parentLayout") : null;
	}

,	getEventObject: function (evt) {
		return typeof evt === "object" && evt.stopPropagation ? evt : null;
	}
,	parsePaneName: function (evt_or_pane) {
		var evt = $.layout.getEventObject( evt_or_pane )
		,	pane = evt_or_pane;
		if (evt) {
			// ALWAYS stop propagation of events triggered in Layout!
			evt.stopPropagation();
			pane = $(this).data("layoutEdge");
		}
		if (pane && !/^(west|east|north|south|center)$/.test(pane)) {
			$.layout.msg('LAYOUT ERROR - Invalid pane-name: "'+ pane +'"');
			pane = "error";
		}
		return pane;
	}


	// LAYOUT-PLUGIN REGISTRATION
	// more plugins can added beyond this default list
,	plugins: {
		draggable:		!!$.fn.draggable // resizing
	,	effects: {
			core:		!!$.effects		// animimations (specific effects tested by initOptions)
		,	slide:		$.effects && ($.effects.slide || ($.effects.effect && $.effects.effect.slide)) // default effect
		}
	}

//	arrays of plugin or other methods to be triggered for events in *each layout* - will be passed 'Instance'
,	onCreate:	[]	// runs when layout is just starting to be created - right after options are set
,	onLoad:		[]	// runs after layout container and global events init, but before initPanes is called
,	onReady:	[]	// runs after initialization *completes* - ie, after initPanes completes successfully
,	onDestroy:	[]	// runs after layout is destroyed
,	onUnload:	[]	// runs after layout is destroyed OR when page unloads
,	afterOpen:	[]	// runs after setAsOpen() completes
,	afterClose:	[]	// runs after setAsClosed() completes

	/*
	 *	GENERIC UTILITY METHODS
	 */

	// calculate and return the scrollbar width, as an integer
,	scrollbarWidth:		function () { return window.scrollbarWidth  || $.layout.getScrollbarSize('width'); }
,	scrollbarHeight:	function () { return window.scrollbarHeight || $.layout.getScrollbarSize('height'); }
,	getScrollbarSize:	function (dim) {
		var $c	= $('<div style="position: absolute; top: -10000px; left: -10000px; width: 100px; height: 100px; border: 0; overflow: scroll;"></div>').appendTo("body")
		,	d	= { width: $c.outerWidth - $c[0].clientWidth, height: 100 - $c[0].clientHeight };
		$c.remove();
		window.scrollbarWidth	= d.width;
		window.scrollbarHeight	= d.height;
		return dim.match(/^(width|height)$/) ? d[dim] : d;
	}


,	disableTextSelection: function () {
		var $d	= $(document)
		,	s	= 'textSelectionDisabled'
		,	x	= 'textSelectionInitialized'
		;
		if ($.fn.disableSelection) {
			if (!$d.data(x)) // document hasn't been initialized yet
				$d.on('mouseup', $.layout.enableTextSelection ).data(x, true);
			if (!$d.data(s))
				$d.disableSelection().data(s, true);
		}
	}
,	enableTextSelection: function () {
		var $d	= $(document)
		,	s	= 'textSelectionDisabled';
		if ($.fn.enableSelection && $d.data(s))
			$d.enableSelection().data(s, false);
	}


	/**
	 * Returns hash container 'display' and 'visibility'
	 *
	 * @see	$.swap() - swaps CSS, runs callback, resets CSS
	 * @param  {!Object}		$E				jQuery element
	 * @param  {boolean=}	[force=false]	Run even if display != none
	 * @return {!Object}						Returns current style props, if applicable
	 */
,	showInvisibly: function ($E, force) {
		if ($E && $E.length && (force || $E.css("display") === "none")) { // only if not *already hidden*
			var s = $E[0].style
				// save ONLY the 'style' props because that is what we must restore
			,	CSS = { display: s.display || '', visibility: s.visibility || '' };
			// show element 'invisibly' so can be measured
			$E.css({ display: "block", visibility: "hidden" });
			return CSS;
		}
		return {};
	}

	/**
	 * Returns data for setting size of an element (container or a pane).
	 *
	 * @see  _create(), onWindowResize() for container, plus others for pane
	 * @return JSON  Returns a hash of all dimensions: top, bottom, left, right, outerWidth, innerHeight, etc
	 */
,	getElementDimensions: function ($E, inset) {
		var
		//	dimensions hash - start with current data IF passed
			d	= { css: {}, inset: {} }
		,	x	= d.css			// CSS hash
		,	i	= { bottom: 0 }	// TEMP insets (bottom = complier hack)
		,	N	= $.layout.cssNum
		,	R	= Math.round
		,	off = $E.offset()
		,	b, p, ei			// TEMP border, padding
		;
		d.offsetLeft = off.left;
		d.offsetTop  = off.top;

		if (!inset) inset = {}; // simplify logic below

		$.each("Left,Right,Top,Bottom".split(","), function (idx, e) { // e = edge
			b = x["border" + e] = $.layout.borderWidth($E, e);
			p = x["padding"+ e] = $.layout.cssNum($E, "padding"+e);
			ei = e.toLowerCase();
			d.inset[ei] = inset[ei] >= 0 ? inset[ei] : p; // any missing insetX value = paddingX
			i[ei] = d.inset[ei] + b; // total offset of content from outer side
		});

		x.width		= R($E.width());
		x.height	= R($E.height());
		x.top		= N($E,"top",true);
		x.bottom	= N($E,"bottom",true);
		x.left		= N($E,"left",true);
		x.right		= N($E,"right",true);

		d.outerWidth	= R($E.outerWidth());
		d.outerHeight	= R($E.outerHeight());
		// calc the TRUE inner-dimensions, even in quirks-mode!
		d.innerWidth	= max(0, d.outerWidth  - i.left - i.right);
		d.innerHeight	= max(0, d.outerHeight - i.top  - i.bottom);
		// layoutWidth/Height is used in calcs for manual resizing
		// layoutW/H only differs from innerW/H when in quirks-mode - then is like outerW/H
		d.layoutWidth	= R($E.innerWidth());
		d.layoutHeight	= R($E.innerHeight());

		//if ($E.prop('tagName') === 'BODY') { debugData( d, $E.prop('tagName') ); } // DEBUG

		//d.visible	= $E.is(":visible");// && x.width > 0 && x.height > 0;

		return d;
	}

,	getElementStyles: function ($E, list) {
		var
			CSS	= {}
		,	style	= $E[0].style
		,	props	= list.split(",")
		,	sides	= "Top,Bottom,Left,Right".split(",")
		,	attrs	= "Color,Style,Width".split(",")
		,	p, s, a, i, j, k
		;
		for (i=0; i < props.length; i++) {
			p = props[i];
			if (p.match(/(border|padding|margin)$/))
				for (j=0; j < 4; j++) {
					s = sides[j];
					if (p === "border")
						for (k=0; k < 3; k++) {
							a = attrs[k];
							CSS[p+s+a] = style[p+s+a];
						}
					else
						CSS[p+s] = style[p+s];
				}
			else
				CSS[p] = style[p];
		};
		return CSS
	}

	/**
	 * Return the innerWidth for the current browser/doctype
	 *
	 * @see  initPanes(), sizeMidPanes(), initHandles(), sizeHandles()
	 * @param  {Array.<Object>}	$E  Must pass a jQuery object - first element is processed
	 * @param  {number=}			outerWidth (optional) Can pass a width, allowing calculations BEFORE element is resized
	 * @return {number}			Returns the innerWidth of the elem by subtracting padding and borders
	 */
,	cssWidth: function ($E, outerWidth) {
		// a 'calculated' outerHeight can be passed so borders and/or padding are removed if needed
		if (outerWidth <= 0) return 0;

		var lb	= $.layout.browser
		,	bs	= !lb.boxModel ? "border-box" : lb.boxSizing ? $E.css("boxSizing") : "content-box"
		,	b	= $.layout.borderWidth
		,	n	= $.layout.cssNum
		,	W	= outerWidth
		;
		// strip border and/or padding from outerWidth to get CSS Width
		if (bs !== "border-box")
			W -= (b($E, "Left") + b($E, "Right"));
		if (bs === "content-box")
			W -= (n($E, "paddingLeft") + n($E, "paddingRight"));
		return max(0,W);
	}

	/**
	 * Return the innerHeight for the current browser/doctype
	 *
	 * @see  initPanes(), sizeMidPanes(), initHandles(), sizeHandles()
	 * @param  {Array.<Object>}	$E  Must pass a jQuery object - first element is processed
	 * @param  {number=}			outerHeight  (optional) Can pass a width, allowing calculations BEFORE element is resized
	 * @return {number}			Returns the innerHeight of the elem by subtracting padding and borders
	 */
,	cssHeight: function ($E, outerHeight) {
		// a 'calculated' outerHeight can be passed so borders and/or padding are removed if needed
		if (outerHeight <= 0) return 0;

		var lb	= $.layout.browser
		,	bs	= !lb.boxModel ? "border-box" : lb.boxSizing ? $E.css("boxSizing") : "content-box"
		,	b	= $.layout.borderWidth
		,	n	= $.layout.cssNum
		,	H	= outerHeight
		;
		// strip border and/or padding from outerHeight to get CSS Height
		if (bs !== "border-box")
			H -= (b($E, "Top") + b($E, "Bottom"));
		if (bs === "content-box")
			H -= (n($E, "paddingTop") + n($E, "paddingBottom"));
		return max(0,H);
	}

	/**
	 * Returns the 'current CSS numeric value' for a CSS property - 0 if property does not exist
	 *
	 * @see  Called by many methods
	 * @param {Array.<Object>}	$E					Must pass a jQuery object - first element is processed
	 * @param {string}			prop				The name of the CSS property, eg: top, width, etc.
	 * @param {boolean=}			[allowAuto=false]	true = return 'auto' if that is value; false = return 0
	 * @return {(string|number)}						Usually used to get an integer value for position (top, left) or size (height, width)
	 */
,	cssNum: function ($E, prop, allowAuto) {
		if (!$E.jquery) $E = $($E);
		var CSS = $.layout.showInvisibly($E)
		,	p	= $.css($E[0], prop, true)
		,	v	= allowAuto && p=="auto" ? p : Math.round(parseFloat(p) || 0);
		$E.css( CSS ); // RESET
		return v;
	}

,	borderWidth: function (el, side) {
		if (el.jquery) el = el[0];
		var b = "border"+ side.substr(0,1).toUpperCase() + side.substr(1); // left => Left
		return $.css(el, b+"Style", true) === "none" ? 0 : Math.round(parseFloat($.css(el, b+"Width", true)) || 0);
	}

	/**
	 * Mouse-tracking utility - FUTURE REFERENCE
	 *
	 * init: if (!window.mouse) {
	 *			window.mouse = { x: 0, y: 0 };
	 *			$(document).mousemove( $.layout.trackMouse );
	 *		}
	 *
	 * @param {Object}		evt
	 *
,	trackMouse: function (evt) {
		window.mouse = { x: evt.clientX, y: evt.clientY };
	}
	*/

	/**
	 * SUBROUTINE for preventPrematureSlideClose option
	 *
	 * @param {Object}		evt
	 * @param {Object=}		el
	 */
,	isMouseOverElem: function (evt, el) {
		var
			$E	= $(el || this)
		,	d	= $E.offset()
		,	T	= d.top
		,	L	= d.left
		,	R	= L + $E.outerWidth()
		,	B	= T + $E.outerHeight()
		,	x	= evt.pageX	// evt.clientX ?
		,	y	= evt.pageY	// evt.clientY ?
		;
		// if X & Y are < 0, probably means is over an open SELECT
		return ($.layout.browser.msie && x < 0 && y < 0) || ((x >= L && x <= R) && (y >= T && y <= B));
	}

	/**
	 * Message/Logging Utility
	 *
	 * @example $.layout.msg("My message");				// log text
	 * @example $.layout.msg("My message", true);		// alert text
	 * @example $.layout.msg({ foo: "bar" }, "Title");	// log hash-data, with custom title
	 * @example $.layout.msg({ foo: "bar" }, true, "Title", { sort: false }); -OR-
	 * @example $.layout.msg({ foo: "bar" }, "Title", { sort: false, display: true }); // alert hash-data
	 *
	 * @param {(Object|string)}			info			String message OR Hash/Array
	 * @param {(Boolean|string|Object)=}	[popup=false]	True means alert-box - can be skipped
	 * @param {(Object|string)=}			[debugTitle=""]	Title for Hash data - can be skipped
	 * @param {Object=}					[debugOpts]		Extra options for debug output
	 */
,	msg: function (info, popup, debugTitle, debugOpts) {
		if ($.isPlainObject(info) && window.debugData) {
			if (typeof popup === "string") {
				debugOpts	= debugTitle;
				debugTitle	= popup;
			}
			else if (typeof debugTitle === "object") {
				debugOpts	= debugTitle;
				debugTitle	= null;
			}
			var t = debugTitle || "log( <object> )"
			,	o = $.extend({ sort: false, returnHTML: false, display: false }, debugOpts);
			if (popup === true || o.display)
				debugData( info, t, o );
			else if (window.console)
				console.log(debugData( info, t, o ));
		}
		else if (popup)
			alert(info);
		else if (window.console)
			console.log(info);
		else {
			var id	= "#layoutLogger"
			,	$l = $(id);
			if (!$l.length)
				$l = createLog();
			$l.children("ul").append('<li style="padding: 4px 10px; margin: 0; border-top: 1px solid #CCC;">'+ info.replace(/\</g,"&lt;").replace(/\>/g,"&gt;") +'</li>');
		}

		function createLog () {
			var pos = $.support.fixedPosition ? 'fixed' : 'absolute'
			,	$e = $('<div id="layoutLogger" style="position: '+ pos +'; top: 5px; z-index: 999999; max-width: 25%; overflow: hidden; border: 1px solid #000; border-radius: 5px; background: #FBFBFB; box-shadow: 0 2px 10px rgba(0,0,0,0.3);">'
				+	'<div style="font-size: 13px; font-weight: bold; padding: 5px 10px; background: #F6F6F6; border-radius: 5px 5px 0 0; cursor: move;">'
				+	'<span style="float: right; padding-left: 7px; cursor: pointer;" title="Remove Console" onclick="$(this).closest(\'#layoutLogger\').remove()">X</span>Layout console.log</div>'
				+	'<ul style="font-size: 13px; font-weight: none; list-style: none; margin: 0; padding: 0 0 2px;"></ul>'
				+ '</div>'
				).appendTo("body");
			$e.css('left', $(window).width() - $e.outerWidth() - 5)
			if ($.ui.draggable) $e.draggable({ handle: ':first-child' });
			return $e;
		};
	}

};


/*
 *	$.layout.browser REPLACES removed $.browser, with extra data
 *	Parsing code here adapted from jQuery 1.8 $.browse
 */
(function(){
	var u = navigator.userAgent.toLowerCase()
	,	m = /(chrome)[ \/]([\w.]+)/.exec( u )
		||	/(webkit)[ \/]([\w.]+)/.exec( u )
		||	/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( u )
		||	/(msie) ([\w.]+)/.exec( u )
		||	u.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( u )
		||	[]
	,	b = m[1] || ""
	,	v = m[2] || 0
	,	ie = b === "msie"
	,	cm = document.compatMode
	,	$s = $.support
	,	bs = $s.boxSizing !== undefined ? $s.boxSizing : $s.boxSizingReliable
	,	bm = !ie || !cm || cm === "CSS1Compat" || $s.boxModel || false
	,	lb = $.layout.browser = {
			version:	v
		,	safari:		b === "webkit"	// webkit (NOT chrome) = safari
		,	webkit:		b === "chrome"	// chrome = webkit
		,	msie:		ie
		,	isIE6:		ie && v == 6
			// ONLY IE reverts to old box-model - Note that compatMode was deprecated as of IE8
		,	boxModel:	bm
		,	boxSizing:	!!(typeof bs === "function" ? bs() : bs)
		};
	;
	if (b) lb[b] = true; // set CURRENT browser
	/*	OLD versions of jQuery only set $.support.boxModel after page is loaded
	 *	so if this is IE, use support.boxModel to test for quirks-mode (ONLY IE changes boxModel) */
	if (!bm && !cm) $(function(){ lb.boxModel = $s.boxModel; });
})();


// DEFAULT OPTIONS
$.layout.defaults = {
/*
 *	LAYOUT & LAYOUT-CONTAINER OPTIONS
 *	- none of these options are applicable to individual panes
 */
	name:						""			// Not required, but useful for buttons and used for the state-cookie
,	containerClass:				"ui-layout-container" // layout-container element
,	inset:						null		// custom container-inset values (override padding)
,	scrollToBookmarkOnLoad:		true		// after creating a layout, scroll to bookmark in URL (.../page.htm#myBookmark)
,	resizeWithWindow:			true		// bind thisLayout.resizeAll() to the window.resize event
,	resizeWithWindowDelay:		200			// delay calling resizeAll because makes window resizing very jerky
,	resizeWithWindowMaxDelay:	0			// 0 = none - force resize every XX ms while window is being resized
,	maskPanesEarly:				false		// true = create pane-masks on resizer.mouseDown instead of waiting for resizer.dragstart
,	onresizeall_start:			null		// CALLBACK when resizeAll() STARTS	- NOT pane-specific
,	onresizeall_end:			null		// CALLBACK when resizeAll() ENDS	- NOT pane-specific
,	onload_start:				null		// CALLBACK when Layout inits - after options initialized, but before elements
,	onload_end:					null		// CALLBACK when Layout inits - after EVERYTHING has been initialized
,	onunload_start:				null		// CALLBACK when Layout is destroyed OR onWindowUnload
,	onunload_end:				null		// CALLBACK when Layout is destroyed OR onWindowUnload
,	initPanes:					true		// false = DO NOT initialize the panes onLoad - will init later
,	showErrorMessages:			true		// enables fatal error messages to warn developers of common errors
,	showDebugMessages:			false		// display console-and-alert debug msgs - IF this Layout version _has_ debugging code!
//	Changing this zIndex value will cause other zIndex values to automatically change
,	zIndex:						null		// the PANE zIndex - resizers and masks will be +1
//	DO NOT CHANGE the zIndex values below unless you clearly understand their relationships
,	zIndexes: {								// set _default_ z-index values here...
		pane_normal:			0			// normal z-index for panes
	,	content_mask:			1			// applied to overlays used to mask content INSIDE panes during resizing
	,	resizer_normal:			2			// normal z-index for resizer-bars
	,	pane_sliding:			100			// applied to *BOTH* the pane and its resizer when a pane is 'slid open'
	,	pane_animate:			1000		// applied to the pane when being animated - not applied to the resizer
	,	resizer_drag:			10000		// applied to the CLONED resizer-bar when being 'dragged'
	}
,	errors: {
		pane:					"pane"		// description of "layout pane element" - used only in error messages
	,	selector:				"selector"	// description of "jQuery-selector" - used only in error messages
	,	addButtonError:			"Error Adding Button\nInvalid "
	,	containerMissing:		"UI Layout Initialization Error\nThe specified layout-container does not exist."
	,	centerPaneMissing:		"UI Layout Initialization Error\nThe center-pane element does not exist.\nThe center-pane is a required element."
	,	noContainerHeight:		"UI Layout Initialization Warning\nThe layout-container \"CONTAINER\" has no height.\nTherefore the layout is 0-height and hence 'invisible'!"
	,	callbackError:			"UI Layout Callback Error\nThe EVENT callback is not a valid function."
	}
/*
 *	PANE DEFAULT SETTINGS
 *	- settings under the 'panes' key become the default settings for *all panes*
 *	- ALL pane-options can also be set specifically for each panes, which will override these 'default values'
 */
,	panes: { // default options for 'all panes' - will be overridden by 'per-pane settings'
		applyDemoStyles: 		false		// NOTE: renamed from applyDefaultStyles for clarity
	,	closable:				true		// pane can open & close
	,	resizable:				true		// when open, pane can be resized 
	,	slidable:				true		// when closed, pane can 'slide open' over other panes - closes on mouse-out
	,	initClosed:				false		// true = init pane as 'closed'
	,	initHidden: 			false 		// true = init pane as 'hidden' - no resizer-bar/spacing
	//	SELECTORS
	//,	paneSelector:			""			// MUST be pane-specific - jQuery selector for pane
	,	contentSelector:		".ui-layout-content" // INNER div/element to auto-size so only it scrolls, not the entire pane!
	,	contentIgnoreSelector:	".ui-layout-ignore"	// element(s) to 'ignore' when measuring 'content'
	,	findNestedContent:		false		// true = $P.find(contentSelector), false = $P.children(contentSelector)
	//	GENERIC ROOT-CLASSES - for auto-generated classNames
	,	paneClass:				"ui-layout-pane"	// Layout Pane
	,	resizerClass:			"ui-layout-resizer"	// Resizer Bar
	,	togglerClass:			"ui-layout-toggler"	// Toggler Button
	,	buttonClass:			"ui-layout-button"	// CUSTOM Buttons	- eg: '[ui-layout-button]-toggle/-open/-close/-pin'
	//	ELEMENT SIZE & SPACING
	//,	size:					100			// MUST be pane-specific -initial size of pane
	,	minSize:				0			// when manually resizing a pane
	,	maxSize:				0			// ditto, 0 = no limit
	,	spacing_open:			6			// space between pane and adjacent panes - when pane is 'open'
	,	spacing_closed:			6			// ditto - when pane is 'closed'
	,	togglerLength_open:		50			// Length = WIDTH of toggler button on north/south sides - HEIGHT on east/west sides
	,	togglerLength_closed: 	50			// 100% OR -1 means 'full height/width of resizer bar' - 0 means 'hidden'
	,	togglerAlign_open:		"center"	// top/left, bottom/right, center, OR...
	,	togglerAlign_closed:	"center"	// 1 => nn = offset from top/left, -1 => -nn == offset from bottom/right
	,	togglerContent_open:	""			// text or HTML to put INSIDE the toggler
	,	togglerContent_closed:	""			// ditto
	//	RESIZING OPTIONS
	,	resizerDblClickToggle:	true		// 
	,	autoResize:				true		// IF size is 'auto' or a percentage, then recalc 'pixel size' whenever the layout resizes
	,	autoReopen:				true		// IF a pane was auto-closed due to noRoom, reopen it when there is room? False = leave it closed
	,	resizerDragOpacity:		1			// option for ui.draggable
	//,	resizerCursor:			""			// MUST be pane-specific - cursor when over resizer-bar
	,	maskContents:			false		// true = add DIV-mask over-or-inside this pane so can 'drag' over IFRAMES
	,	maskObjects:			false		// true = add IFRAME-mask over-or-inside this pane to cover objects/applets - content-mask will overlay this mask
	,	maskZindex:				null		// will override zIndexes.content_mask if specified - not applicable to iframe-panes
	,	resizingGrid:			false		// grid size that the resizers will snap-to during resizing, eg: [20,20]
	,	livePaneResizing:		false		// true = LIVE Resizing as resizer is dragged
	,	liveContentResizing:	false		// true = re-measure header/footer heights as resizer is dragged
	,	liveResizingTolerance:	1			// how many px change before pane resizes, to control performance
	//	SLIDING OPTIONS
	,	sliderCursor:			"pointer"	// cursor when resizer-bar will trigger 'sliding'
	,	slideTrigger_open:		"click"		// click, dblclick, mouseenter
	,	slideTrigger_close:		"mouseleave"// click, mouseleave
	,	slideDelay_open:		300			// applies only for mouseenter event - 0 = instant open
	,	slideDelay_close:		300			// applies only for mouseleave event (300ms is the minimum!)
	,	hideTogglerOnSlide:		false		// when pane is slid-open, should the toggler show?
	,	preventQuickSlideClose:	$.layout.browser.webkit // Chrome triggers slideClosed as it is opening
	,	preventPrematureSlideClose: false	// handle incorrect mouseleave trigger, like when over a SELECT-list in IE
	//	PANE-SPECIFIC TIPS & MESSAGES
	,	tips: {
			Open:				"Open"		// eg: "Open Pane"
		,	Close:				"Close"
		,	Resize:				"Resize"
		,	Slide:				"Slide Open"
		,	Pin:				"Pin"
		,	Unpin:				"Un-Pin"
		,	noRoomToOpen:		"Not enough room to show this panel."	// alert if user tries to open a pane that cannot
		,	minSizeWarning:		"Panel has reached its minimum size"	// displays in browser statusbar
		,	maxSizeWarning:		"Panel has reached its maximum size"	// ditto
		}
	//	HOT-KEYS & MISC
	,	showOverflowOnHover:	false		// will bind allowOverflow() utility to pane.onMouseOver
	,	enableCursorHotkey:		true		// enabled 'cursor' hotkeys
	//,	customHotkey:			""			// MUST be pane-specific - EITHER a charCode OR a character
	,	customHotkeyModifier:	"SHIFT"		// either 'SHIFT', 'CTRL' or 'CTRL+SHIFT' - NOT 'ALT'
	//	PANE ANIMATION
	//	NOTE: fxSss_open, fxSss_close & fxSss_size options (eg: fxName_open) are auto-generated if not passed
	,	fxName:					"slide" 	// ('none' or blank), slide, drop, scale -- only relevant to 'open' & 'close', NOT 'size'
	,	fxSpeed:				null		// slow, normal, fast, 200, nnn - if passed, will OVERRIDE fxSettings.duration
	,	fxSettings:				{}			// can be passed, eg: { easing: "easeOutBounce", duration: 1500 }
	,	fxOpacityFix:			true		// tries to fix opacity in IE to restore anti-aliasing after animation
	,	animatePaneSizing:		false		// true = animate resizing after dragging resizer-bar OR sizePane() is called
	/*  NOTE: Action-specific FX options are auto-generated from the options above if not specifically set:
		fxName_open:			"slide"		// 'Open' pane animation
		fnName_close:			"slide"		// 'Close' pane animation
		fxName_size:			"slide"		// 'Size' pane animation - when animatePaneSizing = true
		fxSpeed_open:			null
		fxSpeed_close:			null
		fxSpeed_size:			null
		fxSettings_open:		{}
		fxSettings_close:		{}
		fxSettings_size:		{}
	*/
	//	CHILD/NESTED LAYOUTS
	,	children:				null		// Layout-options for nested/child layout - even {} is valid as options
	,	containerSelector:		''			// if child is NOT 'directly nested', a selector to find it/them (can have more than one child layout!)
	,	initChildren:			true		// true = child layout will be created as soon as _this_ layout completes initialization
	,	destroyChildren:		true		// true = destroy child-layout if this pane is destroyed
	,	resizeChildren:			true		// true = trigger child-layout.resizeAll() when this pane is resized
	//	EVENT TRIGGERING
	,	triggerEventsOnLoad:	false		// true = trigger onopen OR onclose callbacks when layout initializes
	,	triggerEventsDuringLiveResize: true	// true = trigger onresize callback REPEATEDLY if livePaneResizing==true
	//	PANE CALLBACKS
	,	onshow_start:			null		// CALLBACK when pane STARTS to Show	- BEFORE onopen/onhide_start
	,	onshow_end:				null		// CALLBACK when pane ENDS being Shown	- AFTER  onopen/onhide_end
	,	onhide_start:			null		// CALLBACK when pane STARTS to Close	- BEFORE onclose_start
	,	onhide_end:				null		// CALLBACK when pane ENDS being Closed	- AFTER  onclose_end
	,	onopen_start:			null		// CALLBACK when pane STARTS to Open
	,	onopen_end:				null		// CALLBACK when pane ENDS being Opened
	,	onclose_start:			null		// CALLBACK when pane STARTS to Close
	,	onclose_end:			null		// CALLBACK when pane ENDS being Closed
	,	onresize_start:			null		// CALLBACK when pane STARTS being Resized ***FOR ANY REASON***
	,	onresize_end:			null		// CALLBACK when pane ENDS being Resized ***FOR ANY REASON***
	,	onsizecontent_start:	null		// CALLBACK when sizing of content-element STARTS
	,	onsizecontent_end:		null		// CALLBACK when sizing of content-element ENDS
	,	onswap_start:			null		// CALLBACK when pane STARTS to Swap
	,	onswap_end:				null		// CALLBACK when pane ENDS being Swapped
	,	ondrag_start:			null		// CALLBACK when pane STARTS being ***MANUALLY*** Resized
	,	ondrag_end:				null		// CALLBACK when pane ENDS being ***MANUALLY*** Resized
	}
/*
 *	PANE-SPECIFIC SETTINGS
 *	- options listed below MUST be specified per-pane - they CANNOT be set under 'panes'
 *	- all options under the 'panes' key can also be set specifically for any pane
 *	- most options under the 'panes' key apply only to 'border-panes' - NOT the the center-pane
 */
,	north: {
		paneSelector:			".ui-layout-north"
	,	size:					"auto"		// eg: "auto", "30%", .30, 200
	,	resizerCursor:			"n-resize"	// custom = url(myCursor.cur)
	,	customHotkey:			""			// EITHER a charCode (43) OR a character ("o")
	}
,	south: {
		paneSelector:			".ui-layout-south"
	,	size:					"auto"
	,	resizerCursor:			"s-resize"
	,	customHotkey:			""
	}
,	east: {
		paneSelector:			".ui-layout-east"
	,	size:					200
	,	resizerCursor:			"e-resize"
	,	customHotkey:			""
	}
,	west: {
		paneSelector:			".ui-layout-west"
	,	size:					200
	,	resizerCursor:			"w-resize"
	,	customHotkey:			""
	}
,	center: {
		paneSelector:			".ui-layout-center"
	,	minWidth:				0
	,	minHeight:				0
	}
};

$.layout.optionsMap = {
	// layout/global options - NOT pane-options
	layout: ("name,instanceKey,stateManagement,effects,inset,zIndexes,errors,"
	+	"zIndex,scrollToBookmarkOnLoad,showErrorMessages,maskPanesEarly,"
	+	"outset,resizeWithWindow,resizeWithWindowDelay,resizeWithWindowMaxDelay,"
	+	"onresizeall,onresizeall_start,onresizeall_end,onload,onload_start,onload_end,onunload,onunload_start,onunload_end").split(",")
//	borderPanes: [ ALL options that are NOT specified as 'layout' ]
	// default.panes options that apply to the center-pane (most options apply _only_ to border-panes)
,	center: ("paneClass,contentSelector,contentIgnoreSelector,findNestedContent,applyDemoStyles,triggerEventsOnLoad,"
	+	"showOverflowOnHover,maskContents,maskObjects,liveContentResizing,"
	+	"containerSelector,children,initChildren,resizeChildren,destroyChildren,"
	+	"onresize,onresize_start,onresize_end,onsizecontent,onsizecontent_start,onsizecontent_end").split(",")
	// options that MUST be specifically set 'per-pane' - CANNOT set in the panes (defaults) key
,	noDefault: ("paneSelector,resizerCursor,customHotkey").split(",")
};

/**
 * Processes options passed in converts flat-format data into subkey (JSON) format
 * In flat-format, subkeys are _currently_ separated with 2 underscores, like north__optName
 * Plugins may also call this method so they can transform their own data
 *
 * @param  {!Object}	hash			Data/options passed by user - may be a single level or nested levels
 * @param  {boolean=}	[addKeys=false]	Should the primary layout.options keys be added if they do not exist?
 * @return {Object}						Returns hash of minWidth & minHeight
 */
$.layout.transformData = function (hash, addKeys) {
	var	json = addKeys ? { panes: {}, center: {} } : {} // init return object
	,	branch, optKey, keys, key, val, i, c;

	if (typeof hash !== "object") return json; // no options passed

	// convert all 'flat-keys' to 'sub-key' format
	for (optKey in hash) {
		branch	= json;
		val		= hash[ optKey ];
		keys	= optKey.split("__"); // eg: west__size or north__fxSettings__duration
		c		= keys.length - 1;
		// convert underscore-delimited to subkeys
		for (i=0; i <= c; i++) {
			key = keys[i];
			if (i === c) {	// last key = value
				if ($.isPlainObject( val ))
					branch[key] = $.layout.transformData( val ); // RECURSE
				else
					branch[key] = val;
			}
			else {
				if (!branch[key])
					branch[key] = {}; // create the subkey
				// recurse to sub-key for next loop - if not done
				branch = branch[key];
			}
		}
	}
	return json;
};

// INTERNAL CONFIG DATA - DO NOT CHANGE THIS!
$.layout.backwardCompatibility = {
	// data used by renameOldOptions()
	map: {
	//	OLD Option Name:			NEW Option Name
		applyDefaultStyles:			"applyDemoStyles"
	//	CHILD/NESTED LAYOUTS
	,	childOptions:				"children"
	,	initChildLayout:			"initChildren"
	,	destroyChildLayout:			"destroyChildren"
	,	resizeChildLayout:			"resizeChildren"
	,	resizeNestedLayout:			"resizeChildren"
	//	MISC Options
	,	resizeWhileDragging:		"livePaneResizing"
	,	resizeContentWhileDragging:	"liveContentResizing"
	,	triggerEventsWhileDragging:	"triggerEventsDuringLiveResize"
	,	maskIframesOnResize:		"maskContents"
	//	STATE MANAGEMENT
	,	useStateCookie:				"stateManagement.enabled"
	,	"cookie.autoLoad":			"stateManagement.autoLoad"
	,	"cookie.autoSave":			"stateManagement.autoSave"
	,	"cookie.keys":				"stateManagement.stateKeys"
	,	"cookie.name":				"stateManagement.cookie.name"
	,	"cookie.domain":			"stateManagement.cookie.domain"
	,	"cookie.path":				"stateManagement.cookie.path"
	,	"cookie.expires":			"stateManagement.cookie.expires"
	,	"cookie.secure":			"stateManagement.cookie.secure"
	//	OLD Language options
	,	noRoomToOpenTip:			"tips.noRoomToOpen"
	,	togglerTip_open:			"tips.Close"	// open   = Close
	,	togglerTip_closed:			"tips.Open"		// closed = Open
	,	resizerTip:					"tips.Resize"
	,	sliderTip:					"tips.Slide"
	}

/**
* @param {Object}	opts
*/
,	renameOptions: function (opts) {
		var map = $.layout.backwardCompatibility.map
		,	oldData, newData, value
		;
		for (var itemPath in map) {
			oldData	= getBranch( itemPath );
			value	= oldData.branch[ oldData.key ];
			if (value !== undefined) {
				newData = getBranch( map[itemPath], true );
				newData.branch[ newData.key ] = value;
				delete oldData.branch[ oldData.key ];
			}
		}

		/**
		 * @param {string}	path
		 * @param {boolean=}	[create=false]	Create path if does not exist
		 */
		function getBranch (path, create) {
			var a = path.split(".") // split keys into array
			,	c = a.length - 1
			,	D = { branch: opts, key: a[c] } // init branch at top & set key (last item)
			,	i = 0, k, undef;
			for (; i<c; i++) { // skip the last key (data)
				k = a[i];
				if (D.branch[ k ] == undefined) { // child-key does not exist
					if (create) {
						D.branch = D.branch[ k ] = {}; // create child-branch
					}
					else // can't go any farther
						D.branch = {}; // branch is undefined
				}
				else
					D.branch = D.branch[ k ]; // get child-branch
			}
			return D;
		};
	}

/**
* @param {Object}	opts
*/
,	renameAllOptions: function (opts) {
		var ren = $.layout.backwardCompatibility.renameOptions;
		// rename root (layout) options
		ren( opts );
		// rename 'defaults' to 'panes'
		if (opts.defaults) {
			if (typeof opts.panes !== "object")
				opts.panes = {};
			$.extend(true, opts.panes, opts.defaults);
			delete opts.defaults;
		}
		// rename options in the the options.panes key
		if (opts.panes) ren( opts.panes );
		// rename options inside *each pane key*, eg: options.west
		$.each($.layout.config.allPanes, function (i, pane) {
			if (opts[pane]) ren( opts[pane] );
		});	
		return opts;
	}
};




/*	============================================================
 *	BEGIN WIDGET: $( selector ).layout( {options} );
 *	============================================================
 */
$.fn.layout = function (opts) {
	var

	// local aliases to global data
	browser	= $.layout.browser
,	_c		= $.layout.config

	// local aliases to utlity methods
,	cssW	= $.layout.cssWidth
,	cssH	= $.layout.cssHeight
,	elDims	= $.layout.getElementDimensions
,	styles	= $.layout.getElementStyles
,	evtObj	= $.layout.getEventObject
,	evtPane	= $.layout.parsePaneName

/**
 * options - populated by initOptions()
 */
,	options = $.extend(true, {}, $.layout.defaults)
,	effects	= options.effects = $.extend(true, {}, $.layout.effects)

/**
 * layout-state object
 */
,	state = {
		// generate unique ID to use for event.namespace so can unbind only events added by 'this layout'
		id:				"layout"+ $.now()	// code uses alias: sID
	,	initialized:	false
	,	paneResizing:	false
	,	panesSliding:	{}
	,	container:	{ 	// list all keys referenced in code to avoid compiler error msgs
			innerWidth:		0
		,	innerHeight:	0
		,	outerWidth:		0
		,	outerHeight:	0
		,	layoutWidth:	0
		,	layoutHeight:	0
		}
	,	north:		{ childIdx: 0 }
	,	south:		{ childIdx: 0 }
	,	east:		{ childIdx: 0 }
	,	west:		{ childIdx: 0 }
	,	center:		{ childIdx: 0 }
	}

/**
 * parent/child-layout pointers
 */
//,	hasParentLayout	= false	- exists ONLY inside Instance so can be set externally
,	children = {
		north:		null
	,	south:		null
	,	east:		null
	,	west:		null
	,	center:		null
	}

/*
 * ###########################
 *  INTERNAL HELPER FUNCTIONS
 * ###########################
 */

	/**
	 * Manages all internal timers
	 */
,	timer = {
		data:	{}
	,	set:	function (s, fn, ms) { timer.clear(s); timer.data[s] = setTimeout(fn, ms); }
	,	clear:	function (s) { var t=timer.data; if (t[s]) {clearTimeout(t[s]); delete t[s];} }
	}

	/**
	 * Alert or console.log a message - IF option is enabled.
	 *
	 * @param {(string|!Object)}	msg				Message (or debug-data) to display
	 * @param {boolean=}			[popup=false]	True by default, means 'alert', false means use console.log
	 * @param {boolean=}			[debug=false]	True means is a widget debugging message
	 */
,	_log = function (msg, popup, debug) {
		var o = options;
		if ((o.showErrorMessages && !debug) || (debug && o.showDebugMessages))
			$.layout.msg( o.name +' / '+ msg, (popup !== false) );
		return false;
	}

	/**
	 * Executes a Callback function after a trigger event, like resize, open or close
	 *
	 * @param {string}				evtName					Name of the layout callback, eg "onresize_start"
	 * @param {(string|boolean)=}	[pane=""]				This is passed only so we can pass the 'pane object' to the callback
	 * @param {(string|boolean)=}	[skipBoundEvents=false]	True = do not run events bound to the elements - only the callbacks set in options
	 */
,	_runCallbacks = function (evtName, pane, skipBoundEvents) {
		var	hasPane	= pane && isStr(pane)
		,	s		= hasPane ? state[pane] : state
		,	o		= hasPane ? options[pane] : options
		,	lName	= options.name
			// names like onopen and onopen_end separate are interchangeable in options...
		,	lng		= evtName + (evtName.match(/_/) ? "" : "_end")
		,	shrt	= lng.match(/_end$/) ? lng.substr(0, lng.length - 4) : ""
		,	fn		= o[lng] || o[shrt]
		,	retVal	= "NC" // NC = No Callback
		,	args	= []
		,	$P		= hasPane ? $Ps[pane] : 0
		;
		if (hasPane && !$P) // a pane is specified, but does not exist!
			return retVal;
		if ( !hasPane && $.type(pane) === "boolean" ) {
			skipBoundEvents = pane; // allow pane param to be skipped for Layout callback
			pane = "";
		}

		// first trigger the callback set in the options
		if (fn) {
			try {
				// convert function name (string) to function object
				if (isStr( fn )) {
					if (fn.match(/,/)) {
						// function name cannot contain a comma, 
						// so must be a function name AND a parameter to pass
						args = fn.split(",")
						,	fn = eval(args[0]);
					}
					else // just the name of an external function?
						fn = eval(fn);
				}
				// execute the callback, if exists
				if ($.isFunction( fn )) {
					if (args.length)
						retVal = g(fn)(args[1]); // pass the argument parsed from 'list'
					else if ( hasPane )
						// pass data: pane-name, pane-element, pane-state, pane-options, and layout-name
						retVal = g(fn)( pane, $Ps[pane], s, o, lName );
					else // must be a layout/container callback - pass suitable info
						retVal = g(fn)( Instance, s, o, lName );
				}
			}
			catch (ex) {
				_log( options.errors.callbackError.replace(/EVENT/, $.trim((pane || "") +" "+ lng)), false );
				if ($.type(ex) === "string" && string.length)
					_log("Exception:  "+ ex, false );
			}
		}

		// trigger additional events bound directly to the pane
		if (!skipBoundEvents && retVal !== false) {
			if ( hasPane ) { // PANE events can be bound to each pane-elements
				o	= options[pane];
				s	= state[pane];
				$P.triggerHandler("layoutpane"+ lng, [ pane, $P, s, o, lName ]);
				if (shrt)
					$P.triggerHandler("layoutpane"+ shrt, [ pane, $P, s, o, lName ]);
			}
			else { // LAYOUT events can be bound to the container-element
				$N.triggerHandler("layout"+ lng, [ Instance, s, o, lName ]);
				if (shrt)
					$N.triggerHandler("layout"+ shrt, [ Instance, s, o, lName ]);
			}
		}

		// ALWAYS resizeChildren after an onresize_end event - even during initialization
		// IGNORE onsizecontent_end event because causes child-layouts to resize TWICE
		if (hasPane && evtName === "onresize_end") // BAD: || evtName === "onsizecontent_end"
			resizeChildren(pane+"", true); // compiler hack -force string

		return retVal;

		function g (f) { return f; }; // compiler hack
	}


	/**
	 * cure iframe display issues in IE & other browsers
	 */
,	_fixIframe = function (pane) {
		if (browser.mozilla) return; // skip FireFox - it auto-refreshes iframes onShow
		var $P = $Ps[pane];
		// if the 'pane' is an iframe, do it
		if (state[pane].tagName === "IFRAME")
			$P.css(_c.hidden).css(_c.visible); 
		else // ditto for any iframes INSIDE the pane
			$P.find('IFRAME').css(_c.hidden).css(_c.visible);
	}

	/**
	 * @param  {string}		pane		Can accept ONLY a 'pane' (east, west, etc)
	 * @param  {number=}		outerSize	(optional) Can pass a width, allowing calculations BEFORE element is resized
	 * @return {number}		Returns the innerHeight/Width of el by subtracting padding and borders
	 */
,	cssSize = function (pane, outerSize) {
		var fn = _c[pane].dir=="horz" ? cssH : cssW;
		return fn($Ps[pane], outerSize);
	}

	/**
	 * @param  {string}		pane		Can accept ONLY a 'pane' (east, west, etc)
	 * @return {Object}		Returns hash of minWidth & minHeight
	 */
,	cssMinDims = function (pane) {
		// minWidth/Height means CSS width/height = 1px
		var	$P	= $Ps[pane]
		,	dir	= _c[pane].dir
		,	d	= {
				minWidth:	1001 - cssW($P, 1000)
			,	minHeight:	1001 - cssH($P, 1000)
			}
		;
		if (dir === "horz") d.minSize = d.minHeight;
		if (dir === "vert") d.minSize = d.minWidth;
		return d;
	}

	// TODO: see if these methods can be made more useful...
	// TODO: *maybe* return cssW/H from these so caller can use this info

	/**
	 * @param {(string|!Object)}		el
	 * @param {number=}				outerWidth
	 * @param {boolean=}				[autoHide=false]
	 */
,	setOuterWidth = function (el, outerWidth, autoHide) {
		var $E = el, w;
		if (isStr(el)) $E = $Ps[el]; // west
		else if (!el.jquery) $E = $(el);
		w = cssW($E, outerWidth);
		$E.css({ width: w });
		if (w > 0) {
			if (autoHide && $E.data('autoHidden') && $E.innerHeight() > 0) {
				$E.show().data('autoHidden', false);
				if (!browser.mozilla) // FireFox refreshes iframes - IE does not
					// make hidden, then visible to 'refresh' display after animation
					$E.css(_c.hidden).css(_c.visible);
			}
		}
		else if (autoHide && !$E.data('autoHidden'))
			$E.hide().data('autoHidden', true);
	}

	/**
	 * @param {(string|!Object)}		el
	 * @param {number=}				outerHeight
	 * @param {boolean=}				[autoHide=false]
	 */
,	setOuterHeight = function (el, outerHeight, autoHide) {
		var $E = el, h;
		if (isStr(el)) $E = $Ps[el]; // west
		else if (!el.jquery) $E = $(el);
		h = cssH($E, outerHeight);
		$E.css({ height: h, visibility: "visible" }); // may have been 'hidden' by sizeContent
		if (h > 0 && $E.innerWidth() > 0) {
			if (autoHide && $E.data('autoHidden')) {
				$E.show().data('autoHidden', false);
				if (!browser.mozilla) // FireFox refreshes iframes - IE does not
					$E.css(_c.hidden).css(_c.visible);
			}
		}
		else if (autoHide && !$E.data('autoHidden'))
			$E.hide().data('autoHidden', true);
	}


	/**
	 * Converts any 'size' params to a pixel/integer size, if not already
	 * If 'auto' or a decimal/percentage is passed as 'size', a pixel-size is calculated
	 *
	/**
	 * @param  {string}				pane
	 * @param  {(string|number)=}	size
	 * @param  {string=}				[dir]
	 * @return {number}
	 */
,	_parseSize = function (pane, size, dir) {
		if (!dir) dir = _c[pane].dir;

		if (isStr(size) && size.match(/%/))
			size = (size === '100%') ? -1 : parseInt(size, 10) / 100; // convert % to decimal

		if (size === 0)
			return 0;
		else if (size >= 1)
			return parseInt(size, 10);

		var o = options, avail = 0;
		if (dir=="horz") // north or south or center.minHeight
			avail = sC.innerHeight - ($Ps.north ? o.north.spacing_open : 0) - ($Ps.south ? o.south.spacing_open : 0);
		else if (dir=="vert") // east or west or center.minWidth
			avail = sC.innerWidth - ($Ps.west ? o.west.spacing_open : 0) - ($Ps.east ? o.east.spacing_open : 0);

		if (size === -1) // -1 == 100%
			return avail;
		else if (size > 0) // percentage, eg: .25
			return round(avail * size);
		else if (pane=="center")
			return 0;
		else { // size < 0 || size=='auto' || size==Missing || size==Invalid
			// auto-size the pane
			var	dim	= (dir === "horz" ? "height" : "width")
			,	$P	= $Ps[pane]
			,	$C	= dim === 'height' ? $Cs[pane] : false
			,	vis	= $.layout.showInvisibly($P) // show pane invisibly if hidden
			,	szP	= $P.css(dim) // SAVE current pane size
			,	szC	= $C ? $C.css(dim) : 0 // SAVE current content size
			;
			$P.css(dim, "auto");
			if ($C) $C.css(dim, "auto");
			size = (dim === "height") ? $P.outerHeight() : $P.outerWidth(); // MEASURE
			$P.css(dim, szP).css(vis); // RESET size & visibility
			if ($C) $C.css(dim, szC);
			return size;
		}
	}

	/**
	 * Calculates current 'size' (outer-width or outer-height) of a border-pane - optionally with 'pane-spacing' added
	 *
	 * @param  {(string|!Object)}	pane
	 * @param  {boolean=}			[inclSpace=false]
	 * @return {number}				Returns EITHER Width for east/west panes OR Height for north/south panes
	 */
,	getPaneSize = function (pane, inclSpace) {
		var 
			$P	= $Ps[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	oSp	= (inclSpace ? o.spacing_open : 0)
		,	cSp	= (inclSpace ? o.spacing_closed : 0)
		;
		if (!$P || s.isHidden)
			return 0;
		else if (s.isClosed || (s.isSliding && inclSpace))
			return cSp;
		else if (_c[pane].dir === "horz")
			return $P.outerHeight() + oSp;
		else // dir === "vert"
			return $P.outerWidth() + oSp;
	}

	/**
	 * Calculate min/max pane dimensions and limits for resizing
	 *
	 * @param  {string}		pane
	 * @param  {boolean=}	[slide=false]
	 */
,	setSizeLimits = function (pane, slide) {
		if (!isInitialized()) return;
		var 
			o				= options[pane]
		,	s				= state[pane]
		,	c				= _c[pane]
		,	dir				= c.dir
		,	type			= c.sizeType.toLowerCase()
		,	isSliding		= (slide != undefined ? slide : s.isSliding) // only open() passes 'slide' param
		,	$P				= $Ps[pane]
		,	paneSpacing		= o.spacing_open
		//	measure the pane on the *opposite side* from this pane
		,	altPane			= _c.oppositeEdge[pane]
		,	altS			= state[altPane]
		,	$altP			= $Ps[altPane]
		,	altPaneSize		= (!$altP || altS.isVisible===false || altS.isSliding ? 0 : (dir=="horz" ? $altP.outerHeight() : $altP.outerWidth()))
		,	altPaneSpacing	= ((!$altP || altS.isHidden ? 0 : options[altPane][ altS.isClosed !== false ? "spacing_closed" : "spacing_open" ]) || 0)
		//	limitSize prevents this pane from 'overlapping' opposite pane
		,	containerSize	= (dir=="horz" ? sC.innerHeight : sC.innerWidth)
		,	minCenterDims	= cssMinDims("center")
		,	minCenterSize	= dir=="horz" ? max(options.center.minHeight, minCenterDims.minHeight) : max(options.center.minWidth, minCenterDims.minWidth)
		//	if pane is 'sliding', then ignore center and alt-pane sizes - because 'overlays' them
		,	limitSize		= (containerSize - paneSpacing - (isSliding ? 0 : (_parseSize("center", minCenterSize, dir) + altPaneSize + altPaneSpacing)))
		,	minSize			= s.minSize = max( _parseSize(pane, o.minSize), cssMinDims(pane).minSize )
		,	maxSize			= s.maxSize = min( (o.maxSize ? _parseSize(pane, o.maxSize) : 100000), limitSize )
		,	r				= s.resizerPosition = {} // used to set resizing limits
		,	top				= sC.inset.top
		,	left			= sC.inset.left
		,	W				= sC.innerWidth
		,	H				= sC.innerHeight
		,	rW				= o.spacing_open // subtract resizer-width to get top/left position for south/east
		;
		switch (pane) {
			case "north":	r.min = top + minSize;
							r.max = top + maxSize;
							break;
			case "west":	r.min = left + minSize;
							r.max = left + maxSize;
							break;
			case "south":	r.min = top + H - maxSize - rW;
							r.max = top + H - minSize - rW;
							break;
			case "east":	r.min = left + W - maxSize - rW;
							r.max = left + W - minSize - rW;
							break;
		};
	}

	/**
	 * Returns data for setting the size/position of center pane. Also used to set Height for east/west panes
	 *
	 * @return JSON  Returns a hash of all dimensions: top, bottom, left, right, (outer) width and (outer) height
	 */
,	calcNewCenterPaneDims = function () {
		var d = {
			top:	getPaneSize("north", true) // true = include 'spacing' value for pane
		,	bottom:	getPaneSize("south", true)
		,	left:	getPaneSize("west", true)
		,	right:	getPaneSize("east", true)
		,	width:	0
		,	height:	0
		};

		// NOTE: sC = state.container
		// calc center-pane outer dimensions
		d.width		= sC.innerWidth - d.left - d.right;  // outerWidth
		d.height	= sC.innerHeight - d.bottom - d.top; // outerHeight
		// add the 'container border/padding' to get final positions relative to the container
		d.top		+= sC.inset.top;
		d.bottom	+= sC.inset.bottom;
		d.left		+= sC.inset.left;
		d.right		+= sC.inset.right;

		return d;
	}


	/**
	 * @param {!Object}		el
	 * @param {boolean=}		[allStates=false]
	 */
,	getHoverClasses = function (el, allStates) {
		var
			$El		= $(el)
		,	type	= $El.data("layoutRole")
		,	pane	= $El.data("layoutEdge")
		,	o		= options[pane]
		,	root	= o[type +"Class"]
		,	_pane	= "-"+ pane // eg: "-west"
		,	_open	= "-open"
		,	_closed	= "-closed"
		,	_slide	= "-sliding"
		,	_hover	= "-hover " // NOTE the trailing space
		,	_state	= $El.hasClass(root+_closed) ? _closed : _open
		,	_alt	= _state === _closed ? _open : _closed
		,	classes = (root+_hover) + (root+_pane+_hover) + (root+_state+_hover) + (root+_pane+_state+_hover)
		;
		if (allStates) // when 'removing' classes, also remove alternate-state classes
			classes += (root+_alt+_hover) + (root+_pane+_alt+_hover);

		if (type=="resizer" && $El.hasClass(root+_slide))
			classes += (root+_slide+_hover) + (root+_pane+_slide+_hover);

		return $.trim(classes);
	}
,	addHover	= function (evt, el) {
		var $E = $(el || this);
		if (evt && $E.data("layoutRole") === "toggler")
			evt.stopPropagation(); // prevent triggering 'slide' on Resizer-bar
		$E.addClass( getHoverClasses($E) );
	}
,	removeHover	= function (evt, el) {
		var $E = $(el || this);
		$E.removeClass( getHoverClasses($E, true) );
	}

,	onResizerEnter	= function (evt) { // ALSO called by toggler.mouseenter
		var pane	= $(this).data("layoutEdge")
		,	s		= state[pane]
		,	$d		= $(document)
		;
		// ignore closed-panes and mouse moving back & forth over resizer!
		// also ignore if ANY pane is currently resizing
		if ( s.isResizing || state.paneResizing ) return;

		if (options.maskPanesEarly)
			showMasks( pane, { resizing: true });
	}
,	onResizerLeave	= function (evt, el) {
		var	e		= el || this // el is only passed when called by the timer
		,	pane	= $(e).data("layoutEdge")
		,	name	= pane +"ResizerLeave"
		,	$d		= $(document)
		;
		timer.clear(pane+"_openSlider"); // cancel slideOpen timer, if set
		timer.clear(name); // cancel enableSelection timer - may re/set below
		// this method calls itself on a timer because it needs to allow
		// enough time for dragging to kick-in and set the isResizing flag
		// dragging has a 100ms delay set, so this delay must be >100
		if (!el) // 1st call - mouseleave event
			timer.set(name, function(){ onResizerLeave(evt, e); }, 200);
		// if user is resizing, dragStop will reset everything, so skip it here
		else if (options.maskPanesEarly && !state.paneResizing) // 2nd call - by timer
			hideMasks();
	}

/*
 * ###########################
 *   INITIALIZATION METHODS
 * ###########################
 */

	/**
	 * Initialize the layout - called automatically whenever an instance of layout is created
	 *
	 * @see  none - triggered onInit
	 * @return  mixed	true = fully initialized | false = panes not initialized (yet) | 'cancel' = abort
	 */
,	_create = function () {
		// initialize config/options
		initOptions();
		var o = options
		,	s = state;

		// TEMP state so isInitialized returns true during init process
		s.creatingLayout = true;

		// init plugins for this layout, if there are any (eg: stateManagement)
		runPluginCallbacks( Instance, $.layout.onCreate );

		// options & state have been initialized, so now run beforeLoad callback
		// onload will CANCEL layout creation if it returns false
		if (false === _runCallbacks("onload_start"))
			return 'cancel';

		// initialize the container element
		_initContainer();

		// bind hotkey function - keyDown - if required
		initHotkeys();

		// bind window.onunload
		$(window).bind("unload."+ sID, unload);

		// init plugins for this layout, if there are any (eg: customButtons)
		runPluginCallbacks( Instance, $.layout.onLoad );

		// if layout elements are hidden, then layout WILL NOT complete initialization!
		// initLayoutElements will set initialized=true and run the onload callback IF successful
		if (o.initPanes) _initLayoutElements();

		delete s.creatingLayout;

		return state.initialized;
	}

	/**
	 * Initialize the layout IF not already
	 *
	 * @see  All methods in Instance run this test
	 * @return  boolean	true = layoutElements have been initialized | false = panes are not initialized (yet)
	 */
,	isInitialized = function () {
		if (state.initialized || state.creatingLayout) return true;	// already initialized
		else return _initLayoutElements();	// try to init panes NOW
	}

	/**
	 * Initialize the layout - called automatically whenever an instance of layout is created
	 *
	 * @see  _create() & isInitialized
	 * @param {boolean=}		[retry=false]	// indicates this is a 2nd try
	 * @return  An object pointer to the instance created
	 */
,	_initLayoutElements = function (retry) {
		// initialize config/options
		var o = options;
		// CANNOT init panes inside a hidden container!
		if (!$N.is(":visible")) {
			// handle Chrome bug where popup window 'has no height'
			// if layout is BODY element, try again in 50ms
			// SEE: http://layout.jquery-dev.com/samples/test_popup_window.html
			if ( !retry && browser.webkit && $N[0].tagName === "BODY" )
				setTimeout(function(){ _initLayoutElements(true); }, 50);
			return false;
		}

		// a center pane is required, so make sure it exists
		if (!getPane("center").length) {
			return _log( o.errors.centerPaneMissing );
		}

		// TEMP state so isInitialized returns true during init process
		state.creatingLayout = true;

		// update Container dims
		$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT include insetX values

		// initialize all layout elements
		initPanes();	// size & position panes - calls initHandles() - which calls initResizable()

		if (o.scrollToBookmarkOnLoad) {
			var l = self.location;
			if (l.hash) l.replace( l.hash ); // scrollTo Bookmark
		}

		// check to see if this layout 'nested' inside a pane
		if (Instance.hasParentLayout)
			o.resizeWithWindow = false;
		// bind resizeAll() for 'this layout instance' to window.resize event
		else if (o.resizeWithWindow)
			$(window).bind("resize."+ sID, windowResize);

		delete state.creatingLayout;
		state.initialized = true;

		// init plugins for this layout, if there are any
		runPluginCallbacks( Instance, $.layout.onReady );

		// now run the onload callback, if exists
		_runCallbacks("onload_end");

		return true; // elements initialized successfully
	}

	/**
	 * Initialize nested layouts for a specific pane - can optionally pass layout-options
	 *
	 * @param {(string|Object)}	evt_or_pane	The pane being opened, ie: north, south, east, or west
	 * @param {Object=}			[opts]		Layout-options - if passed, will OVERRRIDE options[pane].children
	 * @return  An object pointer to the layout instance created - or null
	 */
,	createChildren = function (evt_or_pane, opts) {
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		;
		if (!$P) return;
		var	$C	= $Cs[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		,	sm	= options.stateManagement || {}
		,	cos = opts ? (o.children = opts) : o.children
		;
		if ( $.isPlainObject( cos ) )
			cos = [ cos ]; // convert a hash to a 1-elem array
		else if (!cos || !$.isArray( cos ))
			return;

		$.each( cos, function (idx, co) {
			if ( !$.isPlainObject( co ) ) return;

			// determine which element is supposed to be the 'child container'
			// if pane has a 'containerSelector' OR a 'content-div', use those instead of the pane
			var $containers = co.containerSelector ? $P.find( co.containerSelector ) : ($C || $P);

			$containers.each(function(){
				var $cont	= $(this)
				,	child	= $cont.data("layout") //	see if a child-layout ALREADY exists on this element
				;
				// if no layout exists, but children are set, try to create the layout now
				if (!child) {
					// TODO: see about moving this to the stateManagement plugin, as a method
					// set a unique child-instance key for this layout, if not already set
					setInstanceKey({ container: $cont, options: co }, s );
					// If THIS layout has a hash in stateManagement.autoLoad,
					// then see if it also contains state-data for this child-layout
					// If so, copy the stateData to child.options.stateManagement.autoLoad
					if ( sm.includeChildren && state.stateData[pane] ) {
						//	THIS layout's state was cached when its state was loaded
						var	paneChildren = state.stateData[pane].children || {}
						,	childState	= paneChildren[ co.instanceKey ]
						,	co_sm		= co.stateManagement || (co.stateManagement = { autoLoad: true })
						;
						// COPY the stateData into the autoLoad key
						if ( co_sm.autoLoad === true && childState ) {
							co_sm.autoSave			= false; // disable autoSave because saving handled by parent-layout
							co_sm.includeChildren	= true;  // cascade option - FOR NOW
							co_sm.autoLoad = $.extend(true, {}, childState); // COPY the state-hash
						}
					}

					// create the layout
					child = $cont.layout( co );

					// if successful, update data
					if (child) {
						// add the child and update all layout-pointers
						// MAY have already been done by child-layout calling parent.refreshChildren()
						refreshChildren( pane, child );
					}
				}
			});
		});
	}

,	setInstanceKey = function (child, parentPaneState) {
		// create a named key for use in state and instance branches
		var	$c	= child.container
		,	o	= child.options
		,	sm	= o.stateManagement
		,	key	= o.instanceKey || $c.data("layoutInstanceKey")
		;
		if (!key) key = (sm && sm.cookie ? sm.cookie.name : '') || o.name; // look for a name/key
		if (!key) key = "layout"+ (++parentPaneState.childIdx);	// if no name/key found, generate one
		else key = key.replace(/[^\w-]/gi, '_').replace(/_{2,}/g, '_');	 // ensure is valid as a hash key
		o.instanceKey = key;
		$c.data("layoutInstanceKey", key); // useful if layout is destroyed and then recreated
		return key;
	}

	/**
	 * @param {string}		pane		The pane being opened, ie: north, south, east, or west
	 * @param {Object=}		newChild	New child-layout Instance to add to this pane
	 */
,	refreshChildren = function (pane, newChild) {
		var	$P	= $Ps[pane]
		,	pC	= children[pane]
		,	s	= state[pane]
		,	o
		;
		// check for destroy()ed layouts and update the child pointers & arrays
		if ($.isPlainObject( pC )) {
			$.each( pC, function (key, child) {
				if (child.destroyed) delete pC[key]
			});
			// if no more children, remove the children hash
			if ($.isEmptyObject( pC ))
				pC = children[pane] = null; // clear children hash
		}

		// see if there is a directly-nested layout inside this pane
		// if there is, then there can be only ONE child-layout, so check that...
		if (!newChild && !pC) {
			newChild = $P.data("layout");
		}

		// if a newChild instance was passed, add it to children[pane]
		if (newChild) {
			// update child.state
			newChild.hasParentLayout = true; // set parent-flag in child
			// instanceKey is a key-name used in both state and children
			o = newChild.options;
			// set a unique child-instance key for this layout, if not already set
			setInstanceKey( newChild, s );
			// add pointer to pane.children hash
			if (!pC) pC = children[pane] = {}; // create an empty children hash
			pC[ o.instanceKey ] = newChild.container.data("layout"); // add childLayout instance
		}

		// ALWAYS refresh the pane.children alias, even if null
		Instance[pane].children = children[pane];

		// if newChild was NOT passed - see if there is a child layout NOW
		if (!newChild) {
			createChildren(pane); // MAY create a child and re-call this method
		}
	}

,	windowResize = function () {
		var	o = options
		,	delay = Number(o.resizeWithWindowDelay);
		if (delay < 10) delay = 100; // MUST have a delay!
		// resizing uses a delay-loop because the resize event fires repeatly - except in FF, but delay anyway
		timer.clear("winResize"); // if already running
		timer.set("winResize", function(){
			timer.clear("winResize");
			timer.clear("winResizeRepeater");
			var dims = elDims( $N, o.inset );
			// only trigger resizeAll() if container has changed size
			if (dims.innerWidth !== sC.innerWidth || dims.innerHeight !== sC.innerHeight)
				resizeAll();
		}, delay);
		// ALSO set fixed-delay timer, if not already running
		if (!timer.data["winResizeRepeater"]) setWindowResizeRepeater();
	}

,	setWindowResizeRepeater = function () {
		var delay = Number(options.resizeWithWindowMaxDelay);
		if (delay > 0)
			timer.set("winResizeRepeater", function(){ setWindowResizeRepeater(); resizeAll(); }, delay);
	}

,	unload = function () {
		var o = options;

		_runCallbacks("onunload_start");

		// trigger plugin callabacks for this layout (eg: stateManagement)
		runPluginCallbacks( Instance, $.layout.onUnload );

		_runCallbacks("onunload_end");
	}

	/**
	 * Validate and initialize container CSS and events
	 *
	 * @see  _create()
	 */
,	_initContainer = function () {
		var
			N		= $N[0]	
		,	$H		= $("html")
		,	tag		= sC.tagName = N.tagName
		,	id		= sC.id = N.id
		,	cls		= sC.className = N.className
		,	o		= options
		,	name	= o.name
		,	props	= "position,margin,padding,border"
		,	css		= "layoutCSS"
		,	CSS		= {}
		,	hid		= "hidden" // used A LOT!
		//	see if this container is a 'pane' inside an outer-layout
		,	parent	= $N.data("parentLayout")	// parent-layout Instance
		,	pane	= $N.data("layoutEdge")		// pane-name in parent-layout
		,	isChild	= parent && pane
		,	num		= $.layout.cssNum
		,	$parent, n
		;
		// sC = state.container
		sC.selector = $N.selector.split(".slice")[0];
		sC.ref		= (o.name ? o.name +' layout / ' : '') + tag + (id ? "#"+id : cls ? '.['+cls+']' : ''); // used in messages
		sC.isBody	= (tag === "BODY");

		// try to find a parent-layout
		if (!isChild && !sC.isBody) {
			$parent = $N.closest("."+ $.layout.defaults.panes.paneClass);
			parent	= $parent.data("parentLayout");
			pane	= $parent.data("layoutEdge");
			isChild	= parent && pane;
		}

		$N	.data({
				layout: Instance
			,	layoutContainer: sID // FLAG to indicate this is a layout-container - contains unique internal ID
			})
			.addClass(o.containerClass)
		;
		var layoutMethods = {
			destroy:	''
		,	initPanes:	''
		,	resizeAll:	'resizeAll'
		,	resize:		'resizeAll'
		};
		// loop hash and bind all methods - include layoutID namespacing
		for (name in layoutMethods) {
			$N.bind("layout"+ name.toLowerCase() +"."+ sID, Instance[ layoutMethods[name] || name ]);
		}

		// if this container is another layout's 'pane', then set child/parent pointers
		if (isChild) {
			// update parent flag
			Instance.hasParentLayout = true;
			// set pointers to THIS child-layout (Instance) in parent-layout
			parent.refreshChildren( pane, Instance );
		}

		// SAVE original container CSS for use in destroy()
		if (!$N.data(css)) {
			// handle props like overflow different for BODY & HTML - has 'system default' values
			if (sC.isBody) {
				// SAVE <BODY> CSS
				$N.data(css, $.extend( styles($N, props), {
					height:		$N.css("height")
				,	overflow:	$N.css("overflow")
				,	overflowX:	$N.css("overflowX")
				,	overflowY:	$N.css("overflowY")
				}));
				// ALSO SAVE <HTML> CSS
				$H.data(css, $.extend( styles($H, 'padding'), {
					height:		"auto" // FF would return a fixed px-size!
				,	overflow:	$H.css("overflow")
				,	overflowX:	$H.css("overflowX")
				,	overflowY:	$H.css("overflowY")
				}));
			}
			else // handle props normally for non-body elements
				$N.data(css, styles($N, props+",top,bottom,left,right,width,height,overflow,overflowX,overflowY") );
		}

		try {
			// common container CSS
			CSS = {
				overflow:	hid
			,	overflowX:	hid
			,	overflowY:	hid
			};
			$N.css( CSS );

			if (o.inset && !$.isPlainObject(o.inset)) {
				// can specify a single number for equal outset all-around
				n = parseInt(o.inset, 10) || 0
				o.inset = {
					top:	n
				,	bottom:	n
				,	left:	n
				,	right:	n
				};
			}

			// format html & body if this is a full page layout
			if (sC.isBody) {
				// if HTML has padding, use this as an outer-spacing around BODY
				if (!o.outset) {
					// use padding from parent-elem (HTML) as outset
					o.outset = {
						top:	num($H, "paddingTop")
					,	bottom:	num($H, "paddingBottom")
					,	left:	num($H, "paddingLeft")
					,	right:	num($H, "paddingRight")
					};
				}
				else if (!$.isPlainObject(o.outset)) {
					// can specify a single number for equal outset all-around
					n = parseInt(o.outset, 10) || 0
					o.outset = {
						top:	n
					,	bottom:	n
					,	left:	n
					,	right:	n
					};
				}
				// HTML
				$H.css( CSS ).css({
					height:		"100%"
				,	border:		"none"	// no border or padding allowed when using height = 100%
				,	padding:	0		// ditto
				,	margin:		0
				});
				// BODY
				if (browser.isIE6) {
					// IE6 CANNOT use the trick of setting absolute positioning on all 4 sides - must have 'height'
					$N.css({
						width:		"100%"
					,	height:		"100%"
					,	border:		"none"	// no border or padding allowed when using height = 100%
					,	padding:	0		// ditto
					,	margin:		0
					,	position:	"relative"
					});
					// convert body padding to an inset option - the border cannot be measured in IE6!
					if (!o.inset) o.inset = elDims( $N ).inset;
				}
				else { // use absolute positioning for BODY to allow borders & padding without overflow
					$N.css({
						width:		"auto"
					,	height:		"auto"
					,	margin:		0
					,	position:	"absolute"	// allows for border and padding on BODY
					});
					// apply edge-positioning created above
					$N.css( o.outset );
				}
				// set current layout-container dimensions
				$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT include insetX values
			}
			else {
				// container MUST have 'position'
				var	p = $N.css("position");
				if (!p || !p.match(/(fixed|absolute|relative)/))
					$N.css("position","relative");

				// set current layout-container dimensions
				if ( $N.is(":visible") ) {
					$.extend(sC, elDims( $N, o.inset )); // passing inset means DO NOT change insetX (padding) values
					if (sC.innerHeight < 1) // container has no 'height' - warn developer
						_log( o.errors.noContainerHeight.replace(/CONTAINER/, sC.ref) );
				}
			}

			// if container has min-width/height, then enable scrollbar(s)
			if ( num($N, "minWidth")  ) $N.parent().css("overflowX","auto");
			if ( num($N, "minHeight") ) $N.parent().css("overflowY","auto");

		} catch (ex) {}
	}

	/**
	 * Bind layout hotkeys - if options enabled
	 *
	 * @see  _create() and addPane()
	 * @param {string=}	[panes=""]	The edge(s) to process
	 */
,	initHotkeys = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;
		// bind keyDown to capture hotkeys, if option enabled for ANY pane
		$.each(panes, function (i, pane) {
			var o = options[pane];
			if (o.enableCursorHotkey || o.customHotkey) {
				$(document).bind("keydown."+ sID, keyDown); // only need to bind this ONCE
				return false; // BREAK - binding was done
			}
		});
	}

	/**
	 * Build final OPTIONS data
	 *
	 * @see  _create()
	 */
,	initOptions = function () {
		var data, d, pane, key, val, i, c, o;

		// reprocess user's layout-options to have correct options sub-key structure
		opts = $.layout.transformData( opts, true ); // panes = default subkey

		// auto-rename old options for backward compatibility
		opts = $.layout.backwardCompatibility.renameAllOptions( opts );

		// if user-options has 'panes' key (pane-defaults), clean it...
		if (!$.isEmptyObject(opts.panes)) {
			// REMOVE any pane-defaults that MUST be set per-pane
			data = $.layout.optionsMap.noDefault;
			for (i=0, c=data.length; i<c; i++) {
				key = data[i];
				delete opts.panes[key]; // OK if does not exist
			}
			// REMOVE any layout-options specified under opts.panes
			data = $.layout.optionsMap.layout;
			for (i=0, c=data.length; i<c; i++) {
				key = data[i];
				delete opts.panes[key]; // OK if does not exist
			}
		}

		// MOVE any NON-layout-options from opts-root to opts.panes
		data = $.layout.optionsMap.layout;
		var rootKeys = $.layout.config.optionRootKeys;
		for (key in opts) {
			val = opts[key];
			if ($.inArray(key, rootKeys) < 0 && $.inArray(key, data) < 0) {
				if (!opts.panes[key])
					opts.panes[key] = $.isPlainObject(val) ? $.extend(true, {}, val) : val;
				delete opts[key]
			}
		}

		// START by updating ALL options from opts
		$.extend(true, options, opts);

		// CREATE final options (and config) for EACH pane
		$.each(_c.allPanes, function (i, pane) {

			// apply 'pane-defaults' to CONFIG.[PANE]
			_c[pane] = $.extend(true, {}, _c.panes, _c[pane]);

			d = options.panes;
			o = options[pane];

			// center-pane uses SOME keys in defaults.panes branch
			if (pane === 'center') {
				// ONLY copy keys from opts.panes listed in: $.layout.optionsMap.center
				data = $.layout.optionsMap.center;		// list of 'center-pane keys'
				for (i=0, c=data.length; i<c; i++) {	// loop the list...
					key = data[i];
					// only need to use pane-default if pane-specific value not set
					if (!opts.center[key] && (opts.panes[key] || !o[key]))
						o[key] = d[key]; // pane-default
				}
			}
			else {
				// border-panes use ALL keys in defaults.panes branch
				o = options[pane] = $.extend(true, {}, d, o); // re-apply pane-specific opts AFTER pane-defaults
				createFxOptions( pane );
				// ensure all border-pane-specific base-classes exist
				if (!o.resizerClass)	o.resizerClass	= "ui-layout-resizer";
				if (!o.togglerClass)	o.togglerClass	= "ui-layout-toggler";
			}
			// ensure we have base pane-class (ALL panes)
			if (!o.paneClass) o.paneClass = "ui-layout-pane";
		});

		// update options.zIndexes if a zIndex-option specified
		var zo	= opts.zIndex
		,	z	= options.zIndexes;
		if (zo > 0) {
			z.pane_normal		= zo;
			z.content_mask		= max(zo+1, z.content_mask);	// MIN = +1
			z.resizer_normal	= max(zo+2, z.resizer_normal);	// MIN = +2
		}

		// DELETE 'panes' key now that we are done - values were copied to EACH pane
		delete options.panes;


		function createFxOptions ( pane ) {
			var	o = options[pane]
			,	d = options.panes;
			// ensure fxSettings key to avoid errors
			if (!o.fxSettings) o.fxSettings = {};
			if (!d.fxSettings) d.fxSettings = {};

			$.each(["_open","_close","_size"], function (i,n) { 
				var
					sName		= "fxName"+ n
				,	sSpeed		= "fxSpeed"+ n
				,	sSettings	= "fxSettings"+ n
					// recalculate fxName according to specificity rules
				,	fxName = o[sName] =
						o[sName]	// options.west.fxName_open
					||	d[sName]	// options.panes.fxName_open
					||	o.fxName	// options.west.fxName
					||	d.fxName	// options.panes.fxName
					||	"none"		// MEANS $.layout.defaults.panes.fxName == "" || false || null || 0
				,	fxExists	= $.effects && ($.effects[fxName] || ($.effects.effect && $.effects.effect[fxName]))
				;
				// validate fxName to ensure is valid effect - MUST have effect-config data in options.effects
				if (fxName === "none" || !options.effects[fxName] || !fxExists)
					fxName = o[sName] = "none"; // effect not loaded OR unrecognized fxName

				// set vars for effects subkeys to simplify logic
				var	fx		= options.effects[fxName] || {}	// effects.slide
				,	fx_all	= fx.all	|| null				// effects.slide.all
				,	fx_pane	= fx[pane]	|| null				// effects.slide.west
				;
				// create fxSpeed[_open|_close|_size]
				o[sSpeed] =
					o[sSpeed]				// options.west.fxSpeed_open
				||	d[sSpeed]				// options.west.fxSpeed_open
				||	o.fxSpeed				// options.west.fxSpeed
				||	d.fxSpeed				// options.panes.fxSpeed
				||	null					// DEFAULT - let fxSetting.duration control speed
				;
				// create fxSettings[_open|_close|_size]
				o[sSettings] = $.extend(
					true
				,	{}
				,	fx_all					// effects.slide.all
				,	fx_pane					// effects.slide.west
				,	d.fxSettings			// options.panes.fxSettings
				,	o.fxSettings			// options.west.fxSettings
				,	d[sSettings]			// options.panes.fxSettings_open
				,	o[sSettings]			// options.west.fxSettings_open
				);
			});

			// DONE creating action-specific-settings for this pane,
			// so DELETE generic options - are no longer meaningful
			delete o.fxName;
			delete o.fxSpeed;
			delete o.fxSettings;
		}
	}

	/**
	 * Initialize module objects, styling, size and position for all panes
	 *
	 * @see  _initElements()
	 * @param {string}	pane		The pane to process
	 */
,	getPane = function (pane) {
		var sel = options[pane].paneSelector
		if (sel.substr(0,1)==="#") // ID selector
			// NOTE: elements selected 'by ID' DO NOT have to be 'children'
			return $N.find(sel).eq(0);
		else { // class or other selector
			var $P = $N.children(sel).eq(0);
			// look for the pane nested inside a 'form' element
			return $P.length ? $P : $N.children("form:first").children(sel).eq(0);
		}
	}

	/**
	 * @param {Object=}		evt
	 */
,	initPanes = function (evt) {
		// stopPropagation if called by trigger("layoutinitpanes") - use evtPane utility 
		evtPane(evt);

		// NOTE: do north & south FIRST so we can measure their height - do center LAST
		$.each(_c.allPanes, function (idx, pane) {
			addPane( pane, true );
		});

		// init the pane-handles NOW in case we have to hide or close the pane below
		initHandles();

		// now that all panes have been initialized and initially-sized,
		// make sure there is really enough space available for each pane
		$.each(_c.borderPanes, function (i, pane) {
			if ($Ps[pane] && state[pane].isVisible) { // pane is OPEN
				setSizeLimits(pane);
				makePaneFit(pane); // pane may be Closed, Hidden or Resized by makePaneFit()
			}
		});
		// size center-pane AGAIN in case we 'closed' a border-pane in loop above
		sizeMidPanes("center");

		//	Chrome/Webkit sometimes fires callbacks BEFORE it completes resizing!
		//	Before RC30.3, there was a 10ms delay here, but that caused layout 
		//	to load asynchrously, which is BAD, so try skipping delay for now

		// process pane contents and callbacks, and init/resize child-layout if exists
		$.each(_c.allPanes, function (idx, pane) {
			afterInitPane(pane);
		});
	}

	/**
	 * Add a pane to the layout - subroutine of initPanes()
	 *
	 * @see  initPanes()
	 * @param {string}	pane			The pane to process
	 * @param {boolean=}	[force=false]	Size content after init
	 */
,	addPane = function (pane, force) {
		if ( !force && !isInitialized() ) return;
		var
			o		= options[pane]
		,	s		= state[pane]
		,	c		= _c[pane]
		,	dir		= c.dir
		,	fx		= s.fx
		,	spacing	= o.spacing_open || 0
		,	isCenter = (pane === "center")
		,	CSS		= {}
		,	$P		= $Ps[pane]
		,	size, minSize, maxSize, child
		;
		// if pane-pointer already exists, remove the old one first
		if ($P)
			removePane( pane, false, true, false );
		else
			$Cs[pane] = false; // init

		$P = $Ps[pane] = getPane(pane);
		if (!$P.length) {
			$Ps[pane] = false; // logic
			return;
		}

		// SAVE original Pane CSS
		if (!$P.data("layoutCSS")) {
			var props = "position,top,left,bottom,right,width,height,overflow,zIndex,display,backgroundColor,padding,margin,border";
			$P.data("layoutCSS", styles($P, props));
		}

		// create alias for pane data in Instance - initHandles will add more
		Instance[pane] = {
			name:		pane
		,	pane:		$Ps[pane]
		,	content:	$Cs[pane]
		,	options:	options[pane]
		,	state:		state[pane]
		,	children:	children[pane]
		};

		// add classes, attributes & events
		$P	.data({
				parentLayout:	Instance		// pointer to Layout Instance
			,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
			,	layoutEdge:		pane
			,	layoutRole:		"pane"
			})
			.css(c.cssReq).css("zIndex", options.zIndexes.pane_normal)
			.css(o.applyDemoStyles ? c.cssDemo : {}) // demo styles
			.addClass( o.paneClass +" "+ o.paneClass+"-"+pane ) // default = "ui-layout-pane ui-layout-pane-west" - may be a dupe of 'paneSelector'
			.bind("mouseenter."+ sID, addHover )
			.bind("mouseleave."+ sID, removeHover )
			;
		var paneMethods = {
				hide:				''
			,	show:				''
			,	toggle:				''
			,	close:				''
			,	open:				''
			,	slideOpen:			''
			,	slideClose:			''
			,	slideToggle:		''
			,	size:				'sizePane'
			,	sizePane:			'sizePane'
			,	sizeContent:		''
			,	sizeHandles:		''
			,	enableClosable:		''
			,	disableClosable:	''
			,	enableSlideable:	''
			,	disableSlideable:	''
			,	enableResizable:	''
			,	disableResizable:	''
			,	swapPanes:			'swapPanes'
			,	swap:				'swapPanes'
			,	move:				'swapPanes'
			,	removePane:			'removePane'
			,	remove:				'removePane'
			,	createChildren:		''
			,	resizeChildren:		''
			,	resizeAll:			'resizeAll'
			,	resizeLayout:		'resizeAll'
			}
		,	name;
		// loop hash and bind all methods - include layoutID namespacing
		for (name in paneMethods) {
			$P.bind("layoutpane"+ name.toLowerCase() +"."+ sID, Instance[ paneMethods[name] || name ]);
		}

		// see if this pane has a 'scrolling-content element'
		initContent(pane, false); // false = do NOT sizeContent() - called later

		if (!isCenter) {
			// call _parseSize AFTER applying pane classes & styles - but before making visible (if hidden)
			// if o.size is auto or not valid, then MEASURE the pane and use that as its 'size'
			size	= s.size = _parseSize(pane, o.size);
			minSize	= _parseSize(pane,o.minSize) || 1;
			maxSize	= _parseSize(pane,o.maxSize) || 100000;
			if (size > 0) size = max(min(size, maxSize), minSize);
			s.autoResize = o.autoResize; // used with percentage sizes

			// state for border-panes
			s.isClosed  = false; // true = pane is closed
			s.isSliding = false; // true = pane is currently open by 'sliding' over adjacent panes
			s.isResizing= false; // true = pane is in process of being resized
			s.isHidden	= false; // true = pane is hidden - no spacing, resizer or toggler is visible!

			// array for 'pin buttons' whose classNames are auto-updated on pane-open/-close
			if (!s.pins) s.pins = [];
		}
		//	states common to ALL panes
		s.tagName	= $P[0].tagName;
		s.edge		= pane;		// useful if pane is (or about to be) 'swapped' - easy find out where it is (or is going)
		s.noRoom	= false;	// true = pane 'automatically' hidden due to insufficient room - will unhide automatically
		s.isVisible	= true;		// false = pane is invisible - closed OR hidden - simplify logic

		// init pane positioning
		setPanePosition( pane );

		// if pane is not visible, 
		if (dir === "horz") // north or south pane
			CSS.height = cssH($P, size);
		else if (dir === "vert") // east or west pane
			CSS.width = cssW($P, size);
		//else if (isCenter) {}

		$P.css(CSS); // apply size -- top, bottom & height will be set by sizeMidPanes
		if (dir != "horz") sizeMidPanes(pane, true); // true = skipCallback

		// if manually adding a pane AFTER layout initialization, then...
		if (state.initialized) {
			initHandles( pane );
			initHotkeys( pane );
		}

		// close or hide the pane if specified in settings
		if (o.initClosed && o.closable && !o.initHidden)
			close(pane, true, true); // true, true = force, noAnimation
		else if (o.initHidden || o.initClosed)
			hide(pane); // will be completely invisible - no resizer or spacing
		else if (!s.noRoom)
			// make the pane visible - in case was initially hidden
			$P.css("display","block");
		// ELSE setAsOpen() - called later by initHandles()

		// RESET visibility now - pane will appear IF display:block
		$P.css("visibility","visible");

		// check option for auto-handling of pop-ups & drop-downs
		if (o.showOverflowOnHover)
			$P.hover( allowOverflow, resetOverflow );

		// if manually adding a pane AFTER layout initialization, then...
		if (state.initialized) {
			afterInitPane( pane );
		}
	}

,	afterInitPane = function (pane) {
		var	$P	= $Ps[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		;
		if (!$P) return;

		// see if there is a directly-nested layout inside this pane
		if ($P.data("layout"))
			refreshChildren( pane, $P.data("layout") );

		// process pane contents and callbacks, and init/resize child-layout if exists
		if (s.isVisible) { // pane is OPEN
			if (state.initialized) // this pane was added AFTER layout was created
				resizeAll(); // will also sizeContent
			else
				sizeContent(pane);

			if (o.triggerEventsOnLoad)
				_runCallbacks("onresize_end", pane);
			else // automatic if onresize called, otherwise call it specifically
				// resize child - IF inner-layout already exists (created before this layout)
				resizeChildren(pane, true); // a previously existing childLayout
		}

		// init childLayouts - even if pane is not visible
		if (o.initChildren && o.children)
			createChildren(pane);
	}

	/**
	 * @param {string=}	panes		The pane(s) to process
	 */
,	setPanePosition = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;

		// create toggler DIVs for each pane, and set object pointers for them, eg: $R.north = north toggler DIV
		$.each(panes, function (i, pane) {
			var $P	= $Ps[pane]
			,	$R	= $Rs[pane]
			,	o	= options[pane]
			,	s	= state[pane]
			,	side =  _c[pane].side
			,	CSS	= {}
			;
			if (!$P) return; // pane does not exist - skip

			// set css-position to account for container borders & padding
			switch (pane) {
				case "north": 	CSS.top 	= sC.inset.top;
								CSS.left 	= sC.inset.left;
								CSS.right	= sC.inset.right;
								break;
				case "south": 	CSS.bottom	= sC.inset.bottom;
								CSS.left 	= sC.inset.left;
								CSS.right 	= sC.inset.right;
								break;
				case "west": 	CSS.left 	= sC.inset.left; // top, bottom & height set by sizeMidPanes()
								break;
				case "east": 	CSS.right 	= sC.inset.right; // ditto
								break;
				case "center":	// top, left, width & height set by sizeMidPanes()
			}
			// apply position
			$P.css(CSS); 

			// update resizer position
			if ($R && s.isClosed)
				$R.css(side, sC.inset[side]);
			else if ($R && !s.isHidden)
				$R.css(side, sC.inset[side] + getPaneSize(pane));
		});
	}

	/**
	 * Initialize module objects, styling, size and position for all resize bars and toggler buttons
	 *
	 * @see  _create()
	 * @param {string=}	[panes=""]	The edge(s) to process
	 */
,	initHandles = function (panes) {
		panes = panes ? panes.split(",") : _c.borderPanes;

		// create toggler DIVs for each pane, and set object pointers for them, eg: $R.north = north toggler DIV
		$.each(panes, function (i, pane) {
			var $P		= $Ps[pane];
			$Rs[pane]	= false; // INIT
			$Ts[pane]	= false;
			if (!$P) return; // pane does not exist - skip

			var	o		= options[pane]
			,	s		= state[pane]
			,	c		= _c[pane]
			,	paneId	= o.paneSelector.substr(0,1) === "#" ? o.paneSelector.substr(1) : ""
			,	rClass	= o.resizerClass
			,	tClass	= o.togglerClass
			,	spacing	= (s.isVisible ? o.spacing_open : o.spacing_closed)
			,	_pane	= "-"+ pane // used for classNames
			,	_state	= (s.isVisible ? "-open" : "-closed") // used for classNames
			,	I		= Instance[pane]
				// INIT RESIZER BAR
			,	$R		= I.resizer = $Rs[pane] = $("<div></div>")
				// INIT TOGGLER BUTTON
			,	$T		= I.toggler = (o.closable ? $Ts[pane] = $("<div></div>") : false)
			;

			//if (s.isVisible && o.resizable) ... handled by initResizable
			if (!s.isVisible && o.slidable)
				$R.attr("title", o.tips.Slide).css("cursor", o.sliderCursor);

			$R	// if paneSelector is an ID, then create a matching ID for the resizer, eg: "#paneLeft" => "paneLeft-resizer"
				.attr("id", paneId ? paneId +"-resizer" : "" )
				.data({
					parentLayout:	Instance
				,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
				,	layoutEdge:		pane
				,	layoutRole:		"resizer"
				})
				.css(_c.resizers.cssReq).css("zIndex", options.zIndexes.resizer_normal)
				.css(o.applyDemoStyles ? _c.resizers.cssDemo : {}) // add demo styles
				.addClass(rClass +" "+ rClass+_pane)
				.hover(addHover, removeHover) // ALWAYS add hover-classes, even if resizing is not enabled - handle with CSS instead
				.hover(onResizerEnter, onResizerLeave) // ALWAYS NEED resizer.mouseleave to balance toggler.mouseenter
				.mousedown($.layout.disableTextSelection)	// prevent text-selection OUTSIDE resizer
				.mouseup($.layout.enableTextSelection)		// not really necessary, but just in case
				.appendTo($N) // append DIV to container
			;
			if ($.fn.disableSelection)
				$R.disableSelection(); // prevent text-selection INSIDE resizer
			if (o.resizerDblClickToggle)
				$R.bind("dblclick."+ sID, toggle );

			if ($T) {
				$T	// if paneSelector is an ID, then create a matching ID for the resizer, eg: "#paneLeft" => "#paneLeft-toggler"
					.attr("id", paneId ? paneId +"-toggler" : "" )
					.data({
						parentLayout:	Instance
					,	layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
					,	layoutEdge:		pane
					,	layoutRole:		"toggler"
					})
					.css(_c.togglers.cssReq) // add base/required styles
					.css(o.applyDemoStyles ? _c.togglers.cssDemo : {}) // add demo styles
					.addClass(tClass +" "+ tClass+_pane)
					.hover(addHover, removeHover) // ALWAYS add hover-classes, even if toggling is not enabled - handle with CSS instead
					.bind("mouseenter", onResizerEnter) // NEED toggler.mouseenter because mouseenter MAY NOT fire on resizer
					.appendTo($R) // append SPAN to resizer DIV
				;
				// ADD INNER-SPANS TO TOGGLER
				if (o.togglerContent_open) // ui-layout-open
					$("<span>"+ o.togglerContent_open +"</span>")
						.data({
							layoutEdge:		pane
						,	layoutRole:		"togglerContent"
						})
						.data("layoutRole", "togglerContent")
						.data("layoutEdge", pane)
						.addClass("content content-open")
						.css("display","none")
						.appendTo( $T )
						//.hover( addHover, removeHover ) // use ui-layout-toggler-west-hover .content-open instead!
					;
				if (o.togglerContent_closed) // ui-layout-closed
					$("<span>"+ o.togglerContent_closed +"</span>")
						.data({
							layoutEdge:		pane
						,	layoutRole:		"togglerContent"
						})
						.addClass("content content-closed")
						.css("display","none")
						.appendTo( $T )
						//.hover( addHover, removeHover ) // use ui-layout-toggler-west-hover .content-closed instead!
					;
				// ADD TOGGLER.click/.hover
				enableClosable(pane);
			}

			// add Draggable events
			initResizable(pane);

			// ADD CLASSNAMES & SLIDE-BINDINGS - eg: class="resizer resizer-west resizer-open"
			if (s.isVisible)
				setAsOpen(pane);	// onOpen will be called, but NOT onResize
			else {
				setAsClosed(pane);	// onClose will be called
				bindStartSlidingEvents(pane, true); // will enable events IF option is set
			}

		});

		// SET ALL HANDLE DIMENSIONS
		sizeHandles();
	}


	/**
	 * Initialize scrolling ui-layout-content div - if exists
	 *
	 * @see  initPane() - or externally after an Ajax injection
	 * @param {string}	pane			The pane to process
	 * @param {boolean=}	[resize=true]	Size content after init
	 */
,	initContent = function (pane, resize) {
		if (!isInitialized()) return;
		var 
			o	= options[pane]
		,	sel	= o.contentSelector
		,	I	= Instance[pane]
		,	$P	= $Ps[pane]
		,	$C
		;
		if (sel) $C = I.content = $Cs[pane] = (o.findNestedContent)
			? $P.find(sel).eq(0) // match 1-element only
			: $P.children(sel).eq(0)
		;
		if ($C && $C.length) {
			$C.data("layoutRole", "content");
			// SAVE original Content CSS
			if (!$C.data("layoutCSS"))
				$C.data("layoutCSS", styles($C, "height"));
			$C.css( _c.content.cssReq );
			if (o.applyDemoStyles) {
				$C.css( _c.content.cssDemo ); // add padding & overflow: auto to content-div
				$P.css( _c.content.cssDemoPane ); // REMOVE padding/scrolling from pane
			}
			// ensure no vertical scrollbar on pane - will mess up measurements
			if ($P.css("overflowX").match(/(scroll|auto)/)) {
				$P.css("overflow", "hidden");
			}
			state[pane].content = {}; // init content state
			if (resize !== false) sizeContent(pane);
			// sizeContent() is called AFTER init of all elements
		}
		else
			I.content = $Cs[pane] = false;
	}


	/**
	 * Add resize-bars to all panes that specify it in options
	 * -dependancy: $.fn.resizable - will skip if not found
	 *
	 * @see  _create()
	 * @param {string=}	[panes=""]	The edge(s) to process
	 */
,	initResizable = function (panes) {
		var	draggingAvailable = $.layout.plugins.draggable
		,	side // set in start()
		;
		panes = panes ? panes.split(",") : _c.borderPanes;

		$.each(panes, function (idx, pane) {
			var o = options[pane];
			if (!draggingAvailable || !$Ps[pane] || !o.resizable) {
				o.resizable = false;
				return true; // skip to next
			}

			var s		= state[pane]
			,	z		= options.zIndexes
			,	c		= _c[pane]
			,	side	= c.dir=="horz" ? "top" : "left"
			,	$P 		= $Ps[pane]
			,	$R		= $Rs[pane]
			,	base	= o.resizerClass
			,	lastPos	= 0 // used when live-resizing
			,	r, live // set in start because may change
			//	'drag' classes are applied to the ORIGINAL resizer-bar while dragging is in process
			,	resizerClass		= base+"-drag"				// resizer-drag
			,	resizerPaneClass	= base+"-"+pane+"-drag"		// resizer-north-drag
			//	'helper' class is applied to the CLONED resizer-bar while it is being dragged
			,	helperClass			= base+"-dragging"			// resizer-dragging
			,	helperPaneClass		= base+"-"+pane+"-dragging" // resizer-north-dragging
			,	helperLimitClass	= base+"-dragging-limit"	// resizer-drag
			,	helperPaneLimitClass = base+"-"+pane+"-dragging-limit"	// resizer-north-drag
			,	helperClassesSet	= false 					// logic var
			;

			if (!s.isClosed)
				$R.attr("title", o.tips.Resize)
				  .css("cursor", o.resizerCursor); // n-resize, s-resize, etc

			$R.draggable({
				containment:	$N[0] // limit resizing to layout container
			,	axis:			(c.dir=="horz" ? "y" : "x") // limit resizing to horz or vert axis
			,	delay:			0
			,	distance:		1
			,	grid:			o.resizingGrid
			//	basic format for helper - style it using class: .ui-draggable-dragging
			,	helper:			"clone"
			,	opacity:		o.resizerDragOpacity
			,	addClasses:		false // avoid ui-state-disabled class when disabled
			//,	iframeFix:		o.draggableIframeFix // TODO: consider using when bug is fixed
			,	zIndex:			z.resizer_drag

			,	start: function (e, ui) {
					// REFRESH options & state pointers in case we used swapPanes
					o = options[pane];
					s = state[pane];
					// re-read options
					live = o.livePaneResizing;

					// ondrag_start callback - will CANCEL hide if returns false
					// TODO: dragging CANNOT be cancelled like this, so see if there is a way?
					if (false === _runCallbacks("ondrag_start", pane)) return false;

					s.isResizing		= true; // prevent pane from closing while resizing
					state.paneResizing	= pane; // easy to see if ANY pane is resizing
					timer.clear(pane+"_closeSlider"); // just in case already triggered

					// SET RESIZER LIMITS - used in drag()
					setSizeLimits(pane); // update pane/resizer state
					r = s.resizerPosition;
					lastPos = ui.position[ side ]

					$R.addClass( resizerClass +" "+ resizerPaneClass ); // add drag classes
					helperClassesSet = false; // reset logic var - see drag()

					// MASK PANES CONTAINING IFRAMES, APPLETS OR OTHER TROUBLESOME ELEMENTS
					showMasks( pane, { resizing: true });
				}

			,	drag: function (e, ui) {
					if (!helperClassesSet) { // can only add classes after clone has been added to the DOM
						//$(".ui-draggable-dragging")
						ui.helper
							.addClass( helperClass +" "+ helperPaneClass ) // add helper classes
							.css({ right: "auto", bottom: "auto" })	// fix dir="rtl" issue
							.children().css("visibility","hidden")	// hide toggler inside dragged resizer-bar
						;
						helperClassesSet = true;
						// draggable bug!? RE-SET zIndex to prevent E/W resize-bar showing through N/S pane!
						if (s.isSliding) $Ps[pane].css("zIndex", z.pane_sliding);
					}
					// CONTAIN RESIZER-BAR TO RESIZING LIMITS
					var limit = 0;
					if (ui.position[side] < r.min) {
						ui.position[side] = r.min;
						limit = -1;
					}
					else if (ui.position[side] > r.max) {
						ui.position[side] = r.max;
						limit = 1;
					}
					// ADD/REMOVE dragging-limit CLASS
					if (limit) {
						ui.helper.addClass( helperLimitClass +" "+ helperPaneLimitClass ); // at dragging-limit
						window.defaultStatus = (limit>0 && pane.match(/(north|west)/)) || (limit<0 && pane.match(/(south|east)/)) ? o.tips.maxSizeWarning : o.tips.minSizeWarning;
					}
					else {
						ui.helper.removeClass( helperLimitClass +" "+ helperPaneLimitClass ); // not at dragging-limit
						window.defaultStatus = "";
					}
					// DYNAMICALLY RESIZE PANES IF OPTION ENABLED
					// won't trigger unless resizer has actually moved!
					if (live && Math.abs(ui.position[side] - lastPos) >= o.liveResizingTolerance) {
						lastPos = ui.position[side];
						resizePanes(e, ui, pane)
					}
				}

			,	stop: function (e, ui) {
					$('body').enableSelection(); // RE-ENABLE TEXT SELECTION
					window.defaultStatus = ""; // clear 'resizing limit' message from statusbar
					$R.removeClass( resizerClass +" "+ resizerPaneClass ); // remove drag classes from Resizer
					s.isResizing		= false;
					state.paneResizing	= false; // easy to see if ANY pane is resizing
					resizePanes(e, ui, pane, true); // true = resizingDone
				}

			});
		});

		/**
		 * resizePanes
		 *
		 * Sub-routine called from stop() - and drag() if livePaneResizing
		 *
		 * @param {!Object}		evt
		 * @param {!Object}		ui
		 * @param {string}		pane
		 * @param {boolean=}		[resizingDone=false]
		 */
		var resizePanes = function (evt, ui, pane, resizingDone) {
			var	dragPos	= ui.position
			,	c		= _c[pane]
			,	o		= options[pane]
			,	s		= state[pane]
			,	resizerPos
			;
			switch (pane) {
				case "north":	resizerPos = dragPos.top; break;
				case "west":	resizerPos = dragPos.left; break;
				case "south":	resizerPos = sC.layoutHeight - dragPos.top  - o.spacing_open; break;
				case "east":	resizerPos = sC.layoutWidth  - dragPos.left - o.spacing_open; break;
			};
			// remove container margin from resizer position to get the pane size
			var newSize = resizerPos - sC.inset[c.side];

			// Disable OR Resize Mask(s) created in drag.start
			if (!resizingDone) {
				// ensure we meet liveResizingTolerance criteria
				if (Math.abs(newSize - s.size) < o.liveResizingTolerance)
					return; // SKIP resize this time
				// resize the pane
				manualSizePane(pane, newSize, false, true); // true = noAnimation
				sizeMasks(); // resize all visible masks
			}
			else { // resizingDone
				// ondrag_end callback
				if (false !== _runCallbacks("ondrag_end", pane))
					manualSizePane(pane, newSize, false, true); // true = noAnimation
				hideMasks(true); // true = force hiding all masks even if one is 'sliding'
				if (s.isSliding) // RE-SHOW 'object-masks' so objects won't show through sliding pane
					showMasks( pane, { resizing: true });
			}
		};
	}

	/**
	 *	sizeMask
	 *
	 *	Needed to overlay a DIV over an IFRAME-pane because mask CANNOT be *inside* the pane
	 *	Called when mask created, and during livePaneResizing
	 */
,	sizeMask = function () {
		var $M		= $(this)
		,	pane	= $M.data("layoutMask") // eg: "west"
		,	s		= state[pane]
		;
		// only masks over an IFRAME-pane need manual resizing
		if (s.tagName == "IFRAME" && s.isVisible) // no need to mask closed/hidden panes
			$M.css({
				top:	s.offsetTop
			,	left:	s.offsetLeft
			,	width:	s.outerWidth
			,	height:	s.outerHeight
			});
		/* ALT Method...
		var $P = $Ps[pane];
		$M.css( $P.position() ).css({ width: $P[0].offsetWidth, height: $P[0].offsetHeight });
		*/
	}
,	sizeMasks = function () {
		$Ms.each( sizeMask ); // resize all 'visible' masks
	}

	/**
	 * @param {string}	pane		The pane being resized, animated or isSliding
	 * @param {Object=}	[args]		(optional) Options: which masks to apply, and to which panes
	 */
,	showMasks = function (pane, args) {
		var	c		= _c[pane]
		,	panes	=  ["center"]
		,	z		= options.zIndexes
		,	a		= $.extend({
						objectsOnly:	false
					,	animation:		false
					,	resizing:		true
					,	sliding:		state[pane].isSliding
					},	args )
		,	o, s
		;
		if (a.resizing)
			panes.push( pane );
		if (a.sliding)
			panes.push( _c.oppositeEdge[pane] ); // ADD the oppositeEdge-pane

		if (c.dir === "horz") {
			panes.push("west");
			panes.push("east");
		}

		$.each(panes, function(i,p){
			s = state[p];
			o = options[p];
			if (s.isVisible && ( o.maskObjects || (!a.objectsOnly && o.maskContents) )) {
				getMasks(p).each(function(){
					sizeMask.call(this);
					this.style.zIndex = s.isSliding ? z.pane_sliding+1 : z.pane_normal+1
					this.style.display = "block";
				});
			}
		});
	}

	/**
	 * @param {boolean=}	force		Hide masks even if a pane is sliding
	 */
,	hideMasks = function (force) {
		// ensure no pane is resizing - could be a timing issue
		if (force || !state.paneResizing) {
			$Ms.hide(); // hide ALL masks
		}
		// if ANY pane is sliding, then DO NOT remove masks from panes with maskObjects enabled
		else if (!force && !$.isEmptyObject( state.panesSliding )) {
			var	i = $Ms.length - 1
			,	p, $M;
			for (; i >= 0; i--) {
				$M	= $Ms.eq(i);
				p	= $M.data("layoutMask");
				if (!options[p].maskObjects) {
					$M.hide();
				}
			}
		}
	}

	/**
	 * @param {string}	pane
	 */
,	getMasks = function (pane) {
		var $Masks	= $([])
		,	$M, i = 0, c = $Ms.length
		;
		for (; i<c; i++) {
			$M = $Ms.eq(i);
			if ($M.data("layoutMask") === pane)
				$Masks = $Masks.add( $M );
		}
		if ($Masks.length)
			return $Masks;
		else
			return createMasks(pane);
	}

	/**
	 * createMasks
	 *
	 * Generates both DIV (ALWAYS used) and IFRAME (optional) elements as masks
	 * An IFRAME mask is created *under* the DIV when maskObjects=true, because a DIV cannot mask an applet
	 *
	 * @param {string}	pane
	 */
,	createMasks = function (pane) {
		var
			$P	= $Ps[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		,	z	= options.zIndexes
		,	isIframe, el, $M, css, i
		;
		if (!o.maskContents && !o.maskObjects) return $([]);
		// if o.maskObjects=true, then loop TWICE to create BOTH kinds of mask, else only create a DIV
		for (i=0; i < (o.maskObjects ? 2 : 1); i++) {
			isIframe = o.maskObjects && i==0;
			el = document.createElement( isIframe ? "iframe" : "div" );
			$M = $(el).data("layoutMask", pane); // add data to relate mask to pane
			el.className = "ui-layout-mask ui-layout-mask-"+ pane; // for user styling
			css = el.style;
			// Both DIVs and IFRAMES
			css.background	= "#FFF";
			css.position	= "absolute";
			css.display		= "block";
			if (isIframe) { // IFRAME-only props
				el.src		= "about:blank";
				el.frameborder = 0;
				css.border	= 0;
				css.opacity	= 0;
				css.filter	= "Alpha(Opacity='0')";
				//el.allowTransparency = true; - for IE, but breaks masking ability!
			}
			else { // DIV-only props
				css.opacity	= 0.001;
				css.filter	= "Alpha(Opacity='1')";
			}
			// if pane IS an IFRAME, then must mask the pane itself
			if (s.tagName == "IFRAME") {
				// NOTE sizing done by a subroutine so can be called during live-resizing
				css.zIndex	= z.pane_normal+1; // 1-higher than pane
				$N.append( el ); // append to LAYOUT CONTAINER
			}
			// otherwise put masks *inside the pane* to mask its contents
			else {
				$M.addClass("ui-layout-mask-inside-pane");
				css.zIndex	= o.maskZindex || z.content_mask; // usually 1, but customizable
				css.top		= 0;
				css.left	= 0;
				css.width	= "100%";
				css.height	= "100%";
				$P.append( el ); // append INSIDE pane element
			}
			// add Mask to cached array so can be resized & reused
			$Ms = $Ms.add( el );
		}
		return $Ms;
	}


	/**
	 * Destroy this layout and reset all elements
	 *
	 * @param {boolean=}	[destroyChildren=false]		Destory Child-Layouts first?
	 */
,	destroy = function (evt_or_destroyChildren, destroyChildren) {
		// UNBIND layout events and remove global object
		$(window).unbind("."+ sID);		// resize & unload
		$(document).unbind("."+ sID);	// keyDown (hotkeys)

		if (typeof evt_or_destroyChildren === "object")
			// stopPropagation if called by trigger("layoutdestroy") - use evtPane utility 
			evtPane(evt_or_destroyChildren);
		else // no event, so transfer 1st param to destroyChildren param
			destroyChildren = evt_or_destroyChildren;

		// need to look for parent layout BEFORE we remove the container data, else skips a level
		//var parentPane = Instance.hasParentLayout ? $.layout.getParentPaneInstance( $N ) : null;

		// reset layout-container
		$N	.clearQueue()
			.removeData("layout")
			.removeData("layoutContainer")
			.removeClass(options.containerClass)
			.unbind("."+ sID) // remove ALL Layout events
		;

		// remove all mask elements that have been created
		$Ms.remove();

		// loop all panes to remove layout classes, attributes and bindings
		$.each(_c.allPanes, function (i, pane) {
			removePane( pane, false, true, destroyChildren ); // true = skipResize
		});

		// do NOT reset container CSS if is a 'pane' (or 'content') in an outer-layout - ie, THIS layout is 'nested'
		var css = "layoutCSS";
		if ($N.data(css) && !$N.data("layoutRole")) // RESET CSS
			$N.css( $N.data(css) ).removeData(css);

		// for full-page layouts, also reset the <HTML> CSS
		if (sC.tagName === "BODY" && ($N = $("html")).data(css)) // RESET <HTML> CSS
			$N.css( $N.data(css) ).removeData(css);

		// trigger plugins for this layout, if there are any
		runPluginCallbacks( Instance, $.layout.onDestroy );

		// trigger state-management and onunload callback
		unload();

		// clear the Instance of everything except for container & options (so could recreate)
		// RE-CREATE: myLayout = myLayout.container.layout( myLayout.options );
		for (var n in Instance)
			if (!n.match(/^(container|options)$/)) delete Instance[ n ];
		// add a 'destroyed' flag to make it easy to check
		Instance.destroyed = true;

		// if this is a child layout, CLEAR the child-pointer in the parent
		/* for now the pointer REMAINS, but with only container, options and destroyed keys
		if (parentPane) {
			var layout	= parentPane.pane.data("parentLayout")
			,	key		= layout.options.instanceKey || 'error';
			// THIS SYNTAX MAY BE WRONG!
			parentPane.children[key] = layout.children[ parentPane.name ].children[key] = null;
		}
		*/

		return Instance; // for coding convenience
	}

	/**
	 * Remove a pane from the layout - subroutine of destroy()
	 *
	 * @see  destroy()
	 * @param {(string|Object)}	evt_or_pane			The pane to process
	 * @param {boolean=}			[remove=false]		Remove the DOM element?
	 * @param {boolean=}			[skipResize=false]	Skip calling resizeAll()?
	 * @param {boolean=}			[destroyChild=true]	Destroy Child-layouts? If not passed, obeys options setting
	 */
,	removePane = function (evt_or_pane, remove, skipResize, destroyChild) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		,	$C	= $Cs[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		;
		// NOTE: elements can still exist even after remove()
		//		so check for missing data(), which is cleared by removed()
		if ($P && $.isEmptyObject( $P.data() )) $P = false;
		if ($C && $.isEmptyObject( $C.data() )) $C = false;
		if ($R && $.isEmptyObject( $R.data() )) $R = false;
		if ($T && $.isEmptyObject( $T.data() )) $T = false;

		if ($P) $P.stop(true, true);

		var	o	= options[pane]
		,	s	= state[pane]
		,	d	= "layout"
		,	css	= "layoutCSS"
		,	pC	= children[pane]
		,	hasChildren	= $.isPlainObject( pC ) && !$.isEmptyObject( pC )
		,	destroy		= destroyChild !== undefined ? destroyChild : o.destroyChildren
		;
		// FIRST destroy the child-layout(s)
		if (hasChildren && destroy) {
			$.each( pC, function (key, child) {
				if (!child.destroyed)
					child.destroy(true);// tell child-layout to destroy ALL its child-layouts too
				if (child.destroyed)	// destroy was successful
					delete pC[key];
			});
			// if no more children, remove the children hash
			if ($.isEmptyObject( pC )) {
				pC = children[pane] = null; // clear children hash
				hasChildren = false;
			}
		}

		// Note: can't 'remove' a pane element with non-destroyed children
		if ($P && remove && !hasChildren)
			$P.remove(); // remove the pane-element and everything inside it
		else if ($P && $P[0]) {
			//	create list of ALL pane-classes that need to be removed
			var	root	= o.paneClass // default="ui-layout-pane"
			,	pRoot	= root +"-"+ pane // eg: "ui-layout-pane-west"
			,	_open	= "-open"
			,	_sliding= "-sliding"
			,	_closed	= "-closed"
			,	classes	= [	root, root+_open, root+_closed, root+_sliding,		// generic classes
							pRoot, pRoot+_open, pRoot+_closed, pRoot+_sliding ]	// pane-specific classes
			;
			$.merge(classes, getHoverClasses($P, true)); // ADD hover-classes
			// remove all Layout classes from pane-element
			$P	.removeClass( classes.join(" ") ) // remove ALL pane-classes
				.removeData("parentLayout")
				.removeData("layoutPane")
				.removeData("layoutRole")
				.removeData("layoutEdge")
				.removeData("autoHidden")	// in case set
				.unbind("."+ sID) // remove ALL Layout events
				// TODO: remove these extra unbind commands when jQuery is fixed
				//.unbind("mouseenter"+ sID)
				//.unbind("mouseleave"+ sID)
			;
			// do NOT reset CSS if this pane/content is STILL the container of a nested layout!
			// the nested layout will reset its 'container' CSS when/if it is destroyed
			if (hasChildren && $C) {
				// a content-div may not have a specific width, so give it one to contain the Layout
				$C.width( $C.width() );
				$.each( pC, function (key, child) {
					child.resizeAll(); // resize the Layout
				});
			}
			else if ($C)
				$C.css( $C.data(css) ).removeData(css).removeData("layoutRole");
			// remove pane AFTER content in case there was a nested layout
			if (!$P.data(d))
				$P.css( $P.data(css) ).removeData(css);
		}

		// REMOVE pane resizer and toggler elements
		if ($T) $T.remove();
		if ($R) $R.remove();

		// CLEAR all pointers and state data
		Instance[pane] = $Ps[pane] = $Cs[pane] = $Rs[pane] = $Ts[pane] = false;
		s = { removed: true };

		if (!skipResize)
			resizeAll();
	}


/*
 * ###########################
 *	   ACTION METHODS
 * ###########################
 */

	/**
	 * @param {string}	pane
	 */
,	_hidePane = function (pane) {
		var $P	= $Ps[pane]
		,	o	= options[pane]
		,	s	= $P[0].style
		;
		if (o.useOffscreenClose) {
			if (!$P.data(_c.offscreenReset))
				$P.data(_c.offscreenReset, { left: s.left, right: s.right });
			$P.css( _c.offscreenCSS );
		}
		else
			$P.hide().removeData(_c.offscreenReset);
	}

	/**
	 * @param {string}	pane
	 */
,	_showPane = function (pane) {
		var $P	= $Ps[pane]
		,	o	= options[pane]
		,	off	= _c.offscreenCSS
		,	old	= $P.data(_c.offscreenReset)
		,	s	= $P[0].style
		;
		$P	.show() // ALWAYS show, just in case
			.removeData(_c.offscreenReset);
		if (o.useOffscreenClose && old) {
			if (s.left == off.left)
				s.left = old.left;
			if (s.right == off.right)
				s.right = old.right;
		}
	}


	/**
	 * Completely 'hides' a pane, including its spacing - as if it does not exist
	 * The pane is not actually 'removed' from the source, so can use 'show' to un-hide it
	 *
	 * @param {(string|Object)}	evt_or_pane			The pane being hidden, ie: north, south, east, or west
	 * @param {boolean=}			[noAnimation=false]	
	 */
,	hide = function (evt_or_pane, noAnimation) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		;
		if (pane === "center" || !$P || s.isHidden) return; // pane does not exist OR is already hidden

		// onhide_start callback - will CANCEL hide if returns false
		if (state.initialized && false === _runCallbacks("onhide_start", pane)) return;

		s.isSliding = false; // just in case
		delete state.panesSliding[pane];

		// now hide the elements
		if ($R) $R.hide(); // hide resizer-bar
		if (!state.initialized || s.isClosed) {
			s.isClosed = true; // to trigger open-animation on show()
			s.isHidden  = true;
			s.isVisible = false;
			if (!state.initialized)
				_hidePane(pane); // no animation when loading page
			sizeMidPanes(_c[pane].dir === "horz" ? "" : "center");
			if (state.initialized || o.triggerEventsOnLoad)
				_runCallbacks("onhide_end", pane);
		}
		else {
			s.isHiding = true; // used by onclose
			close(pane, false, noAnimation); // adjust all panes to fit
		}
	}

	/**
	 * Show a hidden pane - show as 'closed' by default unless openPane = true
	 *
	 * @param {(string|Object)}	evt_or_pane			The pane being opened, ie: north, south, east, or west
	 * @param {boolean=}			[openPane=false]
	 * @param {boolean=}			[noAnimation=false]
	 * @param {boolean=}			[noAlert=false]
	 */
,	show = function (evt_or_pane, openPane, noAnimation, noAlert) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		;
		if (pane === "center" || !$P || !s.isHidden) return; // pane does not exist OR is not hidden

		// onshow_start callback - will CANCEL show if returns false
		if (false === _runCallbacks("onshow_start", pane)) return;

		s.isShowing = true; // used by onopen/onclose
		//s.isHidden  = false; - will be set by open/close - if not cancelled
		s.isSliding = false; // just in case
		delete state.panesSliding[pane];

		// now show the elements
		//if ($R) $R.show(); - will be shown by open/close
		if (openPane === false)
			close(pane, true); // true = force
		else
			open(pane, false, noAnimation, noAlert); // adjust all panes to fit
	}


	/**
	 * Toggles a pane open/closed by calling either open or close
	 *
	 * @param {(string|Object)}	evt_or_pane		The pane being toggled, ie: north, south, east, or west
	 * @param {boolean=}			[slide=false]
	 */
,	toggle = function (evt_or_pane, slide) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	s		= state[pane]
		;
		if (evt) // called from to $R.dblclick OR triggerPaneEvent
			evt.stopImmediatePropagation();
		if (s.isHidden)
			show(pane); // will call 'open' after unhiding it
		else if (s.isClosed)
			open(pane, !!slide);
		else
			close(pane);
	}


	/**
	 * Utility method used during init or other auto-processes
	 *
	 * @param {string}	pane   The pane being closed
	 * @param {boolean=}	[setHandles=false]
	 */
,	_closePane = function (pane, setHandles) {
		var
			$P	= $Ps[pane]
		,	s	= state[pane]
		;
		_hidePane(pane);
		s.isClosed = true;
		s.isVisible = false;
		if (setHandles) setAsClosed(pane);
	}

	/**
	 * Close the specified pane (animation optional), and resize all other panes as needed
	 *
	 * @param {(string|Object)}	evt_or_pane			The pane being closed, ie: north, south, east, or west
	 * @param {boolean=}			[force=false]
	 * @param {boolean=}			[noAnimation=false]
	 * @param {boolean=}			[skipCallback=false]
	 */
,	close = function (evt_or_pane, force, noAnimation, skipCallback) {
		var	pane = evtPane.call(this, evt_or_pane);
		if (pane === "center") return; // validate
		// if pane has been initialized, but NOT the complete layout, close pane instantly
		if (!state.initialized && $Ps[pane]) {
			_closePane(pane, true); // INIT pane as closed
			return;
		}
		if (!isInitialized()) return;

		var
			$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	doFX, isShowing, isHiding, wasSliding;

		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){

			if ( !$P
			||	(!o.closable && !s.isShowing && !s.isHiding)	// invalid request // (!o.resizable && !o.closable) ???
			||	(!force && s.isClosed && !s.isShowing)			// already closed
			) return queueNext();

			// onclose_start callback - will CANCEL hide if returns false
			// SKIP if just 'showing' a hidden pane as 'closed'
			var abort = !s.isShowing && false === _runCallbacks("onclose_start", pane);

			// transfer logic vars to temp vars
			isShowing	= s.isShowing;
			isHiding	= s.isHiding;
			wasSliding	= s.isSliding;
			// now clear the logic vars (REQUIRED before aborting)
			delete s.isShowing;
			delete s.isHiding;

			if (abort) return queueNext();

			doFX		= !noAnimation && !s.isClosed && (o.fxName_close != "none");
			s.isMoving	= true;
			s.isClosed	= true;
			s.isVisible	= false;
			// update isHidden BEFORE sizing panes
			if (isHiding) s.isHidden = true;
			else if (isShowing) s.isHidden = false;

			if (s.isSliding) // pane is being closed, so UNBIND trigger events
				bindStopSlidingEvents(pane, false); // will set isSliding=false
			else // resize panes adjacent to this one
				sizeMidPanes(_c[pane].dir === "horz" ? "" : "center", false); // false = NOT skipCallback

			// if this pane has a resizer bar, move it NOW - before animation
			setAsClosed(pane);

			// CLOSE THE PANE
			if (doFX) { // animate the close
				lockPaneForFX(pane, true);	// need to set left/top so animation will work
				$P.hide( o.fxName_close, o.fxSettings_close, o.fxSpeed_close, function () {
					lockPaneForFX(pane, false); // undo
					if (s.isClosed) close_2();
					queueNext();
				});
			}
			else { // hide the pane without animation
				_hidePane(pane);
				close_2();
				queueNext();
			};
		});

		// SUBROUTINE
		function close_2 () {
			s.isMoving	= false;
			bindStartSlidingEvents(pane, true); // will enable if o.slidable = true

			// if opposite-pane was autoClosed, see if it can be autoOpened now
			var altPane = _c.oppositeEdge[pane];
			if (state[ altPane ].noRoom) {
				setSizeLimits( altPane );
				makePaneFit( altPane );
			}

			if (!skipCallback && (state.initialized || o.triggerEventsOnLoad)) {
				// onclose callback - UNLESS just 'showing' a hidden pane as 'closed'
				if (!isShowing)	_runCallbacks("onclose_end", pane);
				// onhide OR onshow callback
				if (isShowing)	_runCallbacks("onshow_end", pane);
				if (isHiding)	_runCallbacks("onhide_end", pane);
			}
		}
	}

	/**
	 * @param {string}	pane	The pane just closed, ie: north, south, east, or west
	 */
,	setAsClosed = function (pane) {
		if (!$Rs[pane]) return; // handles not initialized yet!
		var
			$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	$T		= $Ts[pane]
		,	o		= options[pane]
		,	s		= state[pane]
		,	side	= _c[pane].side
		,	rClass	= o.resizerClass
		,	tClass	= o.togglerClass
		,	_pane	= "-"+ pane // used for classNames
		,	_open	= "-open"
		,	_sliding= "-sliding"
		,	_closed	= "-closed"
		;
		$R
			.css(side, sC.inset[side]) // move the resizer
			.removeClass( rClass+_open +" "+ rClass+_pane+_open )
			.removeClass( rClass+_sliding +" "+ rClass+_pane+_sliding )
			.addClass( rClass+_closed +" "+ rClass+_pane+_closed )
		;
		// handle already-hidden panes in case called by swap() or a similar method 
		if (s.isHidden) $R.hide(); // hide resizer-bar 

		// DISABLE 'resizing' when closed - do this BEFORE bindStartSlidingEvents?
		if (o.resizable && $.layout.plugins.draggable)
			$R
				.draggable("disable")
				.removeClass("ui-state-disabled") // do NOT apply disabled styling - not suitable here
				.css("cursor", "default")
				.attr("title","")
			;

		// if pane has a toggler button, adjust that too
		if ($T) {
			$T
				.removeClass( tClass+_open +" "+ tClass+_pane+_open )
				.addClass( tClass+_closed +" "+ tClass+_pane+_closed )
				.attr("title", o.tips.Open) // may be blank
			;
			// toggler-content - if exists
			$T.children(".content-open").hide();
			$T.children(".content-closed").css("display","block");
		}

		// sync any 'pin buttons'
		syncPinBtns(pane, false);

		if (state.initialized) {
			// resize 'length' and position togglers for adjacent panes
			sizeHandles();
		}
	}

	/**
	 * Open the specified pane (animation optional), and resize all other panes as needed
	 *
	 * @param {(string|Object)}	evt_or_pane			The pane being opened, ie: north, south, east, or west
	 * @param {boolean=}			[slide=false]
	 * @param {boolean=}			[noAnimation=false]
	 * @param {boolean=}			[noAlert=false]
	 */
,	open = function (evt_or_pane, slide, noAnimation, noAlert) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	doFX, isShowing
		;
		if (pane === "center") return; // validate
		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){

			if ( !$P
			||	(!o.resizable && !o.closable && !s.isShowing)	// invalid request
			||	(s.isVisible && !s.isSliding)					// already open
			) return queueNext();

			// pane can ALSO be unhidden by just calling show(), so handle this scenario
			if (s.isHidden && !s.isShowing) {
				queueNext(); // call before show() because it needs the queue free
				show(pane, true);
				return;
			}

			if (s.autoResize && s.size != o.size) // resize pane to original size set in options
				sizePane(pane, o.size, true, true, true); // true=skipCallback/noAnimation/forceResize
			else
				// make sure there is enough space available to open the pane
				setSizeLimits(pane, slide);

			// onopen_start callback - will CANCEL open if returns false
			var cbReturn = _runCallbacks("onopen_start", pane);

			if (cbReturn === "abort")
				return queueNext();

			// update pane-state again in case options were changed in onopen_start
			if (cbReturn !== "NC") // NC = "No Callback"
				setSizeLimits(pane, slide);

			if (s.minSize > s.maxSize) { // INSUFFICIENT ROOM FOR PANE TO OPEN!
				syncPinBtns(pane, false); // make sure pin-buttons are reset
				if (!noAlert && o.tips.noRoomToOpen)
					alert(o.tips.noRoomToOpen);
				return queueNext(); // ABORT
			}

			if (slide) // START Sliding - will set isSliding=true
				bindStopSlidingEvents(pane, true); // BIND trigger events to close sliding-pane
			else if (s.isSliding) // PIN PANE (stop sliding) - open pane 'normally' instead
				bindStopSlidingEvents(pane, false); // UNBIND trigger events - will set isSliding=false
			else if (o.slidable)
				bindStartSlidingEvents(pane, false); // UNBIND trigger events

			s.noRoom = false; // will be reset by makePaneFit if 'noRoom'
			makePaneFit(pane);

			// transfer logic var to temp var
			isShowing = s.isShowing;
			// now clear the logic var
			delete s.isShowing;

			doFX		= !noAnimation && s.isClosed && (o.fxName_open != "none");
			s.isMoving	= true;
			s.isVisible	= true;
			s.isClosed	= false;
			// update isHidden BEFORE sizing panes - WHY??? Old?
			if (isShowing) s.isHidden = false;

			if (doFX) { // ANIMATE
				// mask adjacent panes with objects
				lockPaneForFX(pane, true);	// need to set left/top so animation will work
					$P.show( o.fxName_open, o.fxSettings_open, o.fxSpeed_open, function() {
					lockPaneForFX(pane, false); // undo
					if (s.isVisible) open_2(); // continue
					queueNext();
				});
			}
			else { // no animation
				_showPane(pane);// just show pane and...
				open_2();		// continue
				queueNext();
			};
		});

		// SUBROUTINE
		function open_2 () {
			s.isMoving	= false;

			// cure iframe display issues
			_fixIframe(pane);

			// NOTE: if isSliding, then other panes are NOT 'resized'
			if (!s.isSliding) { // resize all panes adjacent to this one
				sizeMidPanes(_c[pane].dir=="vert" ? "center" : "", false); // false = NOT skipCallback
			}

			// set classes, position handles and execute callbacks...
			setAsOpen(pane);
		};
	
	}

	/**
	 * @param {string}	pane		The pane just opened, ie: north, south, east, or west
	 * @param {boolean=}	[skipCallback=false]
	 */
,	setAsOpen = function (pane, skipCallback) {
		var 
			$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	$T		= $Ts[pane]
		,	o		= options[pane]
		,	s		= state[pane]
		,	side	= _c[pane].side
		,	rClass	= o.resizerClass
		,	tClass	= o.togglerClass
		,	_pane	= "-"+ pane // used for classNames
		,	_open	= "-open"
		,	_closed	= "-closed"
		,	_sliding= "-sliding"
		;
		$R
			.css(side, sC.inset[side] + getPaneSize(pane)) // move the resizer
			.removeClass( rClass+_closed +" "+ rClass+_pane+_closed )
			.addClass( rClass+_open +" "+ rClass+_pane+_open )
		;
		if (s.isSliding)
			$R.addClass( rClass+_sliding +" "+ rClass+_pane+_sliding )
		else // in case 'was sliding'
			$R.removeClass( rClass+_sliding +" "+ rClass+_pane+_sliding )

		removeHover( 0, $R ); // remove hover classes
		if (o.resizable && $.layout.plugins.draggable)
			$R	.draggable("enable")
				.css("cursor", o.resizerCursor)
				.attr("title", o.tips.Resize);
		else if (!s.isSliding)
			$R.css("cursor", "default"); // n-resize, s-resize, etc

		// if pane also has a toggler button, adjust that too
		if ($T) {
			$T	.removeClass( tClass+_closed +" "+ tClass+_pane+_closed )
				.addClass( tClass+_open +" "+ tClass+_pane+_open )
				.attr("title", o.tips.Close); // may be blank
			removeHover( 0, $T ); // remove hover classes
			// toggler-content - if exists
			$T.children(".content-closed").hide();
			$T.children(".content-open").css("display","block");
		}

		// sync any 'pin buttons'
		syncPinBtns(pane, !s.isSliding);

		// update pane-state dimensions - BEFORE resizing content
		$.extend(s, elDims($P));

		if (state.initialized) {
			// resize resizer & toggler sizes for all panes
			sizeHandles();
			// resize content every time pane opens - to be sure
			sizeContent(pane, true); // true = remeasure headers/footers, even if 'pane.isMoving'
		}

		if (!skipCallback && (state.initialized || o.triggerEventsOnLoad) && $P.is(":visible")) {
			// onopen callback
			_runCallbacks("onopen_end", pane);
			// onshow callback - TODO: should this be here?
			if (s.isShowing) _runCallbacks("onshow_end", pane);

			// ALSO call onresize because layout-size *may* have changed while pane was closed
			if (state.initialized)
				_runCallbacks("onresize_end", pane);
		}

		// TODO: Somehow sizePane("north") is being called after this point???
	}


	/**
	 * slideOpen / slideClose / slideToggle
	 *
	 * Pass-though methods for sliding
	 */
,	slideOpen = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	s		= state[pane]
		,	delay	= options[pane].slideDelay_open
		;
		if (pane === "center") return; // validate
		// prevent event from triggering on NEW resizer binding created below
		if (evt) evt.stopImmediatePropagation();

		if (s.isClosed && evt && evt.type === "mouseenter" && delay > 0)
			// trigger = mouseenter - use a delay
			timer.set(pane+"_openSlider", open_NOW, delay);
		else
			open_NOW(); // will unbind events if is already open

		/**
		 * SUBROUTINE for timed open
		 */
		function open_NOW () {
			if (!s.isClosed) // skip if no longer closed!
				bindStopSlidingEvents(pane, true); // BIND trigger events to close sliding-pane
			else if (!s.isMoving)
				open(pane, true); // true = slide - open() will handle binding
		};
	}

,	slideClose = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	evt		= evtObj(evt_or_pane)
		,	pane	= evtPane.call(this, evt_or_pane)
		,	o		= options[pane]
		,	s		= state[pane]
		,	delay	= s.isMoving ? 1000 : 300 // MINIMUM delay - option may override
		;
		if (pane === "center") return; // validate
		if (s.isClosed || s.isResizing)
			return; // skip if already closed OR in process of resizing
		else if (o.slideTrigger_close === "click")
			close_NOW(); // close immediately onClick
		else if (o.preventQuickSlideClose && s.isMoving)
			return; // handle Chrome quick-close on slide-open
		else if (o.preventPrematureSlideClose && evt && $.layout.isMouseOverElem(evt, $Ps[pane]))
			return; // handle incorrect mouseleave trigger, like when over a SELECT-list in IE
		else if (evt) // trigger = mouseleave - use a delay
			// 1 sec delay if 'opening', else .3 sec
			timer.set(pane+"_closeSlider", close_NOW, max(o.slideDelay_close, delay));
		else // called programically
			close_NOW();

		/**
		 * SUBROUTINE for timed close
		 */
		function close_NOW () {
			if (s.isClosed) // skip 'close' if already closed!
				bindStopSlidingEvents(pane, false); // UNBIND trigger events - TODO: is this needed here?
			else if (!s.isMoving)
				close(pane); // close will handle unbinding
		};
	}

	/**
	 * @param {(string|Object)}	evt_or_pane		The pane being opened, ie: north, south, east, or west
	 */
,	slideToggle = function (evt_or_pane) {
		var pane = evtPane.call(this, evt_or_pane);
		toggle(pane, true);
	}


	/**
	 * Must set left/top on East/South panes so animation will work properly
	 *
	 * @param {string}	pane	The pane to lock, 'east' or 'south' - any other is ignored!
	 * @param {boolean}	doLock  true = set left/top, false = remove
	 */
,	lockPaneForFX = function (pane, doLock) {
		var $P	= $Ps[pane]
		,	s	= state[pane]
		,	o	= options[pane]
		,	z	= options.zIndexes
		;
		if (doLock) {
			showMasks( pane, { animation: true, objectsOnly: true });
			$P.css({ zIndex: z.pane_animate }); // overlay all elements during animation
			if (pane=="south")
				$P.css({ top: sC.inset.top + sC.innerHeight - $P.outerHeight() });
			else if (pane=="east")
				$P.css({ left: sC.inset.left + sC.innerWidth - $P.outerWidth() });
		}
		else { // animation DONE - RESET CSS
			hideMasks();
			$P.css({ zIndex: (s.isSliding ? z.pane_sliding : z.pane_normal) });
			if (pane=="south")
				$P.css({ top: "auto" });
			// if pane is positioned 'off-screen', then DO NOT screw with it!
			else if (pane=="east" && !$P.css("left").match(/\-99999/))
				$P.css({ left: "auto" });
			// fix anti-aliasing in IE - only needed for animations that change opacity
			if (browser.msie && o.fxOpacityFix && o.fxName_open != "slide" && $P.css("filter") && $P.css("opacity") == 1)
				$P[0].style.removeAttribute('filter');
		}
	}


	/**
	 * Toggle sliding functionality of a specific pane on/off by adding removing 'slide open' trigger
	 *
	 * @see  open(), close()
	 * @param {string}	pane	The pane to enable/disable, 'north', 'south', etc.
	 * @param {boolean}	enable	Enable or Disable sliding?
	 */
,	bindStartSlidingEvents = function (pane, enable) {
		var o		= options[pane]
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	evtName	= o.slideTrigger_open.toLowerCase()
		;
		if (!$R || (enable && !o.slidable)) return;

		// make sure we have a valid event
		if (evtName.match(/mouseover/))
			evtName = o.slideTrigger_open = "mouseenter";
		else if (!evtName.match(/(click|dblclick|mouseenter)/)) 
			evtName = o.slideTrigger_open = "click";

		// must remove double-click-toggle when using dblclick-slide
		if (o.resizerDblClickToggle && evtName.match(/click/)) {
			$R[enable ? "unbind" : "bind"]('dblclick.'+ sID, toggle)
		}

		$R
			// add or remove event
			[enable ? "bind" : "unbind"](evtName +'.'+ sID, slideOpen)
			// set the appropriate cursor & title/tip
			.css("cursor", enable ? o.sliderCursor : "default")
			.attr("title", enable ? o.tips.Slide : "")
		;
	}

	/**
	 * Add or remove 'mouseleave' events to 'slide close' when pane is 'sliding' open or closed
	 * Also increases zIndex when pane is sliding open
	 * See bindStartSlidingEvents for code to control 'slide open'
	 *
	 * @see  slideOpen(), slideClose()
	 * @param {string}	pane	The pane to process, 'north', 'south', etc.
	 * @param {boolean}	enable	Enable or Disable events?
	 */
,	bindStopSlidingEvents = function (pane, enable) {
		var	o		= options[pane]
		,	s		= state[pane]
		,	c		= _c[pane]
		,	z		= options.zIndexes
		,	evtName	= o.slideTrigger_close.toLowerCase()
		,	action	= (enable ? "bind" : "unbind")
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		;
		timer.clear(pane+"_closeSlider"); // just in case

		if (enable) {
			s.isSliding = true;
			state.panesSliding[pane] = true;
			// remove 'slideOpen' event from resizer
			// ALSO will raise the zIndex of the pane & resizer
			bindStartSlidingEvents(pane, false);
		}
		else {
			s.isSliding = false;
			delete state.panesSliding[pane];
		}

		// RE/SET zIndex - increases when pane is sliding-open, resets to normal when not
		$P.css("zIndex", enable ? z.pane_sliding : z.pane_normal);
		$R.css("zIndex", enable ? z.pane_sliding+2 : z.resizer_normal); // NOTE: mask = pane_sliding+1

		// make sure we have a valid event
		if (!evtName.match(/(click|mouseleave)/))
			evtName = o.slideTrigger_close = "mouseleave"; // also catches 'mouseout'

		// add/remove slide triggers
		$R[action](evtName, slideClose); // base event on resize
		// need extra events for mouseleave
		if (evtName === "mouseleave") {
			// also close on pane.mouseleave
			$P[action]("mouseleave."+ sID, slideClose);
			// cancel timer when mouse moves between 'pane' and 'resizer'
			$R[action]("mouseenter."+ sID, cancelMouseOut);
			$P[action]("mouseenter."+ sID, cancelMouseOut);
		}

		if (!enable)
			timer.clear(pane+"_closeSlider");
		else if (evtName === "click" && !o.resizable) {
			// IF pane is not resizable (which already has a cursor and tip) 
			// then set the a cursor & title/tip on resizer when sliding
			$R.css("cursor", enable ? o.sliderCursor : "default");
			$R.attr("title", enable ? o.tips.Close : ""); // use Toggler-tip, eg: "Close Pane"
		}

		// SUBROUTINE for mouseleave timer clearing
		function cancelMouseOut (evt) {
			timer.clear(pane+"_closeSlider");
			evt.stopPropagation();
		}
	}


	/**
	 * Hides/closes a pane if there is insufficient room - reverses this when there is room again
	 * MUST have already called setSizeLimits() before calling this method
	 *
	 * @param {string}	pane					The pane being resized
	 * @param {boolean=}	[isOpening=false]		Called from onOpen?
	 * @param {boolean=}	[skipCallback=false]	Should the onresize callback be run?
	 * @param {boolean=}	[force=false]
	 */
,	makePaneFit = function (pane, isOpening, skipCallback, force) {
		var	o	= options[pane]
		,	s	= state[pane]
		,	c	= _c[pane]
		,	$P	= $Ps[pane]
		,	$R	= $Rs[pane]
		,	isSidePane 	= c.dir==="vert"
		,	hasRoom		= false
		;
		// special handling for center & east/west panes
		if (pane === "center" || (isSidePane && s.noVerticalRoom)) {
			// see if there is enough room to display the pane
			// ERROR: hasRoom = s.minHeight <= s.maxHeight && (isSidePane || s.minWidth <= s.maxWidth);
			hasRoom = (s.maxHeight >= 0);
			if (hasRoom && s.noRoom) { // previously hidden due to noRoom, so show now
				_showPane(pane);
				if ($R) $R.show();
				s.isVisible = true;
				s.noRoom = false;
				if (isSidePane) s.noVerticalRoom = false;
				_fixIframe(pane);
			}
			else if (!hasRoom && !s.noRoom) { // not currently hidden, so hide now
				_hidePane(pane);
				if ($R) $R.hide();
				s.isVisible = false;
				s.noRoom = true;
			}
		}

		// see if there is enough room to fit the border-pane
		if (pane === "center") {
			// ignore center in this block
		}
		else if (s.minSize <= s.maxSize) { // pane CAN fit
			hasRoom = true;
			if (s.size > s.maxSize) // pane is too big - shrink it
				sizePane(pane, s.maxSize, skipCallback, true, force); // true = noAnimation
			else if (s.size < s.minSize) // pane is too small - enlarge it
				sizePane(pane, s.minSize, skipCallback, true, force); // true = noAnimation
			// need s.isVisible because new pseudoClose method keeps pane visible, but off-screen
			else if ($R && s.isVisible && $P.is(":visible")) {
				// make sure resizer-bar is positioned correctly
				// handles situation where nested layout was 'hidden' when initialized
				var	pos = s.size + sC.inset[c.side];
				if ($.layout.cssNum( $R, c.side ) != pos) $R.css( c.side, pos );
			}

			// if was previously hidden due to noRoom, then RESET because NOW there is room
			if (s.noRoom) {
				// s.noRoom state will be set by open or show
				if (s.wasOpen && o.closable) {
					if (o.autoReopen)
						open(pane, false, true, true); // true = noAnimation, true = noAlert
					else // leave the pane closed, so just update state
						s.noRoom = false;
				}
				else
					show(pane, s.wasOpen, true, true); // true = noAnimation, true = noAlert
			}
		}
		else { // !hasRoom - pane CANNOT fit
			if (!s.noRoom) { // pane not set as noRoom yet, so hide or close it now...
				s.noRoom = true; // update state
				s.wasOpen = !s.isClosed && !s.isSliding;
				if (s.isClosed){} // SKIP
				else if (o.closable) // 'close' if possible
					close(pane, true, true); // true = force, true = noAnimation
				else // 'hide' pane if cannot just be closed
					hide(pane, true); // true = noAnimation
			}
		}
	}


	/**
	 * manualSizePane is an exposed flow-through method allowing extra code when pane is 'manually resized'
	 *
	 * @param {(string|Object)}	evt_or_pane				The pane being resized
	 * @param {number}			size					The *desired* new size for this pane - will be validated
	 * @param {boolean=}			[skipCallback=false]	Should the onresize callback be run?
	 * @param {boolean=}			[noAnimation=false]
	 * @param {boolean=}			[force=false]			Force resizing even if does not seem necessary
	 */
,	manualSizePane = function (evt_or_pane, size, skipCallback, noAnimation, force) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	o	= options[pane]
		,	s	= state[pane]
		//	if resizing callbacks have been delayed and resizing is now DONE, force resizing to complete...
		,	forceResize = force || (o.livePaneResizing && !s.isResizing)
		;
		if (pane === "center") return; // validate
		// ANY call to manualSizePane disables autoResize - ie, percentage sizing
		s.autoResize = false;
		// flow-through...
		sizePane(pane, size, skipCallback, noAnimation, forceResize); // will animate resize if option enabled
	}

	/**
	 * sizePane is called only by internal methods whenever a pane needs to be resized
	 *
	 * @param {(string|Object)}	evt_or_pane				The pane being resized
	 * @param {number}			size					The *desired* new size for this pane - will be validated
	 * @param {boolean=}			[skipCallback=false]	Should the onresize callback be run?
	 * @param {boolean=}			[noAnimation=false]
	 * @param {boolean=}			[force=false]			Force resizing even if does not seem necessary
	 */
,	sizePane = function (evt_or_pane, size, skipCallback, noAnimation, force) {
		if (!isInitialized()) return;
		var	pane	= evtPane.call(this, evt_or_pane) // probably NEVER called from event?
		,	o		= options[pane]
		,	s		= state[pane]
		,	$P		= $Ps[pane]
		,	$R		= $Rs[pane]
		,	side	= _c[pane].side
		,	dimName	= _c[pane].sizeType.toLowerCase()
		,	skipResizeWhileDragging = s.isResizing && !o.triggerEventsDuringLiveResize
		,	doFX	= noAnimation !== true && o.animatePaneSizing
		,	oldSize, newSize
		;
		if (pane === "center") return; // validate
		// QUEUE in case another action/animation is in progress
		$N.queue(function( queueNext ){
			// calculate 'current' min/max sizes
			setSizeLimits(pane); // update pane-state
			oldSize = s.size;
			size = _parseSize(pane, size); // handle percentages & auto
			size = max(size, _parseSize(pane, o.minSize));
			size = min(size, s.maxSize);
			if (size < s.minSize) { // not enough room for pane!
				queueNext(); // call before makePaneFit() because it needs the queue free
				makePaneFit(pane, false, skipCallback);	// will hide or close pane
				return;
			}

			// IF newSize is same as oldSize, then nothing to do - abort
			if (!force && size === oldSize)
				return queueNext();

			s.newSize = size;

			// onresize_start callback CANNOT cancel resizing because this would break the layout!
			if (!skipCallback && state.initialized && s.isVisible)
				_runCallbacks("onresize_start", pane);

			// resize the pane, and make sure its visible
			newSize = cssSize(pane, size);

			if (doFX && $P.is(":visible")) { // ANIMATE
				var fx		= $.layout.effects.size[pane] || $.layout.effects.size.all
				,	easing	= o.fxSettings_size.easing || fx.easing
				,	z		= options.zIndexes
				,	props	= {};
				props[ dimName ] = newSize +'px';
				s.isMoving = true;
				// overlay all elements during animation
				$P.css({ zIndex: z.pane_animate })
				  .show().animate( props, o.fxSpeed_size, easing, function(){
					// reset zIndex after animation
					$P.css({ zIndex: (s.isSliding ? z.pane_sliding : z.pane_normal) });
					s.isMoving = false;
					delete s.newSize;
					sizePane_2(); // continue
					queueNext();
				});
			}
			else { // no animation
				$P.css( dimName, newSize );	// resize pane
				delete s.newSize;
				// if pane is visible, then 
				if ($P.is(":visible"))
					sizePane_2(); // continue
				else {
					// pane is NOT VISIBLE, so just update state data...
					// when pane is *next opened*, it will have the new size
					s.size = size;				// update state.size
					//$.extend(s, elDims($P));	// update state dimensions - CANNOT do this when not visible!				}
				}
				queueNext();
			};

		});

		// SUBROUTINE
		function sizePane_2 () {
			/*	Panes are sometimes not sized precisely in some browsers!?
			 *	This code will resize the pane up to 3 times to nudge the pane to the correct size
			 */
			var	actual	= dimName==='width' ? $P.outerWidth() : $P.outerHeight()
			,	tries	= [{
						   	pane:		pane
						,	count:		1
						,	target:		size
						,	actual:		actual
						,	correct:	(size === actual)
						,	attempt:	size
						,	cssSize:	newSize
						}]
			,	lastTry = tries[0]
			,	thisTry	= {}
			,	msg		= 'Inaccurate size after resizing the '+ pane +'-pane.'
			;
			while ( !lastTry.correct ) {
				thisTry = { pane: pane, count: lastTry.count+1, target: size };

				if (lastTry.actual > size)
					thisTry.attempt = max(0, lastTry.attempt - (lastTry.actual - size));
				else // lastTry.actual < size
					thisTry.attempt = max(0, lastTry.attempt + (size - lastTry.actual));

				thisTry.cssSize = cssSize(pane, thisTry.attempt);
				$P.css( dimName, thisTry.cssSize );

				thisTry.actual	= dimName=='width' ? $P.outerWidth() : $P.outerHeight();
				thisTry.correct	= (size === thisTry.actual);

				// log attempts and alert the user of this *non-fatal error* (if showDebugMessages)
				if ( tries.length === 1) {
					_log(msg, false, true);
					_log(lastTry, false, true);
				}
				_log(thisTry, false, true);
				// after 4 tries, is as close as its gonna get!
				if (tries.length > 3) break;

				tries.push( thisTry );
				lastTry = tries[ tries.length - 1 ];
			}
			// END TESTING CODE

			// update pane-state dimensions
			s.size	= size;
			$.extend(s, elDims($P));

			if (s.isVisible && $P.is(":visible")) {
				// reposition the resizer-bar
				if ($R) $R.css( side, size + sC.inset[side] );
				// resize the content-div
				sizeContent(pane);
			}

			if (!skipCallback && !skipResizeWhileDragging && state.initialized && s.isVisible)
				_runCallbacks("onresize_end", pane);

			// resize all the adjacent panes, and adjust their toggler buttons
			// when skipCallback passed, it means the controlling method will handle 'other panes'
			if (!skipCallback) {
				// also no callback if live-resize is in progress and NOT triggerEventsDuringLiveResize
				if (!s.isSliding) sizeMidPanes(_c[pane].dir=="horz" ? "" : "center", skipResizeWhileDragging, force);
				sizeHandles();
			}

			// if opposite-pane was autoClosed, see if it can be autoOpened now
			var altPane = _c.oppositeEdge[pane];
			if (size < oldSize && state[ altPane ].noRoom) {
				setSizeLimits( altPane );
				makePaneFit( altPane, false, skipCallback );
			}

			// DEBUG - ALERT user/developer so they know there was a sizing problem
			if (tries.length > 1)
				_log(msg +'\nSee the Error Console for details.', true, true);
		}
	}

	/**
	 * @see  initPanes(), sizePane(), 	resizeAll(), open(), close(), hide()
	 * @param {(Array.<string>|string)}	panes					The pane(s) being resized, comma-delmited string
	 * @param {boolean=}					[skipCallback=false]	Should the onresize callback be run?
	 * @param {boolean=}					[force=false]
	 */
,	sizeMidPanes = function (panes, skipCallback, force) {
		panes = (panes ? panes : "east,west,center").split(",");

		$.each(panes, function (i, pane) {
			if (!$Ps[pane]) return; // NO PANE - skip
			var 
				o		= options[pane]
			,	s		= state[pane]
			,	$P		= $Ps[pane]
			,	$R		= $Rs[pane]
			,	isCenter= (pane=="center")
			,	hasRoom	= true
			,	CSS		= {}
			//	if pane is not visible, show it invisibly NOW rather than for *each call* in this script
			,	visCSS	= $.layout.showInvisibly($P)

			,	newCenter	= calcNewCenterPaneDims()
			;

			// update pane-state dimensions
			$.extend(s, elDims($P));

			if (pane === "center") {
				if (!force && s.isVisible && newCenter.width === s.outerWidth && newCenter.height === s.outerHeight) {
					$P.css(visCSS);
					return true; // SKIP - pane already the correct size
				}
				// set state for makePaneFit() logic
				$.extend(s, cssMinDims(pane), {
					maxWidth:	newCenter.width
				,	maxHeight:	newCenter.height
				});
				CSS = newCenter;
				s.newWidth	= CSS.width;
				s.newHeight	= CSS.height;
				// convert OUTER width/height to CSS width/height 
				CSS.width	= cssW($P, CSS.width);
				// NEW - allow pane to extend 'below' visible area rather than hide it
				CSS.height	= cssH($P, CSS.height);
				hasRoom		= CSS.width >= 0 && CSS.height >= 0; // height >= 0 = ALWAYS TRUE NOW

				// during layout init, try to shrink east/west panes to make room for center
				if (!state.initialized && o.minWidth > newCenter.width) {
					var
						reqPx	= o.minWidth - s.outerWidth
					,	minE	= options.east.minSize || 0
					,	minW	= options.west.minSize || 0
					,	sizeE	= state.east.size
					,	sizeW	= state.west.size
					,	newE	= sizeE
					,	newW	= sizeW
					;
					if (reqPx > 0 && state.east.isVisible && sizeE > minE) {
						newE = max( sizeE-minE, sizeE-reqPx );
						reqPx -= sizeE-newE;
					}
					if (reqPx > 0 && state.west.isVisible && sizeW > minW) {
						newW = max( sizeW-minW, sizeW-reqPx );
						reqPx -= sizeW-newW;
					}
					// IF we found enough extra space, then resize the border panes as calculated
					if (reqPx === 0) {
						if (sizeE && sizeE != minE)
							sizePane('east', newE, true, true, force); // true = skipCallback/noAnimation - initPanes will handle when done
						if (sizeW && sizeW != minW)
							sizePane('west', newW, true, true, force); // true = skipCallback/noAnimation
						// now start over!
						sizeMidPanes('center', skipCallback, force);
						$P.css(visCSS);
						return; // abort this loop
					}
				}
			}
			else { // for east and west, set only the height, which is same as center height
				// set state.min/maxWidth/Height for makePaneFit() logic
				if (s.isVisible && !s.noVerticalRoom)
					$.extend(s, elDims($P), cssMinDims(pane))
				if (!force && !s.noVerticalRoom && newCenter.height === s.outerHeight) {
					$P.css(visCSS);
					return true; // SKIP - pane already the correct size
				}
				// east/west have same top, bottom & height as center
				CSS.top		= newCenter.top;
				CSS.bottom	= newCenter.bottom;
				s.newSize	= newCenter.height
				// NEW - allow pane to extend 'below' visible area rather than hide it
				CSS.height	= cssH($P, newCenter.height);
				s.maxHeight	= CSS.height;
				hasRoom		= (s.maxHeight >= 0); // ALWAYS TRUE NOW
				if (!hasRoom) s.noVerticalRoom = true; // makePaneFit() logic
			}

			if (hasRoom) {
				// resizeAll passes skipCallback because it triggers callbacks after ALL panes are resized
				if (!skipCallback && state.initialized)
					_runCallbacks("onresize_start", pane);

				$P.css(CSS); // apply the CSS to pane
				if (pane !== "center")
					sizeHandles(pane); // also update resizer length
				if (s.noRoom && !s.isClosed && !s.isHidden)
					makePaneFit(pane); // will re-open/show auto-closed/hidden pane
				if (s.isVisible) {
					$.extend(s, elDims($P)); // update pane dimensions
					if (state.initialized) sizeContent(pane); // also resize the contents, if exists
				}
			}
			else if (!s.noRoom && s.isVisible) // no room for pane
				makePaneFit(pane); // will hide or close pane

			// reset visibility, if necessary
			$P.css(visCSS);

			delete s.newSize;
			delete s.newWidth;
			delete s.newHeight;

			if (!s.isVisible)
				return true; // DONE - next pane

			/*
			 * Extra CSS for IE6 or IE7 in Quirks-mode - add 'width' to NORTH/SOUTH panes
			 * Normally these panes have only 'left' & 'right' positions so pane auto-sizes
			 * ALSO required when pane is an IFRAME because will NOT default to 'full width'
			 *	TODO: Can I use width:100% for a north/south iframe?
			 *	TODO: Sounds like a job for $P.outerWidth( sC.innerWidth ) SETTER METHOD
			 */
			if (pane === "center") { // finished processing midPanes
				var fix = browser.isIE6 || !browser.boxModel;
				if ($Ps.north && (fix || state.north.tagName=="IFRAME")) 
					$Ps.north.css("width", cssW($Ps.north, sC.innerWidth));
				if ($Ps.south && (fix || state.south.tagName=="IFRAME"))
					$Ps.south.css("width", cssW($Ps.south, sC.innerWidth));
			}

			// resizeAll passes skipCallback because it triggers callbacks after ALL panes are resized
			if (!skipCallback && state.initialized)
				_runCallbacks("onresize_end", pane);
		});
	}


	/**
	 * @see  window.onresize(), callbacks or custom code
	 * @param {(Object|boolean)=}	evt_or_refresh	If 'true', then also reset pane-positioning
	 */
,	resizeAll = function (evt_or_refresh) {
		var	oldW	= sC.innerWidth
		,	oldH	= sC.innerHeight
		;
		// stopPropagation if called by trigger("layoutdestroy") - use evtPane utility 
		evtPane(evt_or_refresh);

		// cannot size layout when 'container' is hidden or collapsed
		if (!$N.is(":visible")) return;

		if (!state.initialized) {
			_initLayoutElements();
			return; // no need to resize since we just initialized!
		}

		if (evt_or_refresh === true && $.isPlainObject(options.outset)) {
			// update container CSS in case outset option has changed
			$N.css( options.outset );
		}
		// UPDATE container dimensions
		$.extend(sC, elDims( $N, options.inset ));
		if (!sC.outerHeight) return;

		// if 'true' passed, refresh pane & handle positioning too
		if (evt_or_refresh === true) {
			setPanePosition();
		}

		// onresizeall_start will CANCEL resizing if returns false
		// state.container has already been set, so user can access this info for calcuations
		if (false === _runCallbacks("onresizeall_start")) return false;

		var	// see if container is now 'smaller' than before
			shrunkH	= (sC.innerHeight < oldH)
		,	shrunkW	= (sC.innerWidth < oldW)
		,	$P, o, s
		;
		// NOTE special order for sizing: S-N-E-W
		$.each(["south","north","east","west"], function (i, pane) {
			if (!$Ps[pane]) return; // no pane - SKIP
			o = options[pane];
			s = state[pane];
			if (s.autoResize && s.size != o.size) // resize pane to original size set in options
				sizePane(pane, o.size, true, true, true); // true=skipCallback/noAnimation/forceResize
			else {
				setSizeLimits(pane);
				makePaneFit(pane, false, true, true); // true=skipCallback/forceResize
			}
		});

		sizeMidPanes("", true, true); // true=skipCallback/forceResize
		sizeHandles(); // reposition the toggler elements

		// trigger all individual pane callbacks AFTER layout has finished resizing
		$.each(_c.allPanes, function (i, pane) {
			$P = $Ps[pane];
			if (!$P) return; // SKIP
			if (state[pane].isVisible) // undefined for non-existent panes
				_runCallbacks("onresize_end", pane); // callback - if exists
		});

		_runCallbacks("onresizeall_end");
		//_triggerLayoutEvent(pane, 'resizeall');
	}

	/**
	 * Whenever a pane resizes or opens that has a nested layout, trigger resizeAll
	 *
	 * @param {(string|Object)}	evt_or_pane		The pane just resized or opened
	 */
,	resizeChildren = function (evt_or_pane, skipRefresh) {
		var	pane = evtPane.call(this, evt_or_pane);

		if (!options[pane].resizeChildren) return;

		// ensure the pane-children are up-to-date
		if (!skipRefresh) refreshChildren( pane );
		var pC = children[pane];
		if ($.isPlainObject( pC )) {
			// resize one or more children
			$.each( pC, function (key, child) {
				if (!child.destroyed) child.resizeAll();
			});
		}
	}

	/**
	 * IF pane has a content-div, then resize all elements inside pane to fit pane-height
	 *
	 * @param {(string|Object)}	evt_or_panes		The pane(s) being resized
	 * @param {boolean=}			[remeasure=false]	Should the content (header/footer) be remeasured?
	 */
,	sizeContent = function (evt_or_panes, remeasure) {
		if (!isInitialized()) return;

		var panes = evtPane.call(this, evt_or_panes);
		panes = panes ? panes.split(",") : _c.allPanes;

		$.each(panes, function (idx, pane) {
			var
				$P	= $Ps[pane]
			,	$C	= $Cs[pane]
			,	o	= options[pane]
			,	s	= state[pane]
			,	m	= s.content // m = measurements
			;
			if (!$P || !$C || !$P.is(":visible")) return true; // NOT VISIBLE - skip

			// if content-element was REMOVED, update OR remove the pointer
			if (!$C.length) {
				initContent(pane, false);	// false = do NOT sizeContent() - already there!
				if (!$C) return;			// no replacement element found - pointer have been removed
			}

			// onsizecontent_start will CANCEL resizing if returns false
			if (false === _runCallbacks("onsizecontent_start", pane)) return;

			// skip re-measuring offsets if live-resizing
			if ((!s.isMoving && !s.isResizing) || o.liveContentResizing || remeasure || m.top == undefined) {
				_measure();
				// if any footers are below pane-bottom, they may not measure correctly,
				// so allow pane overflow and re-measure
				if (m.hiddenFooters > 0 && $P.css("overflow") === "hidden") {
					$P.css("overflow", "visible");
					_measure(); // remeasure while overflowing
					$P.css("overflow", "hidden");
				}
			}
			// NOTE: spaceAbove/Below *includes* the pane paddingTop/Bottom, but not pane.borders
			var newH = s.innerHeight - (m.spaceAbove - s.css.paddingTop) - (m.spaceBelow - s.css.paddingBottom);

			if (!$C.is(":visible") || m.height != newH) {
				// size the Content element to fit new pane-size - will autoHide if not enough room
				setOuterHeight($C, newH, true); // true=autoHide
				m.height = newH; // save new height
			};

			if (state.initialized)
				_runCallbacks("onsizecontent_end", pane);

			function _below ($E) {
				return max(s.css.paddingBottom, (parseInt($E.css("marginBottom"), 10) || 0));
			};

			function _measure () {
				var
					ignore	= options[pane].contentIgnoreSelector
				,	$Fs		= $C.nextAll().not(".ui-layout-mask").not(ignore || ":lt(0)") // not :lt(0) = ALL
				,	$Fs_vis	= $Fs.filter(':visible')
				,	$F		= $Fs_vis.filter(':last')
				;
				m = {
					top:			$C[0].offsetTop
				,	height:			$C.outerHeight()
				,	numFooters:		$Fs.length
				,	hiddenFooters:	$Fs.length - $Fs_vis.length
				,	spaceBelow:		0 // correct if no content footer ($E)
				}
					m.spaceAbove	= m.top; // just for state - not used in calc
					m.bottom		= m.top + m.height;
				if ($F.length)
					//spaceBelow = (LastFooter.top + LastFooter.height) [footerBottom] - Content.bottom + max(LastFooter.marginBottom, pane.paddingBotom)
					m.spaceBelow = ($F[0].offsetTop + $F.outerHeight()) - m.bottom + _below($F);
				else // no footer - check marginBottom on Content element itself
					m.spaceBelow = _below($C);
			};
		});
	}


	/**
	 * Called every time a pane is opened, closed, or resized to slide the togglers to 'center' and adjust their length if necessary
	 *
	 * @see  initHandles(), open(), close(), resizeAll()
	 * @param {(string|Object)=}		evt_or_panes	The pane(s) being resized
	 */
,	sizeHandles = function (evt_or_panes) {
		var panes = evtPane.call(this, evt_or_panes)
		panes = panes ? panes.split(",") : _c.borderPanes;

		$.each(panes, function (i, pane) {
			var 
				o	= options[pane]
			,	s	= state[pane]
			,	$P	= $Ps[pane]
			,	$R	= $Rs[pane]
			,	$T	= $Ts[pane]
			,	$TC
			;
			if (!$P || !$R) return;

			var
				dir			= _c[pane].dir
			,	_state		= (s.isClosed ? "_closed" : "_open")
			,	spacing		= o["spacing"+ _state]
			,	togAlign	= o["togglerAlign"+ _state]
			,	togLen		= o["togglerLength"+ _state]
			,	paneLen
			,	left
			,	offset
			,	CSS = {}
			;

			if (spacing === 0) {
				$R.hide();
				return;
			}
			else if (!s.noRoom && !s.isHidden) // skip if resizer was hidden for any reason
				$R.show(); // in case was previously hidden

			// Resizer Bar is ALWAYS same width/height of pane it is attached to
			if (dir === "horz") { // north/south
				//paneLen = $P.outerWidth(); // s.outerWidth || 
				paneLen = sC.innerWidth; // handle offscreen-panes
				s.resizerLength = paneLen;
				left = $.layout.cssNum($P, "left")
				$R.css({
					width:	cssW($R, paneLen) // account for borders & padding
				,	height:	cssH($R, spacing) // ditto
				,	left:	left > -9999 ? left : sC.inset.left // handle offscreen-panes
				});
			}
			else { // east/west
				paneLen = $P.outerHeight(); // s.outerHeight || 
				s.resizerLength = paneLen;
				$R.css({
					height:	cssH($R, paneLen) // account for borders & padding
				,	width:	cssW($R, spacing) // ditto
				,	top:	sC.inset.top + getPaneSize("north", true) // TODO: what if no North pane?
				//,	top:	$.layout.cssNum($Ps["center"], "top")
				});
			}

			// remove hover classes
			removeHover( o, $R );

			if ($T) {
				if (togLen === 0 || (s.isSliding && o.hideTogglerOnSlide)) {
					$T.hide(); // always HIDE the toggler when 'sliding'
					return;
				}
				else
					$T.show(); // in case was previously hidden

				if (!(togLen > 0) || togLen === "100%" || togLen > paneLen) {
					togLen = paneLen;
					offset = 0;
				}
				else { // calculate 'offset' based on options.PANE.togglerAlign_open/closed
					if (isStr(togAlign)) {
						switch (togAlign) {
							case "top":
							case "left":	offset = 0;
											break;
							case "bottom":
							case "right":	offset = paneLen - togLen;
											break;
							case "middle":
							case "center":
							default:		offset = round((paneLen - togLen) / 2); // 'default' catches typos
						}
					}
					else { // togAlign = number
						var x = parseInt(togAlign, 10); //
						if (togAlign >= 0) offset = x;
						else offset = paneLen - togLen + x; // NOTE: x is negative!
					}
				}

				if (dir === "horz") { // north/south
					var width = cssW($T, togLen);
					$T.css({
						width:	width  // account for borders & padding
					,	height:	cssH($T, spacing) // ditto
					,	left:	offset // TODO: VERIFY that toggler  positions correctly for ALL values
					,	top:	0
					});
					// CENTER the toggler content SPAN
					$T.children(".content").each(function(){
						$TC = $(this);
						$TC.css("marginLeft", round((width-$TC.outerWidth())/2)); // could be negative
					});
				}
				else { // east/west
					var height = cssH($T, togLen);
					$T.css({
						height:	height // account for borders & padding
					,	width:	cssW($T, spacing) // ditto
					,	top:	offset // POSITION the toggler
					,	left:	0
					});
					// CENTER the toggler content SPAN
					$T.children(".content").each(function(){
						$TC = $(this);
						$TC.css("marginTop", round((height-$TC.outerHeight())/2)); // could be negative
					});
				}

				// remove ALL hover classes
				removeHover( 0, $T );
			}

			// DONE measuring and sizing this resizer/toggler, so can be 'hidden' now
			if (!state.initialized && (o.initHidden || s.isHidden)) {
				$R.hide();
				if ($T) $T.hide();
			}
		});
	}


	/**
	 * @param {(string|Object)}	evt_or_pane
	 */
,	enableClosable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$T	= $Ts[pane]
		,	o	= options[pane]
		;
		if (!$T) return;
		o.closable = true;
		$T	.bind("click."+ sID, function(evt){ evt.stopPropagation(); toggle(pane); })
			.css("visibility", "visible")
			.css("cursor", "pointer")
			.attr("title", state[pane].isClosed ? o.tips.Open : o.tips.Close) // may be blank
			.show();
	}
	/**
	 * @param {(string|Object)}	evt_or_pane
	 * @param {boolean=}			[hide=false]
	 */
,	disableClosable = function (evt_or_pane, hide) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$T	= $Ts[pane]
		;
		if (!$T) return;
		options[pane].closable = false;
		// is closable is disable, then pane MUST be open!
		if (state[pane].isClosed) open(pane, false, true);
		$T	.unbind("."+ sID)
			.css("visibility", hide ? "hidden" : "visible") // instead of hide(), which creates logic issues
			.css("cursor", "default")
			.attr("title", "");
	}


	/**
	 * @param {(string|Object)}	evt_or_pane
	 */
,	enableSlidable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		options[pane].slidable = true; 
		if (state[pane].isClosed)
			bindStartSlidingEvents(pane, true);
	}
	/**
	 * @param {(string|Object)}	evt_or_pane
	 */
,	disableSlidable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R) return;
		options[pane].slidable = false; 
		if (state[pane].isSliding)
			close(pane, false, true);
		else {
			bindStartSlidingEvents(pane, false);
			$R	.css("cursor", "default")
				.attr("title", "");
			removeHover(null, $R[0]); // in case currently hovered
		}
	}


	/**
	 * @param {(string|Object)}	evt_or_pane
	 */
,	enableResizable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		,	o	= options[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		o.resizable = true; 
		$R.draggable("enable");
		if (!state[pane].isClosed)
			$R	.css("cursor", o.resizerCursor)
			 	.attr("title", o.tips.Resize);
	}
	/**
	 * @param {(string|Object)}	evt_or_pane
	 */
,	disableResizable = function (evt_or_pane) {
		if (!isInitialized()) return;
		var	pane = evtPane.call(this, evt_or_pane)
		,	$R	= $Rs[pane]
		;
		if (!$R || !$R.data('draggable')) return;
		options[pane].resizable = false; 
		$R	.draggable("disable")
			.css("cursor", "default")
			.attr("title", "");
		removeHover(null, $R[0]); // in case currently hovered
	}


	/**
	 * Move a pane from source-side (eg, west) to target-side (eg, east)
	 * If pane exists on target-side, move that to source-side, ie, 'swap' the panes
	 *
	 * @param {(string|Object)}	evt_or_pane1	The pane/edge being swapped
	 * @param {string}			pane2			ditto
	 */
,	swapPanes = function (evt_or_pane1, pane2) {
		if (!isInitialized()) return;
		var pane1 = evtPane.call(this, evt_or_pane1);
		// change state.edge NOW so callbacks can know where pane is headed...
		state[pane1].edge = pane2;
		state[pane2].edge = pane1;
		// run these even if NOT state.initialized
		if (false === _runCallbacks("onswap_start", pane1)
		 ||	false === _runCallbacks("onswap_start", pane2)
		) {
			state[pane1].edge = pane1; // reset
			state[pane2].edge = pane2;
			return;
		}

		var
			oPane1	= copy( pane1 )
		,	oPane2	= copy( pane2 )
		,	sizes	= {}
		;
		sizes[pane1] = oPane1 ? oPane1.state.size : 0;
		sizes[pane2] = oPane2 ? oPane2.state.size : 0;

		// clear pointers & state
		$Ps[pane1] = false; 
		$Ps[pane2] = false;
		state[pane1] = {};
		state[pane2] = {};
		
		// ALWAYS remove the resizer & toggler elements
		if ($Ts[pane1]) $Ts[pane1].remove();
		if ($Ts[pane2]) $Ts[pane2].remove();
		if ($Rs[pane1]) $Rs[pane1].remove();
		if ($Rs[pane2]) $Rs[pane2].remove();
		$Rs[pane1] = $Rs[pane2] = $Ts[pane1] = $Ts[pane2] = false;

		// transfer element pointers and data to NEW Layout keys
		move( oPane1, pane2 );
		move( oPane2, pane1 );

		// cleanup objects
		oPane1 = oPane2 = sizes = null;

		// make panes 'visible' again
		if ($Ps[pane1]) $Ps[pane1].css(_c.visible);
		if ($Ps[pane2]) $Ps[pane2].css(_c.visible);

		// fix any size discrepancies caused by swap
		resizeAll();

		// run these even if NOT state.initialized
		_runCallbacks("onswap_end", pane1);
		_runCallbacks("onswap_end", pane2);

		return;

		function copy (n) { // n = pane
			var
				$P	= $Ps[n]
			,	$C	= $Cs[n]
			;
			return !$P ? false : {
				pane:		n
			,	P:			$P ? $P[0] : false
			,	C:			$C ? $C[0] : false
			,	state:		$.extend(true, {}, state[n])
			,	options:	$.extend(true, {}, options[n])
			}
		};

		function move (oPane, pane) {
			if (!oPane) return;
			var
				P		= oPane.P
			,	C		= oPane.C
			,	oldPane = oPane.pane
			,	c		= _c[pane]
			//	save pane-options that should be retained
			,	s		= $.extend(true, {}, state[pane])
			,	o		= options[pane]
			//	RETAIN side-specific FX Settings - more below
			,	fx		= { resizerCursor: o.resizerCursor }
			,	re, size, pos
			;
			$.each("fxName,fxSpeed,fxSettings".split(","), function (i, k) {
				fx[k +"_open"]  = o[k +"_open"];
				fx[k +"_close"] = o[k +"_close"];
				fx[k +"_size"]  = o[k +"_size"];
			});

			// update object pointers and attributes
			$Ps[pane] = $(P)
				.data({
					layoutPane:		Instance[pane]	// NEW pointer to pane-alias-object
				,	layoutEdge:		pane
				})
				.css(_c.hidden)
				.css(c.cssReq)
			;
			$Cs[pane] = C ? $(C) : false;

			// set options and state
			options[pane]	= $.extend(true, {}, oPane.options, fx);
			state[pane]		= $.extend(true, {}, oPane.state);

			// change classNames on the pane, eg: ui-layout-pane-east ==> ui-layout-pane-west
			re = new RegExp(o.paneClass +"-"+ oldPane, "g");
			P.className = P.className.replace(re, o.paneClass +"-"+ pane);

			// ALWAYS regenerate the resizer & toggler elements
			initHandles(pane); // create the required resizer & toggler

			// if moving to different orientation, then keep 'target' pane size
			if (c.dir != _c[oldPane].dir) {
				size = sizes[pane] || 0;
				setSizeLimits(pane); // update pane-state
				size = max(size, state[pane].minSize);
				// use manualSizePane to disable autoResize - not useful after panes are swapped
				manualSizePane(pane, size, true, true); // true/true = skipCallback/noAnimation
			}
			else // move the resizer here
				$Rs[pane].css(c.side, sC.inset[c.side] + (state[pane].isVisible ? getPaneSize(pane) : 0));


			// ADD CLASSNAMES & SLIDE-BINDINGS
			if (oPane.state.isVisible && !s.isVisible)
				setAsOpen(pane, true); // true = skipCallback
			else {
				setAsClosed(pane);
				bindStartSlidingEvents(pane, true); // will enable events IF option is set
			}

			// DESTROY the object
			oPane = null;
		};
	}


	/**
	 * INTERNAL method to sync pin-buttons when pane is opened or closed
	 * Unpinned means the pane is 'sliding' - ie, over-top of the adjacent panes
	 *
	 * @see  open(), setAsOpen(), setAsClosed()
	 * @param {string}	pane   These are the params returned to callbacks by layout()
	 * @param {boolean}	doPin  True means set the pin 'down', False means 'up'
	 */
,	syncPinBtns = function (pane, doPin) {
		if ($.layout.plugins.buttons)
			$.each(state[pane].pins, function (i, selector) {
				$.layout.buttons.setPinState(Instance, $(selector), pane, doPin);
			});
	}

;	// END var DECLARATIONS

	/**
	 * Capture keys when enableCursorHotkey - toggle pane if hotkey pressed
	 *
	 * @see  document.keydown()
	 */
	function keyDown (evt) {
		if (!evt) return true;
		var code = evt.keyCode;
		if (code < 33) return true; // ignore special keys: ENTER, TAB, etc

		var
			PANE = {
				38: "north" // Up Cursor	- $.ui.keyCode.UP
			,	40: "south" // Down Cursor	- $.ui.keyCode.DOWN
			,	37: "west"  // Left Cursor	- $.ui.keyCode.LEFT
			,	39: "east"  // Right Cursor	- $.ui.keyCode.RIGHT
			}
		,	ALT		= evt.altKey // no worky!
		,	SHIFT	= evt.shiftKey
		,	CTRL	= evt.ctrlKey
		,	CURSOR	= (CTRL && code >= 37 && code <= 40)
		,	o, k, m, pane
		;

		if (CURSOR && options[PANE[code]].enableCursorHotkey) // valid cursor-hotkey
			pane = PANE[code];
		else if (CTRL || SHIFT) // check to see if this matches a custom-hotkey
			$.each(_c.borderPanes, function (i, p) { // loop each pane to check its hotkey
				o = options[p];
				k = o.customHotkey;
				m = o.customHotkeyModifier; // if missing or invalid, treated as "CTRL+SHIFT"
				if ((SHIFT && m=="SHIFT") || (CTRL && m=="CTRL") || (CTRL && SHIFT)) { // Modifier matches
					if (k && code === (isNaN(k) || k <= 9 ? k.toUpperCase().charCodeAt(0) : k)) { // Key matches
						pane = p;
						return false; // BREAK
					}
				}
			});

		// validate pane
		if (!pane || !$Ps[pane] || !options[pane].closable || state[pane].isHidden)
			return true;

		toggle(pane);

		evt.stopPropagation();
		evt.returnValue = false; // CANCEL key
		return false;
	};


/*
 * ######################################
 *	UTILITY METHODS
 *	called externally or by initButtons
 * ######################################
 */

	/**
	 * Change/reset a pane overflow setting & zIndex to allow popups/drop-downs to work
	 *
	 * @param {Object=}   [el]	(optional) Can also be 'bound' to a click, mouseOver, or other event
	 */
	function allowOverflow (el) {
		if (!isInitialized()) return;
		if (this && this.tagName) el = this; // BOUND to element
		var $P;
		if (isStr(el))
			$P = $Ps[el];
		else if ($(el).data("layoutRole"))
			$P = $(el);
		else
			$(el).parents().each(function(){
				if ($(this).data("layoutRole")) {
					$P = $(this);
					return false; // BREAK
				}
			});
		if (!$P || !$P.length) return; // INVALID

		var
			pane	= $P.data("layoutEdge")
		,	s		= state[pane]
		;

		// if pane is already raised, then reset it before doing it again!
		// this would happen if allowOverflow is attached to BOTH the pane and an element 
		if (s.cssSaved)
			resetOverflow(pane); // reset previous CSS before continuing

		// if pane is raised by sliding or resizing, or its closed, then abort
		if (s.isSliding || s.isResizing || s.isClosed) {
			s.cssSaved = false;
			return;
		}

		var
			newCSS	= { zIndex: (options.zIndexes.resizer_normal + 1) }
		,	curCSS	= {}
		,	of		= $P.css("overflow")
		,	ofX		= $P.css("overflowX")
		,	ofY		= $P.css("overflowY")
		;
		// determine which, if any, overflow settings need to be changed
		if (of != "visible") {
			curCSS.overflow = of;
			newCSS.overflow = "visible";
		}
		if (ofX && !ofX.match(/(visible|auto)/)) {
			curCSS.overflowX = ofX;
			newCSS.overflowX = "visible";
		}
		if (ofY && !ofY.match(/(visible|auto)/)) {
			curCSS.overflowY = ofX;
			newCSS.overflowY = "visible";
		}

		// save the current overflow settings - even if blank!
		s.cssSaved = curCSS;

		// apply new CSS to raise zIndex and, if necessary, make overflow 'visible'
		$P.css( newCSS );

		// make sure the zIndex of all other panes is normal
		$.each(_c.allPanes, function(i, p) {
			if (p != pane) resetOverflow(p);
		});

	};
	/**
	 * @param {Object=}   [el]	(optional) Can also be 'bound' to a click, mouseOver, or other event
	 */
	function resetOverflow (el) {
		if (!isInitialized()) return;
		if (this && this.tagName) el = this; // BOUND to element
		var $P;
		if (isStr(el))
			$P = $Ps[el];
		else if ($(el).data("layoutRole"))
			$P = $(el);
		else
			$(el).parents().each(function(){
				if ($(this).data("layoutRole")) {
					$P = $(this);
					return false; // BREAK
				}
			});
		if (!$P || !$P.length) return; // INVALID

		var
			pane	= $P.data("layoutEdge")
		,	s		= state[pane]
		,	CSS		= s.cssSaved || {}
		;
		// reset the zIndex
		if (!s.isSliding && !s.isResizing)
			$P.css("zIndex", options.zIndexes.pane_normal);

		// reset Overflow - if necessary
		$P.css( CSS );

		// clear var
		s.cssSaved = false;
	};

/*
 * #####################
 * CREATE/RETURN LAYOUT
 * #####################
 */

	// validate that container exists
	var $N = $(this).eq(0); // FIRST matching Container element
	if (!$N.length) {
		return _log( options.errors.containerMissing );
	};

	// Users retrieve Instance of a layout with: $N.layout() OR $N.data("layout")
	// return the Instance-pointer if layout has already been initialized
	if ($N.data("layoutContainer") && $N.data("layout"))
		return $N.data("layout"); // cached pointer

	// init global vars
	var 
		$Ps	= {}	// Panes x5		- set in initPanes()
	,	$Cs	= {}	// Content x5	- set in initPanes()
	,	$Rs	= {}	// Resizers x4	- set in initHandles()
	,	$Ts	= {}	// Togglers x4	- set in initHandles()
	,	$Ms	= $([])	// Masks - up to 2 masks per pane (IFRAME + DIV)
	//	aliases for code brevity
	,	sC	= state.container // alias for easy access to 'container dimensions'
	,	sID	= state.id // alias for unique layout ID/namespace - eg: "layout435"
	;

	// create Instance object to expose data & option Properties, and primary action Methods
	var Instance = {
	//	layout data
		options:			options			// property - options hash
	,	state:				state			// property - dimensions hash
	//	object pointers
	,	container:			$N				// property - object pointers for layout container
	,	panes:				$Ps				// property - object pointers for ALL Panes: panes.north, panes.center
	,	contents:			$Cs				// property - object pointers for ALL Content: contents.north, contents.center
	,	resizers:			$Rs				// property - object pointers for ALL Resizers, eg: resizers.north
	,	togglers:			$Ts				// property - object pointers for ALL Togglers, eg: togglers.north
	//	border-pane open/close
	,	hide:				hide			// method - ditto
	,	show:				show			// method - ditto
	,	toggle:				toggle			// method - pass a 'pane' ("north", "west", etc)
	,	open:				open			// method - ditto
	,	close:				close			// method - ditto
	,	slideOpen:			slideOpen		// method - ditto
	,	slideClose:			slideClose		// method - ditto
	,	slideToggle:		slideToggle		// method - ditto
	//	pane actions
	,	setSizeLimits:		setSizeLimits	// method - pass a 'pane' - update state min/max data
	,	_sizePane:			sizePane		// method -intended for user by plugins only!
	,	sizePane:			manualSizePane	// method - pass a 'pane' AND an 'outer-size' in pixels or percent, or 'auto'
	,	sizeContent:		sizeContent		// method - pass a 'pane'
	,	swapPanes:			swapPanes		// method - pass TWO 'panes' - will swap them
	,	showMasks:			showMasks		// method - pass a 'pane' OR list of panes - default = all panes with mask option set
	,	hideMasks:			hideMasks		// method - ditto'
	//	pane element methods
	,	initContent:		initContent		// method - ditto
	,	addPane:			addPane			// method - pass a 'pane'
	,	removePane:			removePane		// method - pass a 'pane' to remove from layout, add 'true' to delete the pane-elem
	,	createChildren:		createChildren	// method - pass a 'pane' and (optional) layout-options (OVERRIDES options[pane].children
	,	refreshChildren:	refreshChildren	// method - pass a 'pane' and a layout-instance
	//	special pane option setting
	,	enableClosable:		enableClosable	// method - pass a 'pane'
	,	disableClosable:	disableClosable	// method - ditto
	,	enableSlidable:		enableSlidable	// method - ditto
	,	disableSlidable:	disableSlidable	// method - ditto
	,	enableResizable:	enableResizable	// method - ditto
	,	disableResizable:	disableResizable// method - ditto
	//	utility methods for panes
	,	allowOverflow:		allowOverflow	// utility - pass calling element (this)
	,	resetOverflow:		resetOverflow	// utility - ditto
	//	layout control
	,	destroy:			destroy			// method - no parameters
	,	initPanes:			isInitialized	// method - no parameters
	,	resizeAll:			resizeAll		// method - no parameters
	//	callback triggering
	,	runCallbacks:		_runCallbacks	// method - pass evtName & pane (if a pane-event), eg: trigger("onopen", "west")
	//	alias collections of options, state and children - created in addPane and extended elsewhere
	,	hasParentLayout:	false			// set by initContainer()
	,	children:			children		// pointers to child-layouts, eg: Instance.children.west.layoutName
	,	north:				false			// alias group: { name: pane, pane: $Ps[pane], options: options[pane], state: state[pane], children: children[pane] }
	,	south:				false			// ditto
	,	west:				false			// ditto
	,	east:				false			// ditto
	,	center:				false			// ditto
	};

	// create the border layout NOW
	if (_create() === 'cancel') // onload_start callback returned false to CANCEL layout creation
		return null;
	else // true OR false -- if layout-elements did NOT init (hidden or do not exist), can auto-init later
		return Instance; // return the Instance object

}


})( jQuery );




/**
 * jquery.layout.state 1.2
 * $Date: 2014-08-30 08:00:00 (Sat, 30 Aug 2014) $
 *
 * Copyright (c) 2014 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @requires: UI Layout 1.4.0 or higher
 * @requires: $.ui.cookie (above)
 *
 * @see: http://groups.google.com/group/jquery-ui-layout
 */
;(function ($) {

if (!$.layout) return;


/**
 *	UI COOKIE UTILITY
 *
 *	A $.cookie OR $.ui.cookie namespace *should be standard*, but until then...
 *	This creates $.ui.cookie so Layout does not need the cookie.jquery.js plugin
 *	NOTE: This utility is REQUIRED by the layout.state plugin
 *
 *	Cookie methods in Layout are created as part of State Management 
 */
if (!$.ui) $.ui = {};
$.ui.cookie = {

	// cookieEnabled is not in DOM specs, but DOES works in all browsers,including IE6
	acceptsCookies: !!navigator.cookieEnabled

,	read: function (name) {
		var
			c	= document.cookie
		,	cs	= c ? c.split(';') : []
		,	pair, data, i
		;
		for (i=0; pair=cs[i]; i++) {
			data = $.trim(pair).split('='); // name=value => [ name, value ]
			if (data[0] == name) // found the layout cookie
				return decodeURIComponent(data[1]);
		}
		return null;
	}

,	write: function (name, val, cookieOpts) {
		var	params	= ""
		,	date	= ""
		,	clear	= false
		,	o		= cookieOpts || {}
		,	x		= o.expires  || null
		,	t		= $.type(x)
		;
		if (t === "date")
			date = x;
		else if (t === "string" && x > 0) {
			x = parseInt(x,10);
			t = "number";
		}
		if (t === "number") {
			date = new Date();
			if (x > 0)
				date.setDate(date.getDate() + x);
			else {
				date.setFullYear(1970);
				clear = true;
			}
		}
		if (date)		params += ";expires="+ date.toUTCString();
		if (o.path)		params += ";path="+ o.path;
		if (o.domain)	params += ";domain="+ o.domain;
		if (o.secure)	params += ";secure";
		document.cookie = name +"="+ (clear ? "" : encodeURIComponent( val )) + params; // write or clear cookie
	}

,	clear: function (name) {
		$.ui.cookie.write(name, "", {expires: -1});
	}

};
// if cookie.jquery.js is not loaded, create an alias to replicate it
// this may be useful to other plugins or code dependent on that plugin
if (!$.cookie) $.cookie = function (k, v, o) {
	var C = $.ui.cookie;
	if (v === null)
		C.clear(k);
	else if (v === undefined)
		return C.read(k);
	else
		C.write(k, v, o);
};



/**
 *	State-management options stored in options.stateManagement, which includes a .cookie hash
 *	Default options saves ALL KEYS for ALL PANES, ie: pane.size, pane.isClosed, pane.isHidden
 *
 *	// STATE/COOKIE OPTIONS
 *	@example $(el).layout({
				stateManagement: {
					enabled:	true
				,	stateKeys:	"east.size,west.size,east.isClosed,west.isClosed"
				,	cookie:		{ name: "appLayout", path: "/" }
				}
			})
 *	@example $(el).layout({ stateManagement__enabled: true }) // enable auto-state-management using cookies
 *	@example $(el).layout({ stateManagement__cookie: { name: "appLayout", path: "/" } })
 *	@example $(el).layout({ stateManagement__cookie__name: "appLayout", stateManagement__cookie__path: "/" })
 *
 *	// STATE/COOKIE METHODS
 *	@example myLayout.saveCookie( "west.isClosed,north.size,south.isHidden", {expires: 7} );
 *	@example myLayout.loadCookie();
 *	@example myLayout.deleteCookie();
 *	@example var JSON = myLayout.readState();	// CURRENT Layout State
 *	@example var JSON = myLayout.readCookie();	// SAVED Layout State (from cookie)
 *	@example var JSON = myLayout.state.stateData;	// LAST LOADED Layout State (cookie saved in layout.state hash)
 *
 *	CUSTOM STATE-MANAGEMENT (eg, saved in a database)
 *	@example var JSON = myLayout.readState( "west.isClosed,north.size,south.isHidden" );
 *	@example myLayout.loadState( JSON );
 */

// tell Layout that the state plugin is available
$.layout.plugins.stateManagement = true;

//	Add State-Management options to layout.defaults
$.layout.defaults.stateManagement = {
	enabled:		false	// true = enable state-management, even if not using cookies
,	autoSave:		true	// Save a state-cookie when page exits?
,	autoLoad:		true	// Load the state-cookie when Layout inits?
,	animateLoad:	true	// animate panes when loading state into an active layout
,	includeChildren: true	// recurse into child layouts to include their state as well
	// List state-data to save - must be pane-specific
,	stateKeys:	"north.size,south.size,east.size,west.size,"+
				"north.isClosed,south.isClosed,east.isClosed,west.isClosed,"+
				"north.isHidden,south.isHidden,east.isHidden,west.isHidden"
,	cookie: {
		name:	""	// If not specified, will use Layout.name, else just "Layout"
	,	domain:	""	// blank = current domain
	,	path:	""	// blank = current page, "/" = entire website
	,	expires: ""	// 'days' to keep cookie - leave blank for 'session cookie'
	,	secure:	false
	}
};

// Set stateManagement as a 'layout-option', NOT a 'pane-option'
$.layout.optionsMap.layout.push("stateManagement");
// Update config so layout does not move options into the pane-default branch (panes)
$.layout.config.optionRootKeys.push("stateManagement");

/*
 *	State Management methods
 */
$.layout.state = {

	/**
	 * Get the current layout state and save it to a cookie
	 *
	 * myLayout.saveCookie( keys, cookieOpts )
	 *
	 * @param {Object}			inst
	 * @param {(string|Array)=}	keys
	 * @param {Object=}			cookieOpts
	 */
	saveCookie: function (inst, keys, cookieOpts) {
		var o	= inst.options
		,	sm	= o.stateManagement
		,	oC	= $.extend(true, {}, sm.cookie, cookieOpts || null)
		,	data = inst.state.stateData = inst.readState( keys || sm.stateKeys ) // read current panes-state
		;
		$.ui.cookie.write( oC.name || o.name || "Layout", $.layout.state.encodeJSON(data), oC );
		return $.extend(true, {}, data); // return COPY of state.stateData data
	}

	/**
	 * Remove the state cookie
	 *
	 * @param {Object}	inst
	 */
,	deleteCookie: function (inst) {
		var o = inst.options;
		$.ui.cookie.clear( o.stateManagement.cookie.name || o.name || "Layout" );
	}

	/**
	 * Read & return data from the cookie - as JSON
	 *
	 * @param {Object}	inst
	 */
,	readCookie: function (inst) {
		var o = inst.options;
		var c = $.ui.cookie.read( o.stateManagement.cookie.name || o.name || "Layout" );
		// convert cookie string back to a hash and return it
		return c ? $.layout.state.decodeJSON(c) : {};
	}

	/**
	 * Get data from the cookie and USE IT to loadState
	 *
	 * @param {Object}	inst
	 */
,	loadCookie: function (inst) {
		var c = $.layout.state.readCookie(inst); // READ the cookie
		if (c && !$.isEmptyObject( c )) {
			inst.state.stateData = $.extend(true, {}, c); // SET state.stateData
			inst.loadState(c); // LOAD the retrieved state
		}
		return c;
	}

	/**
	 * Update layout options from the cookie, if one exists
	 *
	 * @param {Object}		inst
	 * @param {Object=}		stateData
	 * @param {boolean=}	animate
	 */
,	loadState: function (inst, data, opts) {
		if (!$.isPlainObject( data ) || $.isEmptyObject( data )) return;

		// normalize data & cache in the state object
		data = inst.state.stateData = $.layout.transformData( data ); // panes = default subkey

		// add missing/default state-restore options
		var smo = inst.options.stateManagement;
		opts = $.extend({
			animateLoad:		false //smo.animateLoad
		,	includeChildren:	smo.includeChildren
		}, opts );

		if (!inst.state.initialized) {
			/*
			 *	layout NOT initialized, so just update its options
			 */
			// MUST remove pane.children keys before applying to options
			// use a copy so we don't remove keys from original data
			var o = $.extend(true, {}, data);
			//delete o.center; // center has no state-data - only children
			$.each($.layout.config.allPanes, function (idx, pane) {
				if (o[pane]) delete o[pane].children;		   
			 });
			// update CURRENT layout-options with saved state data
			$.extend(true, inst.options, o);
		}
		else {
			/*
			 *	layout already initialized, so modify layout's configuration
			 */
			var noAnimate = !opts.animateLoad
			,	o, c, h, state, open
			;
			$.each($.layout.config.borderPanes, function (idx, pane) {
				o = data[ pane ];
				if (!$.isPlainObject( o )) return; // no key, skip pane

				s	= o.size;
				c	= o.initClosed;
				h	= o.initHidden;
				ar	= o.autoResize
				state	= inst.state[pane];
				open	= state.isVisible;

				// reset autoResize
				if (ar)
					state.autoResize = ar;
				// resize BEFORE opening
				if (!open)
					inst._sizePane(pane, s, false, false, false); // false=skipCallback/noAnimation/forceResize
				// open/close as necessary - DO NOT CHANGE THIS ORDER!
				if (h === true)			inst.hide(pane, noAnimate);
				else if (c === true)	inst.close(pane, false, noAnimate);
				else if (c === false)	inst.open (pane, false, noAnimate);
				else if (h === false)	inst.show (pane, false, noAnimate);
				// resize AFTER any other actions
				if (open)
					inst._sizePane(pane, s, false, false, noAnimate); // animate resize if option passed
			});

			/*
			 *	RECURSE INTO CHILD-LAYOUTS
			 */
			if (opts.includeChildren) {
				var paneStateChildren, childState;
				$.each(inst.children, function (pane, paneChildren) {
					paneStateChildren = data[pane] ? data[pane].children : 0;
					if (paneStateChildren && paneChildren) {
						$.each(paneChildren, function (stateKey, child) {
							childState = paneStateChildren[stateKey];
							if (child && childState)
								child.loadState( childState );
						});
					}
				});
			}
		}
	}

	/**
	 * Get the *current layout state* and return it as a hash
	 *
	 * @param {Object=}		inst	// Layout instance to get state for
	 * @param {object=}		[opts]	// State-Managements override options
	 */
,	readState: function (inst, opts) {
		// backward compatility
		if ($.type(opts) === 'string') opts = { keys: opts };
		if (!opts) opts = {};
		var	sm		= inst.options.stateManagement
		,	ic		= opts.includeChildren
		,	recurse	= ic !== undefined ? ic : sm.includeChildren
		,	keys	= opts.stateKeys || sm.stateKeys
		,	alt		= { isClosed: 'initClosed', isHidden: 'initHidden' }
		,	state	= inst.state
		,	panes	= $.layout.config.allPanes
		,	data	= {}
		,	pair, pane, key, val
		,	ps, pC, child, array, count, branch
		;
		if ($.isArray(keys)) keys = keys.join(",");
		// convert keys to an array and change delimiters from '__' to '.'
		keys = keys.replace(/__/g, ".").split(',');
		// loop keys and create a data hash
		for (var i=0, n=keys.length; i < n; i++) {
			pair = keys[i].split(".");
			pane = pair[0];
			key  = pair[1];
			if ($.inArray(pane, panes) < 0) continue; // bad pane!
			val = state[ pane ][ key ];
			if (val == undefined) continue;
			if (key=="isClosed" && state[pane]["isSliding"])
				val = true; // if sliding, then *really* isClosed
			( data[pane] || (data[pane]={}) )[ alt[key] ? alt[key] : key ] = val;
		}

		// recurse into the child-layouts for each pane
		if (recurse) {
			$.each(panes, function (idx, pane) {
				pC = inst.children[pane];
				ps = state.stateData[pane];
				if ($.isPlainObject( pC ) && !$.isEmptyObject( pC )) {
					// ensure a key exists for this 'pane', eg: branch = data.center
					branch = data[pane] || (data[pane] = {});
					if (!branch.children) branch.children = {};
					$.each( pC, function (key, child) {
						// ONLY read state from an initialize layout
						if ( child.state.initialized )
							branch.children[ key ] = $.layout.state.readState( child );
						// if we have PREVIOUS (onLoad) state for this child-layout, KEEP IT!
						else if ( ps && ps.children && ps.children[ key ] ) {
							branch.children[ key ] = $.extend(true, {}, ps.children[ key ] );
						}
					});
				}
			});
		}

		return data;
	}

	/**
	 *	Stringify a JSON hash so can save in a cookie or db-field
	 */
,	encodeJSON: function (json) {
		var local = window.JSON || {};
		return (local.stringify || stringify)(json);

		function stringify (h) {
			var D=[], i=0, k, v, t // k = key, v = value
			,	a = $.isArray(h)
			;
			for (k in h) {
				v = h[k];
				t = typeof v;
				if (t == 'string')		// STRING - add quotes
					v = '"'+ v +'"';
				else if (t == 'object')	// SUB-KEY - recurse into it
					v = parse(v);
				D[i++] = (!a ? '"'+ k +'":' : '') + v;
			}
			return (a ? '[' : '{') + D.join(',') + (a ? ']' : '}');
		};
	}

	/**
	 *	Convert stringified JSON back to a hash object
	 *	@see		$.parseJSON(), adding in jQuery 1.4.1
	 */
,	decodeJSON: function (str) {
		try { return $.parseJSON ? $.parseJSON(str) : window["eval"]("("+ str +")") || {}; }
		catch (e) { return {}; }
	}


,	_create: function (inst) {
		var s	= $.layout.state
		,	o	= inst.options
		,	sm	= o.stateManagement
		;
		//	ADD State-Management plugin methods to inst
		 $.extend( inst, {
		//	readCookie - update options from cookie - returns hash of cookie data
			readCookie:		function () { return s.readCookie(inst); }
		//	deleteCookie
		,	deleteCookie:	function () { s.deleteCookie(inst); }
		//	saveCookie - optionally pass keys-list and cookie-options (hash)
		,	saveCookie:		function (keys, cookieOpts) { return s.saveCookie(inst, keys, cookieOpts); }
		//	loadCookie - readCookie and use to loadState() - returns hash of cookie data
		,	loadCookie:		function () { return s.loadCookie(inst); }
		//	loadState - pass a hash of state to use to update options
		,	loadState:		function (stateData, opts) { s.loadState(inst, stateData, opts); }
		//	readState - returns hash of current layout-state
		,	readState:		function (keys) { return s.readState(inst, keys); }
		//	add JSON utility methods too...
		,	encodeJSON:		s.encodeJSON
		,	decodeJSON:		s.decodeJSON
		});

		// init state.stateData key, even if plugin is initially disabled
		inst.state.stateData = {};

		// autoLoad MUST BE one of: data-array, data-hash, callback-function, or TRUE
		if ( !sm.autoLoad ) return;

		//	When state-data exists in the autoLoad key USE IT,
		//	even if stateManagement.enabled == false
		if ($.isPlainObject( sm.autoLoad )) {
			if (!$.isEmptyObject( sm.autoLoad )) {
				inst.loadState( sm.autoLoad );
			}
		}
		else if ( sm.enabled ) {
			// update the options from cookie or callback
			// if options is a function, call it to get stateData
			if ($.isFunction( sm.autoLoad )) {
				var d = {};
				try {
					d = sm.autoLoad( inst, inst.state, inst.options, inst.options.name || '' ); // try to get data from fn
				} catch (e) {}
				if (d && $.isPlainObject( d ) && !$.isEmptyObject( d ))
					inst.loadState(d);
			}
			else // any other truthy value will trigger loadCookie
				inst.loadCookie();
		}
	}

,	_unload: function (inst) {
		var sm = inst.options.stateManagement;
		if (sm.enabled && sm.autoSave) {
			// if options is a function, call it to save the stateData
			if ($.isFunction( sm.autoSave )) {
				try {
					sm.autoSave( inst, inst.state, inst.options, inst.options.name || '' ); // try to get data from fn
				} catch (e) {}
			}
			else // any truthy value will trigger saveCookie
				inst.saveCookie();
		}
	}

};

// add state initialization method to Layout's onCreate array of functions
$.layout.onCreate.push( $.layout.state._create );
$.layout.onUnload.push( $.layout.state._unload );

})( jQuery );



/**
 * @preserve jquery.layout.buttons 1.0
 * $Date: 2011-07-16 08:00:00 (Sat, 16 July 2011) $
 *
 * Copyright (c) 2011 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @dependancies: UI Layout 1.3.0.rc30.1 or higher
 *
 * @support: http://groups.google.com/group/jquery-ui-layout
 *
 * Docs: [ to come ]
 * Tips: [ to come ]
 */
;(function ($) {

if (!$.layout) return;


// tell Layout that the state plugin is available
$.layout.plugins.buttons = true;

//	Add State-Management options to layout.defaults
$.layout.defaults.autoBindCustomButtons = false;
// Set stateManagement as a layout-option, NOT a pane-option
$.layout.optionsMap.layout.push("autoBindCustomButtons");

/*
 *	Button methods
 */
$.layout.buttons = {
	// set data used by multiple methods below
	config: {
		borderPanes:	"north,south,west,east"
	}

	/**
	* Searches for .ui-layout-button-xxx elements and auto-binds them as layout-buttons
	*
	* @see  _create()
	*/
,	init: function (inst) {
		var pre		= "ui-layout-button-"
		,	layout	= inst.options.name || ""
		,	name;
		$.each("toggle,open,close,pin,toggle-slide,open-slide".split(","), function (i, action) {
			$.each($.layout.buttons.config.borderPanes.split(","), function (ii, pane) {
				$("."+pre+action+"-"+pane).each(function(){
					// if button was previously 'bound', data.layoutName was set, but is blank if layout has no 'name'
					name = $(this).data("layoutName") || $(this).attr("layoutName");
					if (name == undefined || name === layout)
						inst.bindButton(this, action, pane);
				});
			});
		});
	}

	/**
	* Helper function to validate params received by addButton utilities
	*
	* Two classes are added to the element, based on the buttonClass...
	* The type of button is appended to create the 2nd className:
	*  - ui-layout-button-pin
	*  - ui-layout-pane-button-toggle
	*  - ui-layout-pane-button-open
	*  - ui-layout-pane-button-close
	*
	* @param  {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param  {string}   			pane 		Name of the pane the button is for: 'north', 'south', etc.
	* @return {Array.<Object>}		If both params valid, the element matching 'selector' in a jQuery wrapper - otherwise returns null
	*/
,	get: function (inst, selector, pane, action) {
		var $E	= $(selector)
		,	o	= inst.options
		//,	err	= o.showErrorMessages
		;
		if ($E.length && $.layout.buttons.config.borderPanes.indexOf(pane) >= 0) {
			var btn = o[pane].buttonClass +"-"+ action;
			$E	.addClass( btn +" "+ btn +"-"+ pane )
				.data("layoutName", o.name); // add layout identifier - even if blank!
		}
		return $E;
	}


	/**
	* NEW syntax for binding layout-buttons - will eventually replace addToggle, addOpen, etc.
	*
	* @param {(string|!Object)}	sel		jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}			action
	* @param {string}			pane
	*/
,	bind: function (inst, sel, action, pane) {
		var _ = $.layout.buttons;
		switch (action.toLowerCase()) {
			case "toggle":			_.addToggle	(inst, sel, pane); break;	
			case "open":			_.addOpen	(inst, sel, pane); break;
			case "close":			_.addClose	(inst, sel, pane); break;
			case "pin":				_.addPin	(inst, sel, pane); break;
			case "toggle-slide":	_.addToggle	(inst, sel, pane, true); break;	
			case "open-slide":		_.addOpen	(inst, sel, pane, true); break;
		}
		return inst;
	}

	/**
	* Add a custom Toggler button for a pane
	*
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}  			pane 		Name of the pane the button is for: 'north', 'south', etc.
	* @param {boolean=}			slide 		true = slide-open, false = pin-open
	*/
,	addToggle: function (inst, selector, pane, slide) {
		$.layout.buttons.get(inst, selector, pane, "toggle")
			.click(function(evt){
				inst.toggle(pane, !!slide);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Open button for a pane
	*
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}			pane 		Name of the pane the button is for: 'north', 'south', etc.
	* @param {boolean=}			slide 		true = slide-open, false = pin-open
	*/
,	addOpen: function (inst, selector, pane, slide) {
		$.layout.buttons.get(inst, selector, pane, "open")
			.attr("title", inst.options[pane].tips.Open)
			.click(function (evt) {
				inst.open(pane, !!slide);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Close button for a pane
	*
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}   		pane 		Name of the pane the button is for: 'north', 'south', etc.
	*/
,	addClose: function (inst, selector, pane) {
		$.layout.buttons.get(inst, selector, pane, "close")
			.attr("title", inst.options[pane].tips.Close)
			.click(function (evt) {
				inst.close(pane);
				evt.stopPropagation();
			});
		return inst;
	}

	/**
	* Add a custom Pin button for a pane
	*
	* Four classes are added to the element, based on the paneClass for the associated pane...
	* Assuming the default paneClass and the pin is 'up', these classes are added for a west-pane pin:
	*  - ui-layout-pane-pin
	*  - ui-layout-pane-west-pin
	*  - ui-layout-pane-pin-up
	*  - ui-layout-pane-west-pin-up
	*
	* @param {(string|!Object)}	selector	jQuery selector (or element) for button, eg: ".ui-layout-north .toggle-button"
	* @param {string}   		pane 		Name of the pane the pin is for: 'north', 'south', etc.
	*/
,	addPin: function (inst, selector, pane) {
		var $E = $.layout.buttons.get(inst, selector, pane, "pin");
		if ($E.length) {
			var s = inst.state[pane];
			$E.click(function (evt) {
				$.layout.buttons.setPinState(inst, $(this), pane, (s.isSliding || s.isClosed));
				if (s.isSliding || s.isClosed) inst.open( pane ); // change from sliding to open
				else inst.close( pane ); // slide-closed
				evt.stopPropagation();
			});
			// add up/down pin attributes and classes
			$.layout.buttons.setPinState(inst, $E, pane, (!s.isClosed && !s.isSliding));
			// add this pin to the pane data so we can 'sync it' automatically
			// PANE.pins key is an array so we can store multiple pins for each pane
			s.pins.push( selector ); // just save the selector string
		}
		return inst;
	}

	/**
	* Change the class of the pin button to make it look 'up' or 'down'
	*
	* @see  addPin(), syncPins()
	* @param {Array.<Object>}	$Pin	The pin-span element in a jQuery wrapper
	* @param {string}	pane	These are the params returned to callbacks by layout()
	* @param {boolean}	doPin	true = set the pin 'down', false = set it 'up'
	*/
,	setPinState: function (inst, $Pin, pane, doPin) {
		var updown = $Pin.attr("pin");
		if (updown && doPin === (updown=="down")) return; // already in correct state
		var
			po		= inst.options[pane]
		,	lang	= po.tips
		,	pin		= po.buttonClass +"-pin"
		,	side	= pin +"-"+ pane
		,	UP		= pin +"-up "+	side +"-up"
		,	DN		= pin +"-down "+side +"-down"
		;
		$Pin
			.attr("pin", doPin ? "down" : "up") // logic
			.attr("title", doPin ? lang.Unpin : lang.Pin)
			.removeClass( doPin ? UP : DN ) 
			.addClass( doPin ? DN : UP ) 
		;
	}

	/**
	* INTERNAL function to sync 'pin buttons' when pane is opened or closed
	* Unpinned means the pane is 'sliding' - ie, over-top of the adjacent panes
	*
	* @see  open(), close()
	* @param {string}	pane   These are the params returned to callbacks by layout()
	* @param {boolean}	doPin  True means set the pin 'down', False means 'up'
	*/
,	syncPinBtns: function (inst, pane, doPin) {
		// REAL METHOD IS _INSIDE_ LAYOUT - THIS IS HERE JUST FOR REFERENCE
		$.each(state[pane].pins, function (i, selector) {
			$.layout.buttons.setPinState(inst, $(selector), pane, doPin);
		});
	}


,	_load: function (inst) {
		//	ADD Button methods to Layout Instance
		$.extend( inst, {
			bindButton:		function (selector, action, pane) { return $.layout.buttons.bind(inst, selector, action, pane); }
		//	DEPRECATED METHODS...
		,	addToggleBtn:	function (selector, pane, slide) { return $.layout.buttons.addToggle(inst, selector, pane, slide); }
		,	addOpenBtn:		function (selector, pane, slide) { return $.layout.buttons.addOpen(inst, selector, pane, slide); }
		,	addCloseBtn:	function (selector, pane) { return $.layout.buttons.addClose(inst, selector, pane); }
		,	addPinBtn:		function (selector, pane) { return $.layout.buttons.addPin(inst, selector, pane); }
		});

		// init state array to hold pin-buttons
		for (var i=0; i<4; i++) {
			var pane = $.layout.buttons.config.borderPanes[i];
			inst.state[pane].pins = [];
		}

		// auto-init buttons onLoad if option is enabled
		if ( inst.options.autoBindCustomButtons )
			$.layout.buttons.init(inst);
	}

,	_unload: function (inst) {
		// TODO: unbind all buttons???
	}

};

// add initialization method to Layout's onLoad array of functions
$.layout.onLoad.push(  $.layout.buttons._load );
//$.layout.onUnload.push( $.layout.buttons._unload );

})( jQuery );




/**
 * jquery.layout.browserZoom 1.0
 * $Date: 2011-12-29 08:00:00 (Thu, 29 Dec 2011) $
 *
 * Copyright (c) 2012 
 *   Kevin Dalman (http://allpro.net)
 *
 * Dual licensed under the GPL (http://www.gnu.org/licenses/gpl.html)
 * and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.
 *
 * @requires: UI Layout 1.3.0.rc30.1 or higher
 *
 * @see: http://groups.google.com/group/jquery-ui-layout
 *
 * TODO: Extend logic to handle other problematic zooming in browsers
 * TODO: Add hotkey/mousewheel bindings to _instantly_ respond to these zoom event
 */
(function ($) {

// tell Layout that the plugin is available
$.layout.plugins.browserZoom = true;

$.layout.defaults.browserZoomCheckInterval = 1000;
$.layout.optionsMap.layout.push("browserZoomCheckInterval");

/*
 *	browserZoom methods
 */
$.layout.browserZoom = {

	_init: function (inst) {
		// abort if browser does not need this check
		if ($.layout.browserZoom.ratio() !== false)
			$.layout.browserZoom._setTimer(inst);
	}

,	_setTimer: function (inst) {
		// abort if layout destroyed or browser does not need this check
		if (inst.destroyed) return;
		var o	= inst.options
		,	s	= inst.state
		//	don't need check if inst has parentLayout, but check occassionally in case parent destroyed!
		//	MINIMUM 100ms interval, for performance
		,	ms	= inst.hasParentLayout ?  5000 : Math.max( o.browserZoomCheckInterval, 100 )
		;
		// set the timer
		setTimeout(function(){
			if (inst.destroyed || !o.resizeWithWindow) return;
			var d = $.layout.browserZoom.ratio();
			if (d !== s.browserZoom) {
				s.browserZoom = d;
				inst.resizeAll();
			}
			// set a NEW timeout
			$.layout.browserZoom._setTimer(inst);
		}
		,	ms );
	}

,	ratio: function () {
		var w	= window
		,	s	= screen
		,	d	= document
		,	dE	= d.documentElement || d.body
		,	b	= $.layout.browser
		,	v	= b.version
		,	r, sW, cW
		;
		// we can ignore all browsers that fire window.resize event onZoom
		if (!b.msie || v > 8)
			return false; // don't need to track zoom
		if (s.deviceXDPI && s.systemXDPI) // syntax compiler hack
			return calc(s.deviceXDPI, s.systemXDPI);
		// everything below is just for future reference!
		if (b.webkit && (r = d.body.getBoundingClientRect))
			return calc((r.left - r.right), d.body.offsetWidth);
		if (b.webkit && (sW = w.outerWidth))
			return calc(sW, w.innerWidth);
		if ((sW = s.width) && (cW = dE.clientWidth))
			return calc(sW, cW);
		return false; // no match, so cannot - or don't need to - track zoom

		function calc (x,y) { return (parseInt(x,10) / parseInt(y,10) * 100).toFixed(); }
	}

};
// add initialization method to Layout's onLoad array of functions
$.layout.onReady.push( $.layout.browserZoom._init );


})( jQuery );




/**
 *	UI Layout Plugin: Slide-Offscreen Animation
 *
 *	Prevent panes from being 'hidden' so that an iframes/objects 
 *	does not reload/refresh when pane 'opens' again.
 *	This plug-in adds a new animation called "slideOffscreen".
 *	It is identical to the normal "slide" effect, but avoids hiding the element
 *
 *	Requires Layout 1.3.0.RC30.1 or later for Close offscreen
 *	Requires Layout 1.3.0.RC30.5 or later for Hide, initClosed & initHidden offscreen
 *
 *	Version:	1.1 - 2012-11-18
 *	Author:		Kevin Dalman (kevin@jquery-dev.com)
 *	@preserve	jquery.layout.slideOffscreen-1.1.js
 */
;(function ($) {

// Add a new "slideOffscreen" effect
if ($.effects) {

	// add an option so initClosed and initHidden will work
	$.layout.defaults.panes.useOffscreenClose = false; // user must enable when needed
	/* set the new animation as the default for all panes
	$.layout.defaults.panes.fxName = "slideOffscreen";
	*/

	if ($.layout.plugins)
		$.layout.plugins.effects.slideOffscreen = true;

	// dupe 'slide' effect defaults as new effect defaults
	$.layout.effects.slideOffscreen = $.extend(true, {}, $.layout.effects.slide);

	// add new effect to jQuery UI
	$.effects.slideOffscreen = function(o) {
		return this.queue(function(){

			var fx		= $.effects
			,	opt		= o.options
			,	$el		= $(this)
			,	pane	= $el.data('layoutEdge')
			,	state	= $el.data('parentLayout').state
			,	dist	= state[pane].size
			,	s		= this.style
			,	props	= ['top','bottom','left','right']
				// Set options
			,	mode	= fx.setMode($el, opt.mode || 'show') // Set Mode
			,	show	= (mode == 'show')
			,	dir		= opt.direction || 'left' // Default Direction
			,	ref	 	= (dir == 'up' || dir == 'down') ? 'top' : 'left'
			,	pos		= (dir == 'up' || dir == 'left')
			,	offscrn	= $.layout.config.offscreenCSS || {}
			,	keyLR	= $.layout.config.offscreenReset
			,	keyTB	= 'offscreenResetTop' // only used internally
			,	animation = {}
			;
			// Animation settings
			animation[ref]	= (show ? (pos ? '+=' : '-=') : (pos ? '-=' : '+=')) + dist;

			if (show) { // show() animation, so save top/bottom but retain left/right set when 'hidden'
				$el.data(keyTB, { top: s.top, bottom: s.bottom });

				// set the top or left offset in preparation for animation
				// Note: ALL animations work by shifting the top or left edges
				if (pos) { // top (north) or left (west)
					$el.css(ref, isNaN(dist) ? "-" + dist : -dist); // Shift outside the left/top edge
				}
				else { // bottom (south) or right (east) - shift all the way across container
					if (dir === 'right')
						$el.css({ left: state.container.layoutWidth, right: 'auto' });
					else // dir === bottom
						$el.css({ top: state.container.layoutHeight, bottom: 'auto' });
				}
				// restore the left/right setting if is a top/bottom animation
				if (ref === 'top')
					$el.css( $el.data( keyLR ) || {} );
			}
			else { // hide() animation, so save ALL CSS
				$el.data(keyTB, { top: s.top, bottom: s.bottom });
				$el.data(keyLR, { left: s.left, right: s.right });
			}

			// Animate
			$el.show().animate(animation, { queue: false, duration: o.duration, easing: opt.easing, complete: function(){
				// Restore top/bottom
				if ($el.data( keyTB ))
					$el.css($el.data( keyTB )).removeData( keyTB );
				if (show) // Restore left/right too
					$el.css($el.data( keyLR ) || {}).removeData( keyLR );
				else // Move the pane off-screen (left: -99999, right: 'auto')
					$el.css( offscrn );

				if (o.callback) o.callback.apply(this, arguments); // Callback
				$el.dequeue();
			}});

		});
	};

}

})( jQuery );





// knockout-sortable 0.11.0 | (c) 2015 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license
; (function (factory) {
    if (typeof define === "function" && define.amd) {
        // AMD anonymous module
        define(["knockout", "jquery", "jquery-ui/sortable", "jquery-ui/draggable"], factory);
    } else if (typeof require === "function" && typeof exports === "object" && typeof module === "object") {
        // CommonJS module
        var ko = require("knockout"),
            jQuery = require("jquery");
        require("jquery-ui/sortable");
        require("jquery-ui/draggable");
        factory(ko, jQuery);
    } else {
        // No module loader (plain <script> tag) - put directly in global namespace
        
        factory(window.ko, window.jQuery);
    }
})(function (ko, $) {


    //duckpunch the sortable to enable zordering on drop
  
    //function isOverAxis(x, reference, size) {
    //    return (x > reference) && (x < (reference + size));
    //}
    //function isFloating(item) {
    //    return (/left|right/).test(item.css("float")) || (/inline|table-cell/).test(item.css("display"));
    //}

    //$.ui.sortable.prototype._contactContainers = function (event) {
    //    var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, base, cur, nearBottom, floating,
	//		innermostContainer = null,
	//		innermostIndex = null;
    //        innermostZIndex = -9999;

    //    // get innermost container that intersects with item
    //    for (i = this.containers.length - 1; i >= 0; i--) {

    //        // never consider a container that's located within the item itself
    //        if($.contains(this.currentItem[0], this.containers[i].element[0])) {
    //            continue;
    //        }

    //        var zIndex = $(this.containers[i].element[0]).zIndex();

    //        if (this._intersectsWith(this.containers[i].containerCache) ) {

              
    //            if (innermostContainer &&
    //                // if we've already found a container and it's more "inner" than this, then continue
	//			  ($.contains(this.containers[i].element[0], innermostContainer.element[0]) ||
    //                // or if we've already found a container that has a z-index larger than this, then also continue
	//			  (zIndex < innermostZIndex))) {
    //                console.log("zindex: " + zIndex);
    //                continue;
    //            }

    //            innermostContainer = this.containers[i];
    //            innermostZIndex = zIndex;
    //            innermostIndex = i;
               

    //        } else {
    //            // container doesn't intersect. trigger "out" event if necessary
    //            if(this.containers[i].containerCache.over) {
    //                this.containers[i]._trigger("out", event, this._uiHash(this));
    //                this.containers[i].containerCache.over = 0;
    //            }
    //        }

    //    }

    //    // if no intersecting containers found, return
    //    if(!innermostContainer) {
    //        return;
    //    }

    //    // move the item into the container if it's not there already
    //    if(this.containers.length === 1) {
    //        if (!this.containers[innermostIndex].containerCache.over) {
    //            this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
    //            this.containers[innermostIndex].containerCache.over = 1;
    //        }
    //    } else {

    //        //When entering a new container, we will find the item with the least distance and append our item near it
    //        dist = 10000;
    //        itemWithLeastDistance = null;
    //        floating = innermostContainer.floating || isFloating(this.currentItem);
    //        posProperty = floating ? "left" : "top";
    //        sizeProperty = floating ? "width" : "height";
    //        base = this.positionAbs[posProperty] + this.offset.click[posProperty];
    //        for (j = this.items.length - 1; j >= 0; j--) {
    //            if(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {
    //                continue;
    //            }
    //            if(this.items[j].item[0] === this.currentItem[0]) {
    //                continue;
    //            }
    //            if (floating && !isOverAxis(this.positionAbs.top + this.offset.click.top, this.items[j].top, this.items[j].height)) {
    //                continue;
    //            }
    //            cur = this.items[j].item.offset()[posProperty];
    //            nearBottom = false;
    //            if(Math.abs(cur - base) > Math.abs(cur + this.items[j][sizeProperty] - base)){
    //                nearBottom = true;
    //                cur += this.items[j][sizeProperty];
    //            }

    //            if(Math.abs(cur - base) < dist) {
    //                dist = Math.abs(cur - base); itemWithLeastDistance = this.items[j];
    //                this.direction = nearBottom ? "up": "down";
    //            }
    //        }

    //        //Check if dropOnEmpty is enabled
    //        if(!itemWithLeastDistance && !this.options.dropOnEmpty) {
    //            return;
    //        }

    //        if(this.currentContainer === this.containers[innermostIndex]) {
    //            return;
    //        }

    //        itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);
    //        this._trigger("change", event, this._uiHash());
    //        this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));
    //        this.currentContainer = this.containers[innermostIndex];

    //        //Update the placeholder
    //        this.options.placeholder.update(this.currentContainer, this.placeholder);

    //        this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
    //        this.containers[innermostIndex].containerCache.over = 1;
    //    }


    //}
 
   



    var ITEMKEY = "ko_sortItem",
        INDEXKEY = "ko_sourceIndex",
        LISTKEY = "ko_sortList",
        PARENTKEY = "ko_parentList",
        DRAGKEY = "ko_dragItem",
        unwrap = ko.utils.unwrapObservable,
        dataGet = ko.utils.domData.get,
        dataSet = ko.utils.domData.set,
        version = $.ui && $.ui.version,
        //1.8.24 included a fix for how events were triggered in nested sortables. indexOf checks will fail if version starts with that value (0 vs. -1)
        hasNestedSortableFix = version && version.indexOf("1.6.") && version.indexOf("1.7.") && (version.indexOf("1.8.") || version === "1.8.24");

    //internal afterRender that adds meta-data to children
    var addMetaDataAfterRender = function (elements, data) {
        ko.utils.arrayForEach(elements, function (element) {
            if (element.nodeType === 1) {
                dataSet(element, ITEMKEY, data);
                dataSet(element, PARENTKEY, dataGet(element.parentNode, LISTKEY));
            }
        });
    };

    //prepare the proper options for the template binding
    var prepareTemplateOptions = function (valueAccessor, dataName) {
        var result = {},
            options = unwrap(valueAccessor()) || {},
            actualAfterRender;

        //build our options to pass to the template engine
        if (options.data) {
            result[dataName] = options.data;
            result.name = options.template;
        } else {
            result[dataName] = valueAccessor();
        }

        ko.utils.arrayForEach(["afterAdd", "afterRender", "as", "beforeRemove", "includeDestroyed", "templateEngine", "templateOptions", "nodes"], function (option) {
            if (options.hasOwnProperty(option)) {
                result[option] = options[option];
            } else if (ko.bindingHandlers.sortable.hasOwnProperty(option)) {
                result[option] = ko.bindingHandlers.sortable[option];
            }
        });

        //use an afterRender function to add meta-data
        if (dataName === "foreach") {
            if (result.afterRender) {
                //wrap the existing function, if it was passed
                actualAfterRender = result.afterRender;
                result.afterRender = function (element, data) {
                    addMetaDataAfterRender.call(data, element, data);
                    actualAfterRender.call(data, element, data);
                };
            } else {
                result.afterRender = addMetaDataAfterRender;
            }
        }

        //return options to pass to the template binding
        return result;
    };

    var updateIndexFromDestroyedItems = function (index, items) {
        var unwrapped = unwrap(items);

        if (unwrapped) {
            for (var i = 0; i < index; i++) {
                //add one for every destroyed item we find before the targetIndex in the target array
                if (unwrapped[i] && unwrap(unwrapped[i]._destroy)) {
                    index++;
                }
            }
        }

        return index;
    };

    //remove problematic leading/trailing whitespace from templates
    var stripTemplateWhitespace = function (element, name) {
        var templateSource,
            templateElement;

        //process named templates
        if (name) {
            templateElement = document.getElementById(name);
            if (templateElement) {
                templateSource = new ko.templateSources.domElement(templateElement);
                templateSource.text($.trim(templateSource.text()));
            }
        }
        else {
            //remove leading/trailing non-elements from anonymous templates
            $(element).contents().each(function () {
                if (this && this.nodeType !== 1) {
                    element.removeChild(this);
                }
            });
        }
    };

    //connect items with observableArrays
    ko.bindingHandlers.sortable = {
        init: function (element, valueAccessor, allBindingsAccessor, data, context) {
            var $element = $(element),
                value = unwrap(valueAccessor()) || {},
                templateOptions = prepareTemplateOptions(valueAccessor, "foreach"),
                sortable = {},
                startActual, updateActual;

            stripTemplateWhitespace(element, templateOptions.name);

            //build a new object that has the global options with overrides from the binding
            $.extend(true, sortable, ko.bindingHandlers.sortable);
            if (value.options && sortable.options) {
                ko.utils.extend(sortable.options, value.options);
                delete value.options;
            }
            ko.utils.extend(sortable, value);

            //if allowDrop is an observable or a function, then execute it in a computed observable
            if (sortable.connectClass && (ko.isObservable(sortable.allowDrop) || typeof sortable.allowDrop == "function")) {
                ko.computed({
                    read: function () {
                        var value = unwrap(sortable.allowDrop),
                            shouldAdd = typeof value == "function" ? value.call(this, templateOptions.foreach) : value;
                        ko.utils.toggleDomNodeCssClass(element, sortable.connectClass, shouldAdd);
                    },
                    disposeWhenNodeIsRemoved: element
                }, this);
            } else {
                ko.utils.toggleDomNodeCssClass(element, sortable.connectClass, sortable.allowDrop);
            }

            //wrap the template binding
            ko.bindingHandlers.template.init(element, function () { return templateOptions; }, allBindingsAccessor, data, context);

            //keep a reference to start/update functions that might have been passed in
            startActual = sortable.options.start;
            updateActual = sortable.options.update;

            //initialize sortable binding after template binding has rendered in update function
            var createTimeout = setTimeout(function () {
                var dragItem;
                $element.sortable(ko.utils.extend(sortable.options, {
                    start: function (event, ui) {
                        //track original index
                        var el = ui.item[0];
                        dataSet(el, INDEXKEY, ko.utils.arrayIndexOf(ui.item.parent().children(), el));

                        //make sure that fields have a chance to update model
                        ui.item.find("input:focus").change();
                        if (startActual) {
                            startActual.apply(this, arguments);
                        }
                    },
                    // Sparkle
                    //cancel: ".nodrag",
                    receive: function (event, ui) {
                       
                        dragItem = dataGet(ui.item[0], DRAGKEY);
                        if (dragItem) {
                            //copy the model item, if a clone option is provided
                            if (dragItem.clone) {
                                dragItem = dragItem.clone();
                            }

                            //configure a handler to potentially manipulate item before drop
                            if (sortable.dragged) {
                                dragItem = sortable.dragged.call(this, dragItem, event, ui) || dragItem;
                            }
                        }
                    },
                    update: function (event, ui) {
                       
                        var sourceParent, targetParent, sourceIndex, targetIndex, arg,
                            el = ui.item[0],
                            parentEl = ui.item.parent()[0],
                            item = dataGet(el, ITEMKEY) || dragItem;

                        dragItem = null;

                        //make sure that moves only run once, as update fires on multiple containers
                        if (item && (this === parentEl) || (!hasNestedSortableFix && $.contains(this, parentEl))) {
                            //identify parents
                            sourceParent = dataGet(el, PARENTKEY);
                            sourceIndex = dataGet(el, INDEXKEY);
                            targetParent = dataGet(el.parentNode, LISTKEY);
                            targetIndex = ko.utils.arrayIndexOf(ui.item.parent().children(), el);

                            //take destroyed items into consideration
                            if (!templateOptions.includeDestroyed) {
                                sourceIndex = updateIndexFromDestroyedItems(sourceIndex, sourceParent);
                                targetIndex = updateIndexFromDestroyedItems(targetIndex, targetParent);
                            }

                            //build up args for the callbacks
                            if (sortable.beforeMove || sortable.afterMove) {
                                arg = {
                                    item: item,
                                    sourceParent: sourceParent,
                                    sourceParentNode: sourceParent && ui.sender || el.parentNode,
                                    sourceIndex: sourceIndex,
                                    targetParent: targetParent,
                                    targetIndex: targetIndex,
                                    cancelDrop: false
                                };

                               
                                //execute the configured callback prior to actually moving items
                                if (sortable.beforeMove) {
                                    sortable.beforeMove.call(this, arg, event, ui);
                                }
                            }
                           
                            //call cancel on the correct list, so KO can take care of DOM manipulation
                            if (sourceParent) {
                                $(sourceParent === targetParent ? this : ui.sender || this).sortable("cancel");
                            }
                                //for a draggable item just remove the element
                            else {
                              
                                $(el).remove();
                            }

                            //if beforeMove told us to cancel, then we are done
                            if (arg && arg.cancelDrop) {
                                
                                return;
                            }

                           
                            //do the actual move
                            if (targetIndex >= 0) {
                                if (sourceParent) {
                                    sourceParent.splice(sourceIndex, 1);

                                    //if using deferred updates plugin, force updates
                                    if (ko.processAllDeferredBindingUpdates) {
                                        ko.processAllDeferredBindingUpdates();
                                    }
                                }

                                targetParent.splice(targetIndex, 0, item);
                            }

                            //rendering is handled by manipulating the observableArray; ignore dropped element
                            dataSet(el, ITEMKEY, null);

                            //if using deferred updates plugin, force updates
                            if (ko.processAllDeferredBindingUpdates) {
                                ko.processAllDeferredBindingUpdates();
                            }

                            //allow binding to accept a function to execute after moving the item
                            if (sortable.afterMove) {
                                sortable.afterMove.call(this, arg, event, ui);
                            }
                        }

                        if (updateActual) {
                            updateActual.apply(this, arguments);
                        }
                    },
                    connectWith: sortable.connectClass ? "." + sortable.connectClass : false
                })
                // SparkeXRM - prevent items that are not dragable from being selected using text selection which looks ugly
                // We use the user-select: none global css rule instead because this allows text boxes etc. to be selected and disableSelection is deprecated in jQuery
                );//.disableSelection();

                //handle enabling/disabling sorting
                if (sortable.isEnabled !== undefined) {
                    ko.computed({
                        read: function () {
                            $element.sortable(unwrap(sortable.isEnabled) ? "enable" : "disable");
                        },
                        disposeWhenNodeIsRemoved: element
                    });
                }
            }, 0);

            //handle disposal
            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {
                //only call destroy if sortable has been created
                if ($element.data("ui-sortable") || $element.data("sortable")) {
                    $element.sortable("destroy");
                }

                ko.utils.toggleDomNodeCssClass(element, sortable.connectClass, false);

                //do not create the sortable if the element has been removed from DOM
                clearTimeout(createTimeout);
            });

            return { 'controlsDescendantBindings': true };
        },
        update: function (element, valueAccessor, allBindingsAccessor, data, context) {
            var templateOptions = prepareTemplateOptions(valueAccessor, "foreach");

            //attach meta-data
            dataSet(element, LISTKEY, templateOptions.foreach);

            //call template binding's update with correct options
            ko.bindingHandlers.template.update(element, function () { return templateOptions; }, allBindingsAccessor, data, context);
        },
        connectClass: 'ko_container',
        allowDrop: true,
        afterMove: null,
        beforeMove: null,
        options: {}
    };

    //create a draggable that is appropriate for dropping into a sortable
    ko.bindingHandlers.draggable = {
        init: function (element, valueAccessor, allBindingsAccessor, data, context) {
            var value = unwrap(valueAccessor()) || {},
                options = value.options || {},
                draggableOptions = ko.utils.extend({}, ko.bindingHandlers.draggable.options),
                templateOptions = prepareTemplateOptions(valueAccessor, "data"),
                connectClass = value.connectClass || ko.bindingHandlers.draggable.connectClass,
                isEnabled = value.isEnabled !== undefined ? value.isEnabled : ko.bindingHandlers.draggable.isEnabled;

            value = "data" in value ? value.data : value;

            //set meta-data
            dataSet(element, DRAGKEY, value);

            //override global options with override options passed in
            ko.utils.extend(draggableOptions, options);

            //setup connection to a sortable
            draggableOptions.connectToSortable = connectClass ? "." + connectClass : false;

            //initialize draggable
            $(element).draggable(draggableOptions);

            //handle enabling/disabling sorting
            if (isEnabled !== undefined) {
                ko.computed({
                    read: function () {
                        $(element).draggable(unwrap(isEnabled) ? "enable" : "disable");
                    },
                    disposeWhenNodeIsRemoved: element
                });
            }

            //handle disposal
            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {
                $(element).draggable("destroy");
            });

            return ko.bindingHandlers.template.init(element, function () { return templateOptions; }, allBindingsAccessor, data, context);
        },
        update: function (element, valueAccessor, allBindingsAccessor, data, context) {

            //setup connection to a sortable
            var value = unwrap(valueAccessor()) || {};

            var connectClass = value.connectClass || ko.bindingHandlers.draggable.connectClass;
            var connectTo = connectClass ? "." + connectClass : false
            $(element).draggable("option", "connectToSortable", connectTo);

            //initialize draggable
           

            var templateOptions = prepareTemplateOptions(valueAccessor, "data");

            return ko.bindingHandlers.template.update(element, function () { return templateOptions; }, allBindingsAccessor, data, context);
        },
        connectClass: ko.bindingHandlers.sortable.connectClass,
        options: {
            helper: "clone"
        }
    };
});(function (factory) {
    // Module systems magic dance.

    if (typeof require === "function" && typeof exports === "object" && typeof module === "object") {
        // CommonJS or Node: hard-coded dependency on "knockout"
        factory(require("knockout"), exports);
    } else if (typeof define === "function" && define["amd"]) {
        // AMD anonymous module with hard-coded dependency on "knockout"
        define(["knockout", "exports"], factory);
    } else {
        // <script> tag: use the global `ko` object, attaching a `mapping` property
        factory(ko, ko.mapping = {});
    }
}(function (ko, exports) {
    var DEBUG = true;
    var mappingProperty = "__ko_mapping__";
    var realKoDependentObservable = ko.dependentObservable;
    var mappingNesting = 0;
    var dependentObservables;
    var visitedObjects;
    var recognizedRootProperties = ["create", "update", "key", "arrayChanged"];
    var emptyReturn = {};

    var _defaultOptions = {
        include: ["_destroy"],
        ignore: [],
        copy: [],
        observe: []
    };
    var defaultOptions = _defaultOptions;

    function unionArrays() {
        var args = arguments,
		l = args.length,
		obj = {},
		res = [],
		i, j, k;

        while (l--) {
            k = args[l];
            i = k.length;

            while (i--) {
                j = k[i];
                if (!obj[j]) {
                    obj[j] = 1;
                    res.push(j);
                }
            }
        }

        return res;
    }

    function extendObject(destination, source) {
        var destType;

        for (var key in source) {
            if (source.hasOwnProperty(key) && source[key]) {
                destType = exports.getType(destination[key]);
                if (key && destination[key] && destType !== "array" && destType !== "string") {
                    extendObject(destination[key], source[key]);
                } else {
                    var bothArrays = exports.getType(destination[key]) === "array" && exports.getType(source[key]) === "array";
                    if (bothArrays) {
                        destination[key] = unionArrays(destination[key], source[key]);
                    } else {
                        destination[key] = source[key];
                    }
                }
            }
        }
    }

    function merge(obj1, obj2) {
        var merged = {};
        extendObject(merged, obj1);
        extendObject(merged, obj2);

        return merged;
    }

    exports.isMapped = function (viewModel) {
        var unwrapped = ko.utils.unwrapObservable(viewModel);
        return unwrapped && unwrapped[mappingProperty];
    }

    exports.fromJS = function (jsObject /*, inputOptions, target*/) {
        if (arguments.length == 0) throw new Error("When calling ko.fromJS, pass the object you want to convert.");

        try {
            if (!mappingNesting++) {
                dependentObservables = [];
                visitedObjects = new objectLookup();
            }

            var options;
            var target;

            if (arguments.length == 2) {
                if (arguments[1][mappingProperty]) {
                    target = arguments[1];
                } else {
                    options = arguments[1];
                }
            }
            if (arguments.length == 3) {
                options = arguments[1];
                target = arguments[2];
            }

            if (target) {
                options = merge(options, target[mappingProperty]);
            }
            options = fillOptions(options);

            var result = updateViewModel(target, jsObject, options);
            if (target) {
                result = target;
            }

            // Evaluate any dependent observables that were proxied.
            // Do this after the model's observables have been created
            if (!--mappingNesting) {
                while (dependentObservables.length) {
                    var DO = dependentObservables.pop();
                    if (DO) {
                        DO();

                        // Move this magic property to the underlying dependent observable
                        DO.__DO["throttleEvaluation"] = DO["throttleEvaluation"];
                    }
                }
            }

            // Save any new mapping options in the view model, so that updateFromJS can use them later.
            result[mappingProperty] = merge(result[mappingProperty], options);

            return result;
        } catch (e) {
            mappingNesting = 0;
            throw e;
        }
    };

    exports.fromJSON = function (jsonString /*, options, target*/) {
        var parsed = ko.utils.parseJson(jsonString);
        arguments[0] = parsed;
        return exports.fromJS.apply(this, arguments);
    };

    exports.updateFromJS = function (viewModel) {
        throw new Error("ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!");
    };

    exports.updateFromJSON = function (viewModel) {
        throw new Error("ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!");
    };

    exports.toJS = function (rootObject, options) {
        if (!defaultOptions) exports.resetDefaultOptions();

        if (arguments.length == 0) throw new Error("When calling ko.mapping.toJS, pass the object you want to convert.");
        if (exports.getType(defaultOptions.ignore) !== "array") throw new Error("ko.mapping.defaultOptions().ignore should be an array.");
        if (exports.getType(defaultOptions.include) !== "array") throw new Error("ko.mapping.defaultOptions().include should be an array.");
        if (exports.getType(defaultOptions.copy) !== "array") throw new Error("ko.mapping.defaultOptions().copy should be an array.");

        // Merge in the options used in fromJS
        options = fillOptions(options, rootObject[mappingProperty]);

        // We just unwrap everything at every level in the object graph
        return exports.visitModel(rootObject, function (x) {
            return ko.utils.unwrapObservable(x)
        }, options);
    };

    exports.toJSON = function (rootObject, options) {
        var plainJavaScriptObject = exports.toJS(rootObject, options);
        return ko.utils.stringifyJson(plainJavaScriptObject);
    };

    exports.defaultOptions = function () {
        if (arguments.length > 0) {
            defaultOptions = arguments[0];
        } else {
            return defaultOptions;
        }
    };

    exports.resetDefaultOptions = function () {
        defaultOptions = {
            include: _defaultOptions.include.slice(0),
            ignore: _defaultOptions.ignore.slice(0),
            copy: _defaultOptions.copy.slice(0),
            observe: _defaultOptions.observe.slice(0)
        };
    };

    exports.getType = function (x) {
        if ((x) && (typeof (x) === "object")) {
            if (x.constructor === Date) return "date";
            if (x.constructor === Array) return "array";
        }
        return typeof x;
    }

    function fillOptions(rawOptions, otherOptions) {
        var options = merge({}, rawOptions);

        // Move recognized root-level properties into a root namespace
        for (var i = recognizedRootProperties.length - 1; i >= 0; i--) {
            var property = recognizedRootProperties[i];

            // Carry on, unless this property is present
            if (!options[property]) continue;

            // Move the property into the root namespace
            if (!(options[""] instanceof Object)) options[""] = {};
            options[""][property] = options[property];
            delete options[property];
        }

        if (otherOptions) {
            options.ignore = mergeArrays(otherOptions.ignore, options.ignore);
            options.include = mergeArrays(otherOptions.include, options.include);
            options.copy = mergeArrays(otherOptions.copy, options.copy);
            options.observe = mergeArrays(otherOptions.observe, options.observe);
        }
        options.ignore = mergeArrays(options.ignore, defaultOptions.ignore);
        options.include = mergeArrays(options.include, defaultOptions.include);
        options.copy = mergeArrays(options.copy, defaultOptions.copy);
        options.observe = mergeArrays(options.observe, defaultOptions.observe);

        options.mappedProperties = options.mappedProperties || {};
        options.copiedProperties = options.copiedProperties || {};
        return options;
    }

    function mergeArrays(a, b) {
        if (exports.getType(a) !== "array") {
            if (exports.getType(a) === "undefined") a = [];
            else a = [a];
        }
        if (exports.getType(b) !== "array") {
            if (exports.getType(b) === "undefined") b = [];
            else b = [b];
        }

        return ko.utils.arrayGetDistinctValues(a.concat(b));
    }

    // When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.
    // The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.
    function withProxyDependentObservable(dependentObservables, callback) {
        var localDO = ko.dependentObservable;
        ko.dependentObservable = function (read, owner, options) {
            options = options || {};

            if (read && typeof read == "object") { // mirrors condition in knockout implementation of DO's
                options = read;
            }

            var realDeferEvaluation = options.deferEvaluation;

            var isRemoved = false;

            // We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has
            // completed if the user already evaluated the DO themselves in the meantime.
            var wrap = function (DO) {
                // Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable
                var tmp = ko.dependentObservable;
                ko.dependentObservable = realKoDependentObservable;
                var isWriteable = ko.isWriteableObservable(DO);
                ko.dependentObservable = tmp;

                var wrapped = realKoDependentObservable({
                    read: function () {
                        if (!isRemoved) {
                            ko.utils.arrayRemoveItem(dependentObservables, DO);
                            isRemoved = true;
                        }
                        return DO.apply(DO, arguments);
                    },
                    write: isWriteable && function (val) {
                        return DO(val);
                    },
                    deferEvaluation: true
                });
                if (DEBUG) wrapped._wrapper = true;
                wrapped.__DO = DO;
                return wrapped;
            };

            options.deferEvaluation = true; // will either set for just options, or both read/options.
            var realDependentObservable = new realKoDependentObservable(read, owner, options);

            if (!realDeferEvaluation) {
                realDependentObservable = wrap(realDependentObservable);
                dependentObservables.push(realDependentObservable);
            }

            return realDependentObservable;
        }
        ko.dependentObservable.fn = realKoDependentObservable.fn;
        ko.computed = ko.dependentObservable;
        var result = callback();
        ko.dependentObservable = localDO;
        ko.computed = ko.dependentObservable;
        return result;
    }

    function updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {
        var isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === "array";

        parentPropertyName = parentPropertyName || "";

        // If this object was already mapped previously, take the options from there and merge them with our existing ones.
        if (exports.isMapped(mappedRootObject)) {
            var previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];
            options = merge(previousMapping, options);
        }

        var callbackParams = {
            data: rootObject,
            parent: mappedParent || parent
        };

        var hasCreateCallback = function () {
            return options[parentName] && options[parentName].create instanceof Function;
        };

        var createCallback = function (data) {
            return withProxyDependentObservable(dependentObservables, function () {

                if (ko.utils.unwrapObservable(parent) instanceof Array) {
                    return options[parentName].create({
                        data: data || callbackParams.data,
                        parent: callbackParams.parent,
                        skip: emptyReturn
                    });
                } else {
                    return options[parentName].create({
                        data: data || callbackParams.data,
                        parent: callbackParams.parent
                    });
                }
            });
        };

        var hasUpdateCallback = function () {
            return options[parentName] && options[parentName].update instanceof Function;
        };

        var updateCallback = function (obj, data) {
            var params = {
                data: data || callbackParams.data,
                parent: callbackParams.parent,
                target: ko.utils.unwrapObservable(obj)
            };

            if (ko.isWriteableObservable(obj)) {
                params.observable = obj;
            }

            return options[parentName].update(params);
        }

        var alreadyMapped = visitedObjects.get(rootObject);
        if (alreadyMapped) {
            return alreadyMapped;
        }

        parentName = parentName || "";

        if (!isArray) {
            // For atomic types, do a direct update on the observable
            if (!canHaveProperties(rootObject)) {
                switch (exports.getType(rootObject)) {
                    case "function":
                        if (hasUpdateCallback()) {
                            if (ko.isWriteableObservable(rootObject)) {
                                rootObject(updateCallback(rootObject));
                                mappedRootObject = rootObject;
                            } else {
                                mappedRootObject = updateCallback(rootObject);
                            }
                        } else {
                            mappedRootObject = rootObject;
                        }
                        break;
                    default:
                        if (ko.isWriteableObservable(mappedRootObject)) {
                            if (hasUpdateCallback()) {
                                var valueToWrite = updateCallback(mappedRootObject);
                                mappedRootObject(valueToWrite);
                                return valueToWrite;
                            } else {
                                var valueToWrite = ko.utils.unwrapObservable(rootObject);
                                mappedRootObject(valueToWrite);
                                return valueToWrite;
                            }
                        } else {
                            var hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();

                            if (hasCreateCallback()) {
                                mappedRootObject = createCallback();
                            } else {
                                mappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));
                            }

                            if (hasUpdateCallback()) {
                                mappedRootObject(updateCallback(mappedRootObject));
                            }

                            if (hasCreateOrUpdateCallback) return mappedRootObject;
                        }
                }

            } else {
                mappedRootObject = ko.utils.unwrapObservable(mappedRootObject);
                if (!mappedRootObject) {
                    if (hasCreateCallback()) {
                        var result = createCallback();

                        if (hasUpdateCallback()) {
                            result = updateCallback(result);
                        }

                        return result;
                    } else {
                        if (hasUpdateCallback()) {
                            return updateCallback(result);
                        }

                        mappedRootObject = {};
                    }
                }

                if (hasUpdateCallback()) {
                    mappedRootObject = updateCallback(mappedRootObject);
                }

                visitedObjects.save(rootObject, mappedRootObject);
                if (hasUpdateCallback()) return mappedRootObject;

                // For non-atomic types, visit all properties and update recursively
                visitPropertiesOrArrayEntries(rootObject, function (indexer) {
                    var fullPropertyName = parentPropertyName.length ? parentPropertyName + "." + indexer : indexer;

                    if (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {
                        return;
                    }

                    if (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {
                        mappedRootObject[indexer] = rootObject[indexer];
                        return;
                    }

                    if (typeof rootObject[indexer] != "object" && typeof rootObject[indexer] != "array" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1) {
                        mappedRootObject[indexer] = rootObject[indexer];
                        options.copiedProperties[fullPropertyName] = true;
                        return;
                    }

                    // In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.
                    // If this is a property that was generated by fromJS, we should use the options specified there
                    var prevMappedProperty = visitedObjects.get(rootObject[indexer]);
                    var retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);
                    var value = prevMappedProperty || retval;

                    if (options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1) {
                        mappedRootObject[indexer] = ko.utils.unwrapObservable(value);
                        options.copiedProperties[fullPropertyName] = true;
                        return;
                    }

                    if (ko.isWriteableObservable(mappedRootObject[indexer])) {
                        value = ko.utils.unwrapObservable(value);
                        if (mappedRootObject[indexer]() !== value) {
                            mappedRootObject[indexer](value);
                        }
                    } else {
                        value = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);
                        mappedRootObject[indexer] = value;
                    }

                    options.mappedProperties[fullPropertyName] = true;
                });
            }
        } else { //mappedRootObject is an array
            var changes = [];

            var hasKeyCallback = false;
            var keyCallback = function (x) {
                return x;
            }
            if (options[parentName] && options[parentName].key) {
                keyCallback = options[parentName].key;
                hasKeyCallback = true;
            }

            if (!ko.isObservable(mappedRootObject)) {
                // When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.
                mappedRootObject = ko.observableArray([]);

                mappedRootObject.mappedRemove = function (valueOrPredicate) {
                    var predicate = typeof valueOrPredicate == "function" ? valueOrPredicate : function (value) {
                        return value === keyCallback(valueOrPredicate);
                    };
                    return mappedRootObject.remove(function (item) {
                        return predicate(keyCallback(item));
                    });
                }

                mappedRootObject.mappedRemoveAll = function (arrayOfValues) {
                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);
                    return mappedRootObject.remove(function (item) {
                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;
                    });
                }

                mappedRootObject.mappedDestroy = function (valueOrPredicate) {
                    var predicate = typeof valueOrPredicate == "function" ? valueOrPredicate : function (value) {
                        return value === keyCallback(valueOrPredicate);
                    };
                    return mappedRootObject.destroy(function (item) {
                        return predicate(keyCallback(item));
                    });
                }

                mappedRootObject.mappedDestroyAll = function (arrayOfValues) {
                    var arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);
                    return mappedRootObject.destroy(function (item) {
                        return ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;
                    });
                }

                mappedRootObject.mappedIndexOf = function (item) {
                    var keys = filterArrayByKey(mappedRootObject(), keyCallback);
                    var key = keyCallback(item);
                    return ko.utils.arrayIndexOf(keys, key);
                }

                mappedRootObject.mappedGet = function (item) {
                    return mappedRootObject()[mappedRootObject.mappedIndexOf(item)];
                }

                mappedRootObject.mappedCreate = function (value) {
                    if (mappedRootObject.mappedIndexOf(value) !== -1) {
                        throw new Error("There already is an object with the key that you specified.");
                    }

                    var item = hasCreateCallback() ? createCallback(value) : value;
                    if (hasUpdateCallback()) {
                        var newValue = updateCallback(item, value);
                        if (ko.isWriteableObservable(item)) {
                            item(newValue);
                        } else {
                            item = newValue;
                        }
                    }
                    mappedRootObject.push(item);
                    return item;
                }
            }

            var currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();
            var newArrayKeys = filterArrayByKey(rootObject, keyCallback);
            if (hasKeyCallback) newArrayKeys.sort();
            var editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);

            var ignoreIndexOf = {};

            var i, j;

            var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);
            var itemsByKey = {};
            var optimizedKeys = true;
            for (i = 0, j = unwrappedRootObject.length; i < j; i++) {
                var key = keyCallback(unwrappedRootObject[i]);
                if (key === undefined || key instanceof Object) {
                    optimizedKeys = false;
                    break;
                }
                itemsByKey[key] = unwrappedRootObject[i];
            }

            var newContents = [];
            var passedOver = 0;
            for (i = 0, j = editScript.length; i < j; i++) {
                var key = editScript[i];
                var mappedItem;
                var fullPropertyName = parentPropertyName + "[" + i + "]";
                switch (key.status) {
                    case "added":
                        var item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);
                        mappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);
                        if (!hasCreateCallback()) {
                            mappedItem = ko.utils.unwrapObservable(mappedItem);
                        }

                        var index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);

                        if (mappedItem === emptyReturn) {
                            passedOver++;
                        } else {
                            newContents[index - passedOver] = mappedItem;
                        }

                        ignoreIndexOf[index] = true;
                        break;
                    case "retained":
                        var item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);
                        mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);
                        updateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);

                        var index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);
                        newContents[index] = mappedItem;
                        ignoreIndexOf[index] = true;
                        break;
                    case "deleted":
                        mappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);
                        break;
                }

                changes.push({
                    event: key.status,
                    item: mappedItem
                });
            }

            mappedRootObject(newContents);

            if (options[parentName] && options[parentName].arrayChanged) {
                ko.utils.arrayForEach(changes, function (change) {
                    options[parentName].arrayChanged(change.event, change.item);
                });
            }
        }

        return mappedRootObject;
    }

    function ignorableIndexOf(array, item, ignoreIndices) {
        for (var i = 0, j = array.length; i < j; i++) {
            if (ignoreIndices[i] === true) continue;
            if (array[i] === item) return i;
        }
        return null;
    }

    function mapKey(item, callback) {
        var mappedItem;
        if (callback) mappedItem = callback(item);
        if (exports.getType(mappedItem) === "undefined") mappedItem = item;

        return ko.utils.unwrapObservable(mappedItem);
    }

    function getItemByKey(array, key, callback) {
        array = ko.utils.unwrapObservable(array);
        for (var i = 0, j = array.length; i < j; i++) {
            var item = array[i];
            if (mapKey(item, callback) === key) return item;
        }

        throw new Error("When calling ko.update*, the key '" + key + "' was not found!");
    }

    function filterArrayByKey(array, callback) {
        return ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {
            if (callback) {
                return mapKey(item, callback);
            } else {
                return item;
            }
        });
    }

    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {
        if (exports.getType(rootObject) === "array") {
            for (var i = 0; i < rootObject.length; i++)
                visitorCallback(i);
        } else {
            for (var propertyName in rootObject)
                visitorCallback(propertyName);
        }
    };

    function canHaveProperties(object) {
        var type = exports.getType(object);
        return ((type === "object") || (type === "array")) && (object !== null);
    }

    // Based on the parentName, this creates a fully classified name of a property

    function getPropertyName(parentName, parent, indexer) {
        var propertyName = parentName || "";
        if (exports.getType(parent) === "array") {
            if (parentName) {
                propertyName += "[" + indexer + "]";
            }
        } else {
            if (parentName) {
                propertyName += ".";
            }
            propertyName += indexer;
        }
        return propertyName;
    }

    exports.visitModel = function (rootObject, callback, options) {
        options = options || {};
        options.visitedObjects = options.visitedObjects || new objectLookup();

        var mappedRootObject;
        var unwrappedRootObject = ko.utils.unwrapObservable(rootObject);

        if (!canHaveProperties(unwrappedRootObject)) {
            return callback(rootObject, options.parentName);
        } else {
            options = fillOptions(options, unwrappedRootObject[mappingProperty]);

            // Only do a callback, but ignore the results
            callback(rootObject, options.parentName);
            mappedRootObject = exports.getType(unwrappedRootObject) === "array" ? [] : {};
        }

        options.visitedObjects.save(rootObject, mappedRootObject);

        var parentName = options.parentName;
        visitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {
            if (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;

            var propertyValue = unwrappedRootObject[indexer];
            options.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);

            // If we don't want to explicitly copy the unmapped property...
            if (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {
                // ...find out if it's a property we want to explicitly include
                if (ko.utils.arrayIndexOf(options.include, indexer) === -1) {
                    // The mapped properties object contains all the properties that were part of the original object.
                    // If a property does not exist, and it is not because it is part of an array (e.g. "myProp[3]"), then it should not be unmapped.
                    if (unwrappedRootObject[mappingProperty]
				        && unwrappedRootObject[mappingProperty].mappedProperties && !unwrappedRootObject[mappingProperty].mappedProperties[indexer]
				        && unwrappedRootObject[mappingProperty].copiedProperties && !unwrappedRootObject[mappingProperty].copiedProperties[indexer]
				        && !(exports.getType(unwrappedRootObject) === "array")) {
                        return;
                    }
                }
            }

            var outputProperty;
            switch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {
                case "object":
                case "array":
                case "undefined":
                    var previouslyMappedValue = options.visitedObjects.get(propertyValue);
                    mappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== "undefined") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);
                    break;
                default:
                    mappedRootObject[indexer] = callback(propertyValue, options.parentName);
            }
        });

        return mappedRootObject;
    }

    function simpleObjectLookup() {
        var keys = [];
        var values = [];
        this.save = function (key, value) {
            var existingIndex = ko.utils.arrayIndexOf(keys, key);
            if (existingIndex >= 0) values[existingIndex] = value;
            else {
                keys.push(key);
                values.push(value);
            }
        };
        this.get = function (key) {
            var existingIndex = ko.utils.arrayIndexOf(keys, key);
            var value = (existingIndex >= 0) ? values[existingIndex] : undefined;
            return value;
        };
    };

    function objectLookup() {
        var buckets = {};

        var findBucket = function (key) {
            var bucketKey;
            try {
                bucketKey = key;//JSON.stringify(key);
            }
            catch (e) {
                bucketKey = "$$$";
            }

            var bucket = buckets[bucketKey];
            if (bucket === undefined) {
                bucket = new simpleObjectLookup();
                buckets[bucketKey] = bucket;
            }
            return bucket;
        };

        this.save = function (key, value) {
            findBucket(key).save(key, value);
        };
        this.get = function (key) {
            return findBucket(key).get(key);
        };
    };
}));/*! highlight.js v9.9.0 | BSD3 License | git.io/hljslicense */
!function (e) { var n = "object" == typeof window && window || "object" == typeof self && self; "undefined" != typeof exports ? e(exports) : n && (n.hljs = e({}), "function" == typeof define && define.amd && define([], function () { return n.hljs })) }(function (e) { function n(e) { return e.replace(/[&<>]/gm, function (e) { return I[e] }) } function t(e) { return e.nodeName.toLowerCase() } function r(e, n) { var t = e && e.exec(n); return t && 0 === t.index } function i(e) { return k.test(e) } function a(e) { var n, t, r, a, o = e.className + " "; if (o += e.parentNode ? e.parentNode.className : "", t = B.exec(o)) return R(t[1]) ? t[1] : "no-highlight"; for (o = o.split(/\s+/), n = 0, r = o.length; r > n; n++) if (a = o[n], i(a) || R(a)) return a } function o(e, n) { var t, r = {}; for (t in e) r[t] = e[t]; if (n) for (t in n) r[t] = n[t]; return r } function u(e) { var n = []; return function r(e, i) { for (var a = e.firstChild; a; a = a.nextSibling) 3 === a.nodeType ? i += a.nodeValue.length : 1 === a.nodeType && (n.push({ event: "start", offset: i, node: a }), i = r(a, i), t(a).match(/br|hr|img|input/) || n.push({ event: "stop", offset: i, node: a })); return i }(e, 0), n } function c(e, r, i) { function a() { return e.length && r.length ? e[0].offset !== r[0].offset ? e[0].offset < r[0].offset ? e : r : "start" === r[0].event ? e : r : e.length ? e : r } function o(e) { function r(e) { return " " + e.nodeName + '="' + n(e.value) + '"' } l += "<" + t(e) + w.map.call(e.attributes, r).join("") + ">" } function u(e) { l += "</" + t(e) + ">" } function c(e) { ("start" === e.event ? o : u)(e.node) } for (var s = 0, l = "", f = []; e.length || r.length;) { var g = a(); if (l += n(i.substring(s, g[0].offset)), s = g[0].offset, g === e) { f.reverse().forEach(u); do c(g.splice(0, 1)[0]), g = a(); while (g === e && g.length && g[0].offset === s); f.reverse().forEach(o) } else "start" === g[0].event ? f.push(g[0].node) : f.pop(), c(g.splice(0, 1)[0]) } return l + n(i.substr(s)) } function s(e) { function n(e) { return e && e.source || e } function t(t, r) { return new RegExp(n(t), "m" + (e.cI ? "i" : "") + (r ? "g" : "")) } function r(i, a) { if (!i.compiled) { if (i.compiled = !0, i.k = i.k || i.bK, i.k) { var u = {}, c = function (n, t) { e.cI && (t = t.toLowerCase()), t.split(" ").forEach(function (e) { var t = e.split("|"); u[t[0]] = [n, t[1] ? Number(t[1]) : 1] }) }; "string" == typeof i.k ? c("keyword", i.k) : E(i.k).forEach(function (e) { c(e, i.k[e]) }), i.k = u } i.lR = t(i.l || /\w+/, !0), a && (i.bK && (i.b = "\\b(" + i.bK.split(" ").join("|") + ")\\b"), i.b || (i.b = /\B|\b/), i.bR = t(i.b), i.e || i.eW || (i.e = /\B|\b/), i.e && (i.eR = t(i.e)), i.tE = n(i.e) || "", i.eW && a.tE && (i.tE += (i.e ? "|" : "") + a.tE)), i.i && (i.iR = t(i.i)), null == i.r && (i.r = 1), i.c || (i.c = []); var s = []; i.c.forEach(function (e) { e.v ? e.v.forEach(function (n) { s.push(o(e, n)) }) : s.push("self" === e ? i : e) }), i.c = s, i.c.forEach(function (e) { r(e, i) }), i.starts && r(i.starts, a); var l = i.c.map(function (e) { return e.bK ? "\\.?(" + e.b + ")\\.?" : e.b }).concat([i.tE, i.i]).map(n).filter(Boolean); i.t = l.length ? t(l.join("|"), !0) : { exec: function () { return null } } } } r(e) } function l(e, t, i, a) { function o(e, n) { var t, i; for (t = 0, i = n.c.length; i > t; t++) if (r(n.c[t].bR, e)) return n.c[t] } function u(e, n) { if (r(e.eR, n)) { for (; e.endsParent && e.parent;) e = e.parent; return e } return e.eW ? u(e.parent, n) : void 0 } function c(e, n) { return !i && r(n.iR, e) } function g(e, n) { var t = N.cI ? n[0].toLowerCase() : n[0]; return e.k.hasOwnProperty(t) && e.k[t] } function h(e, n, t, r) { var i = r ? "" : y.classPrefix, a = '<span class="' + i, o = t ? "" : C; return a += e + '">', a + n + o } function p() { var e, t, r, i; if (!E.k) return n(B); for (i = "", t = 0, E.lR.lastIndex = 0, r = E.lR.exec(B) ; r;) i += n(B.substring(t, r.index)), e = g(E, r), e ? (M += e[1], i += h(e[0], n(r[0]))) : i += n(r[0]), t = E.lR.lastIndex, r = E.lR.exec(B); return i + n(B.substr(t)) } function d() { var e = "string" == typeof E.sL; if (e && !x[E.sL]) return n(B); var t = e ? l(E.sL, B, !0, L[E.sL]) : f(B, E.sL.length ? E.sL : void 0); return E.r > 0 && (M += t.r), e && (L[E.sL] = t.top), h(t.language, t.value, !1, !0) } function b() { k += null != E.sL ? d() : p(), B = "" } function v(e) { k += e.cN ? h(e.cN, "", !0) : "", E = Object.create(e, { parent: { value: E } }) } function m(e, n) { if (B += e, null == n) return b(), 0; var t = o(n, E); if (t) return t.skip ? B += n : (t.eB && (B += n), b(), t.rB || t.eB || (B = n)), v(t, n), t.rB ? 0 : n.length; var r = u(E, n); if (r) { var i = E; i.skip ? B += n : (i.rE || i.eE || (B += n), b(), i.eE && (B = n)); do E.cN && (k += C), E.skip || (M += E.r), E = E.parent; while (E !== r.parent); return r.starts && v(r.starts, ""), i.rE ? 0 : n.length } if (c(n, E)) throw new Error('Illegal lexeme "' + n + '" for mode "' + (E.cN || "<unnamed>") + '"'); return B += n, n.length || 1 } var N = R(e); if (!N) throw new Error('Unknown language: "' + e + '"'); s(N); var w, E = a || N, L = {}, k = ""; for (w = E; w !== N; w = w.parent) w.cN && (k = h(w.cN, "", !0) + k); var B = "", M = 0; try { for (var I, j, O = 0; ;) { if (E.t.lastIndex = O, I = E.t.exec(t), !I) break; j = m(t.substring(O, I.index), I[0]), O = I.index + j } for (m(t.substr(O)), w = E; w.parent; w = w.parent) w.cN && (k += C); return { r: M, value: k, language: e, top: E } } catch (T) { if (T.message && -1 !== T.message.indexOf("Illegal")) return { r: 0, value: n(t) }; throw T } } function f(e, t) { t = t || y.languages || E(x); var r = { r: 0, value: n(e) }, i = r; return t.filter(R).forEach(function (n) { var t = l(n, e, !1); t.language = n, t.r > i.r && (i = t), t.r > r.r && (i = r, r = t) }), i.language && (r.second_best = i), r } function g(e) { return y.tabReplace || y.useBR ? e.replace(M, function (e, n) { return y.useBR && "\n" === e ? "<br>" : y.tabReplace ? n.replace(/\t/g, y.tabReplace) : void 0 }) : e } function h(e, n, t) { var r = n ? L[n] : t, i = [e.trim()]; return e.match(/\bhljs\b/) || i.push("hljs"), -1 === e.indexOf(r) && i.push(r), i.join(" ").trim() } function p(e) { var n, t, r, o, s, p = a(e); i(p) || (y.useBR ? (n = document.createElementNS("http://www.w3.org/1999/xhtml", "div"), n.innerHTML = e.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n")) : n = e, s = n.textContent, r = p ? l(p, s, !0) : f(s), t = u(n), t.length && (o = document.createElementNS("http://www.w3.org/1999/xhtml", "div"), o.innerHTML = r.value, r.value = c(t, u(o), s)), r.value = g(r.value), e.innerHTML = r.value, e.className = h(e.className, p, r.language), e.result = { language: r.language, re: r.r }, r.second_best && (e.second_best = { language: r.second_best.language, re: r.second_best.r })) } function d(e) { y = o(y, e) } function b() { if (!b.called) { b.called = !0; var e = document.querySelectorAll("pre code"); w.forEach.call(e, p) } } function v() { addEventListener("DOMContentLoaded", b, !1), addEventListener("load", b, !1) } function m(n, t) { var r = x[n] = t(e); r.aliases && r.aliases.forEach(function (e) { L[e] = n }) } function N() { return E(x) } function R(e) { return e = (e || "").toLowerCase(), x[e] || x[L[e]] } var w = [], E = Object.keys, x = {}, L = {}, k = /^(no-?highlight|plain|text)$/i, B = /\blang(?:uage)?-([\w-]+)\b/i, M = /((^(<[^>]+>|\t|)+|(?:\n)))/gm, C = "</span>", y = { classPrefix: "hljs-", tabReplace: null, useBR: !1, languages: void 0 }, I = { "&": "&amp;", "<": "&lt;", ">": "&gt;" }; return e.highlight = l, e.highlightAuto = f, e.fixMarkup = g, e.highlightBlock = p, e.configure = d, e.initHighlighting = b, e.initHighlightingOnLoad = v, e.registerLanguage = m, e.listLanguages = N, e.getLanguage = R, e.inherit = o, e.IR = "[a-zA-Z]\\w*", e.UIR = "[a-zA-Z_]\\w*", e.NR = "\\b\\d+(\\.\\d+)?", e.CNR = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", e.BNR = "\\b(0b[01]+)", e.RSR = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", e.BE = { b: "\\\\[\\s\\S]", r: 0 }, e.ASM = { cN: "string", b: "'", e: "'", i: "\\n", c: [e.BE] }, e.QSM = { cN: "string", b: '"', e: '"', i: "\\n", c: [e.BE] }, e.PWM = { b: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\b/ }, e.C = function (n, t, r) { var i = e.inherit({ cN: "comment", b: n, e: t, c: [] }, r || {}); return i.c.push(e.PWM), i.c.push({ cN: "doctag", b: "(?:TODO|FIXME|NOTE|BUG|XXX):", r: 0 }), i }, e.CLCM = e.C("//", "$"), e.CBCM = e.C("/\\*", "\\*/"), e.HCM = e.C("#", "$"), e.NM = { cN: "number", b: e.NR, r: 0 }, e.CNM = { cN: "number", b: e.CNR, r: 0 }, e.BNM = { cN: "number", b: e.BNR, r: 0 }, e.CSSNM = { cN: "number", b: e.NR + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?", r: 0 }, e.RM = { cN: "regexp", b: /\//, e: /\/[gimuy]*/, i: /\n/, c: [e.BE, { b: /\[/, e: /\]/, r: 0, c: [e.BE] }] }, e.TM = { cN: "title", b: e.IR, r: 0 }, e.UTM = { cN: "title", b: e.UIR, r: 0 }, e.METHOD_GUARD = { b: "\\.\\s*" + e.UIR, r: 0 }, e }); hljs.registerLanguage("xml", function (s) { var e = "[A-Za-z0-9\\._:-]+", t = { eW: !0, i: /</, r: 0, c: [{ cN: "attr", b: e, r: 0 }, { b: /=\s*/, r: 0, c: [{ cN: "string", endsParent: !0, v: [{ b: /"/, e: /"/ }, { b: /'/, e: /'/ }, { b: /[^\s"'=<>`]+/ }] }] }] }; return { aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist"], cI: !0, c: [{ cN: "meta", b: "<!DOCTYPE", e: ">", r: 10, c: [{ b: "\\[", e: "\\]" }] }, s.C("<!--", "-->", { r: 10 }), { b: "<\\!\\[CDATA\\[", e: "\\]\\]>", r: 10 }, { b: /<\?(php)?/, e: /\?>/, sL: "php", c: [{ b: "/\\*", e: "\\*/", skip: !0 }] }, { cN: "tag", b: "<style(?=\\s|>|$)", e: ">", k: { name: "style" }, c: [t], starts: { e: "</style>", rE: !0, sL: ["css", "xml"] } }, { cN: "tag", b: "<script(?=\\s|>|$)", e: ">", k: { name: "script" }, c: [t], starts: { e: "</script>", rE: !0, sL: ["actionscript", "javascript", "handlebars", "xml"] } }, { cN: "meta", v: [{ b: /<\?xml/, e: /\?>/, r: 10 }, { b: /<\?\w+/, e: /\?>/ }] }, { cN: "tag", b: "</?", e: "/?>", c: [{ cN: "name", b: /[^\/><\s]+/, r: 0 }, t] }] } }); hljs.registerLanguage("json", function (e) { var i = { literal: "true false null" }, n = [e.QSM, e.CNM], r = { e: ",", eW: !0, eE: !0, c: n, k: i }, t = { b: "{", e: "}", c: [{ cN: "attr", b: /"/, e: /"/, c: [e.BE], i: "\\n" }, e.inherit(r, { b: /:/ })], i: "\\S" }, c = { b: "\\[", e: "\\]", c: [e.inherit(r)], i: "\\S" }; return n.splice(n.length, 0, t, c), { c: n, k: i, i: "\\S" } }); hljs.registerLanguage("javascript", function (e) { var r = "[A-Za-z$_][0-9A-Za-z$_]*", t = { keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as", literal: "true false null undefined NaN Infinity", built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise" }, a = { cN: "number", v: [{ b: "\\b(0[bB][01]+)" }, { b: "\\b(0[oO][0-7]+)" }, { b: e.CNR }], r: 0 }, n = { cN: "subst", b: "\\$\\{", e: "\\}", k: t, c: [] }, c = { cN: "string", b: "`", e: "`", c: [e.BE, n] }; n.c = [e.ASM, e.QSM, c, a, e.RM]; var s = n.c.concat([e.CBCM, e.CLCM]); return { aliases: ["js", "jsx"], k: t, c: [{ cN: "meta", r: 10, b: /^\s*['"]use (strict|asm)['"]/ }, { cN: "meta", b: /^#!/, e: /$/ }, e.ASM, e.QSM, c, e.CLCM, e.CBCM, a, { b: /[{,]\s*/, r: 0, c: [{ b: r + "\\s*:", rB: !0, r: 0, c: [{ cN: "attr", b: r, r: 0 }] }] }, { b: "(" + e.RSR + "|\\b(case|return|throw)\\b)\\s*", k: "return throw case", c: [e.CLCM, e.CBCM, e.RM, { cN: "function", b: "(\\(.*?\\)|" + r + ")\\s*=>", rB: !0, e: "\\s*=>", c: [{ cN: "params", v: [{ b: r }, { b: /\(\s*\)/ }, { b: /\(/, e: /\)/, eB: !0, eE: !0, k: t, c: s }] }] }, { b: /</, e: /(\/\w+|\w+\/)>/, sL: "xml", c: [{ b: /<\w+\s*\/>/, skip: !0 }, { b: /<\w+/, e: /(\/\w+|\w+\/)>/, skip: !0, c: [{ b: /<\w+\s*\/>/, skip: !0 }, "self"] }] }], r: 0 }, { cN: "function", bK: "function", e: /\{/, eE: !0, c: [e.inherit(e.TM, { b: r }), { cN: "params", b: /\(/, e: /\)/, eB: !0, eE: !0, c: s }], i: /\[|%/ }, { b: /\$[(.]/ }, e.METHOD_GUARD, { cN: "class", bK: "class", e: /[{;=]/, eE: !0, i: /[:"\[\]]/, c: [{ bK: "extends" }, e.UTM] }, { bK: "constructor", e: /\{/, eE: !0 }], i: /#(?!!)/ } });(function($){
Type.registerNamespace('Xrm');Xrm.PageBridge=function(){}
Xrm.PageContextBridge=function(){}
Xrm.PageContextBridge.prototype={getClientUrl:function(){return window.SERVER_URL;},getUserId:function(){return window.USER_GUID;}}
Xrm.OrganizationServiceProxyBridge=function(){}
Xrm.OrganizationServiceProxyBridge.$0=function($p0){var $0={};var $1='';var $2='';var $3='';if($p0!=null&&$p0.startsWith('Exception:')){var $4=$p0.substr(10).split('&');var $enum1=ss.IEnumerator.getEnumerator($4);while($enum1.moveNext()){var $6=$enum1.current;var $7=$6.split('=');var $8=decodeURIComponent($7[1].replaceAll('+',' '));switch($7[0]){case 'ErrorTrace':$2=$8;break;case 'ErrorCode':$3=$8;break;case 'ErrorMessage':$1=$8;break;}}$0['Trace']=$2;$0['ErrorCode']=$3;var $5=Error.createError($1,$0);return $5;}else{return null;}}
Type.registerNamespace('SparkleXrm.CustomBinding');SparkleXrm.CustomBinding.TextLookupBinding=function(){SparkleXrm.CustomBinding.TextLookupBinding.initializeBase(this);}
SparkleXrm.CustomBinding.TextLookupBinding.$1_0=function($p0,$p1,$p2,$p3){if($p0!=null){var $0=[];var $1=true;var $enum1=ss.IEnumerator.getEnumerator($p0);while($enum1.moveNext()){var $2=$enum1.current;if($1){$1=false;continue;}var $3='';var $4=$p1.get_entities().get_item($p3);if(Object.keyExists($4.formattedValues,$2+'name')){$3=$4.formattedValues[$2+'name'];}else{var $5=$4.getAttributeValue($2);if($5!=null){switch(Type.getInstanceType($5).get_name()){case 'EntityReference':$3=($5).name;break;default:$3=$5.toString();break;}}}if($3!=null&&$3.length>0){$0.add($3);}}$p2[$p3].columnValues=$0;}}
SparkleXrm.CustomBinding.TextLookupBinding.$1_1=function($p0,$p1,$p2){var $0=$p0();var $1=true;$0($p2);if((typeof($0.isValid))!=='undefined'){$1=!!($0).isValid();}if($1){$p1.blur();$p1.focus();}}
SparkleXrm.CustomBinding.TextLookupBinding.prototype={init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=$(element);var $1=$0.find('.sparkle-input-lookup-part');var $2=$0.find('.sparkle-input-lookup-button-part');var $3={};$3.minLength=500;$3.delay=0;$3.position={collision:'fit'};var $4=false;$3.select=function($p1_0,$p1_1){
var $1_0=$p1_1.item;var $1_1=$1_0.value.toString();$1.val($1_1);$4=true;SparkleXrm.CustomBinding.TextLookupBinding.$1_1(valueAccessor,$1,$1_1);return false;;};var $5=(allBindingsAccessor()['queryCommand']);var $6=(allBindingsAccessor()['nameAttribute']);var $7=(allBindingsAccessor()['idAttribute']);var $8=(allBindingsAccessor()['typeCodeAttribute']);var $9=null;var $A=$6.split(',');if($A.length>1){$9=$A;$6=$9[0];}var $B=function($p1_0,$p1_1){
var $1_0=function($p2_0){
var $2_0=new Array($p2_0.get_entities().get_count());for(var $2_2=0;$2_2<$p2_0.get_entities().get_count();$2_2++){$2_0[$2_2]={};$2_0[$2_2].label=$p2_0.get_entities().get_item($2_2).getAttributeValue($6);$2_0[$2_2].value=$p2_0.get_entities().get_item($2_2).getAttributeValue($7);$2_0[$2_2].data=$p2_0.get_entities().get_item($2_2).logicalName;SparkleXrm.CustomBinding.TextLookupBinding.$1_0($9,$p2_0,$2_0,$2_2);var $2_3=$p2_0.get_entities().get_item($2_2).logicalName;if(!String.isNullOrEmpty($8)){$2_3=$p2_0.get_entities().get_item($2_2).getAttributeValue($8).toString();}$2_0[$2_2].image=Xrm.Sdk.Metadata.MetadataCache.getSmallIconUrl($2_3);}$p1_1($2_0);var $2_1={};$2_1.minLength=100000;$1.autocomplete($2_1);};$5.call(context.$parent,$p1_0.term,$1_0);};$3.source=$B;$3.focus=function($p1_0,$p1_1){
return false;;};$1=$1.autocomplete($3);($1.data('ui-autocomplete'))._renderItem=function($p1_0,$p1_1){
var $1_0="<a class='sparkle-menu-item'><span class='sparkle-menu-item-img'><img src='"+$p1_1.image+"'/></span><span class='sparkle-menu-item-label'>"+$p1_1.label+'</span><br>';if($p1_1.columnValues!=null&&$p1_1.columnValues.length>0){var $enum1=ss.IEnumerator.getEnumerator($p1_1.columnValues);while($enum1.moveNext()){var $1_1=$enum1.current;$1_0+="<span class='sparkle-menu-item-moreinfo'>"+$1_1+'</span>';}}$1_0+='</a>';return $('<li>').append($1_0).appendTo($p1_0);};$2.click(function($p1_0){
var $1_0={};$1_0.minLength=0;$1.focus();$1.autocomplete($1_0);$1.autocomplete('search');});$1.change(function($p1_0){
SparkleXrm.CustomBinding.TextLookupBinding.$1_1(valueAccessor,$1,$1.val());});var $C=function(){
if($($1).data('ui-autocomplete')!=undefined){$($1).autocomplete("destroy");}};ko.utils.domNodeDisposal.addDisposeCallback(element, $C);ko.bindingHandlers['validationCore'].init(element,valueAccessor,allBindingsAccessor,null,null);$1.keydown(function($p1_0){
if($p1_0.which===13&&!$4){$2.click();}else if($p1_0.which===13){return;}switch($p1_0.which){case 13:case 38:case 40:$p1_0.preventDefault();$p1_0.stopPropagation();break;}$4=false;});},update:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=$(element);var $1=$0.find('.sparkle-input-lookup-part');var $2=ko.utils.unwrapObservable(valueAccessor());var $3='';if($2!=null){$3=$2;}$1.val($3);}}
Type.registerNamespace('ClientUI');ClientUI.ErrorCodes=function(){}
ClientUI.Bootstrapper=function(){}
ClientUI.Bootstrapper.initializeIoc=function(){Xrm.PageEx.majorVersion=2013;SparkleXrm.ViewBase.sparkleXrmTemplatePath='templates.htm';ClientUI.ViewModel.ServiceLocator.instance.register('IDialogService',new ClientUI.ViewModel.DialogService());ClientUI.ViewModel.ServiceLocator.instance.register('dialog-select-solution',new ClientUI.View.LoadSolutionView());}
Type.registerNamespace('ClientUI.Library');ClientUI.Library.AppLocalStorage=function(){this.$0=typeof(window.localStorage)!=='undefined';}
ClientUI.Library.AppLocalStorage.prototype={$0:false,setItem:function(key,value){if(this.$0){window.localStorage.setItem(key,value);}},getItem:function(key){if(this.$0){return window.localStorage.getItem(key);}else{return null;}}}
ClientUI.Library.SyntaxHighlightBinding=function(){ClientUI.Library.SyntaxHighlightBinding.initializeBase(this);}
ClientUI.Library.SyntaxHighlightBinding.prototype={init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){hljs.configure();},update:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=ko.utils.unwrapObservable(valueAccessor());var $1='xml';if(Object.keyExists(allBindingsAccessor(),'highlight-lang')){$1=allBindingsAccessor()['highlight-lang'];}if($0!=null){var $2=hljs.highlight($1,$0);var $3=$(element);$3.html($2.value);}}}
ClientUI.Library.Version=function(versionString){this.versionString=versionString;this._parts=this.versionString.split('.');}
ClientUI.Library.Version.prototype={versionString:null,_parts:null,isGreaterThan:function(version){for(var $0=0;$0<this._parts.length||$0<version._parts.length;$0++){var $1=parseInt(this._parts[$0]);var $2=parseInt(version._parts[$0]);if($1>$2){return true;}}return false;}}
ClientUI.Library.ContextMenuVM=function(){}
ClientUI.Library.ContextMenuVM.prototype={items:null}
ClientUI.Library.ContextMenuItemVM=function(Id,Name){this.id=Id;this.name=Name;}
ClientUI.Library.ContextMenuItemVM.newItem=function(Id,Name,disabled){var $0=new ClientUI.Library.ContextMenuItemVM(Id,Name);$0.disabled=disabled;return $0;}
ClientUI.Library.ContextMenuItemVM.prototype={name:null,id:null,disabled:false}
ClientUI.Library.ContextMenuBinding=function(){ClientUI.Library.ContextMenuBinding.initializeBase(this);}
ClientUI.Library.ContextMenuBinding.prototype={init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=valueAccessor();var $1=($0['populate']);var $2=($0['select']);var $3=$0['controller'];var $4=($0['trigger']);var $5=$0['data'];var $6={};$6.selector='*';$6.trigger=$4;$6.zIndex=100;$6.build=function($p1_0,$p1_1){
var $1_0=$3[$1]($5);if($1_0==null||$1_0.items==null||!$1_0.items.length){return null;}var $1_1={};$1_1.callback=function($p2_0,$p2_1){
$3[$2]($5,$p2_0);};$1_1.items={};var $enum1=ss.IEnumerator.getEnumerator($1_0.items);while($enum1.moveNext()){var $1_2=$enum1.current;var $1_3={};$1_3.name=$1_2.name;$1_3.disabled=$1_2.disabled;$1_1.items[$1_2.id]=$1_3;}return $1_1;};$(element).contextMenu($6);}}
ClientUI.Library.ExpandableItemBinding=function(){ClientUI.Library.ExpandableItemBinding.initializeBase(this);}
ClientUI.Library.ExpandableItemBinding.$1_0=function($p0,$p1,$p2){var $0=$p0[$p2];var $1=$0();if($1){$p1.attr('class','expandbutton image-collapsearrow');}else{$p1.attr('class','expandbutton image-expandarrow');}}
ClientUI.Library.ExpandableItemBinding.Toggle=function(data){}
ClientUI.Library.ExpandableItemBinding.prototype={init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0='_expanded';var $1=$("<span class='expandbutton'></span>");var $2=$(element);$2.addClass('expandable');$2.append($1);var $3=valueAccessor();var $4=$3['item'];if(Object.keyExists($3,'stateAttribute')){$0=$3['stateAttribute'];}if($4[$0]==null){$4[$0]=ko.observable(true);}var $5=function(){
};var $6=function($p1_0){
var $1_0=$4[$0];var $1_1=!$1_0();$1_0($1_1);if($1_1){if(Object.keyExists($3,'accordianItems')){var $1_2=ko.utils.unwrapObservable($3['accordianItems']);var $enum1=ss.IEnumerator.getEnumerator($1_2);while($enum1.moveNext()){var $1_3=$enum1.current;if($1_3!==$4){var $1_4=$1_3[$0];$1_4(false);}}}}};$2.click($6);ClientUI.Library.ExpandableItemBinding.$1_0($4,$1,$0);ko.utils.domNodeDisposal.addDisposeCallback(element, $5);},update:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0='_expanded';var $1=valueAccessor();var $2=$1['item'];if(Object.keyExists($1,'stateAttribute')){$0=$1['stateAttribute'];}var $3=$(element);ClientUI.Library.ExpandableItemBinding.$1_0($2,$3.find('.expandbutton').first(),$0);}}
ClientUI.Library.PositionBinding=function(){ClientUI.Library.PositionBinding.initializeBase(this);}
ClientUI.Library.PositionBinding.prototype={$1_0:null,init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=valueAccessor();this.$1_0=($0['target']);var $1=($0['within']);var $2=$(this.$1_0);if($2.length===1){var $3={};$3.of=$2;$3.my='left center';$3.collision='flipfit flipfit';$3.at='right center';if($1!=null){var $4=$3;$4['within']=$1;}$(element).position($3);}else if($2.length>1){throw new Error('More than one element found '+this.$1_0);}},update:function(element,valueAccessor,allBindingsAccessor,viewModel,context){}}
ClientUI.Library.ScrollIntoView=function(){ClientUI.Library.ScrollIntoView.initializeBase(this);}
ClientUI.Library.ScrollIntoView.prototype={init:function(element,valueAccessor,allBindingsAccessor,viewModel,context){},update:function(element,valueAccessor,allBindingsAccessor,viewModel,context){var $0=ko.utils.unwrapObservable(valueAccessor());if($0==null){return;}var $1=$('div#'+GetControlId($0));if($1.length>0){$1[0].scrollIntoView();$1.effect('highlight',2000);}}}
Type.registerNamespace('ClientUI.Messages');ClientUI.Messages.PublishAllXmlRequest=function(){}
ClientUI.Messages.PublishAllXmlRequest.prototype={serialise:function(){return '<request xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">'+'        <a:RequestId i:nil="true" />'+'        <a:RequestName>PublishAllXml</a:RequestName>'+'      </request>';}}
ClientUI.Messages.PublishAllXmlResponse=function(response){}
ClientUI.Messages.RetrieveVersionResponse=function(response){var $0=Xrm.Sdk.XmlHelper.selectSingleNode(response,'Results');var $enum1=ss.IEnumerator.getEnumerator($0.childNodes);while($enum1.moveNext()){var $1=$enum1.current;var $2=Xrm.Sdk.XmlHelper.selectSingleNode($1,'key');if(Xrm.Sdk.XmlHelper.getNodeTextValue($2)==='Version'){var $3=Xrm.Sdk.XmlHelper.selectSingleNode($1,'value');this.version=Xrm.Sdk.XmlHelper.getNodeTextValue($3);}}}
ClientUI.Messages.RetrieveVersionResponse.prototype={version:null}
ClientUI.Messages.RetrieveVersionRequest=function(){}
ClientUI.Messages.RetrieveVersionRequest.prototype={serialise:function(){return '<request xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">'+'        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'+'        </a:Parameters>'+'        <a:RequestId i:nil="true" />'+'        <a:RequestName>RetrieveVersion</a:RequestName>'+'      </request>';}}
ClientUI.Messages.rwb_CustomiseRibbonRequest=function(){}
ClientUI.Messages.rwb_CustomiseRibbonRequest.prototype={operation:null,data:null,serialise:function(){return '<request xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">'+'        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'+'          <a:KeyValuePairOfstringanyType>'+'            <c:key>Operation</c:key>'+'            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema" >'+Xrm.Sdk.XmlHelper.encode(this.operation)+'</c:value>'+'          </a:KeyValuePairOfstringanyType>'+'          <a:KeyValuePairOfstringanyType>'+'            <c:key>Data</c:key>'+'            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema" >'+Xrm.Sdk.XmlHelper.encode(this.data)+'</c:value>'+'          </a:KeyValuePairOfstringanyType>'+'        </a:Parameters>'+'        <a:RequestId i:nil="true" />'+'        <a:RequestName>rwb_CustomiseRibbon</a:RequestName>'+'      </request>';}}
ClientUI.Messages.rwb_CustomiseRibbonResponse=function(response){var $0=Xrm.Sdk.XmlHelper.selectSingleNode(response,'Results');var $enum1=ss.IEnumerator.getEnumerator($0.childNodes);while($enum1.moveNext()){var $1=$enum1.current;var $2=Xrm.Sdk.XmlHelper.selectSingleNode($1,'key');if(Xrm.Sdk.XmlHelper.getNodeTextValue($2)==='Result'){var $3=Xrm.Sdk.XmlHelper.selectSingleNode($1,'value');this.response=Xrm.Sdk.XmlHelper.getNodeTextValue($3);}}}
ClientUI.Messages.rwb_CustomiseRibbonResponse.prototype={response:null}
ClientUI.Messages.RetrieveAvailableLanguagesRequest=function(){}
ClientUI.Messages.RetrieveAvailableLanguagesRequest.prototype={serialise:function(){return '<request xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">'+'        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'+'        </a:Parameters>'+'        <a:RequestId i:nil="true" />'+'        <a:RequestName>RetrieveAvailableLanguages</a:RequestName>'+'      </request>';}}
ClientUI.Messages.RetrieveAvailableLanguagesResponse=function(response){var $0=Xrm.Sdk.XmlHelper.selectSingleNode(response,'Results');var $enum1=ss.IEnumerator.getEnumerator($0.childNodes);while($enum1.moveNext()){var $1=$enum1.current;var $2=Xrm.Sdk.XmlHelper.selectSingleNode($1,'key');if(Xrm.Sdk.XmlHelper.getNodeTextValue($2)==='LocaleIds'){var $3=Xrm.Sdk.XmlHelper.selectSingleNode($1,'value');this.localeIds=[];var $enum2=ss.IEnumerator.getEnumerator($3.childNodes);while($enum2.moveNext()){var $4=$enum2.current;var $5=Xrm.Sdk.XmlHelper.getNodeTextValue($4);this.localeIds.add(parseInt($5));}}}}
ClientUI.Messages.RetrieveAvailableLanguagesResponse.prototype={localeIds:null,resolveLocaleName:function(localeId){switch(localeId){case 1078:return 'Afrikaans - South Africa';case 1052:return 'Albanian - Albania';case 1156:return 'Alsatian';case 1118:return 'Amharic - Ethiopia';case 1025:return 'Arabic - Saudi Arabia';case 5121:return 'Arabic - Algeria';case 15361:return 'Arabic - Bahrain';case 3073:return 'Arabic - Egypt';case 2049:return 'Arabic - Iraq';case 11265:return 'Arabic - Jordan';case 13313:return 'Arabic - Kuwait';case 12289:return 'Arabic - Lebanon';case 4097:return 'Arabic - Libya';case 6145:return 'Arabic - Morocco';case 8193:return 'Arabic - Oman';case 16385:return 'Arabic - Qatar';case 10241:return 'Arabic - Syria';case 7169:return 'Arabic - Tunisia';case 14337:return 'Arabic - U.A.E.';case 9217:return 'Arabic - Yemen';case 1067:return 'Armenian - Armenia';case 1101:return 'Assamese';case 2092:return 'Azeri (Cyrillic)';case 1068:return 'Azeri (Latin)';case 1133:return 'Bashkir';case 1069:return 'Basque';case 1059:return 'Belarusian';case 1093:return 'Bengali (India)';case 2117:return 'Bengali (Bangladesh)';case 5146:return 'Bosnian (Bosnia/Herzegovina)';case 1150:return 'Breton';case 1026:return 'Bulgarian';case 1109:return 'Burmese';case 1027:return 'Catalan';case 1116:return 'Cherokee - United States';case 2052:return "Chinese - People's Republic of China";case 4100:return 'Chinese - Singapore';case 1028:return 'Chinese - Taiwan';case 3076:return 'Chinese - Hong Kong SAR';case 5124:return 'Chinese - Macao SAR';case 1155:return 'Corsican';case 1050:return 'Croatian';case 4122:return 'Croatian (Bosnia/Herzegovina)';case 1029:return 'Czech';case 1030:return 'Danish';case 1164:return 'Dari';case 1125:return 'Divehi';case 1043:return 'Dutch - Netherlands';case 2067:return 'Dutch - Belgium';case 1126:return 'Edo';case 1033:return 'English - United States';case 2057:return 'English - United Kingdom';case 3081:return 'English - Australia';case 10249:return 'English - Belize';case 4105:return 'English - Canada';case 9225:return 'English - Caribbean';case 15369:return 'English - Hong Kong SAR';case 16393:return 'English - India';case 14345:return 'English - Indonesia';case 6153:return 'English - Ireland';case 8201:return 'English - Jamaica';case 17417:return 'English - Malaysia';case 5129:return 'English - New Zealand';case 13321:return 'English - Philippines';case 18441:return 'English - Singapore';case 7177:return 'English - South Africa';case 11273:return 'English - Trinidad';case 12297:return 'English - Zimbabwe';case 1061:return 'Estonian';case 1080:return 'Faroese';case 1065:return 'Farsi';case 1124:return 'Filipino';case 1035:return 'Finnish';case 1036:return 'French - France';case 2060:return 'French - Belgium';case 11276:return 'French - Cameroon';case 3084:return 'French - Canada';case 9228:return 'French - Democratic Rep. of Congo';case 12300:return "French - Cote d'Ivoire";case 15372:return 'French - Haiti';case 5132:return 'French - Luxembourg';case 13324:return 'French - Mali';case 6156:return 'French - Monaco';case 14348:return 'French - Morocco';case 58380:return 'French - North Africa';case 8204:return 'French - Reunion';case 10252:return 'French - Senegal';case 4108:return 'French - Switzerland';case 7180:return 'French - West Indies';case 1122:return 'Frisian - Netherlands';case 1127:return 'Fulfulde - Nigeria';case 1071:return 'FYRO Macedonian';case 1110:return 'Galician';case 1079:return 'Georgian';case 1031:return 'German - Germany';case 3079:return 'German - Austria';case 5127:return 'German - Liechtenstein';case 4103:return 'German - Luxembourg';case 2055:return 'German - Switzerland';case 1032:return 'Greek';case 1135:return 'Greenlandic';case 1140:return 'Guarani - Paraguay';case 1095:return 'Gujarati';case 1128:return 'Hausa - Nigeria';case 1141:return 'Hawaiian - United States';case 1037:return 'Hebrew';case 1081:return 'Hindi';case 1038:return 'Hungarian';case 1129:return 'Ibibio - Nigeria';case 1039:return 'Icelandic';case 1136:return 'Igbo - Nigeria';case 1057:return 'Indonesian';case 1117:return 'Inuktitut';case 2108:return 'Irish';case 1040:return 'Italian - Italy';case 2064:return 'Italian - Switzerland';case 1041:return 'Japanese';case 1158:return "K'iche";case 1099:return 'Kannada';case 1137:return 'Kanuri - Nigeria';case 2144:return 'Kashmiri';case 1120:return 'Kashmiri (Arabic)';case 1087:return 'Kazakh';case 1107:return 'Khmer';case 1159:return 'Kinyarwanda';case 1111:return 'Konkani';case 1042:return 'Korean';case 1088:return 'Kyrgyz (Cyrillic)';case 1108:return 'Lao';case 1142:return 'Latin';case 1062:return 'Latvian';case 1063:return 'Lithuanian';case 1134:return 'Luxembourgish';case 1086:return 'Malay - Malaysia';case 2110:return 'Malay - Brunei Darussalam';case 1100:return 'Malayalam';case 1082:return 'Maltese';case 1112:return 'Manipuri';case 1153:return 'Maori - New Zealand';case 1146:return 'Mapudungun';case 1102:return 'Marathi';case 1148:return 'Mohawk';case 1104:return 'Mongolian (Cyrillic)';case 2128:return 'Mongolian (Mongolian)';case 1121:return 'Nepali';case 2145:return 'Nepali - India';case 1044:return 'Norwegian (Bokm\ufffdl)';case 2068:return 'Norwegian (Nynorsk)';case 1154:return 'Occitan';case 1096:return 'Oriya';case 1138:return 'Oromo';case 1145:return 'Papiamentu';case 1123:return 'Pashto';case 1045:return 'Polish';case 1046:return 'Portuguese - Brazil';case 2070:return 'Portuguese - Portugal';case 1094:return 'Punjabi';case 2118:return 'Punjabi (Pakistan)';case 1131:return 'Quecha - Bolivia';case 2155:return 'Quecha - Ecuador';case 3179:return 'Quecha - Peru';case 1047:return 'Rhaeto-Romanic';case 1048:return 'Romanian';case 2072:return 'Romanian - Moldava';case 1049:return 'Russian';case 2073:return 'Russian - Moldava';case 1083:return 'Sami (Lappish)';case 1103:return 'Sanskrit';case 1084:return 'Scottish Gaelic';case 1132:return 'Sepedi';case 3098:return 'Serbian (Cyrillic)';case 2074:return 'Serbian (Latin)';case 1113:return 'Sindhi - India';case 2137:return 'Sindhi - Pakistan';case 1115:return 'Sinhalese - Sri Lanka';case 1051:return 'Slovak';case 1060:return 'Slovenian';case 1143:return 'Somali';case 1070:return 'Sorbian';case 3082:return 'Spanish - Spain (Modern Sort)';case 1034:return 'Spanish - Spain (Traditional Sort)';case 11274:return 'Spanish - Argentina';case 16394:return 'Spanish - Bolivia';case 13322:return 'Spanish - Chile';case 9226:return 'Spanish - Colombia';case 5130:return 'Spanish - Costa Rica';case 7178:return 'Spanish - Dominican Republic';case 12298:return 'Spanish - Ecuador';case 17418:return 'Spanish - El Salvador';case 4106:return 'Spanish - Guatemala';case 18442:return 'Spanish - Honduras';case 22538:return 'Spanish - Latin America';case 2058:return 'Spanish - Mexico';case 19466:return 'Spanish - Nicaragua';case 6154:return 'Spanish - Panama';case 15370:return 'Spanish - Paraguay';case 10250:return 'Spanish - Peru';case 20490:return 'Spanish - Puerto Rico';case 21514:return 'Spanish - United States';case 14346:return 'Spanish - Uruguay';case 8202:return 'Spanish - Venezuela';case 1072:return 'Sutu';case 1089:return 'Swahili';case 1053:return 'Swedish';case 2077:return 'Swedish - Finland';case 1114:return 'Syriac';case 1064:return 'Tajik';case 1119:return 'Tamazight (Arabic)';case 2143:return 'Tamazight (Latin)';case 1097:return 'Tamil';case 1092:return 'Tatar';case 1098:return 'Telugu';case 1054:return 'Thai';case 2129:return 'Tibetan - Bhutan';case 1105:return "Tibetan - People's Republic of China";case 2163:return 'Tigrigna - Eritrea';case 1139:return 'Tigrigna - Ethiopia';case 1073:return 'Tsonga';case 1074:return 'Tswana';case 1055:return 'Turkish';case 1090:return 'Turkmen';case 1152:return 'Uighur - China';case 1058:return 'Ukrainian';case 1056:return 'Urdu';case 2080:return 'Urdu - India';case 2115:return 'Uzbek (Cyrillic)';case 1091:return 'Uzbek (Latin)';case 1075:return 'Venda';case 1066:return 'Vietnamese';case 1106:return 'Welsh';case 1160:return 'Wolof';case 1076:return 'Xhosa';case 1157:return 'Yakut';case 1144:return 'Yi';case 1085:return 'Yiddish';case 1130:return 'Yoruba';case 1077:return 'Zulu';default:return localeId.toString();}}}
Type.registerNamespace('ClientUI.Model');ClientUI.Model.RibbonValidationMessageType=function(){};ClientUI.Model.RibbonValidationMessageType.prototype = {information:0,warning:1,error:2}
ClientUI.Model.RibbonValidationMessageType.registerEnum('ClientUI.Model.RibbonValidationMessageType',false);ClientUI.Model.RibbonPositions=function(){};ClientUI.Model.RibbonPositions.prototype = {homepage:0,form:1,subGrid:2,jewel:3,other:4}
ClientUI.Model.RibbonPositions.registerEnum('ClientUI.Model.RibbonPositions',false);ClientUI.Model.RibbonControlType=function(){};ClientUI.Model.RibbonControlType.prototype = {ButtonControl:0,FlyOutAnchorControl:1,SplitButtonControl:2,ToggleButton:3,Menu:4,Popup:5,MenuSectionControl:6,SectionPlaceholder:7,Group:8}
ClientUI.Model.RibbonControlType.registerEnum('ClientUI.Model.RibbonControlType',false);ClientUI.Model.RibbonElementType=function(){};ClientUI.Model.RibbonElementType.prototype = {ButtonControl:'ButtonControl',FlyOutAnchorControl:'FlyOutAnchorControl',SplitButtonControl:'SplitButtonControl',ToggleCommand:'ToggleCommand',Menu:'Menu',Popup:'Popup',command:'command',parameter:'parameter',EnableRule:'EnableRule',DisplayRule:'DisplayRule',unknown:'unknown',JavascriptFunctionCommandAction:'JavascriptFunctionCommandAction',UrlCommandAction:'UrlCommandAction',StringParameter:'StringParameter',IntParameter:'IntParameter',BoolParameter:'BoolParameter',DecimalParameter:'DecimalParameter',CrmParameter:'CrmParameter',MenuSectionControl:'MenuSectionControl',HideCustomAction:'HideCustomAction',SectionPlaceholder:'SectionPlaceholder',CrmClientTypeRule:'CrmClientTypeRule',CrmOfflineAccessStateRule:'CrmOfflineAccessStateRule',CrmOutlookClientTypeRule:'CrmOutlookClientTypeRule',CrmOutlookClientVersionRule:'CrmOutlookClientVersionRule',CustomRule:'CustomRule',EntityPrivilegeRule:'EntityPrivilegeRule',EntityPropertyRule:'EntityPropertyRule',EntityRule:'EntityRule',FormEntityContextRule:'FormEntityContextRule',FormStateRule:'FormStateRule',MiscellaneousPrivilegeRule:'MiscellaneousPrivilegeRule',OrGroup:'OrGroup',OrRule:'OrRule',OrDisplayRule:'OrDisplayRule',OrEnableRule:'OrEnableRule',OrganizationSettingRule:'OrganizationSettingRule',OutlookItemTrackingRule:'OutlookItemTrackingRule',OutlookRenderTypeRule:'OutlookRenderTypeRule',OutlookVersionRule:'OutlookVersionRule',PageRule:'PageRule',RecordPrivilegeRule:'RecordPrivilegeRule',ReferencingAttributeRequiredRule:'ReferencingAttributeRequiredRule',RelationshipTypeRule:'RelationshipTypeRule',SelectionCountRule:'SelectionCountRule',SkuRule:'SkuRule',ValueRule:'ValueRule',CommandClientTypeRule:'CommandClientTypeRule',FormTypeRule:'FormTypeRule',HideForTabletExperienceRule:'HideForTabletExperienceRule',OptionSetRule:'OptionSetRule',Group:'Group',SmartButton:'SmartButton'}
ClientUI.Model.RibbonElementType.registerEnum('ClientUI.Model.RibbonElementType',false);ClientUI.Model.SolutionComponentTypes=function(){};ClientUI.Model.SolutionComponentTypes.prototype = {none:0,top:1,sub:2}
ClientUI.Model.SolutionComponentTypes.registerEnum('ClientUI.Model.SolutionComponentTypes',false);ClientUI.Model.RibbonValidationMessageCollection=function(){this.$1_2=[];ClientUI.Model.RibbonValidationMessageCollection.initializeBase(this);}
ClientUI.Model.RibbonValidationMessageCollection.prototype={$1_0:false,$1_1:false,suspend:function(){this.$1_0=true;this.$1_1=false;},unsuspend:function(){this.$1_0=false;if(this.$1_1){this.refresh();}this.$1_1=false;},addItem:function(item){this.$1_2.add(item);this.refresh();},getItem:function(index){return this.$1_2[index];},getLength:function(){return this.$1_2.length;},refresh:function(){if(this.$1_0){this.$1_1=true;return;}var $0={};$0.rows=[];for(var $1=0;$1<this.$1_2.length;$1++){$0.rows.add($1);}this.onDataLoaded.notify(null,null,this);this.onRowsChanged.notify($0,null,this);},getPagingInfo:function(){return null;},sort:function(sorting){if(!sorting.sortAsc){this.$1_2.reverse();}this.$1_2.sort(function($p1_0,$p1_1){
return Xrm.Sdk.Entity.sortDelegate(sorting.sortCol.field,$p1_0,$p1_1);});if(!sorting.sortAsc){this.$1_2.reverse();}},removeItem:function(id){this.$1_2.remove(id);this.refresh();},clear:function(){this.$1_2.clear();this.refresh();},reset:function(){this.raiseOnSelectedRowsChanged(null);},getEnumerator:function(){return this.$1_2.getEnumerator();}}
ClientUI.Model.SmartButtonDefinition=function(){}
ClientUI.Model.SmartButtonDefinition.prototype={validOnSubGrid:null,validOnHomePageGrid:null,validOnForm:null,template:null,propertyExpressions:null}
ClientUI.Model.SmartButton=function(prefix,smartButtonId,type,image16by16,label){ClientUI.Model.SmartButton.initializeBase(this,[type,'smartbutton'+'.'+smartButtonId,image16by16,label]);this.smartButtonId=ko.observable(smartButtonId);}
ClientUI.Model.SmartButton.isSmartButton=function(item){if(item!=null&&('Description' in item)){var $0=item;var $1=$0.Description();if($1!=null&&$1.indexOf('{"smartbuttonid"')>-1){try{$0._smartButtonData=JSON.parse($1);}catch($2){$0._smartButtonData=null;}}}if(item!=null&&('_smartButtonData' in item)){var $3=ko.utils.unwrapObservable(item._smartButtonData);if($3!=null&&Object.keyExists($3,'smartbuttonid')){return true;}}return false;}
ClientUI.Model.SmartButton.prototype={editableProperties:null,smartButtonId:null,definitions:null}
ClientUI.Model.SmartButtonCollection=function(parent){this.Controls=ko.observableArray();this.$0=parent;}
ClientUI.Model.SmartButtonCollection.$1=function($p0,$p1){var $0=$p1._parentLayoutSection._parentGroup._parentTab.RibbonPosition();var $1=null;var $enum1=ss.IEnumerator.getEnumerator($p0.definitions());while($enum1.moveNext()){var $2=$enum1.current;if($2.validOnForm()&&$0===1){$1=$2;}else if($2.validOnHomePageGrid()&&!$0){$1=$2;}else if($2.validOnSubGrid()&&$0===2){$1=$2;}if($1!=null){break;}}if($1==null){var $3={};$3['ErrorCode']=ClientUI.ErrorCodes.reportedMessage;var $4=Error.createError(String.format(ResourceStrings.SmartButtonNotDefinedForPosition,$0),$3);throw $4;}return $1;}
ClientUI.Model.SmartButtonCollection.getSmartButtonProperties=function(selectedControl,properties){var $0=selectedControl;var $1=ClientUI.Model.Ribbon.getRibbon($0);if($0._smartButtonData==null){throw new Error('Cannot find smart button configuration data');}var $2=$0._smartButtonData;var $3=$1._parent.SmartButtons.getSmartButtonDefinition($0);if($3!=null){properties.add(ClientUI.ViewModel.EditorProperty.newSection(ResourceStrings.SmartButtonProperties+':'+$3.LabelTextText()));properties.add(ClientUI.ViewModel.EditorProperty.newSpacer());var $enum1=ss.IEnumerator.getEnumerator($3.editableProperties());while($enum1.moveNext()){var $4=$enum1.current;if(!$4.OnlyOnCreate){$4.ColSpan=2;$4._target=$0;$4._smartButton=$3;properties.add($4);$4.Value=ko.observable();if(Object.keyExists($2,$4.FieldName)){$4.Value=ko.observable($2[$4.FieldName]);}if(!$4.Value.getSubscriptionsCount()){$4.Value.subscribe(function($p1_0){
ClientUI.Model.SmartButtonCollection.$2($4._smartButton,$4._target,false);},$4);}properties.add(ClientUI.ViewModel.EditorProperty.newSpacer());}}}}
ClientUI.Model.SmartButtonCollection.$2=function($p0,$p1,$p2){var $0=ClientUI.Model.SmartButtonCollection.$1($p0,ClientUI.Model.RibbonControl.getParentRibbonControlsCollection($p1));var $1=$p1._Command();$p1._smartButtonData={};$p1._smartButtonData['smartbuttonid']=$p0.Id();var $enum1=ss.IEnumerator.getEnumerator($p0.editableProperties());while($enum1.moveNext()){var $4=$enum1.current;$p1._smartButtonData[$4.FieldName]=ko.utils.unwrapObservable($4.Value);}$p1.Description=ko.observable(JSON.stringify($p1._smartButtonData));var $2={};$2['$button']=$p1;$2['$command']=$1;$2['$data']=$p1._smartButtonData;var $3=function(name, value){
                var thisValue = eval('this.' + value);
                var thisName = eval('this.' + name);
                thisName(thisValue!=null ? thisValue : '');           
                };var $enum2=ss.IEnumerator.getEnumerator($0.propertyExpressions());while($enum2.moveNext()){var $5=$enum2.current;var $6=ko.utils.unwrapObservable($5.value);$3.call($2,ko.utils.unwrapObservable($5.name),$6);}}
ClientUI.Model.SmartButtonCollection.isSmartButtonToolboxControl=function(control){return control.Id().startsWith('smartbutton');}
ClientUI.Model.SmartButtonCollection.prototype={$0:null,getSmartButtonDefinition:function(control){if(control._smartButtonData!=null){var $0=control._smartButtonData['smartbuttonid'];if($0!=null){var $enum1=ss.IEnumerator.getEnumerator(this.Controls());while($enum1.moveNext()){var $1=$enum1.current;if($1.Id().indexOf($0)>-1){return $1;}}}}return null;},onToolboxDrop:function(args,smartButtonDefinition){try{args.cancelDrop=true;if(args.targetParent==null){return null;}var $0=args.targetParent;var $1=$0;var $2=ClientUI.Model.SmartButtonCollection.$1(smartButtonDefinition,$1);smartButtonDefinition._smartButtonData={};smartButtonDefinition._smartButtonData['smartbuttondid']=smartButtonDefinition.Id();var $3=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');var $4=new ClientUI.View.SmartButtonDialog(smartButtonDefinition);var $5=new ClientUI.ViewModel.SmartButtonViewModel(smartButtonDefinition);$3.showDialog($4,$5,2,function($p1_0){
if($p1_0!==1){return;}try{var $1_0=ko.toJSON(ko.mapping.toJS($2.template));var $1_1=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($1_0);$1_1.Control.Id($1_1.Control.Id());$1_1.CommandDefinition.Id($1_1.CommandDefinition.Id());var $1_2=ClientUI.ViewModel.RibbonPasteData.instantiateControlFromTemplate($1,$1_1);ClientUI.ViewModel.ToolboxControls.addNewControl(args,$1_2,$1);ClientUI.Model.SmartButtonCollection.$2(smartButtonDefinition,$1_2,true);}catch($1_3){ClientUI.ViewModel.App.current.reportException($1_3,ResourceStrings.SmartButtonsToolBox);}},null,null);}catch($6){ClientUI.ViewModel.App.current.reportException($6,ResourceStrings.SmartButtonsToolBox);}return null;},$3:function($p0){var $0="<fetch count='50' >\r\n                          <entity name = 'webresource' >\r\n                             <attribute name = 'content' />\r\n                              <filter>\r\n                                <condition attribute = 'webresourcetype' operator= 'eq' value = '3' />\r\n                                    <condition attribute = 'name' operator= 'ends-with' value = 'smartbutton_manifest.js' />\r\n                                      </filter>\r\n                                    </entity>\r\n                                  </fetch> ";Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,ss.Delegate.create(this,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $enum1=ss.IEnumerator.getEnumerator($1_0.get_entities());while($enum1.moveNext()){var $1_1=$enum1.current;var $1_2=this.$4($1_1.getAttributeValueString('content'));var $1_3=ko.mapping.fromJSON($1_2);var $enum2=ss.IEnumerator.getEnumerator($1_3());while($enum2.moveNext()){var $1_4=$enum2.current;var $enum3=ss.IEnumerator.getEnumerator($1_4.editableProperties());while($enum3.moveNext()){var $1_5=$enum3.current;$1_5.ColSpan=ko.utils.unwrapObservable($1_5.ColSpan);$1_5.Disable=ko.utils.unwrapObservable($1_5.Disable);$1_5.FieldName=ko.utils.unwrapObservable($1_5.FieldName);$1_5.IdAttribute=ko.utils.unwrapObservable($1_5.IdAttribute);$1_5.Label=ko.utils.unwrapObservable($1_5.Label);$1_5.NameAttribute=ko.utils.unwrapObservable($1_5.NameAttribute);$1_5.OnlyOnCreate=ko.utils.unwrapObservable($1_5.OnlyOnCreate);$1_5.Precision=ko.utils.unwrapObservable($1_5.Precision);$1_5.PropertyType=ko.utils.unwrapObservable($1_5.PropertyType);if($1_5.LookupFetch!=null&&$1_5.LookupFetch()!=null){var $1_6=$1_5.LookupFetch();$1_5.QueryCommand=function($p2_0,$p2_1){
var $2_0=String.format($1_6,Xrm.Sdk.XmlHelper.encode($p2_0));Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($2_0,function($p3_0){
var $3_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p3_0,Xrm.Sdk.Entity);$p2_1($3_0);});};}}this.Controls.push($1_4);}}$p0();}));},$4:function($p0){var $0='ABCDEFGHIJKLMNOP'+'QRSTUVWXYZabcdef'+'ghijklmnopqrstuv'+'wxyz0123456789+/'+'=';var $1='';var $2,$3,$4=0;var $5,$6,$7,$8=0;var $9=0;do{$5=$0.indexOf($p0.charAt($9++));$6=$0.indexOf($p0.charAt($9++));$7=$0.indexOf($p0.charAt($9++));$8=$0.indexOf($p0.charAt($9++));$2=($5<<2)|($6>>4);$3=(($6&15)<<4)|($7>>2);$4=(($7&3)<<6)|$8;$1=$1+String.fromCharCode($2);if($7!==64){$1=$1+String.fromCharCode($3);}if($8!==64){$1=$1+String.fromCharCode($4);}$2=$3=$4=0;$5=$6=$7=$8=0;}while($9<$p0.length);return unescape($1);}}
ClientUI.Model.CommandActionController=function(){}
ClientUI.Model.CommandActionController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.Delete));return $0;}
ClientUI.Model.CommandActionController.OnMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'delete_command':ClientUI.Model.UndoStacks.PropertiesUndoStack.add($0,$0._command.Actions,ResourceStrings.CommandActionDeleted);$0._command.Actions.remove($0);break;}}
ClientUI.Model.CommandActionController.GetAddActionMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_action_url',ResourceStrings.UrlAction));$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_action_javascript',ResourceStrings.JavascriptAction));return $0;}
ClientUI.Model.CommandActionController.AddActionMenuSelect=function(target,CommandId){var $0=new ClientUI.Model.CommandAction();$0._expanded=ko.observable(true);var $1=target;$0._command=$1;switch(CommandId){case 'add_action_url':$0.__type('UrlCommandAction'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;case 'add_action_javascript':$0.__type('JavascriptFunctionCommandAction'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;}$1.Actions.push($0);}
ClientUI.Model.CommandActionParameterController=function(){}
ClientUI.Model.CommandActionParameterController.GetAddActionParameterMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_string_param','String Parmeter'));$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_int_param','Integer Parameter'));$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_decimal_param','Decimal Parameter'));$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_bool_param','Boolean Parameter'));$0.items.add(new ClientUI.Library.ContextMenuItemVM('add_crm_param','CRM Parameter'));return $0;}
ClientUI.Model.CommandActionParameterController.AddActionParameterMenuSelect=function(target,CommandId){var $0=new ClientUI.Model.CommandActionParameter();$0._expanded=ko.observable(true);var $1=target;$0._action=$1;switch(CommandId){case 'add_string_param':$0.__type('StringParameter'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;case 'add_int_param':$0.__type('IntParameter'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;case 'add_decimal_param':$0.__type('DecimalParameter'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;case 'add_bool_param':$0.__type('BoolParameter'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;case 'add_crm_param':$0.__type('CrmParameter'+':#Develop1.Xrm.Silverlight.Ribbon.Model');break;}$1.Parameters.push($0);}
ClientUI.Model.CommandActionParameterController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.Delete));return $0;}
ClientUI.Model.CommandActionParameterController.OnMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'delete_command':ClientUI.Model.UndoStacks.PropertiesUndoStack.add($0,$0._action.Parameters,ResourceStrings.ParameterDeleted);$0._action.Parameters.remove($0);break;}}
ClientUI.Model.CommandDefinitionController=function(){}
ClientUI.Model.CommandDefinitionController.GetContextMenu=function(target){var $0=target;var $1=$0._ribbon;var $2=new ClientUI.Library.ContextMenuVM();$2.items=[];$2.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.DeleteCommand));$2.items.add(new ClientUI.Library.ContextMenuItemVM('copy',ResourceStrings.Copy));$2.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isCommandInClipBoard($1._parent.Clipboard())));return $2;}
ClientUI.Model.CommandDefinitionController.OnMenuSelect=function(target,CommandId){var $0=target;var $1=$0.Id();var $2=$0._ribbon;switch(CommandId){case 'copy':$0._ribbon._parent.setBusy();$0._ribbon._parent.isBusyMessage(ResourceStrings.CopyingToClipboard);window.setTimeout(function(){
try{var $1_0=ClientUI.ViewModel.RibbonPasteData.getCommandClipboard($0);$0._ribbon._parent.Clipboard($1_0);$0._ribbon._parent.isBusy(false);}catch($1_1){ClientUI.ViewModel.App.current.reportException($1_1,ResourceStrings.Error_DialogTitle);}},1000);break;case 'paste':try{$1=ClientUI.ViewModel.CrmNamespace.createCommandDefinition($2);var $4=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($2._parent.Clipboard());var $5=ClientUI.ViewModel.RibbonPasteData.instansiateCommandFromTemplate($4,$2,$1);}catch($6){ClientUI.ViewModel.App.current.reportException($6,String.format(ResourceStrings.InvalidPasteData,$6.message));}break;case 'delete_command':var $3=ClientUI.Model.UndoStacks.SolutionElementsUndoStack.add($0,$2.SolutionCommands.ChildNodes,ResourceStrings.CommandDeleted);$3.undoCallback=function($p1_0){
$2.CommandPicklist.push({name:$0.Id(),value:$0});$2._SolutionCommandsIndex[$0.Id()]=$0;};$2.SolutionCommands.ChildNodes.remove($0);delete $2._SolutionCommandsIndex[$0.Id()];$2.CommandPicklist.remove(function($p1_0){
if($p1_0['name']===$1){return true;}else{return false;}});break;}}
ClientUI.Model.CommandDefinitionController.GetSolutionElementsContextMenu=function(target){var $0=target;var $1=new ClientUI.Library.ContextMenuVM();$1.items=[];$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('add_command',ResourceStrings.AddCommand,false));$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isCommandInClipBoard($0._parent.Clipboard())));return $1;}
ClientUI.Model.CommandDefinitionController.OnSolutionElementsMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'paste':try{var $1=ClientUI.ViewModel.CrmNamespace.createCommandDefinition($0);var $2=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($0._parent.Clipboard());var $3=ClientUI.ViewModel.RibbonPasteData.instansiateCommandFromTemplate($2,$0,$1);}catch($4){ClientUI.ViewModel.App.current.showMessage(String.format(ResourceStrings.InvalidPasteData,$4.message));}break;case 'add_command':$0._parent.AddNewCommandCommand()();break;}}
ClientUI.Model.DisplayRuleController=function(){}
ClientUI.Model.DisplayRuleController.GetAddRuleMenu=function(target){var $0=target;var $1=$0._ribbon;var $2=new ClientUI.Library.ContextMenuVM();$2.items=[];var $enum1=ss.IEnumerator.getEnumerator($1.SolutionDisplayRules.ChildNodes());while($enum1.moveNext()){var $3=$enum1.current;if(!$0.DisplayRules().contains($3)){$2.items.add(new ClientUI.Library.ContextMenuItemVM($3.Id(),$3.Id()));}}$2.items.add(new ClientUI.Library.ContextMenuItemVM('add_new_display_rule',ResourceStrings.AddNewDisplayRules));return $2;}
ClientUI.Model.DisplayRuleController.OnAddRule=function(target,CommandId){var $0=target;var $1=$0._ribbon;if(CommandId==='add_new_display_rule'){ClientUI.Model.DisplayRule.addNewDisplayRule($0,$1);}else{$1.SolutionDisplayRules.ChildNodes().forEach(function($p1_0){
var $1_0=$p1_0;if($1_0.Id()===CommandId){$0.DisplayRules.push($1_0);}});}}
ClientUI.Model.DisplayRuleController.GetContextMenuOnCommandReference=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('remove_from_command',ResourceStrings.RemoveFromCommand));$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.DeleteFromAllCommands));return $0;}
ClientUI.Model.DisplayRuleController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('copy',ResourceStrings.Copy));$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.Delete));return $0;}
ClientUI.Model.DisplayRuleController.OnMenuSelect=function(target,CommandId){var $0=target;var $1=$0[0];var $2=$1._ribbon;var $3;switch(CommandId){case 'remove_from_command':$3=ClientUI.Model.DisplayRuleController.$1($0,$1);break;case 'delete_command':$3=ClientUI.Model.DisplayRuleController.$0($1,$2);break;case 'copy':var $4=$2._parent;$4.setBusy();$4.isBusyMessage(ResourceStrings.CopyingToClipboard);window.setTimeout(function(){
try{var $1_0=ClientUI.ViewModel.RibbonPasteData.getControlClipboardDispayRule($1);$4.Clipboard($1_0);$4.isBusy(false);}catch($1_1){ClientUI.ViewModel.App.current.reportException($1_1,ResourceStrings.Error_DialogTitle);}},1000);break;}}
ClientUI.Model.DisplayRuleController.$0=function($p0,$p1){var $0=[];var $enum1=ss.IEnumerator.getEnumerator($p1.SolutionCommands.ChildNodes());while($enum1.moveNext()){var $2=$enum1.current;if($2.DisplayRules().contains($p0)){var $3=$2.DisplayRules.indexOf($p0);var $4={command:$2,pos:$3};$0.add($4);}}var $enum2=ss.IEnumerator.getEnumerator($0);while($enum2.moveNext()){var $5=$enum2.current;var $6=$5['command'];$6.DisplayRules.remove($p0);}var $1=ClientUI.Model.UndoStacks.SolutionElementsUndoStack.add($p0,$p1.SolutionDisplayRules.ChildNodes,String.format(ResourceStrings.DisplayRuleDeletedAndRemoved,$0.length));$1.undoCallback=function($p1_0){
var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $1_0=$enum1.current;var $1_1=$1_0['command'];var $1_2=$1_0['pos'];$1_1.DisplayRules.splice($1_2,0,$p1_0.item);}};$p1.SolutionDisplayRules.ChildNodes.remove($p0);return $1;}
ClientUI.Model.DisplayRuleController.$1=function($p0,$p1){var $0=$p0[1];var $1=ClientUI.Model.UndoStacks.PropertiesUndoStack.add($p1,$0.DisplayRules,String.format(ResourceStrings.DisplayRuleRemoved,$0.Id()));$0.DisplayRules.remove($p1);return $1;}
ClientUI.Model.DisplayRuleController.GetSolutionElementsContextMenu=function(target){var $0=target;var $1=new ClientUI.Library.ContextMenuVM();$1.items=[];$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('add_new_display_rule',ResourceStrings.AddDisplayRule,false));$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isDisplayRuleInClipBoard($0._parent.Clipboard())));return $1;}
ClientUI.Model.DisplayRuleController.OnSolutionElementsMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'paste':try{var $1=ClientUI.ViewModel.CrmNamespace.createDisplayRule($0);var $2=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($0._parent.Clipboard());var $3=ClientUI.ViewModel.RibbonPasteData.instansiateDisplayRuleFromTemplate($2,$0,$1);$0.SolutionDisplayRules.ChildNodes.push($3);}catch($4){ClientUI.ViewModel.App.current.showMessage(String.format(ResourceStrings.InvalidPasteData,$4.message));}break;case 'add_new_display_rule':ClientUI.Model.DisplayRule.addNewDisplayRule(null,$0);break;}}
ClientUI.Model.EnableRuleController=function(){}
ClientUI.Model.EnableRuleController.GetAddRuleMenu=function(target){var $0=target;var $1=$0._ribbon;var $2=new ClientUI.Library.ContextMenuVM();$2.items=[];var $enum1=ss.IEnumerator.getEnumerator($1.SolutionEnableRules.ChildNodes());while($enum1.moveNext()){var $3=$enum1.current;if(!$0.EnableRules().contains($3)){$2.items.add(new ClientUI.Library.ContextMenuItemVM($3.Id(),$3.Id()));}}$2.items.add(new ClientUI.Library.ContextMenuItemVM('add_new_enable_rule',ResourceStrings.AddNewEnableRule));return $2;}
ClientUI.Model.EnableRuleController.OnAddRule=function(target,CommandId){var $0=target;var $1=$0._ribbon;if(CommandId==='add_new_enable_rule'){ClientUI.Model.EnableRule.addNewEnableRule($0,$1);}else{$1.SolutionEnableRules.ChildNodes().forEach(function($p1_0){
var $1_0=$p1_0;if($1_0.Id()===CommandId){$0.EnableRules.push($1_0);}});}}
ClientUI.Model.EnableRuleController.GetContextMenuOnCommandReference=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('remove_from_command',ResourceStrings.RemoveFromCommand));$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.DeleteFromAllCommands));return $0;}
ClientUI.Model.EnableRuleController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('copy',ResourceStrings.Copy));$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete_command',ResourceStrings.Delete));return $0;}
ClientUI.Model.EnableRuleController.OnMenuSelect=function(target,CommandId){var $0=target;var $1=$0[0];var $2=$1._ribbon;var $3;switch(CommandId){case 'remove_from_command':$3=ClientUI.Model.EnableRuleController.$1($0,$1);break;case 'delete_command':$3=ClientUI.Model.EnableRuleController.$0($1,$2);break;case 'copy':var $4=$2._parent;$4.setBusy();$4.isBusyMessage(ResourceStrings.CopyingToClipboard);window.setTimeout(function(){
try{var $1_0=ClientUI.ViewModel.RibbonPasteData.getControlClipboardEnableRule($1);$4.Clipboard($1_0);$4.isBusy(false);}catch($1_1){ClientUI.ViewModel.App.current.reportException($1_1,ResourceStrings.Error_DialogTitle);}},1000);break;}}
ClientUI.Model.EnableRuleController.$0=function($p0,$p1){var $0=[];var $enum1=ss.IEnumerator.getEnumerator($p1.SolutionCommands.ChildNodes());while($enum1.moveNext()){var $2=$enum1.current;if($2.EnableRules().contains($p0)){var $3=$2.EnableRules.indexOf($p0);var $4={command:$2,pos:$3};$0.add($4);}}var $enum2=ss.IEnumerator.getEnumerator($0);while($enum2.moveNext()){var $5=$enum2.current;var $6=$5['command'];$6.EnableRules.remove($p0);}var $1=ClientUI.Model.UndoStacks.SolutionElementsUndoStack.add($p0,$p1.SolutionEnableRules.ChildNodes,String.format(ResourceStrings.EnableRuleDeletedAndRemove,$0.length));$1.undoCallback=function($p1_0){
var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $1_0=$enum1.current;var $1_1=$1_0['command'];var $1_2=$1_0['pos'];$1_1.EnableRules.splice($1_2,0,$p1_0.item);}};$p1.SolutionEnableRules.ChildNodes.remove($p0);return $1;}
ClientUI.Model.EnableRuleController.$1=function($p0,$p1){var $0=$p0[1];var $1=ClientUI.Model.UndoStacks.PropertiesUndoStack.add($p1,$0.EnableRules,String.format(ResourceStrings.EnableRuleRemoved,$0.Id()));$0.EnableRules.remove($p1);return $1;}
ClientUI.Model.EnableRuleController.GetSolutionElementsContextMenu=function(target){var $0=target;var $1=new ClientUI.Library.ContextMenuVM();$1.items=[];$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('add_new_enable_rule',ResourceStrings.AddEnableRule,false));$1.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isEnableRuleInClipBoard($0._parent.Clipboard())));return $1;}
ClientUI.Model.EnableRuleController.OnSolutionElementsMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'paste':try{var $1=ClientUI.ViewModel.CrmNamespace.createEnableRule($0);var $2=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($0._parent.Clipboard());var $3=ClientUI.ViewModel.RibbonPasteData.instansiateEnabeRuleFromTemplate($2,$0,$1);$0.SolutionEnableRules.ChildNodes.push($3);}catch($4){ClientUI.ViewModel.App.current.showMessage(String.format(ResourceStrings.InvalidPasteData,$4.message));}break;case 'add_new_enable_rule':ClientUI.Model.EnableRule.addNewEnableRule(null,$0);break;}}
ClientUI.Model.HideCustomActionController=function(){}
ClientUI.Model.HideCustomActionController.hideControlCommand=function(control){if(!control.SolutionComponentType()){ClientUI.Model.HideCustomActionController.hideControl(control);}else{ClientUI.ViewModel.App.current.showMessage(ResourceStrings.Error_CannotHideButtonInSolution);}}
ClientUI.Model.HideCustomActionController.hideControl=function(control){var $0=ClientUI.Model.Ribbon.getRibbon(control);control.HiddenBySolution(true);var $1=new ClientUI.Model.HideCustomAction(control);$0.SolutionHideActions.ChildNodes.push($1);return $1;}
ClientUI.Model.HideCustomActionController.unHide=function(hideAction){var $0=hideAction._ribbon;var $1=hideAction.Location();if(Object.keyExists($0._SolutionButtonsIndex,$1)){ClientUI.Model.HideCustomActionController.unHideControlCommand($0._SolutionButtonsIndex[$1]);}else{$0.SolutionHideActions.ChildNodes.remove(hideAction);ClientUI.ViewModel.App.current.showMessage(ResourceStrings.ReLoadAfterUnHide);}}
ClientUI.Model.HideCustomActionController.unHideControlCommand=function(control){var $0=ClientUI.Model.Ribbon.getRibbon(control);$0.SolutionHideActions.ChildNodes.remove(function($p1_0){
var $1_0=$p1_0;return ($1_0.Location()===control.Id())||($1_0._hiddenControl===control);});control.HiddenBySolution(false);}
ClientUI.Model.HideCustomActionController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('unhide','Un-Hide'));return $0;}
ClientUI.Model.HideCustomActionController.OnMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'unhide':ClientUI.Model.HideCustomActionController.unHide($0);break;}}
ClientUI.Model.LayoutRow=function(){this.TemplateAlias=ko.observable();}
ClientUI.Model.NewsFeedItem=function(){this.IsVisible=ko.observable(false);}
ClientUI.Model.NewsFeedItem.prototype={Title:null,ImageSrc:null,Link:null}
ClientUI.Model.OrGroup=function(parent){this.OrRules=ko.observableArray();this._parentStep=parent;}
ClientUI.Model.OrGroup.prototype={_parentStep:null}
ClientUI.Model.RibbonControlCollection=function(){}
ClientUI.Model.RibbonControlCollection.$0=function($p0){if($p0._parentLayoutSection!=null){return $p0._parentLayoutSection._parentGroup._parentRibbon;}else if($p0._root!=null){return $p0._root._parentLayoutSection._parentGroup._parentRibbon;}else{throw new Error('Could not find parent ribbon for Group');}}
ClientUI.Model.RibbonControlCollection.prototype={_parentLayoutSection:null,_parent:null,_root:null}
window.IsControlVisible=function(control,root){var $0=root.RenderType()==='Ribbon';var $1=root.RenderType()==='Modern';var $2=root.RenderType()==='CommandBar';return true;}
window.GetControlId=function(control){if(control==null){return '';}var $0='control_';var $1='';if(control._parent!=null){$1=control._parent.Id();}else if(control._parentLayoutSection!=null){$1=control._parentLayoutSection._parentGroup.Id();}$0=$0+$1.replaceAll('.','_');$0=$0+control.Id().replaceAll('.','_');$0=$0.replaceAll('{','_').replaceAll('}','_').replaceAll('!','_');return $0;}
window.ExpandTokenisedUrl=function(url){if(url!=null){var $0=Xrm.Page.context.getClientUrl();if(url.indexOf('$webresource')>=0){url=$0+url.replaceAll('$webresource:','/Webresources/');}else{url=window.location.protocol+'//'+window.location.host+url;}}return url;}
window.GetImageUrl=function(root,image16,modernImage){var $0=root.RenderType()==='CommandBar';var $1={AALinkedInLogo:null,Abandon:null,Accept:null,AccessFile:null,Add:null,AddFriend:null,AddMembers:null,AddProduct:null,AddProductBundle:null,AddProductFamily:null,AddTerritoryMember:null,AddToQueue:null,AdvFind:null,AgendaActivityServiceAppointment:null,AlignWithFiscalPeriod:null,AreaChartMirrored:null,Arrow:null,Article:null,ArticleLink:null,AssociateChildCase:null,AssociatedArticle:null,Attach:null,Audio:null,AutomaticSuggestions:null,BackButton:null,BackButtonWithoutBorder:null,BarChartHorizontal:null,BarChartHorizontalMirrored:null,BarChartVertical:null,BarChartVerticalMirrored:null,Bot:null,BrowseCards:null,BulletListAdd:null,BulletListDownArrow:null,BulletListRemove:null,Camera:null,CampaignResolution:null,Cancel:null,CancelCase:null,CancelFilter:null,CardsDashboard:null,CardsInvoice:null,CardsLeads:null,CardsOpportunity:null,CardsQuote:null,CardsTask:null,CarouselView:null,Case:null,CaseNoActivity:null,CaseResolution:null,ChangeManager:null,Chat:null,Checkbox:null,CheckboxComposite:null,CheckedMail:null,ChevronDown:null,ChevronUp:null,ChromeMaximize:null,ChromeMinimize:null,ClearDefault:null,Clone:null,CloneProduct:null,Close:null,CloseDateComingSoon:null,CloseGoal:null,ClosePane:null,CloseQuote:null,Collapsed:null,CommandChecker:null,CompetitorMentioned:null,Connect:null,Connection:null,ConnectionRoleManageRecordType:null,ConnectionToMe:null,ContactInfo:null,ConvertKnowledgeArticle:null,Copy:null,CopyLink:null,CreateChildCase:null,CreateInvoice:null,CreateOrder:null,CreatePersonalView:null,CreateQuickCampaign:null,CreateQuote:null,CSR:null,CustomActivity:null,Delete:null,DeleteBulk:null,Details:null,DetailsPageClose:null,Diamond:null,DisassociatedArticle:null,DistributionList:null,DocumentTemplateEdit:null,DocumentTemplates:null,DocumentTemplateUpload:null,DonutChart:null,DoubleChevronLeft:null,DoubleChevronRight:null,DownArrow:null,Download:null,DropdownArrow:null,Dynamics365:null,Edit:null,EditDefaultFilter:null,EditSeries:null,EmailIncoming:null,EmailOutgoing:null,EndSeries:null,Entertainment:null,ErrorIcon:null,ExitButton:null,Expand:null,ExpandButton:null,Expanded:null,ExpandTile:null,FailedMail:null,Family:null,Fax:null,FaxIncoming:null,FaxOutgoing:null,Filter:null,FilterSolid:null,Find:null,FinishStage:null,FirstPageButton:null,FlsLocked:null,FolderSharedIcon:null,FormDesign:null,Forward:null,ForwardDisable:null,ForwardEmail:null,FulfillOrder:null,FunnelChart:null,GetProducts:null,GlobalFilter:null,GlobalFilterClearAll:null,GlobalFilterCollapse:null,GlobalFilterCollapsedRow:null,GlobalFilterCollapsedRowRTL:null,GlobalFilterExpand:null,GlobalFilterExpandedRow:null,Graph:null,GroupAnd:null,GroupOr:null,GuestUser:null,HandClick:null,HappySmiley:null,Health:null,HeartEmpty:null,HeartFilled:null,Help:null,HideInSimpleMode:null,HideVisualFilter:null,HighPriority:null,History:null,Home:null,Html:null,IconDue:null,Image:null,Import:null,InformationIcon:null,InteractiveDashboard:null,IssueDetection:null,JoinTeams:null,KBRecords:null,Lead:null,LeftArrowHead:null,LeftChevron:null,Letter:null,LetterIncoming:null,LetterOutgoing:null,LinkArticle:null,LinkedInLogo:null,ListIcon:null,Lock:null,Locked:null,LockPricing:null,LowPriority:null,Mail:null,Manage:null,ManageRoles:null,MeetingRequest:null,MembersIcon:null,Messenger:null,MiniContract:null,MiniExpand:null,MissedCloseDate:null,More:null,MoreOptions:null,msdyn_enhancedsla:null,msdyn_enhancedslakpi:null,msdyn_enhancedslakpiinstance:null,MSTeamsIcon:null,MultiSelect:null,MultiSelectMirrored:null,MyDocumentTemplates:null,NearbyCustomers:null,NewFax:null,NewLetter:null,NewRecurringAppointment:null,NewServiceActivity:null,NoActivityWithAccount:null,NormalPriority:null,Notes:null,NotificationIcon:null,OfficeWaffle:null,OfflineStatus:null,OneDriveIcon:null,OneNote:null,OneNoteFile:null,OOF:null,OpenDelve:null,OpenEmail:null,OpenEntityRecord:null,OpenInBrowser:null,OpenInPowerBI:null,OpenMailbox:null,OpenPane:null,OpenPowerBIReport:null,OpportunitiesList:null,Opportunity:null,OpportunityAtRiskSentiment:null,OpportunityNoActivity:null,Options:null,OptionsetIcon:null,Page:null,PageSolid:null,PanelHeaderImportDataIcon:null,PdfIconFile:null,People:null,PeopleBlock:null,Phone:null,PhoneCallIncoming:null,PhoneCallOutgoing:null,PieDouble:null,Pinned:null,PinnedSolid:null,Play:null,PopOverButton:null,Post:null,PresentationFile:null,ProductPreview:null,ProductUpsell:null,ProjectFile:null,PublishKnowledgeArticle:null,QueueIcon:null,QueueItemDetail:null,QueueItemRelease:null,QueueItemRemove:null,ReactivateCase:null,ReactivateLead:null,Recent:null,RecentCases:null,RecentMeeting:null,Recurrence:null,ReduceTile:null,Refresh:null,RefreshDevice:null,RelationshipAssistant:null,RelevantNews:null,ReminderWithCall:null,RemoveMembers:null,RemoveTerritoryMember:null,ReOpenOpportunity:null,ReplaceContentIcon:null,Reply:null,ReplyAllEmail:null,ReplyEmail:null,Report:null,ResizeHandle:null,RestoreArticle:null,RetireProduct:null,RightChevron:null,RunQuery:null,SadSmiley:null,SalesLiterature:null,Save:null,SaveAndClose:null,SaveAndEdit:null,SaveFilterToCurrentPersonalView:null,SaveFilterToNewPersonalView:null,ScatterChart:null,ScrollLeft:null,ScrollRight:null,ScrollUpDown:null,SearchButton:null,SelectButton:null,SelectButtonRTL:null,SelectView:null,SemanticZoom:null,SemanticZoomMirrored:null,SendAndClose:null,SendDirectEmail:null,SendEmail:null,SendSelected:null,SendToCTI:null,ServiceActivity:null,SetActiveButton:null,SetAsDefaultView:null,SetAsHome:null,SetDefault:null,SetRegarding:null,Settings:null,SettingsListIcon:null,Share:null,SharePointAddDocumentLocation:null,SharePointChangeLocation:null,SharePointCheckinDocument:null,SharePointCheckoutDocument:null,SharePointDeleteDocument:null,SharePointDiscardCheckoutDocument:null,SharePointEditDocument:null,SharePointEditDocumentProperties:null,SharePointIcon:null,SharePointNewExcelDocument:null,SharePointNewOneNoteDocument:null,SharePointNewPowerPointDocument:null,SharePointNewWordDocument:null,SharePointOpenLocation:null,SharePointUploadDocument:null,SidePanelUpload:null,SiteMap:null,SocialActivityIncoming:null,SocialActivityOutgoing:null,SortButton:null,Spinning:null,Sports:null,StageAdvance:null,StopIcon:null,StreamView:null,SubscriptionAdd:null,SwitchProcess:null,Sync:null,SystemDocumentTemplates:null,SystemPost:null,TableGroup:null,TableLink:null,TagChart:null,TaskBasedFlow:null,Teaser:null,ThumbsDown:null,ThumbsDownSolid:null,ThumbsUp:null,ThumbsUpSolid:null,Ticker:null,Tiles:null,TileView:null,Tools:null,TripleColumn:null,Ungroup:null,UnlinkArticle:null,UnlockPricing:null,Unpin:null,UntrackedEmail:null,UpArrow:null,UpArrowHead:null,UpcomingFlight:null,UpcomingMeeting:null,UseCurrentPricing:null,Video:null,View:null,ViewAllMyDocumentTemplates:null,ViewHierarchy:null,ViewIcon:null,ViewNotifications:null,VisioFile:null,VisualFilter:null,Warning:null,WordTemplates:null,YammerIcon:null,YesNo:null,AddExisting:'Add',New:'Add',Plus:'Add',SharePointNewDocument:'Add',CreateView:'Add',MarkAsLost:'Blocked',Recalculate:'Calculator',SuccessIcon:'Completed',Convert:'ConvertTo',CustomList:'ActivateOrders',Remove:'Delete',Clear:'Delete',DiscardArticle:'Delete',ExportToExcel:'Certificate',RatingEmpty:'FavoriteStar',Follow:'FavoriteStar',OfficeIconPdfFile:'Fax',AgendaActivityFax:'Fax',Flows:'Flow',ConnectionToOther:'FollowUser',Assign:'FollowUser',Metric:'LineChart',AreaChart:'LineChart',SendByEmail:'Mail',Email:'Mail',EmailLink:'MailLink',Campaign:'Megaphone',Activate:'PageCompleted',NewTask:'PageCompleted',ResolveCase:'PageCompleted',BackwardButton:'Preview',ForwardButton:'PageRight',NewPhoneCall:'Phone',Phonecall:'Phone',Pin:'EditMail',Placeholder:'Puzzle',Reactivate:'Refresh',MarkAsWon:'Ribbon',InsertKbArticle:'TextDocument',SharePointOpenDocument:'TextDocument',OfficeIconTextFile:'TextDocument',NumberOfViews:'View',ShowInSimpleMode:'View',Word:'WordLogo16',CheckMark:'Accept',ApplyFilter:'Accept',SaveAsComplete:'Accept',ApproveArticle:'Accept',ActivateQuote:'ActivateOrders',InvoicePaid:'ActivateOrders',DocumentTemplateActivate:'ActivateOrders',AddProducts:'AddProduct',SetAsDefault:'AppIconDefaultCheckmark',ArchiveArticle:'Archive',Disqualify:'CallDisqualify',Qualify:'CallQualify',Contract:'Certificate',Default:'Certificate',Task:'CheckboxComposite',RemoveFilter:'Clear',Major:'CreateMajor',Minor:'CreateMinor',RelateProduct:'DOM',NewEmail:'EditMail',Favorite:'FavoriteStarFill',RatingFull:'FavoriteStarFill',QueueItemPick:'OpenEnrollment',ReassignRecords:'OpenEnrollment',OfficeIconPowerPointFile:'OpenEnrollment',Revise:'OpenEnrollment',Drilldown:'Org',AssociateCategory:'Org',DeActivate:'PageBlock',ApplyTemplate:'Preview',ProductPublish:'Publish',RelateArticle:'RelatedKnowledgeArticle',RevertToDraftArticle:'RevertToDraft',SaveAndRunRoutingRule:'RoutingRule',RunRoutingRule:'RoutingRule',QueueItemRoute:'RoutingRule',SelectChart:'SentimentScore',Process:'TaskSequence',Language:'TranslationNew',Translate:'TranslationNew',UpdateArticle:'UpdateRestore',Appointment:'Calendar',NewAppointment:'Calendar',CancelInvoice:'DeactivateOrders',CancelOrder:'DeactivateOrders',DocumentTemplateDeactivate:'DeactivateOrders',PencilIcon:'Edit',SharePointEditLocation:'Edit',EditView:'Edit',MergeRecords:'MergeCase',Print:'DeactivateOrders',EnableSecurityRoles:'RoutingRule',URL:'Ribbon'};var $2='';if($0){if(Object.keyExists($1,modernImage)){modernImage=$1[modernImage];}if(modernImage!=null&&modernImage.length>0){if(modernImage.indexOf('.')===-1){return '/uclient/resources/images/'+modernImage+'.svg';}else{return modernImage;}}}return image16;}
window.TruncateLabel=function(text){if(text!=null&&text.length>30){return text.substring(0,30)+'...';}else{return text;}}
window.GetRibbonElementType=function(item){if(ClientUI.Model.SmartButton.isSmartButton(item)){return 'SmartButton';}var $0='unknown';if(item!=null){if(('__type' in item)){$0=GetRibbonType(item);}else if((typeof(item.LayoutSections)==='function')){return 'Group';}else if((typeof(item.ControlType)==='function')){var $1=(item).ControlType();switch($1){case 0:return 'ButtonControl';case 1:return 'FlyOutAnchorControl';case 4:return 'Menu';case 6:return 'MenuSectionControl';case 5:return 'Popup';case 2:return 'SplitButtonControl';case 3:return 'SplitButtonControl';}}else if(('Actions' in item)){$0='command';}else if(('OrRules' in item)){$0='OrGroup';}}return $0;}
window.GetRibbonType=function(item){var $0=(item.__type!=null)?ko.utils.unwrapObservable(item.__type):'object';var $1=$0.indexOf(':#');if($1>-1){$0=$0.substring(0,$1);}return $0;}
window.GetRibbonTypeName=function(item){var $0=GetRibbonType(item);switch($0){case 'JavascriptFunctionCommandAction':return 'Custom Javascript Action';case 'UrlCommandAction':return 'Url Command Action';case 'StringParameter':return 'String Parameter';case 'IntParameter':return 'Int Parameter';case 'BoolParameter':return 'Boolean Parameter';case 'DecimalParameter':return 'Decimal Parameter';case 'CrmParameter':return 'Crm Parameter';}var $1=$0;switch($1){case 'CommandClientTypeRule':case 'CrmClientTypeRule':case 'CrmOfflineAccessStateRule':case 'CrmOutlookClientTypeRule':case 'CrmOutlookClientVersionRule':case 'CustomRule':case 'EntityPrivilegeRule':case 'EntityPropertyRule':case 'EntityRule':case 'FormEntityContextRule':case 'FormStateRule':case 'FormTypeRule':case 'HideForTabletExperienceRule':case 'MiscellaneousPrivilegeRule':case 'OptionSetRule':case 'OrDisplayRule':case 'OrEnableRule':case 'OrganizationSettingRule':case 'OrGroup':case 'OrRule':case 'OutlookItemTrackingRule':case 'OutlookRenderTypeRule':case 'OutlookVersionRule':case 'PageRule':case 'RecordPrivilegeRule':case 'ReferencingAttributeRequiredRule':case 'RelationshipTypeRule':case 'SelectionCountRule':case 'SkuRule':case 'ValueRule':return $0;}return $0;}
window.GetElementDescription=function(item){var $0=GetRibbonType(item);switch($0){case 'JavascriptFunctionCommandAction':var $1=item;return String.format('{0} > {1}',ko.utils.unwrapObservable($1.Library),ko.utils.unwrapObservable($1.FunctionName));case 'UrlCommandAction':var $2=item;return String.format('{0}',ko.utils.unwrapObservable($2.Address));case 'StringParameter':case 'IntParameter':case 'BoolParameter':case 'DecimalParameter':var $3=item;return String.format('{0} = {1}',ko.utils.unwrapObservable($3.Name),ko.utils.unwrapObservable($3.Value));case 'CrmParameter':var $4=item;var $5='';var $6=ko.utils.unwrapObservable($4.Value);ClientUI.Model.CommandActionParameter.CrmValues.forEach(function($p1_0){
if($p1_0['value']===$6){$5=$p1_0['name'];return false;}});return String.format('{0} = {1}',ko.utils.unwrapObservable($4.Name),$5);}return '';}
window.IsFlyout=function(control){var $0=control.ControlType();return $0===1||$0===2||$0===4;}
window.SetParentControl=function(control,parent){var $0=ko.utils.unwrapObservable(control);(control)['_layoutParent']=parent;}
window.SetRibbon=function(control,parent){var $0=ko.utils.unwrapObservable(control);(control)['_ribbon']=parent;}
window.GetRibbonProperty=function(control,property,defaultValue){var $0=ko.utils.unwrapObservable(control[property]);if($0==null){return defaultValue;}else{return $0;}}
ClientUI.Model.RibbonTabGroup=function(ribbon,id,position){this.Tabs=ko.observableArray();this.RibbonPosition=ko.observable();this.$0=ribbon;this.Id=id;this.RibbonPosition(position);}
ClientUI.Model.RibbonTabGroup.filterTabGroups=function(ribbon){if(ribbon.TabGroups==null){ribbon.TabGroups=ko.observableArray();}else{ribbon.TabGroups.removeAll();}var $0=new ClientUI.Model.RibbonTabGroup(ribbon,'Home',0);var $1=new ClientUI.Model.RibbonTabGroup(ribbon,'SubGrid',2);var $2=new ClientUI.Model.RibbonTabGroup(ribbon,'Form',1);var $3=new ClientUI.Model.RibbonTabGroup(ribbon,'Other',4);var $enum1=ss.IEnumerator.getEnumerator(ribbon.Tabs());while($enum1.moveNext()){var $4=$enum1.current;var $5=null;switch($4.RibbonPosition()){case 0:$5=$0;break;case 2:$5=$1;break;case 1:$5=$2;break;default:$5=$3;break;}$5.Tabs.push($4);}ribbon.TabGroups.push($0);ribbon.TabGroups.push($1);ribbon.TabGroups.push($2);if($3!=null&&$3.Tabs().length>0){ribbon.TabGroups.push($3);}}
ClientUI.Model.RibbonTabGroup.prototype={Id:null,$0:null}
ClientUI.Model.RibbonValidationMessage=function(messageType,message){ClientUI.Model.RibbonValidationMessage.initializeBase(this,['ribbonvalidationmessage']);this.MessageType=messageType;this.Message=message;}
ClientUI.Model.RibbonValidationMessage.prototype={EntityLogicalName:null,Message:null,MessageType:0}
ClientUI.Model.RuleStepController=function(){}
ClientUI.Model.RuleStepController.GetContextMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete','Delete'));return $0;}
ClientUI.Model.RuleStepController.OnMenuSelect=function(target,CommandId){var $0=target;switch(CommandId){case 'delete':var $1=($0._parentDisplayRule!=null)?$0._parentDisplayRule:$0._parentEnableRule;var $2=$0._parentOrGroup;if($2!=null){ClientUI.Model.UndoStacks.PropertiesUndoStack.add($0,$2.OrRules,'Or Step Deleted');$2.OrRules.remove($0);}else{ClientUI.Model.UndoStacks.PropertiesUndoStack.add($0,$1.Steps,'Step Deleted');$1.Steps.remove($0);}break;}}
ClientUI.Model.RuleStepController.GetOrGroupMenu=function(target){var $0=new ClientUI.Library.ContextMenuVM();$0.items=[];$0.items.add(new ClientUI.Library.ContextMenuItemVM('delete','Delete Or Group'));return $0;}
ClientUI.Model.RuleStepController.OnOrGroupMenu=function(target,CommandId){var $0=target;switch(CommandId){case 'delete':$0._parentStep.Or.remove($0);break;}}
ClientUI.Model.RuleStepController.OnAddOrGroup=function(orRule){var $0=new ClientUI.Model.OrGroup(orRule);orRule.Or.push($0);}
ClientUI.Model.RuleStepController.GetAddStepMenu=function(target){var $0=target;var $1=GetRibbonElementType(target)==='OrGroup';var $2=GetRibbonElementType(target)==='EnableRule';var $3=GetRibbonElementType(target)==='DisplayRule';var $4=target;if($1){var $7=target;var $8=$7._parentStep;$2=!ss.isUndefined($8._parentEnableRule);$3=!ss.isUndefined($8._parentDisplayRule);}var $5=$0._ribbon;var $6=new ClientUI.Library.ContextMenuVM();$6.items=[];if($3||$2){$6.items.add(new ClientUI.Library.ContextMenuItemVM('CrmClientTypeRule','CrmClientTypeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('CrmOfflineAccessStateRule','CrmOfflineAccessStateRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('CrmOutlookClientTypeRule','CrmOutlookClientTypeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('EntityRule','EntityRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('FormStateRule','FormStateRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OrRule','OrRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OutlookVersionRule','OutlookVersionRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('PageRule','PageRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('SkuRule','SkuRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('ValueRule','ValueRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('CommandClientTypeRule','CommandClientTypeRule'));}if($3){$6.items.add(new ClientUI.Library.ContextMenuItemVM('CrmOutlookClientVersionRule','CrmOutlookClientVersionRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('EntityPrivilegeRule','EntityPrivilegeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('EntityPropertyRule','EntityPropertyRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('FormEntityContextRule','FormEntityContextRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('FormTypeRule','FormTypeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('HideForTabletExperienceRule','HideForTabletExperienceRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OptionSetRule','OptionSetRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('MiscellaneousPrivilegeRule','MiscellaneousPrivilegeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OrganizationSettingRule','OrganizationSettingRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OutlookRenderTypeRule','OutlookRenderTypeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('ReferencingAttributeRequiredRule','ReferencingAttributeRequiredRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('RelationshipTypeRule','RelationshipTypeRule'));}if($2){$6.items.add(new ClientUI.Library.ContextMenuItemVM('CustomRule','CustomRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('OutlookItemTrackingRule','OutlookItemTrackingRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('RecordPrivilegeRule','RecordPrivilegeRule'));$6.items.add(new ClientUI.Library.ContextMenuItemVM('SelectionCountRule','SelectionCountRule'));}$6.items.sort(function($p1_0,$p1_1){
return String.compare($p1_0.name,$p1_1.name);});return $6;}
ClientUI.Model.RuleStepController.OnAddRule=function(target,typeName){var $0=null;var $1=null;var $2=GetRibbonElementType(target);switch($2){case 'OrGroup':var $3=target;$0=ClientUI.Model.RuleStep.newDisplayRuleStep(null,$3);$0.__type(typeName);$0._parentDisplayRule=$3._parentStep._parentDisplayRule;$0._parentEnableRule=$3._parentStep._parentEnableRule;$0.Steps=ko.observableArray();$1=$3.OrRules;break;case 'EnableRule':$0=ClientUI.Model.RuleStep.newEnableRuleStep(target,null);$0.__type(typeName);$1=$0._parentEnableRule.Steps;break;case 'DisplayRule':$0=ClientUI.Model.RuleStep.newDisplayRuleStep(target,null);$0.__type(typeName);$1=$0._parentDisplayRule.Steps;break;}if(typeName==='OrRule'){$0.Or=ko.observableArray();$0.Or.push(new ClientUI.Model.OrGroup($0));$0.Or.push(new ClientUI.Model.OrGroup($0));}else if(typeName==='CustomRule'){$0.Parameters=ko.observableArray();}$1.push($0);}
ClientUI.Model.UndoStack=function(){this.$0=ko.observableArray();this.UndoVisible=ko.dependentObservable(ss.Delegate.create(this,function(){
return this.$0().length>0;}));this.UndoMessage=ko.dependentObservable(ss.Delegate.create(this,function(){
var $1_0=this.$0();if($1_0.length>0){var $1_1=$1_0[$1_0.length-1];return $1_1.message;}return '';}));}
ClientUI.Model.UndoStack.prototype={UndoVisible:null,UndoMessage:null,add:function(item,collection,message){var $0=collection.indexOf(item);var $1=new ClientUI.Model.UndoItem(item,$0,collection,message);this.$0.push($1);window.setTimeout(ss.Delegate.create(this,function(){
this.$0.remove($1);}),15000);return $1;},$1:null,Undo:function(){if(this.$1==null){this.$1=ss.Delegate.create(this,function(){
var $1_0=this.$0.pop();if($1_0!=null){$1_0.collection.splice($1_0.position,0,$1_0.item);if($1_0.undoCallback!=null){$1_0.undoCallback($1_0);}}});}return this.$1;},$2:null,Dismiss:function(){if(this.$2==null){this.$2=ss.Delegate.create(this,function(){
this.$0.pop();});}return this.$2;}}
ClientUI.Model.UndoStacks=function(){}
ClientUI.Model.CommandAction=function(){this.__type=ko.observable();this.Address=ko.observable();this.PassParams=ko.observable();this.WinMode=ko.observable();this.WinParams=ko.observable();this.FunctionName=ko.observable();this.Library=ko.observable();this.Parameters=ko.observableArray();}
ClientUI.Model.CommandAction.queryJavascriptWebresources=function(term,callback){term=term.replaceAll('$webresource:','');var $0='<fetch distinct="false" no-lock="false" mapping="logical" count="250">\r\n                             <entity name="webresource">\r\n                              <attribute name="displayname" />\r\n                              <attribute name="name" />\r\n                                <filter type="and">\r\n                                  <condition attribute="webresourcetype" operator="eq" value="3" />\r\n                                  <filter type="or">\r\n                                    <condition attribute="name" operator="like" value="%{0}%"/>\r\n                                    <condition attribute="displayname" operator="like" value="%{0}%" />\r\n                                  </filter>\r\n                                </filter>\r\n                                <order attribute="name"/>\r\n                             </entity>\r\n                            </fetch>';$0=String.format($0,Xrm.Sdk.XmlHelper.encode(term));Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $enum1=ss.IEnumerator.getEnumerator($1_0.get_entities());while($enum1.moveNext()){var $1_1=$enum1.current;$1_1.setAttributeValue('value','$webresource:'+$1_1.getAttributeValueString('name'));}callback($1_0);});}
ClientUI.Model.CommandAction.queryImageWebresources=function(term,callback){term=term.replaceAll('$webresource:','');var $0='<fetch distinct="false" no-lock="false" mapping="logical" count="250">\r\n                             <entity name="webresource">\r\n                              <attribute name="displayname" />\r\n                              <attribute name="name" />\r\n                                <filter type="and">\r\n                                  <condition attribute="name" operator="like" value="%{0}%"/>\r\n                                  <filter type="or">\r\n                                            <condition attribute="webresourcetype" operator="eq" value="5" />\r\n                                            <condition attribute="webresourcetype" operator="eq" value="6" />\r\n                                            <condition attribute="webresourcetype" operator="eq" value="7" />\r\n                                        </filter>\r\n                                </filter>\r\n                                 <order attribute="name"/>\r\n                             </entity>\r\n                            </fetch>';$0=String.format($0,Xrm.Sdk.XmlHelper.encode(term));Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $enum1=ss.IEnumerator.getEnumerator($1_0.get_entities());while($enum1.moveNext()){var $1_1=$enum1.current;$1_1.setAttributeValue('value','$webresource:'+$1_1.getAttributeValueString('name'));}callback($1_0);});}
ClientUI.Model.CommandAction.querySvgWebresources=function(term,callback){term=term.replaceAll('$webresource:','');var $0='<fetch distinct="false" no-lock="false" mapping="logical" count="250">\r\n                             <entity name="webresource">\r\n                              <attribute name="displayname" />\r\n                              <attribute name="name" />\r\n                                <filter type="and">\r\n                                  <condition attribute="name" operator="like" value="%{0}%"/>\r\n                                  <filter type="or">\r\n                                            <condition attribute="webresourcetype" operator="eq" value="11" />\r\n                                        </filter>\r\n                                </filter>\r\n                                 <order attribute="name"/>\r\n                             </entity>\r\n                            </fetch>';$0=String.format($0,Xrm.Sdk.XmlHelper.encode(term));Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $enum1=ss.IEnumerator.getEnumerator($1_0.get_entities());while($enum1.moveNext()){var $1_1=$enum1.current;$1_1.setAttributeValue('value','$webresource:'+$1_1.getAttributeValueString('name'));}callback($1_0);});}
ClientUI.Model.CommandAction.prototype={_expanded:null,_command:null}
ClientUI.Model.CommandActionParameter=function(){this.__type=ko.observable();this.Name=ko.observable();this.Value=ko.observable();}
ClientUI.Model.CommandActionParameter.prototype={_expanded:null,_action:null}
ClientUI.Model.CommandDefinition=function(){this.Id=ko.observable();this.Actions=ko.observableArray();this.DisplayRuleIds=ko.observableArray();this.EnableRuleIds=ko.observableArray();this.DisplayRules=ko.observableArray();this.EnableRules=ko.observableArray();}
ClientUI.Model.CommandDefinition.$0=function($p0){$p0.DisplayRuleIds.removeAll();$p0.EnableRuleIds.removeAll();var $enum1=ss.IEnumerator.getEnumerator($p0.EnableRules());while($enum1.moveNext()){var $0=$enum1.current;$p0.EnableRuleIds.push($0.Id());}var $enum2=ss.IEnumerator.getEnumerator($p0.DisplayRules());while($enum2.moveNext()){var $1=$enum2.current;$p0.DisplayRuleIds.push($1.Id());}}
ClientUI.Model.CommandDefinition.prototype={_ribbon:null}
ClientUI.Model.DisplayRule=function(ribbon){this.__type='DisplayRule';this.Id=ko.observable();this.IsCore=ko.observable(false);this.Steps=ko.observableArray();this._ribbon=ribbon;if(this._ribbon!=null){this.Id(ClientUI.ViewModel.CrmNamespace.createDisplayRule(ribbon));}}
ClientUI.Model.DisplayRule.addNewDisplayRule=function(command,ribbon){var $0=new ClientUI.Model.DisplayRule(ribbon);ribbon.SolutionDisplayRules.ChildNodes.push($0);if(command!=null){command.DisplayRules.push($0);}ribbon._parent.EditingItem($0);ribbon.SolutionDisplayRules._expanded(true);}
ClientUI.Model.DisplayRule.prototype={_ribbon:null}
ClientUI.Model.EnableRule=function(ribbon){this.__type='EnableRule';this.Id=ko.observable();this.IsCore=ko.observable(false);this.Steps=ko.observableArray();this._ribbon=ribbon;if(this._ribbon!=null){this.Id(ClientUI.ViewModel.CrmNamespace.createEnableRule(ribbon));}}
ClientUI.Model.EnableRule.addNewEnableRule=function(command,ribbon){var $0=new ClientUI.Model.EnableRule(ribbon);ribbon.SolutionEnableRules.ChildNodes.push($0);if(command!=null){command.EnableRules.push($0);}ribbon._parent.EditingItem($0);ribbon.SolutionEnableRules._expanded(true);}
ClientUI.Model.EnableRule.prototype={_ribbon:null}
ClientUI.Model.HideCustomAction=function(controlToHide){this.Id=ko.observable();this.Location=ko.observable();this.__type='HideCustomAction';this._ribbon=ClientUI.Model.Ribbon.getRibbon(controlToHide);this.Location(controlToHide.Id());this.Id(ClientUI.ViewModel.CrmNamespace.$2(this,controlToHide,this._ribbon));this._hiddenControl=controlToHide;}
ClientUI.Model.HideCustomAction.prototype={_hiddenControl:null,_ribbon:null}
ClientUI.Model.RibbonTab=function(){}
ClientUI.Model.RibbonTab.prototype={_ribbon:null,Id:null,Customised:null,SolutionComponentType:null,Groups:null,RibbonPosition:null}
ClientUI.Model.RuleStep=function(group){this.__type=ko.observable();this.Default=ko.observable();this.InvertResult=ko.observable();this._parentOrGroup=group;}
ClientUI.Model.RuleStep.newDisplayRuleStep=function(parent,group){var $0=new ClientUI.Model.RuleStep(group);$0._parentDisplayRule=parent;return $0;}
ClientUI.Model.RuleStep.newEnableRuleStep=function(parent,group){var $0=new ClientUI.Model.RuleStep(group);$0._parentEnableRule=parent;$0._parentOrGroup=group;return $0;}
ClientUI.Model.RuleStep.prototype={_parentDisplayRule:null,_parentEnableRule:null,_parentOrGroup:null,Steps:null,Or:null,Parameters:null}
ClientUI.Model.UndoItem=function(item,position,collection,message){this.item=item;this.position=position;this.collection=collection;this.message=message;}
ClientUI.Model.UndoItem.prototype={collection:null,position:0,item:null,message:null,undoCallback:null}
ClientUI.Model.FlyoutControl=function(){}
ClientUI.Model.FlyoutControl.setupFlyoutCollection=function(flyout,parent,root){if(flyout.FlyoutOpen==null){flyout.FlyoutOpen=ko.observable(false);}else{flyout.FlyoutOpen(false);}if(flyout._parent==null){flyout._parent=parent;}if(flyout._root==null){flyout._root=root;}if(flyout.ControlType()===2||flyout.ControlType()===1){if(flyout.Controls==null||flyout.Controls()==null){flyout.Controls=ko.observableArray();}var $0=flyout.Controls;if($0._root==null){$0._root=root;}if($0._parent==null){$0._parent=flyout;}var $enum1=ss.IEnumerator.getEnumerator(flyout.Controls());while($enum1.moveNext()){var $1=$enum1.current;$1.onFlyout=true;ClientUI.Model.FlyoutControl.setupFlyoutCollection($1,flyout,root);}}}
ClientUI.Model.FlyoutControl.closeFlyouts=function(control){var $0=(control._parent==null)?control._root:control._parent;if($0!=null&&$0.Controls!=null){var $enum1=ss.IEnumerator.getEnumerator($0.Controls());while($enum1.moveNext()){var $1=$enum1.current;$1.FlyoutOpen(false);}}}
ClientUI.Model.FlyoutControl.$0=function($p0){var $0=new ClientUI.Model.RibbonControl(6,'newsection',null,null);$0._parent=$p0;$0._root=$p0._root;$0.onFlyout=true;$0.Id(ClientUI.ViewModel.CrmNamespace.$1($0,$p0._parentLayoutSection.Controls));$0.FlyoutOpen=ko.observable(false);return $0;}
ClientUI.Model.FlyoutControl.hasFlyout=function(control){var $0=control.ControlType();switch($0){case 1:case 4:case 2:return true;default:return false;}}
ClientUI.Model.FlyoutControl.$1=function($p0){if($p0.Controls!=null&&$p0.Controls()!=null){var $enum1=ss.IEnumerator.getEnumerator($p0.Controls());while($enum1.moveNext()){var $0=$enum1.current;if($0.FlyoutOpen!=null){$0.FlyoutOpen(false);}ClientUI.Model.FlyoutControl.$1($0);}}}
ClientUI.Model.Label=function(){this.LCID=ko.observable();this.Text=ko.observable();this.Id=ko.observable();}
ClientUI.Model.Label.setLabel=function(labels,Id,lcid,text){var $0=ClientUI.Model.Label.getLabel(labels,Id,lcid,null,false);if($0==null&&text!=null){$0=new ClientUI.Model.Label();$0.LCID(parseInt(lcid));$0.Id(Id);labels.push($0);}if(text!=null){$0.Text(text);}else{labels.remove($0);}}
ClientUI.Model.Label.getLabel=function(labels,Id,lcid,defaultLcid,fallback){var $0=null;labels().filter(function($p1_0){
var $1_0=$p1_0;if($1_0.LCID().toString()===lcid&&($1_0.Id()===Id)){$0=$1_0;return false;}return true;});if($0==null&&defaultLcid!=null){$0=ClientUI.Model.Label.getLabel(labels,Id,defaultLcid,null,false);}else if(labels==null&&defaultLcid==null&&fallback){$0=ClientUI.Model.Label.getLabel(labels,Id,'-1',null,false);}return $0;}
ClientUI.Model.RibbonGroup=function(){this.Id=ko.observable();this.Customised=ko.observable();this.LayoutSections=ko.observableArray();this.SolutionComponentType=ko.observable();this.Sequence=ko.observable();this.TitleText=ko.observable();this.Labels=ko.observableArray();this.ControlCollectionId=ko.observable();}
ClientUI.Model.RibbonGroup.flattenGroup=function(group){var $0=[];var $enum1=ss.IEnumerator.getEnumerator(group.LayoutSections());while($enum1.moveNext()){var $1=$enum1.current;var $enum2=ss.IEnumerator.getEnumerator($1.Controls());while($enum2.moveNext()){var $2=$enum2.current;$0.add($2);}}return $0;}
ClientUI.Model.RibbonGroup.$0=function($p0,$p1,$p2,$p3){if(!$p1.endsWith('Text')){throw new Error('Must end with Text');}var $0=$p1.substr(0,$p1.length-4);var $1=($p0)[$p1];var $2=($1!=null)?$1():null;ClientUI.Model.Label.setLabel($p0.Labels,$0,$p2,$2);if($1!=null){var $3=ClientUI.Model.Label.getLabel($p0.Labels,$0,$p3,null,false);if($3!=null){$1($3.Text());}}}
ClientUI.Model.RibbonGroup.syncLabelsForGroup=function(groups,previousLCID,currentLCID){var $enum1=ss.IEnumerator.getEnumerator(groups);while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.RibbonGroup.$0($0,'TitleText',previousLCID,currentLCID);var $enum2=ss.IEnumerator.getEnumerator($0.LayoutSections());while($enum2.moveNext()){var $1=$enum2.current;var $enum3=ss.IEnumerator.getEnumerator($1.Controls());while($enum3.moveNext()){var $2=$enum3.current;ClientUI.Model.RibbonControl.syncLabels($2,previousLCID,currentLCID);}}}}
ClientUI.Model.RibbonGroup.setDropProperties=function(group,groups,targetPosition){group._parentTab=groups._tab;group._parentRibbon=groups._parentRibbon;group.Customised(true);group.TabId=group._parentTab.Id();var $0=group._parentTab.SolutionComponentType();var $1=group.SolutionComponentType()===1;var $2=$0===1||$0===2;var $3=group._parentRibbon;if($2&&$1){$3.SolutionGroups.ChildNodes.remove(group);group.SolutionComponentType(2);}else if(!$2&&!$1){$3.SolutionGroups.ChildNodes.push(group);group.SolutionComponentType(1);}var $4=groups;var $5=null;var $6=null;var $7=targetPosition;var $8=targetPosition+1;var $9=$4();if(!$9.contains(group)){$7=$7-1;$8=$8-1;}else{var $B=$9.indexOf(group);if(targetPosition<$B){$7=$7-1;$8=$8-1;}}if(targetPosition<=0&&$9.length>0){$5=0;var $C=$9[0];$6=parseInt($C.Sequence());}else if(targetPosition<$9.length){var $D=$9[$7];$5=parseInt($D.Sequence());var $E=$9[$8];$6=parseInt($E.Sequence());}if($5==null){$5=0;}if($6==null){$6=$5+10;}var $A=Math.round($5+(($6-$5)/2));group.Sequence($A.toString());}
ClientUI.Model.RibbonGroup.groupAfterDrop=function(args){var $0=args.item;if(ClientUI.ViewModel.ToolboxControls.isToolboxControl($0)){args.cancelDrop=true;var $1=new ClientUI.Model.RibbonGroup();var $2=args.targetParent;var $3=new ClientUI.Model.LayoutSection();$3._parentGroup=$1;$3.PlaceholderCount(0);var $4=new ClientUI.Model.LayoutRow();$4.TemplateAlias('-');$3.Rows.push($4);($3.Controls)._parentLayoutSection=$3;$1.LayoutSections.push($3);($1.LayoutSections)._parentGroup=$1;ClientUI.Model.RibbonGroup.setDropProperties($1,$2,args.targetIndex);$1.Id(ClientUI.ViewModel.CrmNamespace.$0($1,$1._parentTab));(args.targetParent).splice(args.targetIndex,0,$1);}else{var $5=args.item;var $6=args.targetParent;ClientUI.Model.RibbonGroup.setDropProperties($5,$6,args.targetIndex);}}
ClientUI.Model.RibbonGroup.$1=function($p0){var $enum1=ss.IEnumerator.getEnumerator($p0.LayoutSections());while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.RibbonControl.setCommandCore($0.Controls());}}
ClientUI.Model.RibbonGroup.prototype={_parentRibbon:null,_parentTab:null,TabId:null}
ClientUI.Model.GroupCollection=function(){}
ClientUI.Model.GroupCollection.prototype={_parentRibbon:null,_tab:null}
ClientUI.Model.LayoutSectionCollection=function(){}
ClientUI.Model.LayoutSectionCollection.prototype={_parentGroup:null}
ClientUI.Model.LayoutSection=function(){this.Id=ko.observable('');this.GroupId=ko.observable('');this.Controls=ko.observableArray();this.Rows=ko.observableArray();this.PlaceholderCount=ko.observable();}
ClientUI.Model.LayoutSection.GetTemplateAlias=function(layoutSection){var $0='';if(layoutSection!=null){var $1=layoutSection.Rows();if($1.length>0){$0=$1[0].TemplateAlias();}}return $0;}
ClientUI.Model.LayoutSection.findAvailableSpace=function(layoutSection){if(layoutSection.PlaceholderCount!=null&&layoutSection.PlaceholderCount()>0){var $0=layoutSection.PlaceholderCount();var $1=ClientUI.Model.LayoutSection.$0(layoutSection);return $0-$1;}return 1;}
ClientUI.Model.LayoutSection.$0=function($p0){var $0=0;var $enum1=ss.IEnumerator.getEnumerator($p0.Controls());while($enum1.moveNext()){var $1=$enum1.current;if(GetRibbonElementType($1)!=='SectionPlaceholder'){$0++;}}return $0;}
ClientUI.Model.LayoutSection.addPlaceholderIfNeeded=function(controlsCollection,removedPosition,controlRemoved){if(controlsCollection==null){return;}var $0=controlsCollection._parentLayoutSection;if($0!=null&&$0.PlaceholderCount!=null&&$0.PlaceholderCount()>0){var $1=new ClientUI.Model.RibbonControl(7,'placeholder',null,null);var $2=$0.Rows();if($2!=null&&$2.length>removedPosition){$1.TemplateAlias($2[removedPosition].TemplateAlias());}else if($2!=null&&$2.length>0){$1.TemplateAlias($2[0].TemplateAlias());}$0.Controls.splice(removedPosition,0,$1);}}
ClientUI.Model.LayoutSection.removePlaceholderIfNeeded=function(controlsCollection,addedPosition){if(controlsCollection==null){return null;}var $0=null;var $1=controlsCollection._parentLayoutSection;if($1!=null&&$1.PlaceholderCount!=null&&$1.PlaceholderCount()>0){var $2=$1.Controls();if(addedPosition>0&&GetRibbonElementType($2[addedPosition-1])==='SectionPlaceholder'){$0=$2[addedPosition-1];$1.Controls.remove($0);}else if(addedPosition<($1.Controls().length-1)&&GetRibbonElementType($2[addedPosition+1])==='SectionPlaceholder'){$0=$2[addedPosition+1];$1.Controls.remove($0);}}return $0;}
ClientUI.Model.LayoutSection.prototype={_parentGroup:null}
ClientUI.Model.NameValuePair=function(name,value){this.name=name;this.value=value;}
ClientUI.Model.NameValuePair.prototype={name:null,value:null}
ClientUI.Model.Ribbon=function(){this.RibbonDiffXmlString=ko.observable();this.UpdatedRibbonDiffXmlString=ko.observable();this.RibbonDefinitionXml=ko.observable();}
ClientUI.Model.Ribbon.setUpRibbon=function(ribbon){ClientUI.Model.RibbonTabGroup.filterTabGroups(ribbon);ribbon._SolutionButtonsIndex={};ribbon._SolutionCommandsIndex={};ribbon._SolutionGroupIndex={};ribbon._SolutionTabIndex={};ribbon.CommandPicklist=ko.observableArray();ribbon.UpdatedRibbonDiffXmlString=ko.observable(ribbon.RibbonDiffXmlString());ribbon.CommandPicklist2=ko.dependentObservable(function(){
var $1_0=[];ribbon.SolutionCommands.ChildNodes().forEach(function($p2_0){
var $2_0=$p2_0;$1_0.add(new ClientUI.Model.NameValuePair($2_0.Id(),$2_0));});return $1_0;});var $0={};var $enum1=ss.IEnumerator.getEnumerator(ribbon.SolutionDisplayRules.ChildNodes());while($enum1.moveNext()){var $2=$enum1.current;ClientUI.Model.Ribbon.setupDisplayRule(ribbon,$0,$2);}var $1={};var $enum2=ss.IEnumerator.getEnumerator(ribbon.SolutionEnableRules.ChildNodes());while($enum2.moveNext()){var $3=$enum2.current;ClientUI.Model.Ribbon.setupEnableRule(ribbon,$1,$3);}var $enum3=ss.IEnumerator.getEnumerator(ribbon.SolutionCommands.ChildNodes());while($enum3.moveNext()){var $4=$enum3.current;ClientUI.Model.Ribbon.setupCommand(ribbon,$0,$1,$4);}var $enum4=ss.IEnumerator.getEnumerator(ribbon.Tabs());while($enum4.moveNext()){var $5=$enum4.current;ribbon._SolutionTabIndex[$5.Id()]=$5;$5._ribbon=ribbon;ClientUI.Model.Ribbon.$4($5,$5.Groups);}var $enum5=ss.IEnumerator.getEnumerator(ribbon.SolutionButtons.Ids());while($enum5.moveNext()){var $6=$enum5.current;if(Object.keyExists(ribbon._SolutionButtonsIndex,$6)){ribbon.SolutionButtons.ChildNodes.push(ribbon._SolutionButtonsIndex[$6]);}}ribbon.SolutionButtons.Ids=null;var $enum6=ss.IEnumerator.getEnumerator(ribbon.SolutionGroups.Ids());while($enum6.moveNext()){var $7=$enum6.current;if(Object.keyExists(ribbon._SolutionGroupIndex,$7)){ribbon.SolutionGroups.ChildNodes.push(ribbon._SolutionGroupIndex[$7]);}}ribbon.SolutionGroups.Ids=null;var $enum7=ss.IEnumerator.getEnumerator(ribbon.SolutionTabs.Ids());while($enum7.moveNext()){var $8=$enum7.current;if(Object.keyExists(ribbon._SolutionTabIndex,$8)){ribbon.SolutionTabs.ChildNodes.push(ribbon._SolutionTabIndex[$8]);}}ribbon.SolutionTabs.Ids=null;var $enum8=ss.IEnumerator.getEnumerator(ribbon.SolutionHideActions.ChildNodes());while($enum8.moveNext()){var $9=$enum8.current;$9._ribbon=ribbon;$9.__type='HideCustomAction';}ribbon.$0=true;}
ClientUI.Model.Ribbon.prepareIdsForUpload=function(ribbon){var $enum1=ss.IEnumerator.getEnumerator(ribbon.SolutionCommands.ChildNodes());while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.CommandDefinition.$0($0);}ClientUI.Model.RibbonControl.setCommandCore(ribbon.SolutionButtons.ChildNodes());var $enum2=ss.IEnumerator.getEnumerator(ribbon.SolutionGroups.ChildNodes());while($enum2.moveNext()){var $1=$enum2.current;ClientUI.Model.RibbonGroup.$1($1);}}
ClientUI.Model.Ribbon.$1=function($p0,$p1){var $0=$p1.Id();if(Object.keyExists($p0._SolutionButtonsIndex,$0)){$p0.SolutionButtons.ChildNodes.replace($p1,$p0._SolutionButtonsIndex[$0]);}}
ClientUI.Model.Ribbon.setupCommand=function(ribbon,displayRuleIndex,enableRuleIndex,command){ribbon._SolutionCommandsIndex[command.Id()]=command;ribbon.CommandPicklist.push({name:command.Id(),value:command});command._ribbon=ribbon;var $enum1=ss.IEnumerator.getEnumerator(command.Actions());while($enum1.moveNext()){var $0=$enum1.current;$0._command=command;var $enum2=ss.IEnumerator.getEnumerator($0.Parameters());while($enum2.moveNext()){var $1=$enum2.current;$1._action=$0;$1._expanded=ko.observable(false);}}command.DisplayRules=ko.observableArray();var $enum3=ss.IEnumerator.getEnumerator(command.DisplayRuleIds());while($enum3.moveNext()){var $2=$enum3.current;if(Object.keyExists(displayRuleIndex,$2)){command.DisplayRules.push(displayRuleIndex[$2]);}}command.EnableRules=ko.observableArray();var $enum4=ss.IEnumerator.getEnumerator(command.EnableRuleIds());while($enum4.moveNext()){var $3=$enum4.current;if(Object.keyExists(enableRuleIndex,$3)){command.EnableRules.push(enableRuleIndex[$3]);}}}
ClientUI.Model.Ribbon.setupEnableRule=function(ribbon,enableRuleIndex,enableRule){enableRule._ribbon=ribbon;enableRule.__type='EnableRule';enableRuleIndex[enableRule.Id()]=enableRule;var $enum1=ss.IEnumerator.getEnumerator(enableRule.Steps());while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.Ribbon.$3(enableRule,$0);}}
ClientUI.Model.Ribbon.setupDisplayRule=function(ribbon,displayRuleIndex,displayRule){displayRule._ribbon=ribbon;displayRule.__type='DisplayRule';displayRuleIndex[displayRule.Id()]=displayRule;var $enum1=ss.IEnumerator.getEnumerator(displayRule.Steps());while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.Ribbon.$2(displayRule,$0);}}
ClientUI.Model.Ribbon.$2=function($p0,$p1){$p1._parentDisplayRule=$p0;if($p1.Or!=null&&$p1.Or()==null){$p1.Or=null;}if($p1.Or!=null){var $enum1=ss.IEnumerator.getEnumerator($p1.Or());while($enum1.moveNext()){var $0=$enum1.current;$0._parentStep=$p1;if($0.OrRules!=null){var $enum2=ss.IEnumerator.getEnumerator($0.OrRules());while($enum2.moveNext()){var $1=$enum2.current;$1._parentOrGroup=$0;ClientUI.Model.Ribbon.$2($p0,$1);}}}}}
ClientUI.Model.Ribbon.$3=function($p0,$p1){var $0=$p1;if(Object.keyExists($0,'Maximum')){$0['Maximum_']=$0['Maximum'];delete $0.Maximum;}if(Object.keyExists($0,'Minimum')){$0['Minimum_']=$0['Minimum'];delete $0.Minimum;}$p1._parentEnableRule=$p0;if($p1.Or!=null&&$p1.Or()==null){$p1.Or=null;}if($p1.Or!=null){var $enum1=ss.IEnumerator.getEnumerator($p1.Or());while($enum1.moveNext()){var $1=$enum1.current;$1._parentStep=$p1;if($1.OrRules!=null){var $enum2=ss.IEnumerator.getEnumerator($1.OrRules());while($enum2.moveNext()){var $2=$enum2.current;$2._parentOrGroup=$1;ClientUI.Model.Ribbon.$3($p0,$2);}}}}}
ClientUI.Model.Ribbon.$4=function($p0,$p1){var $0=$p0._ribbon;var $1=$p1;$1._parentRibbon=$0;$1._tab=$p0;var $enum1=ss.IEnumerator.getEnumerator($p1());while($enum1.moveNext()){var $2=$enum1.current;$2._parentTab=$p0;$2.TabId=$2._parentTab.Id();$0._SolutionGroupIndex[$2.Id()]=$2;$2._parentRibbon=$0;var $3=$2.LayoutSections;$3._parentGroup=$2;var $enum2=ss.IEnumerator.getEnumerator($2.LayoutSections());while($enum2.moveNext()){var $4=$enum2.current;$4._parentGroup=$2;var $5=$4.Controls;$5._parentLayoutSection=$4;var $enum3=ss.IEnumerator.getEnumerator($4.Controls());while($enum3.moveNext()){var $6=$enum3.current;ClientUI.Model.RibbonControl.setParent($6,$4.Controls);ClientUI.Model.Ribbon.$6($6,$6,$0);}}}}
ClientUI.Model.Ribbon.$5=function($p0,$p1){var $0=$p1.CommandCore();if(Object.keyExists($p0._SolutionCommandsIndex,$0)){$p1._Command=ko.observable($p0._SolutionCommandsIndex[$0]);}if(ss.isNullOrUndefined($p1.PopulateQueryCommandCore)){$p1.PopulateQueryCommandCore=ko.observable();}if(ss.isNullOrUndefined($p1._PopulateQueryCommand)){$p1._PopulateQueryCommand=ko.observable();}if(ss.isNullOrUndefined($p1.PopulateOnlyOnce)){$p1.PopulateOnlyOnce=ko.observable();}var $1=$p1.PopulateQueryCommandCore();if(Object.keyExists($p0._SolutionCommandsIndex,$1)){$p1._PopulateQueryCommand($p0._SolutionCommandsIndex[$1]);}}
ClientUI.Model.Ribbon.$6=function($p0,$p1,$p2){$p2._SolutionButtonsIndex[$p0.Id()]=$p0;ClientUI.Model.Ribbon.$5($p2,$p0);var $0=$p0.Controls;if($0==null){return;}var $1=$p0.Controls();if($1==null){return;}$0._parent=$p0;$0._parentLayoutSection=$p0._parentLayoutSection;$0._root=$p0._root;var $enum1=ss.IEnumerator.getEnumerator($1);while($enum1.moveNext()){var $2=$enum1.current;$2._parent=$p0;$2._root=$p1;ClientUI.Model.Ribbon.$6($2,$p1,$p2);}}
ClientUI.Model.Ribbon.getRibbon=function(control){var $0=(control._root!=null)?control._root._parentLayoutSection:control._parentLayoutSection;if($0!=null){return $0._parentGroup._parentRibbon;}else{throw new Error(String.format('Could not find parent ribbon for control {0}',control.Id()));}}
ClientUI.Model.Ribbon.prototype={$0:false,_parent:null,SolutionPrefix:null,EntityLogicalName:null,Tabs:null,TabGroups:null,SolutionButtons:null,SolutionCommands:null,SolutionEnableRules:null,SolutionDisplayRules:null,SolutionHideActions:null,SolutionTabs:null,SolutionGroups:null,_SolutionTabIndex:null,_SolutionButtonsIndex:null,_SolutionGroupIndex:null,_SolutionCommandsIndex:null,CommandPicklist2:null,CommandPicklist:null,NextButtonIndex:null}
ClientUI.Model.VisibilityRules=function(){}
ClientUI.Model.VisibilityRules.prototype={Legacy:null,Modern:null,Refresh:null}
ClientUI.Model.RibbonControl=function(type,id,image16by16,label){this.ControlCollectionId=ko.observable();this.ControlType=ko.observable(type);this.setDefaults();this.Id(id);this.Image16by16(image16by16);this.LabelTextText(label);}
ClientUI.Model.RibbonControl.getRibbonControlsCollection=function(control){var $0=control.Controls;return $0;}
ClientUI.Model.RibbonControl.getParentRibbonControlsCollection=function(control){return control._parentLayoutSection.Controls;}
ClientUI.Model.RibbonControl.setCommandCore=function(controls){var $enum1=ss.IEnumerator.getEnumerator(controls);while($enum1.moveNext()){var $0=$enum1.current;if($0._Command!=null&&$0._Command()!=null){$0.CommandCore($0._Command().Id());}if($0._PopulateQueryCommand!=null&&$0._PopulateQueryCommand()!=null){$0.PopulateQueryCommandCore($0._PopulateQueryCommand().Id());}if($0.Controls!=null&&$0.Controls()!=null){ClientUI.Model.RibbonControl.setCommandCore($0.Controls());}if($0.SolutionComponentType()===1){$0.TabId=($0._parentLayoutSection!=null)?$0._parentLayoutSection._parentGroup.TabId:$0._root._parentLayoutSection._parentGroup.TabId;var $1=null;if($0._parent!=null){$0.ParentControlID=$0._parent.Id();var $3=$0._parent.Controls();var $4=$3.indexOf($0);for(var $5=$4;$5>=0;$5--){if($3[$5].ControlType()===6){$1=$3[$5];break;}}if($1!=null){$0.ParentSectionID=$1.Id();}else{throw new Error(String.format('Could not find parent menu section for control {0}',$0.Id()));}}var $2=null;if($0._parent!=null){if($1!=null&&$1.ControlCollectionId!=null){$2=$1.ControlCollectionId();}else{$2=$0._parent.ControlCollectionId();}}else if($0._parentLayoutSection!=null&&$0._parentLayoutSection._parentGroup!=null){$2=$0._parentLayoutSection._parentGroup.ControlCollectionId();}if($2!=null){if($0.ControlCollectionId==null){$0.ControlCollectionId=ko.observable();}$0.ControlCollectionId($2);}}}}
ClientUI.Model.RibbonControl.isVisible=function(control,showLegacy,showModern,showCommandBar){var $0=true;var $1=ko.utils.unwrapObservable(control.VisibilityRules);if($1!=null){$0=false;$0=$0||(showLegacy&&$1.Legacy());$0=$0||(showModern&&$1.Modern());$0=$0||(showCommandBar&&$1.Refresh());return $0;}return showLegacy||showModern||showCommandBar;}
ClientUI.Model.RibbonControl.setPositionOnDrag=function(control){if(control._parent!=null){control._positionBeforeDrag=control._parent.Controls.indexOf(control);}else{var $0=ClientUI.Model.RibbonGroup.flattenGroup(control._parentLayoutSection._parentGroup);control._positionBeforeDrag=$0.indexOf(control);}}
ClientUI.Model.RibbonControl.setDropProperties=function(args,controlMoved,target){var $0=null;var $1=(args.targetParent);var $2=(args.sourceParent);var $3=false;var $4=true;var $5=$1._parent!=null;if($5){$3=($1===$2);$0=[];$0.addRange(target());}else{var $B=(controlMoved._parentLayoutSection!=null)?controlMoved._parentLayoutSection._parentGroup:null;var $C=$1._parentLayoutSection._parentGroup;$0=ClientUI.Model.RibbonGroup.flattenGroup($C);$3=$B===$C;}var $6=$0.indexOf(controlMoved);if($3){var $D=controlMoved._positionBeforeDrag;$D=($D==null)?$6:$D;var $E=Math.min($D,$6);var $F=Math.max($D,$6);for(var $11=$E;$11>0;$11--){var $12=$0[$11];if($12.Customised()){$E=$11;}else{break;}}for(var $13=$F;$13<$0.length;$13++){var $14=$0[$13];if($14.Customised()){$F=$13;}else{break;}}var $10=[];for(var $15=$E;$15<=$F;$15++){var $16=$0[$15];$4=$4&&$16.Customised();var $17=ClientUI.Model.RibbonControl.$0($16);$10.add($17);}$10.reverse();$10.sort(function($p1_0,$p1_1){
return $p1_0-$p1_1;});if($4){var $18=-1;for(var $19=$E;$19<=$F;$19++){var $1A=$0[$19];var $1B=$10[$19-$E];if($1B===$18){$1B=$1B+1;}$1A.Sequence($1B.toString());$18=$1B;}}}if(!$3||!$4){var $1C=($6>0)?$6-1:-1;var $1D=($6<$0.length-1)?$6+1:-1;var $1E=($1C>-1)?$0[$1C]:null;var $1F=($1D>-1)?$0[$1D]:null;var $20=($1E!=null)?ClientUI.Model.RibbonControl.$0($1E):0;var $21=($1F!=null)?ClientUI.Model.RibbonControl.$0($1F):$20+10;var $22=Math.round($20+(($21-$20)/2));controlMoved.Sequence($22.toString());}if(!$5){var $23=ClientUI.Model.LayoutSection.removePlaceholderIfNeeded($1,args.targetIndex);var $24='';if($23!=null){$24=$23.TemplateAlias();}else{$24=ClientUI.Model.LayoutSection.GetTemplateAlias($1._parentLayoutSection);}controlMoved.TemplateAlias($24);ClientUI.Model.LayoutSection.addPlaceholderIfNeeded($2,args.sourceIndex,controlMoved);}var $7=false;var $8=controlMoved.SolutionComponentType()===1;var $9=0;if($1._parent!=null&&$1._parent.Customised()){$9=$1._parent.SolutionComponentType();}else if(($1._parentLayoutSection!=null)&&$1._parentLayoutSection._parentGroup.Customised()){$9=$1._parentLayoutSection._parentGroup.SolutionComponentType();}$7=$9===1||$9===2;var $A=ClientUI.Model.RibbonControlCollection.$0($1);if($7&&$8){$A.SolutionButtons.ChildNodes.remove(controlMoved);controlMoved.SolutionComponentType(2);}else if(!$7&&!$8){$A.SolutionButtons.ChildNodes.push(controlMoved);controlMoved.SolutionComponentType(1);}}
ClientUI.Model.RibbonControl.$0=function($p0){var $0=0;var $1=$p0.Sequence();if($1!=null&&$1.length>0){$0=parseInt($1);if(isNaN($0)){$0=0;}}return $0;}
ClientUI.Model.RibbonControl.customiseCommand=function(control,callback){if(control._Command!=null&&control._Command()!=null){return;}var $0=ClientUI.Model.Ribbon.getRibbon(control);if(Object.keyExists($0._SolutionCommandsIndex,control.CommandCore())){return;}var $1=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$1.operation='CustomiseCommand';var $2={id:control.CommandCore(),ribbonDefinitionXml:$0.RibbonDefinitionXml(),solutionPrefix:$0.SolutionPrefix()};$1.data=ko.utils.stringifyJson($2);Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($1,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=$1_0.response;var $1_2=ko.mapping.fromJSON($1_1);var $1_3={};var $1_4={};var $enum1=ss.IEnumerator.getEnumerator($1_2.EnableRules());while($enum1.moveNext()){var $1_7=$enum1.current;$1_3[$1_7.Id()]=$1_7;}var $enum2=ss.IEnumerator.getEnumerator($0.SolutionEnableRules.ChildNodes());while($enum2.moveNext()){var $1_8=$enum2.current;$1_4[$1_8.Id()]=$1_8;}var $enum3=ss.IEnumerator.getEnumerator($0.SolutionEnableRules.ChildNodes());while($enum3.moveNext()){var $1_9=$enum3.current;if(Object.keyExists($1_3,$1_9.Id())){$1_3[$1_9.Id()]=$1_9;}}$1_2.EnableRules.removeAll();var $enum4=ss.IEnumerator.getEnumerator(Object.keys($1_3));while($enum4.moveNext()){var $1_A=$enum4.current;var $1_B=$1_3[$1_A];$1_2.EnableRules.push($1_B);if(!Object.keyExists($1_4,$1_A)){$0.SolutionEnableRules.ChildNodes.push($1_B);}}var $1_5={};var $1_6={};var $enum5=ss.IEnumerator.getEnumerator($1_2.DisplayRules());while($enum5.moveNext()){var $1_C=$enum5.current;$1_5[$1_C.Id()]=$1_C;}var $enum6=ss.IEnumerator.getEnumerator($0.SolutionDisplayRules.ChildNodes());while($enum6.moveNext()){var $1_D=$enum6.current;$1_6[$1_D.Id()]=$1_D;}var $enum7=ss.IEnumerator.getEnumerator($0.SolutionDisplayRules.ChildNodes());while($enum7.moveNext()){var $1_E=$enum7.current;if(Object.keyExists($1_5,$1_E.Id())){$1_5[$1_E.Id()]=$1_E;}}$1_2.DisplayRules.removeAll();var $enum8=ss.IEnumerator.getEnumerator(Object.keys($1_5));while($enum8.moveNext()){var $1_F=$enum8.current;var $1_10=$1_5[$1_F];$1_2.DisplayRules.push($1_10);if(!Object.keyExists($1_6,$1_F)){$0.SolutionDisplayRules.ChildNodes.push($1_10);}}$0.SolutionCommands.ChildNodes.push($1_2);$0._SolutionCommandsIndex[$1_2.Id()]=$1_2;control._Command($1_2);var $enum9=ss.IEnumerator.getEnumerator($1_2.EnableRules());while($enum9.moveNext()){var $1_11=$enum9.current;ClientUI.Model.Ribbon.setupEnableRule($0,$1_4,$1_11);}var $enum10=ss.IEnumerator.getEnumerator($1_2.DisplayRules());while($enum10.moveNext()){var $1_12=$enum10.current;ClientUI.Model.Ribbon.setupDisplayRule($0,$1_6,$1_12);}ClientUI.Model.Ribbon.setupCommand($0,$1_6,$1_4,$1_2);}finally{callback();}});}
ClientUI.Model.RibbonControl.setParent=function(control,collection){control._parentLayoutSection=(collection._root!=null)?collection._root._parentLayoutSection:collection._parentLayoutSection;control._root=collection._root;control._parent=collection._parent;var $0=control._parentLayoutSection._parentGroup;control.GroupId($0.Id());control.onFlyout=(control._root!=null)?ClientUI.Model.FlyoutControl.hasFlyout(control._root):false;}
ClientUI.Model.RibbonControl.syncLabels=function(control,previousLCID,currentLCID){if(control.ControlType()===6){ClientUI.Model.RibbonControl.$1(control,'TitleText',previousLCID,currentLCID);}else{ClientUI.Model.RibbonControl.$1(control,'LabelTextText',previousLCID,currentLCID);ClientUI.Model.RibbonControl.$1(control,'AltText',previousLCID,currentLCID);ClientUI.Model.RibbonControl.$1(control,'ToolTipTitleText',previousLCID,currentLCID);ClientUI.Model.RibbonControl.$1(control,'ToolTipDescriptionText',previousLCID,currentLCID);if(control.Controls!=null&&control.Controls()!=null){var $enum1=ss.IEnumerator.getEnumerator(control.Controls());while($enum1.moveNext()){var $0=$enum1.current;ClientUI.Model.RibbonControl.syncLabels($0,previousLCID,currentLCID);}}}}
ClientUI.Model.RibbonControl.$1=function($p0,$p1,$p2,$p3){if(!$p1.endsWith('Text')){throw new Error('Must end with Text');}var $0=$p1.substr(0,$p1.length-4);var $1=($p0)[$p1];var $2=($1!=null)?$1():null;ClientUI.Model.Label.setLabel($p0.Labels,$0,$p2,$2);if($1!=null){var $3=ClientUI.Model.Label.getLabel($p0.Labels,$0,$p3,null,false);if($3!=null){$1($3.Text());}}}
ClientUI.Model.RibbonControl.customiseControl=function(control,ribbon,isTopLevel){if(control.Customised()){return;}control._customisedInCurrentSession=true;var $0=ClientUI.Model.RibbonControl.flatternChildren(control,null);var $1=false;var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $2=$enum1.current;$1=$1||$2.Customised();if($1){break;}}if($1){ClientUI.ViewModel.App.current.showMessage(ResourceStrings.CannotCustomiseBecauseOfChildCustom);return;}var $enum2=ss.IEnumerator.getEnumerator($0);while($enum2.moveNext()){var $3=$enum2.current;$3.Customised(true);$3.SolutionComponentType(2);}control.Customised(true);control.SolutionComponentType(1);ribbon.SolutionButtons.ChildNodes.push(control);}
ClientUI.Model.RibbonControl.unCustomiseControl=function(control,ribbon,isTopLevel){ClientUI.ViewModel.App.current.confirm(ResourceStrings.UnCustomiseButtonConfirm,function($p1_0){
if($p1_0!==1){return;}control.SolutionComponentType(0);control._customisedInCurrentSession=false;control.Customised(false);ribbon.SolutionButtons.ChildNodes.remove(control);var $1_0=ClientUI.Model.RibbonControl.flatternChildren(control,null);var $enum1=ss.IEnumerator.getEnumerator($1_0);while($enum1.moveNext()){var $1_1=$enum1.current;$1_1.Customised(false);$1_1.SolutionComponentType(0);}});}
ClientUI.Model.RibbonControl.flatternChildren=function(control,children){if(children==null){children=[];}if(control.Controls!=null&&control.Controls()!=null){var $enum1=ss.IEnumerator.getEnumerator(control.Controls());while($enum1.moveNext()){var $0=$enum1.current;children.add($0);ClientUI.Model.RibbonControl.flatternChildren($0,children);}}return children;}
ClientUI.Model.RibbonControl.deleteControl=function(control,ribbon){ClientUI.ViewModel.App.current.confirm(ResourceStrings.AreYouSureYouWantToDeleteButton,function($p1_0){
if($p1_0!==1){return;}var $1_0=ribbon._parent;if($1_0!=null){if($1_0.SelectedFlyoutRoot()===control){$1_0.SelectedFlyoutRoot(null);}if($1_0.SelectedControl()===control){$1_0.SelectedControl(null);}}if(control._parentLayoutSection!=null){var $1_1=null;if(control._parent!=null){$1_1=control._parent.Controls;}else{$1_1=control._parentLayoutSection.Controls;}var $1_2=$1_1.indexOf(control);$1_1.remove(control);ClientUI.Model.LayoutSection.addPlaceholderIfNeeded($1_1,$1_2,control);}else{control._parent.Controls.remove(control);}if(control.SolutionComponentType()===1){ribbon.SolutionButtons.ChildNodes.remove(control);delete ribbon._SolutionButtonsIndex[control.Id()];}ClientUI.Model.RibbonControl.deleteRelatedHideActions(control,ribbon);});}
ClientUI.Model.RibbonControl.deleteRelatedHideActions=function(control,ribbon){var $0=ClientUI.Model.RibbonControl.flatternChildren(control,null);var $1=[];$1.add(control.Id());var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $2=$enum1.current;$1.add($2.Id());}ribbon.SolutionHideActions.ChildNodes.remove(function($p1_0){
var $1_0=$p1_0;return $1.contains($1_0.Location());});}
ClientUI.Model.RibbonControl.prototype={setDefaults:function(){var $0='';switch(this.ControlType()){case 0:$0='ButtonControl';break;case 1:$0='FlyOutAnchorControl';break;case 4:$0='Menu';break;case 6:$0='MenuSectionControl';break;case 2:$0='SplitButtonControl';break;case 3:$0='ToggleCommand';break;case 7:$0='SectionPlaceholder';break;}this.__type=ko.observable($0);if(this.Id==null){this.Id=ko.observable();}if(this.Image16by16==null){this.Image16by16=ko.observable();}if(this.Image32by32==null){this.Image32by32=ko.observable();}if(this.ModernImage==null){this.ModernImage=ko.observable();}if(this.LabelTextText==null){this.LabelTextText=ko.observable();}if(this.AltText==null){this.AltText=ko.observable();}if(this.ToolTipTitleText==null){this.ToolTipTitleText=ko.observable();}if(this.ToolTipDescriptionText==null){this.ToolTipDescriptionText=ko.observable();}if(this.Customised==null){this.Customised=ko.observable(true);}if(this.HiddenBySolution==null){this.HiddenBySolution=ko.observable(false);}if(this.Labels==null){this.Labels=ko.observableArray();}if(this.FlyoutOpen==null){this.FlyoutOpen=ko.observable(false);}if(this.onFlyout==null){this.onFlyout=false;}if(this.CommandCore==null){this.CommandCore=ko.observable();}if(this._Command==null){this._Command=ko.observable();}if(this.SolutionComponentType==null){this.SolutionComponentType=ko.observable();}if(this.Sequence==null){this.Sequence=ko.observable();}if(this.GroupId==null){this.GroupId=ko.observable();}if(this.TemplateAlias==null){this.TemplateAlias=ko.observable();}if(this.PopulateQueryCommandCore==null){this.PopulateQueryCommandCore=ko.observable();}if(this._PopulateQueryCommand==null){this._PopulateQueryCommand=ko.observable();}if(this.PopulateOnlyOnce==null){this.PopulateOnlyOnce=ko.observable(false);}if(this.Description==null){this.Description=ko.observable();}if(this.CommandValueId==null){this.CommandValueId=ko.observable();}},ParentControlID:null,ParentSectionID:null,TabId:null,_positionBeforeDrag:null,_parentLayoutSection:null,_parent:null,_root:null,_smartButtonData:null,onFlyout:false,isResolved:false,_customisedInCurrentSession:false,GroupId:null,_Command:null,CommandCore:null,PopulateQueryCommandCore:null,PopulateOnlyOnce:null,_PopulateQueryCommand:null,SolutionComponentType:null,VisibilityRules:null,FlyoutOpen:null,__type:null,Id:null,Image16by16:null,Image32by32:null,ModernImage:null,HiddenBySolution:null,TemplateAlias:null,Customised:null,Sequence:null,Controls:null,Labels:null,LabelTextText:null,AltText:null,ToolTipTitleText:null,ToolTipDescriptionText:null,ControlType:null,Description:null,CommandValueId:null}
ClientUI.Model.SolutionElements=function(){}
ClientUI.Model.SolutionElements.prototype={Ids:null,ChildNodes:null,DisplayName:null,_expanded:null}
Type.registerNamespace('ClientUI.ViewModel');ClientUI.ViewModel.IDialogService=function(){};ClientUI.ViewModel.IDialogService.registerInterface('ClientUI.ViewModel.IDialogService');ClientUI.ViewModel.IDialogView=function(){};ClientUI.ViewModel.IDialogView.registerInterface('ClientUI.ViewModel.IDialogView');ClientUI.ViewModel.DialogButtons=function(){};ClientUI.ViewModel.DialogButtons.prototype = {ok:1,okCancel:2,okCancelRetry:3,retryCancel:4}
ClientUI.ViewModel.DialogButtons.registerEnum('ClientUI.ViewModel.DialogButtons',false);ClientUI.ViewModel.DialogResult=function(){};ClientUI.ViewModel.DialogResult.prototype = {OK:1,cancel:2,retry:3}
ClientUI.ViewModel.DialogResult.registerEnum('ClientUI.ViewModel.DialogResult',false);ClientUI.ViewModel.DialogMessageType=function(){};ClientUI.ViewModel.DialogMessageType.prototype = {information:1,warning:2,error:3,question:4}
ClientUI.ViewModel.DialogMessageType.registerEnum('ClientUI.ViewModel.DialogMessageType',false);ClientUI.ViewModel.LabelNames=function(){};ClientUI.ViewModel.LabelNames.prototype = {LabelTextText:'LabelTextText',AltText:'AltText',ToolTipTitleText:'ToolTipTitleText',ToolTipDescriptionText:'ToolTipDescriptionText',TitleText:'TitleText'}
ClientUI.ViewModel.LabelNames.registerEnum('ClientUI.ViewModel.LabelNames',false);ClientUI.ViewModel.IServiceLocator=function(){};ClientUI.ViewModel.IServiceLocator.registerInterface('ClientUI.ViewModel.IServiceLocator');ClientUI.ViewModel.RibbonPasteData=function(){}
ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON=function(json){var $0={};var $1={};$1.create=function($p1_0){
if($p1_0.data==null){return null;}var $1_0=$p1_0.data;var $1_1=new ClientUI.Model.RibbonControl(ko.utils.unwrapObservable($1_0.ControlType),ko.utils.unwrapObservable($1_0.Id),ko.utils.unwrapObservable($1_0.Image16by16),ko.utils.unwrapObservable($1_0.LabelTextText));ko.mapping.fromJS($1_0,null,$1_1);return $1_1;};var $2={};$2.create=function($p1_0){
if($p1_0.data==null){return null;}var $1_0=$p1_0.data;var $1_1=new ClientUI.Model.CommandDefinition();ko.mapping.fromJS($1_0,null,$1_1);return $1_1;};$0['Control']=$1;$0['Command']=$2;var $3=ko.mapping.fromJSON(json,$0);return $3;}
ClientUI.ViewModel.RibbonPasteData.instantiateControlFromTemplate=function(controlCollection,template){var $0=ClientUI.Model.RibbonControlCollection.$0(controlCollection);var $1=template.Control.Id();var $2=template.Control.LabelTextText();var $3=ClientUI.ViewModel.CrmNamespace.$1(template.Control,controlCollection);template.Control.LabelTextText($2);var $4=template.Control;delete $4.__ko_mapping__;$4.setDefaults();$4._parentLayoutSection=controlCollection._parentLayoutSection;$4.Id($3+'.'+$1);var $5=$3+'.'+$1;var $6=ClientUI.ViewModel.RibbonPasteData.instansiateCommandFromTemplate(template,$0,$5);if($4!=null){$4._Command($6);}return $4;}
ClientUI.ViewModel.RibbonPasteData.instansiateEnabeRuleFromTemplate=function(template,ribbon,enableRuleId){var $0={};if(template.EnableRules!=null&&template.EnableRules().length>0){var $1=template.EnableRules()[0];$1.Id(enableRuleId);ClientUI.Model.Ribbon.setupEnableRule(ribbon,$0,$1);return $1;}else{return null;}}
ClientUI.ViewModel.RibbonPasteData.instansiateDisplayRuleFromTemplate=function(template,ribbon,displayRuleId){var $0={};if(template.DisplayRules!=null&&template.DisplayRules().length>0){var $1=template.DisplayRules()[0];$1.Id(displayRuleId);ClientUI.Model.Ribbon.setupDisplayRule(ribbon,$0,$1);return $1;}else{return null;}}
ClientUI.ViewModel.RibbonPasteData.instansiateCommandFromTemplate=function(template,ribbon,commandId){if(template.CommandDefinition!=null){var $0={};var $enum1=ss.IEnumerator.getEnumerator(ribbon.SolutionEnableRules.ChildNodes());while($enum1.moveNext()){var $6=$enum1.current;$0[$6.Id()]=$6;}var $1=[];$1.addRange(template.EnableRules());var $enum2=ss.IEnumerator.getEnumerator($1);while($enum2.moveNext()){var $7=$enum2.current;var $8=$7.Id();if(!Object.keyExists($0,$8)){$0[$7.Id()]=$7;ribbon.SolutionEnableRules.ChildNodes.push($7);}else{template.EnableRules.remove($7);template.EnableRules.push($0[$8]);}}var $2={};var $enum3=ss.IEnumerator.getEnumerator(ribbon.SolutionDisplayRules.ChildNodes());while($enum3.moveNext()){var $9=$enum3.current;$2[$9.Id()]=$9;}var $3=[];$3.addRange(template.DisplayRules());var $enum4=ss.IEnumerator.getEnumerator($3);while($enum4.moveNext()){var $A=$enum4.current;var $B=$A.Id();if(!Object.keyExists($2,$B)){$2[$A.Id()]=$A;ribbon.SolutionDisplayRules.ChildNodes.push($A);}else{template.DisplayRules.remove($A);template.DisplayRules.push($2[$B]);}}var $4=template.CommandDefinition;$4.Id(commandId);var $5=ribbon.SolutionCommands.ChildNodes().filter(function($p1_0){
return (($p1_0).Id()===commandId);});if($5.length>0){$4=$5[0];}else{ribbon._parent.addCommand($4);}var $enum5=ss.IEnumerator.getEnumerator(template.DisplayRules());while($enum5.moveNext()){var $C=$enum5.current;ClientUI.Model.Ribbon.setupDisplayRule(ribbon,$2,$C);}var $enum6=ss.IEnumerator.getEnumerator(template.EnableRules());while($enum6.moveNext()){var $D=$enum6.current;ClientUI.Model.Ribbon.setupEnableRule(ribbon,$0,$D);}ClientUI.Model.Ribbon.setupCommand(ribbon,$2,$0,$4);return $4;}return null;}
ClientUI.ViewModel.RibbonPasteData.isEnableRuleInClipBoard=function(clipboard){return (clipboard!=null)?clipboard.indexOf('"__type": "EnableRule"')>-1:false;}
ClientUI.ViewModel.RibbonPasteData.isDisplayRuleInClipBoard=function(clipboard){return (clipboard!=null)?clipboard.indexOf('"__type": "DisplayRule"')>-1:false;}
ClientUI.ViewModel.RibbonPasteData.getRulesPasteDate=function(enableRule,displayRule){var $0=new ClientUI.ViewModel.RibbonPasteData();$0.DisplayRules=ko.observableArray();$0.EnableRules=ko.observableArray();if(enableRule!=null){ClientUI.ViewModel.RibbonPasteData.getEnableRuleCopy($0,enableRule);}if(displayRule!=null){ClientUI.ViewModel.RibbonPasteData.getDisplayRuleCopy($0,displayRule);}return $0;}
ClientUI.ViewModel.RibbonPasteData.getCommandPasteData=function(command,data){data.CommandDefinition=command;if(command!=null){delete command.__ko_mapping__;ClientUI.Model.CommandDefinition.$0(command);}data.DisplayRules=ko.observableArray();data.EnableRules=ko.observableArray();if(command!=null&&command.EnableRules!=null&&command.EnableRules()!=null){var $enum1=ss.IEnumerator.getEnumerator(command.EnableRules());while($enum1.moveNext()){var $2=$enum1.current;ClientUI.ViewModel.RibbonPasteData.getEnableRuleCopy(data,$2);}}if(command!=null&&command.DisplayRules!=null&&command.DisplayRules()!=null){var $enum2=ss.IEnumerator.getEnumerator(command.DisplayRules());while($enum2.moveNext()){var $3=$enum2.current;ClientUI.ViewModel.RibbonPasteData.getDisplayRuleCopy(data,$3);}}var $0=ko.toJS(data);var $1=$0.CommandDefinition;if($1!=null){delete $1.EnableRules;delete $1.DisplayRules;delete $1.Customised;delete $1.DisplayTypeName;delete $1.HiddenBySolution;delete $1.SolutionComponentType;delete $1.Sequence;delete $0.__ko_mapping__;}return $0;}
ClientUI.ViewModel.RibbonPasteData.getDisplayRuleCopy=function(data,rule){var $0=ClientUI.ViewModel.EditCommandBarsVM.toJSON(ko.toJS(rule));var $1=ko.mapping.fromJSON($0);delete $1.Customised;delete $1.DisplayTypeName;delete $1.HiddenBySolution;delete $1.Sequence;delete $1.SolutionComponentType;delete $1.__ko_mapping__;data.DisplayRules.push($1);return $1;}
ClientUI.ViewModel.RibbonPasteData.getEnableRuleCopy=function(data,rule){var $0=ClientUI.ViewModel.EditCommandBarsVM.toJSON(ko.toJS(rule));var $1=ko.mapping.fromJSON($0);delete $1.Customised;delete $1.DisplayTypeName;delete $1.HiddenBySolution;delete $1.Sequence;delete $1.SolutionComponentType;delete $1.__ko_mapping__;data.EnableRules.push($1);return $1;}
ClientUI.ViewModel.RibbonPasteData.getControlClipboard=function(control){var $0=new ClientUI.ViewModel.RibbonPasteData();$0.Control=control;var $1=ClientUI.ViewModel.RibbonPasteData.getCommandPasteData(control._Command(),$0);var $2=$1.Control;delete $2.Controls;delete $2.Customised;delete $2.HiddenBySolution;delete $2.FlyoutOpen;delete $2.SolutionComponentType;delete $2.Sequence;delete $2.GroupId;delete $2.onFlyout;delete $2.ParentControlID;delete $2.ParentSectionID;delete $2.TabId;delete $2.isResolved;delete $2.VisibilityRules;delete $2.__ko_mapping__;delete $2.DisplayTypeName;var $3=ClientUI.ViewModel.EditCommandBarsVM.toJSON($1);$3=$3.replaceAll(':#Develop1.Xrm.Silverlight.Ribbon.Model','');return $3;}
ClientUI.ViewModel.RibbonPasteData.getControlClipboardEnableRule=function(enablerule){var $0=new ClientUI.ViewModel.RibbonPasteData();$0.EnableRules=ko.observableArray();$0.DisplayRules=ko.observableArray();ClientUI.ViewModel.RibbonPasteData.getEnableRuleCopy($0,enablerule);var $1=ClientUI.ViewModel.EditCommandBarsVM.toJSON($0);$1=$1.replaceAll(':#Develop1.Xrm.Silverlight.Ribbon.Model','');return $1;}
ClientUI.ViewModel.RibbonPasteData.getControlClipboardDispayRule=function(disablerule){var $0=new ClientUI.ViewModel.RibbonPasteData();$0.EnableRules=ko.observableArray();$0.DisplayRules=ko.observableArray();ClientUI.ViewModel.RibbonPasteData.getDisplayRuleCopy($0,disablerule);var $1=ClientUI.ViewModel.EditCommandBarsVM.toJSON($0);$1=$1.replaceAll(':#Develop1.Xrm.Silverlight.Ribbon.Model','');return $1;}
ClientUI.ViewModel.RibbonPasteData.getCommandClipboard=function(command){var $0=new ClientUI.ViewModel.RibbonPasteData();var $1=ClientUI.ViewModel.RibbonPasteData.getCommandPasteData(command,$0);delete $1.Control;delete $1.DisplayTypeName;var $2=ClientUI.ViewModel.EditCommandBarsVM.toJSON($1);$2=$2.replaceAll(':#Develop1.Xrm.Silverlight.Ribbon.Model','');return $2;}
ClientUI.ViewModel.RibbonPasteData.pasteControl=function(group,targetIndex,targetLayoutSection){try{var $0=group._parentRibbon;var $1=ClientUI.ViewModel.RibbonPasteData.getPasteDataFromJSON($0._parent.Clipboard());var $2=(targetLayoutSection==null)?group.LayoutSections()[0]:targetLayoutSection;var $3=$2.Controls;var $4=ClientUI.ViewModel.RibbonPasteData.instantiateControlFromTemplate($2.Controls,$1);var $5={};$5.targetParent=$2.Controls;$5.targetIndex=targetIndex;ClientUI.ViewModel.ToolboxControls.addNewControl($5,$4,$3);}catch($6){ClientUI.ViewModel.App.current.showMessage(String.format(ResourceStrings.InvalidPasteData,$6.message));}}
ClientUI.ViewModel.RibbonPasteData.isControlInClipBoard=function(clipboard){return (clipboard!=null)?clipboard.indexOf('"Control":')>-1:false;}
ClientUI.ViewModel.RibbonPasteData.isCommandInClipBoard=function(clipboard){return (clipboard!=null)?clipboard.indexOf('"Actions": ')>-1:false;}
ClientUI.ViewModel.RibbonPasteData.prototype={Control:null,CommandDefinition:null,EnableRules:null,DisplayRules:null}
ClientUI.ViewModel.App=function(){var $0=ss.Delegate.create(this,this.onBeforeUnload);window.self.onbeforeunload=$0;if(!ss.isNullOrUndefined(window.APP_VERSION)){this.version=new ClientUI.Library.Version(window.APP_VERSION);}}
ClientUI.ViewModel.App.prototype={_serverVersion:null,version:null,add_onApplicationError:function(value){this.$0=ss.Delegate.combine(this.$0,value);},remove_onApplicationError:function(value){this.$0=ss.Delegate.remove(this.$0,value);},$0:null,getServerVersion:function(){if(this._serverVersion==null){try{var $0=new ClientUI.Messages.RetrieveVersionRequest();Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('RetrieveVersion',ClientUI.Messages.RetrieveVersionResponse);var $1=Xrm.Sdk.OrganizationServiceProxy.execute($0);this._serverVersion=$1.version;}catch($2){return 'Unknown:'+$2.message;}}return this._serverVersion;},onBeforeUnload:function(){return ResourceStrings.AreYouSureYouWantToExit;},getCurrentVersion:function(callback){if(this.version!=null){callback();return;}var $0="<fetch version='1.0' mapping='logical' >\r\n                                                                    <entity name='solution' >\r\n                                                                        <attribute name='version'/>\r\n                                                                        <filter type='and' >\r\n                                                                            <condition attribute='uniquename' operator='eq' value='RibbonWorkbench2016' />\r\n                                                                        </filter>\r\n                                                                    </entity>\r\n                                                                </fetch>";Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);if(!$1_0.get_entities().get_count()){return;}this.version=new ClientUI.Library.Version($1_0.get_entities().get_item(0).getAttributeValueString('version'));}catch($1_1){this.version=new ClientUI.Library.Version('9999');}callback();}));},reportException:function(ex,message){if(this.$0!=null){this.$0(ex);}var $0=ex['ErrorCode'];var $1=null;var $2=null;var $3=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');if($0===ClientUI.ErrorCodes.cannotModifyPatchedSolution){$1=ResourceStrings.Error_PatchedSolution;$2='http://ribbonworkbench.uservoice.com/knowledgebase/articles/896892';}else if($0===ClientUI.ErrorCodes.importRibbonsError){$1=message;$2='https://ribbonworkbench.uservoice.com/knowledgebase/articles/915201';}else if($0===ClientUI.ErrorCodes.getSolutionDetailsEmpty){$1=ResourceStrings.Error_GetSolutionDetailsEmpty;$2='http://ribbonworkbench.uservoice.com/knowledgebase/articles/896916';}else if($0===ClientUI.ErrorCodes.cannotImportPatch){$1=ResourceStrings.Error_CannotImportPatch;$2='http://ribbonworkbench.uservoice.com/knowledgebase/articles/896892';}else if($0===ClientUI.ErrorCodes.accessDenied){$1=ResourceStrings.Error_AccessDenied;$2='http://ribbonworkbench.uservoice.com/knowledgebase/articles/900168';}else if($0===ClientUI.ErrorCodes.ribbonImportDependencyMissingRibbonControl){$1=message+':'+String.format(ResourceStrings.Error_RibbonImportDependencyMissingRibbonControl,ex.message);$2='https://ribbonworkbench.uservoice.com/knowledgebase/articles/903018';}else if($0===ClientUI.ErrorCodes.xsdValidationException){$1=message+':'+String.format(ResourceStrings.Error_RibbonImportDependencyMissingRibbonControl,ex.message);$2='https://ribbonworkbench.uservoice.com';}else if($0===ClientUI.ErrorCodes.reportedMessage){$1=ex.message;}else if(ex.message.indexOf('System.TimeoutException')>=0){$1=ResourceStrings.Error_SolutionTooLarge;}else if(ex.message.indexOf('Solution does not contain any entities')>=0){$1=ResourceStrings.Error_NoEntities;}if($1!=null){$3.showMessage($1,1,3,null,$2);}else{var $4=new ClientUI.View.ExceptionDialogView(message);var $5=new ClientUI.ViewModel.ExceptionReportViewModel(ex);$3.showDialog($4,$5,1,null,null,null);}},showMessage:function(message){this.showMessageWithCallBack(message,null);},showMessageWithCallBack:function(message,callback){var $0=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');$0.showMessage(message,1,2,callback,null);},confirm:function(message,callback){var $0=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');$0.showMessage(message,2,4,callback,null);}}
ClientUI.ViewModel.ExceptionReportViewModel=function(ex){this.Message=ko.observable();this.Email=ko.observable();this.MoreInfo=ko.observable();this.Sent=ko.observable(false);ClientUI.ViewModel.ExceptionReportViewModel.initializeBase(this);this.Email(ClientUI.ViewModel.App.localStorage.getItem('email'));var $0=ex.message;var $1=ex.stack;$1=$1.replaceAll($0,'');$1=$1.replace(new RegExp('\\w+:\\/{2}[\\d\\w-]+(\\.[\\d\\w-]+)*(?:(?:\\/[^:\\s]*))*','g'),'');if(ex.innerException!=null){$0=$0+'\nInner Exeception\n';$0=$0+ex.innerException.toString();}$0=$0+'\nStack Trace:\n'+$1;if(ex['Trace']!=null){$0=$0+'\nTrace:\n'+ex['Trace'];}this.Message($0);}
ClientUI.ViewModel.ExceptionReportViewModel.prototype={SendErrorCommand:function(view){var $0=view['vm'];$0.isBusy(true);ClientUI.ViewModel.App.localStorage.setItem('email',$0.Email());var $1=window.location.protocol;var $2=$0.Message();var $3=String.format('RBW:{0},CRM:{1}',ClientUI.ViewModel.App.current.version.versionString,ClientUI.ViewModel.App.current.getServerVersion());var $4=$0.MoreInfo()+'\n'+$3+'\n'+$2;var $5=encodeURIComponent($0.Email());var $6=[];$4=$4.replaceAll('OrganizationServiceFault','osf');$4=$4.replaceAll('KeyValuePairOfstringanyType','key');$4=$4.replaceAll('http://schemas.datacontract.org/2004/07/System.Collections.Generic','');$4=$4.replaceAll('i:type="d4p1: string"','');$4=$4.replaceAll('xmlns:d4p1="http://www.w3.org/2001/XMLSchema"','');$4=(($4.length>3000)?$4.substr(0,3000):$4);$6.add('ticket[message]='+encodeURIComponent($4));$6.add('ticket[subject]=Error+Report');$6.add('email='+$5);var $7=$6.join('&');$.getJSON($1+'//ribbonworkbench.uservoice.com/api/v1/tickets/create_via_jsonp.json?callback=?&client=f1aPiJ3CdQe4NKH9IsthZQ&'+$7).fail(function(){
alert(ResourceStrings.Error_SubmitManually);}).done(function($p1_0){
var $1_0=$p1_0;$0.Sent(true);}).always(function(){
$0.isBusy(false);});}}
ClientUI.ViewModel.MenuCommands=function(){}
ClientUI.ViewModel.SmartButtonViewModel=function(definition){ClientUI.ViewModel.SmartButtonViewModel.initializeBase(this);this.$1_0=definition;}
ClientUI.ViewModel.SmartButtonViewModel.prototype={$1_0:null,$1_1:null,GetEditorProperties:function(){if(this.$1_1==null){this.$1_1=ss.Delegate.create(this,function($p1_0){
return this.getSmartButtonAddProperties();});}return this.$1_1;},getSmartButtonAddProperties:function(){var $0=this.$1_0;var $1=GetRibbonElementType($0);var $2=[];var $enum1=ss.IEnumerator.getEnumerator(this.$1_0.editableProperties());while($enum1.moveNext()){var $3=$enum1.current;$3.ColSpan=2;$3.Value=ko.observable();$0[$3.FieldName]=$3.Value;$2.add($3);}return $2;}}
ClientUI.ViewModel.UpdateSolutionViewModel=function(versionData){this.Updated=ko.observable(false);this.Message=ko.observable();ClientUI.ViewModel.UpdateSolutionViewModel.initializeBase(this);this.$1_0=versionData['solution'];this.version=versionData['version'];var $0=versionData['description'];this.Message(String.format(ResourceStrings.UpdateAvailableDetail,ClientUI.ViewModel.App.current.version.versionString,this.version,$0));}
ClientUI.ViewModel.UpdateSolutionViewModel.prototype={$1_0:null,version:null,updateCommand:function(parent){if(!ss.isNullOrUndefined(window.USE_XRM_BRIDGE)){ClientUI.ViewModel.App.current.showMessage('The Standalone Ribbon Workbench cannot auto-update at this time. Please download the latest verison manually!');return;}var $0=this;parent.isBusy(true);parent.isBusyMessage(ResourceStrings.Updating);var $1=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$1.operation='UpdateToVersion';var $2={Solution:this.$1_0,Version:this.version};$1.data=ko.utils.stringifyJson($2);Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($1,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=JSON.parse($1_0.response);ClientUI.ViewModel.EditCommandBarsVM.queryImport($1_1.AsyncJobId,ss.Delegate.create(this,function(){
parent.isBusy(false);this.Updated(true);ClientUI.ViewModel.App.current.showMessageWithCallBack(ResourceStrings.Update_Complete,function($p3_0){
});}),function($p2_0){
parent.isBusyMessage($p2_0);},function($p2_0){
parent.isBusy(false);ClientUI.ViewModel.App.current.reportException($p2_0,'Error while waiting for solution import');});}catch($1_2){ClientUI.ViewModel.App.current.reportException($1_2,'Could not update version');}}));}}
ClientUI.ViewModel.CrmNamespace=function(){}
ClientUI.ViewModel.CrmNamespace.createCommandDefinition=function(ribbon){var $0=ribbon.SolutionCommands.ChildNodes().length;var $1='';while($0<100){$1=ribbon.SolutionPrefix()+'.'+ribbon.EntityLogicalName()+'.Command'+$0.toString()+'.Command';if(Object.keyExists(ribbon._SolutionCommandsIndex,$1)){$0++;}else{break;}}return $1;}
ClientUI.ViewModel.CrmNamespace.createEnableRule=function(ribbon){var $0=ribbon.SolutionEnableRules.ChildNodes().length;var $1='';var $2={};var $enum1=ss.IEnumerator.getEnumerator(ribbon.SolutionEnableRules.ChildNodes());while($enum1.moveNext()){var $3=$enum1.current;$2[$3.Id()]='';}while($0<1000){$1=ribbon.SolutionPrefix()+'.'+ribbon.EntityLogicalName()+'.EnableRule'+$0.toString()+'.EnableRule';if(Object.keyExists($2,$1)){$0++;}else{break;}}return $1;}
ClientUI.ViewModel.CrmNamespace.createDisplayRule=function(ribbon){var $0=ribbon.SolutionDisplayRules.ChildNodes().length;var $1='';var $2={};var $enum1=ss.IEnumerator.getEnumerator(ribbon.SolutionDisplayRules.ChildNodes());while($enum1.moveNext()){var $3=$enum1.current;$2[$3.Id()]='';}while($0<1000){$1=ribbon.SolutionPrefix()+'.'+ribbon.EntityLogicalName()+'.DisplayRule'+$0.toString()+'.DisplayRule';if(Object.keyExists($2,$1)){$0++;}else{break;}}return $1;}
ClientUI.ViewModel.CrmNamespace.$0=function($p0,$p1){return ClientUI.ViewModel.CrmNamespace.$3($p1.Id()+'.Group'+$p1.Groups().length.toString(),$p1._ribbon);}
ClientUI.ViewModel.CrmNamespace.$1=function($p0,$p1){var $0=null;if($p1._parentLayoutSection==null){var $6=($p1._parent==null||$p1._parent._parentLayoutSection==null)?$p1._root:$p1._parent;$0=$6._parentLayoutSection;}else{$0=$p1._parentLayoutSection;}var $1=$0._parentGroup;var $2=$1._parentRibbon;var $3=null;var $4=$2.EntityLogicalName();switch($p0.ControlType()){case 6:$3='Section';break;case 4:$3='Menu';break;default:$3='Button';break;}var $5=$2.NextButtonIndex();$5++;$2.NextButtonIndex($5);if($1!=null&&$1.Id().indexOf('{!EntityLogicalName}')>-1){$4=$4+'.{!EntityLogicalName}';}$p0.LabelTextText($3+' '+$5);return $2.SolutionPrefix()+'.'+$4+'.'+$3+$5+'.'+$3;}
ClientUI.ViewModel.CrmNamespace.$2=function($p0,$p1,$p2){return ClientUI.ViewModel.CrmNamespace.$3($p1.Id()+'.Hide',$p2);}
ClientUI.ViewModel.CrmNamespace.$3=function($p0,$p1){var $0=$p1.SolutionPrefix();if(!$p0.startsWith($0+'.')){return $0+'.'+$p0;}else{return $p0;}}
ClientUI.ViewModel.MessageDialogView=function(message,messageType){this.Message=message;this.MessageType=messageType;switch(messageType){case 3:this.MessageTypeClass='stop-dialog-image';break;case 1:this.MessageTypeClass='info-dialog-image';break;case 2:this.MessageTypeClass='warning-dialog-image';break;case 4:this.MessageTypeClass='question-dialog-image';break;}}
ClientUI.ViewModel.MessageDialogView.prototype={Message:null,HelpLink:null,MessageType:0,MessageTypeClass:null,init:function(uniqueDialogId,dialogElement,viewModel,closeCallback){},onButtonPress:function(result){},getViewTemplateId:function(){return 'dialog-message-view';},getTitle:function(){return 'Ribbon Workbench';},getButtonTextDelegate:function(){return null;}}
ClientUI.ViewModel.DialogService=function(){}
ClientUI.ViewModel.DialogService.$0=function($p0,$p1,$p2,$p3,$p4,$p5){var $0='dialog'+ClientUI.ViewModel.DialogService.dialogId.toString();ClientUI.ViewModel.DialogService.dialogId++;var $1=$("<div id='dialog0001'></div");$('body').append($1);var $2={};$2.title=$p0.getTitle();$2.modal=true;if($p4!=null){$2.width=$p4;}if($p5!=null){$2.height=$p5;}var $3={};var $4=null;var $5=function($p1_0){
$4.dialog('close');if($p0!=null){$p0.onButtonPress($p1_0);}if($p3!=null){$p3($p1_0);}$1.remove();$1=null;$4=null;};var $6=false;var $7=false;var $8=false;switch($p2){case 1:$6=true;break;case 2:$6=true;$7=true;break;case 3:$6=true;$7=true;$8=true;break;case 4:$8=true;$7=true;break;}var $9=$p0.getButtonTextDelegate();if($9==null){$9=ClientUI.ViewModel.DialogService.getButtonText;}if($6){$3[$9(1)]=function(){
$5(1);};}if($7){$3[$9(2)]=function(){
$5(2);};}if($8){$3[$9(3)]=function(){
$5(3);};}$2.buttons=$3;$4=$1.dialog($2);var $A={};$A['dialogId']=$0;$A['vm']=$p1;ko.renderTemplate($p0.getViewTemplateId(),$A,{},$1.get(0),'replaceChildren');$p0.init($0,$1,$p1,$5);}
ClientUI.ViewModel.DialogService.getButtonText=function(button){switch(button){case 1:return ResourceStrings.OK;case 2:return ResourceStrings.Cancel;case 3:return ResourceStrings.Retry;default:return '';}}
ClientUI.ViewModel.DialogService.prototype={showMessage:function(message,dialogButtons,messageType,callback,helpLink){var $0=new ClientUI.ViewModel.MessageDialogView(message,messageType);$0.HelpLink=helpLink;ClientUI.ViewModel.DialogService.$0($0,$0,dialogButtons,callback,null,null);},confirm:function(message,dialogButtons,callback){var $0=new ClientUI.ViewModel.MessageDialogView(message,4);ClientUI.ViewModel.DialogService.$0($0,$0,dialogButtons,callback,null,null);},showDialog:function(view,viewModel,buttonsToShow,callback,width,height){ClientUI.ViewModel.DialogService.$0(view,viewModel,buttonsToShow,callback,width,height);}}
ClientUI.ViewModel.LoadSolutionViewModel=function(parent){this.SearchTerm=ko.observable('');ClientUI.ViewModel.LoadSolutionViewModel.initializeBase(this);this.$1_0=parent;this.Solutions=new SparkleXrm.GridEditor.EntityDataViewModel(100,Xrm.Sdk.Entity,false);this.$1_3();}
ClientUI.ViewModel.LoadSolutionViewModel.prototype={Solutions:null,$1_0:null,$1_1:false,$1_2:null,SearchSolutionsCommand:function(){if(this.$1_2==null){this.$1_2=ss.Delegate.create(this,function(){
this.$1_3();});}return this.$1_2;},$1_3:function(){var $0=this.SearchTerm();this.Solutions.set_fetchXml('\r\n                <fetch version="1.0" output-format="xml-platform" mapping="logical" returntotalrecordcount="true" no-lock="true" distinct="false" count="{0}" paging-cookie="{1}" page="{2}">\r\n                  <entity name="solution">\r\n                    <attribute name="friendlyname" />\r\n                    <attribute name="uniquename" />\r\n                    <attribute name="solutionid" />\r\n                    <attribute name="version" />\r\n                    <order attribute="uniquename" descending="false" />\r\n                    <link-entity name="publisher" to="publisherid" from="publisherid" link-type="inner" alias="publisher">\r\n                      <attribute name="customizationprefix" />\r\n                    </link-entity>\r\n                    <filter type="and">                                 \r\n                        <condition attribute="isvisible" operator="eq" value="true" />\r\n                        <condition attribute="ismanaged" operator="eq" value="false" />\r\n                        <condition attribute="uniquename" operator="ne" value="Default" /> '+((String.isNullOrEmpty($0))?'':'<condition attribute="friendlyname" operator="like" value="%'+$0+'%" /> ')+'\r\n                     </filter>\r\n                  </entity>\r\n                </fetch>');this.Solutions.reset();this.Solutions.refresh();},loadSolution:function(){var $0=this.Solutions.getSelectedRows();var $1=this.Solutions.getItem($0[0].fromRow);var $2=$1.getAttributeValueString('uniquename');this.$1_4($2,ss.Delegate.create(this,function($p1_0){
if($p1_0){this.$1_0.SolutionUniqueName($2);this.$1_0.isBusyProgress(null);this.$1_0.isBusyMessage(String.format(ResourceStrings.DownloadingSolution,$2));this.$1_0.isBusy(true);this.$1_5($2);}else{this.$1_0.showLoadSolutionDialog();}}));},$1_4:function($p0,$p1){var $0='\r\n                <fetch top="50" aggregate="true" >\r\n                  <entity name="solution" >\r\n                    <filter>\r\n                      <condition attribute="uniquename" operator="eq" value="'+$p0+'" />\r\n                    </filter>\r\n                    <link-entity name="solutioncomponent" from="solutionid" to="solutionid" >\r\n                      <attribute name="rootcomponentbehavior" alias="componentbehavior" groupby="true" />\r\n                      <attribute name="componenttype" alias="componenttype" groupby="true" />\r\n                      <attribute name="objectid" alias="count" aggregate="count" />\r\n                    </link-entity>\r\n                  </entity>\r\n                </fetch>\r\n                   ';Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $1_1=0;var $1_2=0;var $1_3=0;var $enum1=ss.IEnumerator.getEnumerator($1_0.get_entities());while($enum1.moveNext()){var $1_5=$enum1.current;var $1_6=$1_5.getAttributeValueInt('count');var $1_7=$1_5.getAttributeValueOptionSet('componenttype');var $1_8=$1_5.getAttributeValueOptionSet('componentbehavior');if($1_6!=null){if($1_7!=null&&$1_7.value===50){$1_1+=1;}else if($1_7!=null&&$1_7.value===1){$1_1+=$1_6;if($1_8!=null&&!$1_8.value){$1_2+=$1_6;}}else{$1_3+=$1_6;}}}var $1_4='';if($1_2>0){$1_4+=ResourceStrings.InvalidSolution_SubComponents;}if($1_3>0){$1_4+=ResourceStrings.InvalidSolution_NonEntity;}if($1_1>5){$1_4+=ResourceStrings.InvalidSolution_MaxEntities;}else if(!$1_1){$1_4+=ResourceStrings.InvalidSolution_NoEntities;}if($1_4.length>0){var $1_9=String.format(ResourceStrings.InvalidSolution_Message,$1_4);var $1_A=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');$1_A.showMessage($1_9,1,1,function($p2_0){
$p1(false);},'https://ribbonworkbench.uservoice.com/knowledgebase/articles/169819');}else{$p1(true);}}catch($1_B){this.$1_7($1_B);$p1(true);}}));},$1_5:function($p0){var $0=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$0.operation='GetSolutionDetails';var $1={SolutionUniqueName:$p0};$0.data=ko.utils.stringifyJson($1);Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=JSON.parse($1_0.response);if($1_1==null){throw Error.createError('GetSolutionDetails returned: '+$1_0.response,{ErrorCode:ClientUI.ErrorCodes.getSolutionDetailsEmpty});}this.$1_1=$1_1.ContainsNonRibbonComponents;this.$1_0.setDefaultLanguage($1_1.DefaultLCID);var $1_2={};var $1_3=ss.Delegate.create(this,function(){
if(Object.getKeyCount($1_2)===$1_1.Entities.length){this.$1_0.isBusyMessage(ResourceStrings.AssemblingSolution);this.$1_0.isBusyProgress(null);this.$1_8($1_2);}});this.$1_0.isBusyMessage(String.format(ResourceStrings.LoadingRibbon,$1_1.Entities.length));this.$1_0.isBusyProgress(null);var $1_4={};for(var $1_5=0;$1_5<$1_1.Entities.length;$1_5++){$1_4[$1_1.Entities[$1_5]]=$1_1.RibbonDiffXml[$1_5];}var $enum1=ss.IEnumerator.getEnumerator(Object.keys($1_4));while($enum1.moveNext()){var $1_6=$enum1.current;this.$1_6($1_2,$1_3,$p0,$1_6,$1_1.DefaultLCID,$1_4[$1_6],$1_1.Entities.length+1);}}catch($1_7){this.$1_7($1_7);}}));},$1_6:function($p0,$p1,$p2,$p3,$p4,$p5,$p6){var $0=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$0.operation='GetRibbonJSON';var $1={EntityLogicalName:$p3,SolutionUniqueName:$p2,DefaultLCID:$p4,SolutionXml:$p5};$0.data=ko.utils.stringifyJson($1);Xrm.Sdk.OrganizationServiceProxy.beginExecute($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);$p0[$p3]=$1_0.response;this.$1_0.isBusyProgress((Object.getKeyCount($p0)/$p6)*100);$p1();}catch($1_1){this.$1_7($1_1);}}));},$1_7:function($p0){this.$1_0.isBusy(false);ClientUI.ViewModel.App.current.reportException($p0,'Could not load solution');},$1_8:function($p0){var $0=[];var $1=ss.Delegate.create(this,function(){
$0.sort(function($p2_0,$p2_1){
return $p2_0.EntityLogicalName().compareTo($p2_1.EntityLogicalName());});this.$1_0.Ribbons($0);this.$1_0.initRibbon(ss.Delegate.create(this,function(){
if(this.$1_1){ClientUI.ViewModel.App.current.showMessage(ResourceStrings.NonRibbonComponents);}}));this.$1_0.Messages.clear();});this.$1_9(0,$p0,$0,$1);},$1_9:function($p0,$p1,$p2,$p3){window.setTimeout(ss.Delegate.create(this,function(){
var $1_0=Object.keys($p1)[$p0];var $1_1=JSON.parse($p1[$1_0]);var $1_2=ko.mapping.fromJS($1_1);var $1_3=Object.getKeyCount($p1);$p2.add($1_2);this.$1_0.isBusyProgress(($p0/$1_3)*100);$p0++;if($p0<$1_3){this.$1_9($p0,$p1,$p2,$p3);}else{$p3();}}),100);}}
ClientUI.ViewModel.ObservableEditorProperty=function(){}
ClientUI.ViewModel.ObservableEditorProperty.prototype={FieldName:null,ColSpan:null,Value:null,Label:null,Options:null,PropertyType:null,IdAttribute:null,NameAttribute:null,Disable:null,Precision:null,LookupFetch:null,OnlyOnCreate:null}
ClientUI.ViewModel.EditorProperty=function(label,value,colSpan){this.Label=label;this.Value=value;this.ColSpan=colSpan;}
ClientUI.ViewModel.EditorProperty.getProperties=function(item){var $0=GetRibbonElementType(item);var $1=[];switch($0){case 'SmartButton':ClientUI.Model.SmartButtonCollection.getSmartButtonProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newSection(ResourceStrings.StandardProperties));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());ClientUI.ViewModel.EditorProperty.$0(item,$0,$1);break;case 'MenuSectionControl':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Title','TitleText',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Sequence','Sequence',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());ClientUI.ViewModel.EditorProperty.$1(item,$1);break;case 'ButtonControl':case 'SplitButtonControl':case 'FlyOutAnchorControl':case 'Menu':ClientUI.ViewModel.EditorProperty.$0(item,$0,$1);break;case 'command':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',1));break;case 'JavascriptFunctionCommandAction':$1.add(ClientUI.ViewModel.EditorProperty.newLookupProperty(item,'Library','Library','name','value',ClientUI.Model.CommandAction.queryJavascriptWebresources,1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Function Name','FunctionName',1));break;case 'UrlCommandAction':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Address','Address',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'Pass Parameters','PassParams',1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Window Parameters','WinParams',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Window Mode','WinMode',ClientUI.Model.CommandAction.WinModes,1));break;case 'IntParameter':ClientUI.ViewModel.EditorProperty.$2(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Value','Value',1));break;case 'StringParameter':ClientUI.ViewModel.EditorProperty.$2(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Value','Value',1));break;case 'DecimalParameter':ClientUI.ViewModel.EditorProperty.$2(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newDecimalProperty(item,'Value','Value',5,1));break;case 'BoolParameter':ClientUI.ViewModel.EditorProperty.$2(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'Value','Value',1));break;case 'CrmParameter':ClientUI.ViewModel.EditorProperty.$2(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Value','Value',ClientUI.Model.CommandActionParameter.CrmValues,1));break;case 'HideCustomAction':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Location','Location',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'DisplayRule':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'Un-customised (IsCore)','IsCore',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'EnableRule':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'Un-customised (IsCore)','IsCore',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'CommandClientTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Type','Type',ClientUI.Model.RuleStep.commandClientTypeRuleType,1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'CrmClientTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Type','Type',ClientUI.Model.RuleStep.crmClientTypeRuleType,1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'CrmOfflineAccessStateRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'State','State',ClientUI.Model.RuleStep.crmOfflineAccessStateRuleTypeState,1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'CrmOutlookClientTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Type','Type',ClientUI.Model.RuleStep.crmOutlookClientTypeRuleTypeType,1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'CrmOutlookClientVersionRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Major','Major',1));$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Minor','Minor',1));$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Build','Build',1));$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Revision','Revision',1));break;case 'CustomRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'FunctionName','FunctionName',2));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newLookupProperty(item,'Library','Library','name','value',ClientUI.Model.CommandAction.queryJavascriptWebresources,2));break;case 'EntityPrivilegeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'EntityName','EntityName',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PrivilegeType','PrivilegeType',ClientUI.Model.RuleStep.privilegeType,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PrivilegeDepth','PrivilegeDepth',ClientUI.Model.RuleStep.privilegeDepth,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToType,1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());break;case 'EntityPropertyRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'EntityName','EntityName',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToType,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PropertyName','PropertyName',ClientUI.Model.RuleStep.entityPropertyRuleTypePropertyName,1));$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'PropertyValue','PropertyValue',1));break;case 'EntityRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'EntityName','EntityName',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Context','Context',ClientUI.Model.RuleStep.context,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToType,1));break;case 'FormEntityContextRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'EntityName','EntityName',1));break;case 'FormStateRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'State','State',ClientUI.Model.RuleStep.formStateRuleTypeState,1));break;case 'FormTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Type','Type',ClientUI.Model.RuleStep.formTypeRuleTypeType,1));break;case 'MiscellaneousPrivilegeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PrivilegeName','PrivilegeName',ClientUI.Model.RuleStep.privilegeName,1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'PrivilegeNameCustomEntity','PrivilegeNameCustomEntity',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PrivilegeDepth','PrivilegeDepth',ClientUI.Model.RuleStep.privilegeDepth,1));break;case 'OptionSetRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'OptionSet','OptionSet',1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'StateCode','StateCode',1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'ObjectTypeCode','ObjectTypeCode',1));break;case 'OrganizationSettingRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Setting','Setting',ClientUI.Model.RuleStep.organizationSettingRuleTypeSetting,1));break;case 'OutlookItemTrackingRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'TrackedInCrm','TrackedInCrm',1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToPrimaryType,1));break;case 'OutlookRenderTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Type','Type_',ClientUI.Model.RuleStep.outlookRenderTypeRuleTypeType,1));break;case 'OutlookVersionRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Version','Version',ClientUI.Model.RuleStep.outlookVersionRuleTypeVersion,1));break;case 'PageRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Address','Address',1));break;case 'RecordPrivilegeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'PrivilegeType','PrivilegeType',ClientUI.Model.RuleStep.privilegeType,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToPrimaryType,1));break;case 'RelationshipTypeRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToSelectedType,1));$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'RelationshipType','RelationshipType',ClientUI.Model.RuleStep.relationshipTypeRuleTypeRelationshipType,1));$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'AllowCustomRelationship','AllowCustomRelationship',1));$1.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'AllowSystemRelationship','AllowSystemRelationship',1));break;case 'SelectionCountRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'AppliesTo','AppliesTo',ClientUI.Model.RuleStep.appliesToType,1));$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Minimum','Minimum_',1));$1.add(ClientUI.ViewModel.EditorProperty.newIntegerProperty(item,'Maximum','Maximum_',1));break;case 'SkuRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newPickListProperty(item,'Sku','Sku',ClientUI.Model.RuleStep.skuRuleTypeSku,1));break;case 'ValueRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Field','Field',1));$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Value','Value',1));break;case 'HideForTabletExperienceRule':case 'OrDisplayRule':case 'OrEnableRule':case 'OrGroup':case 'OrRule':case 'ReferencingAttributeRequiredRule':ClientUI.ViewModel.EditorProperty.addBaseStepProperties(item,$1);break;case 'SectionPlaceholder':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'TemplateAlias','TemplateAlias',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());var $enum1=ss.IEnumerator.getEnumerator($1);while($enum1.moveNext()){var $3=$enum1.current;$3.Disable=true;}break;case 'Group':$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Id','Id',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Title','TitleText',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'TabId','TabId',1));$1[$1.length-1].Disable=true;$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());$1.add(ClientUI.ViewModel.EditorProperty.newStringProperty(item,'Sequence','Sequence',1));$1.add(ClientUI.ViewModel.EditorProperty.newSpacer());var $2=item;if(!$2.Customised()){var $enum2=ss.IEnumerator.getEnumerator($1);while($enum2.moveNext()){var $4=$enum2.current;$4.Disable=true;}}break;}return $1;}
ClientUI.ViewModel.EditorProperty.$0=function($p0,$p1,$p2){var $0=$p1!=='ButtonControl';$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Id','Id',2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newPickListProperty($p0,'Command','_Command',ClientUI.Model.Ribbon.getRibbon($p0).CommandPicklist2,2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());if($0){$p2.add(ClientUI.ViewModel.EditorProperty.newPickListProperty($p0,'PopulateQueryCommand','_PopulateQueryCommand',ClientUI.Model.Ribbon.getRibbon($p0).CommandPicklist2,2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newBoolProperty($p0,'Populate Only Once','PopulateOnlyOnce',1));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());}$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Label','LabelTextText',2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Alt','AltText',2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Tool Tip Title','ToolTipTitleText',2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Tool Tip Description','ToolTipDescriptionText',2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newLookupProperty($p0,'Image 16','Image16by16','name','value',ClientUI.Model.CommandAction.queryImageWebresources,2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newLookupProperty($p0,'Image 32','Image32by32','name','value',ClientUI.Model.CommandAction.queryImageWebresources,2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newLookupProperty($p0,'ModernImage','ModernImage','name','value',ClientUI.Model.CommandAction.querySvgWebresources,2));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'Sequence','Sequence',1));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'CommandCore','CommandCore',2));if($p1==='ButtonControl'||$p1==='ToggleCommand'){$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'CommandValueId','CommandValueId',2));}if($0){$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'PopulateQueryCommandCore','PopulateQueryCommandCore',2));}$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());$p2.add(ClientUI.ViewModel.EditorProperty.newStringProperty($p0,'TemplateAlias','TemplateAlias',1));$p2.add(ClientUI.ViewModel.EditorProperty.newSpacer());ClientUI.ViewModel.EditorProperty.$1($p0,$p2);}
ClientUI.ViewModel.EditorProperty.$1=function($p0,$p1){var $0=$p0;if(!$0.Customised()){var $enum1=ss.IEnumerator.getEnumerator($p1);while($enum1.moveNext()){var $1=$enum1.current;$1.Disable=true;}}}
ClientUI.ViewModel.EditorProperty.$2=function($p0,$p1){var $0=($p0)._action;if(GetRibbonElementType($0)==='UrlCommandAction'){$p1.add(new ClientUI.ViewModel.EditorProperty('Name',$p0['Name'],1));}}
ClientUI.ViewModel.EditorProperty.newLookupProperty=function(item,label,name,displayNameAttribtue,idAttribute,queryCommand,rowspan){if(item!=null&&!Object.keyExists(item,name)){item[name]=ko.observable();}var $0=new ClientUI.ViewModel.EditorProperty(label,(item!=null)?item[name]:null,rowspan);$0.PropertyType='textlookup';$0.IdAttribute=idAttribute;$0.NameAttribute=displayNameAttribtue;$0.QueryCommand=queryCommand;$0.FieldName=name;return $0;}
ClientUI.ViewModel.EditorProperty.addBaseStepProperties=function(item,properties){properties.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'Default','Default',1));properties.add(ClientUI.ViewModel.EditorProperty.newBoolProperty(item,'InvertResult','InvertResult',2));}
ClientUI.ViewModel.EditorProperty.newIntegerProperty=function(item,label,name,colSpan){return ClientUI.ViewModel.EditorProperty.newDecimalProperty(item,label,name,0,colSpan);}
ClientUI.ViewModel.EditorProperty.newSpacer=function(){var $0=new ClientUI.ViewModel.EditorProperty('',null,1);$0.PropertyType='spacer';return $0;}
ClientUI.ViewModel.EditorProperty.newSection=function(name){var $0=new ClientUI.ViewModel.EditorProperty(name,null,2);$0.PropertyType='section';return $0;}
ClientUI.ViewModel.EditorProperty.newStringProperty=function(item,label,name,colSpan){if(item!=null&&!Object.keyExists(item,name)){item[name]=ko.observable();}var $0=new ClientUI.ViewModel.EditorProperty(label,(item!=null)?item[name]:null,colSpan);$0.FieldName=name;return $0;}
ClientUI.ViewModel.EditorProperty.newDecimalProperty=function(item,label,name,precision,colSpan){if(item!=null&&!Object.keyExists(item,name)){item[name]=ko.observable();}var $0=new ClientUI.ViewModel.EditorProperty(label,(item!=null)?item[name]:null,colSpan);$0.PropertyType='numeric';$0.Precision=precision;$0.FieldName=name;return $0;}
ClientUI.ViewModel.EditorProperty.newPickListProperty=function(item,label,name,options,colSpan){if(item!=null&&!Object.keyExists(item,name)){item[name]=ko.observable();}var $0=new ClientUI.ViewModel.EditorProperty(label,(item!=null)?item[name]:null,colSpan);$0.Options=options;$0.PropertyType='picklist-value';$0.FieldName=name;return $0;}
ClientUI.ViewModel.EditorProperty.newBoolProperty=function(item,label,name,colSpan){if(item!=null&&!Object.keyExists(item,name)){item[name]=ko.observable();}var $0=new ClientUI.ViewModel.EditorProperty(label,(item!=null)?item[name]:null,colSpan);$0.Options=ClientUI.ViewModel.EditorProperty.BoolValues;$0.PropertyType='picklist-value';$0.FieldName=name;return $0;}
ClientUI.ViewModel.EditorProperty.prototype={FieldName:null,ColSpan:0,Value:null,Label:null,Options:null,PropertyType:'text',QueryCommand:null,IdAttribute:null,NameAttribute:null,Disable:false,Precision:0,LookupFetch:null,_target:null,_smartButton:null,OnlyOnCreate:false}
ClientUI.ViewModel.EditableItem=function(){}
ClientUI.ViewModel.EditCommandBarsVM=function(){this.$1_3=new ClientUI.Model.NameValuePair('','empty');this.Languages=ko.observableArray();this.Messages=new ClientUI.Model.RibbonValidationMessageCollection();this.SelectedLanguage=ko.observable();this.SelectedEntity=ko.observable();this.Ribbons=ko.observableArray();this.SelectedControl=ko.observable();this.EnsureControlVisible=ko.observable();this.SelectedFlyoutRoot=ko.observable();this.SelectedRibbon=ko.observable();this.SelectedRibbonUI=ko.observable();this.EditingItem=ko.observable();this.EditorType=ko.observable();this.RenderType=ko.observable('CommandBar');this.RenderingCommandBar=ko.observable(false);this.SmartButtonsLoaded=ko.observable(false);this.IsBusyRefresh=ko.observable(false);this.NewsFeedItem=ko.observable();this.SelectedSolutionTab=ko.observable(0);this.MessagesCount=ko.observable(0);this.Clipboard=ko.observable();this.Version=ko.observable();this.SolutionUniqueName=ko.observable();ClientUI.ViewModel.EditCommandBarsVM.initializeBase(this);ClientUI.ViewModel.App.current.add_onApplicationError(ss.Delegate.create(this,this.$1_9));this.$1_1A();this.$1_20();this.loadSmartButtons();this.Toolbox=new ClientUI.ViewModel.ToolboxControls(this);this.EditorType(this.$1_3);this.SelectedRibbonUI.subscribe(ss.Delegate.create(this,this.$1_B));this.SelectedControl.subscribe(ss.Delegate.create(this,this.$1_C));this.isBusy.subscribe(ss.Delegate.create(this,this.$1_A));ClientUI.ViewModel.App.current.getCurrentVersion(ss.Delegate.create(this,function(){
var $1_0=new ClientUI.Model.RibbonValidationMessage(0,ResourceStrings.WelcomeToRibbonWorkbench+' v'+ClientUI.ViewModel.App.current.version.versionString);this.Messages.addItem($1_0);}));this.Messages.onDataLoaded.subscribe(ss.Delegate.create(this,function($p1_0,$p1_1){
this.MessagesCount(this.Messages.getLength());}));}
ClientUI.ViewModel.EditCommandBarsVM.queryImport=function(importJobId,callback,progressCallback,errorCallback){var $0=0;var $1=null;try{$1=Xrm.Sdk.OrganizationServiceProxy.retrieve('asyncoperation',importJobId,['statuscode','message']);var $2=$1.getAttributeValueOptionSet('statuscode');if($2!=null){$0=$2.value;}}catch($3){}try{switch($0){case 20:var $4="<fetch count='1' no-lock='true' >\r\n                                                  <entity name='importjob' >\r\n                                                     <attribute name='solutionname' />\r\n                                                      <attribute name='progress' />\r\n                                                       <order attribute='modifiedon' descending='true' />\r\n                                                        </entity>\r\n                                                      </fetch>";Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($4,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.Entity);var $1_1='';if($1_0.get_entities().get_count()>0){var $1_2=$1_0.get_entities().get_item(0).getAttributeValueFloat('progress');if($1_2!=null){var $1_3=$1_2.toString();var $1_4=$1_3.indexOf('.');if($1_4>-1){try{$1_3=$1_3.substr(0,$1_4);}catch($1_5){}}$1_1=String.format('\n{0}%',$1_3);}}progressCallback(ResourceStrings.Import_InProgress+$1_1);});break;case 30:callback();return true;case 31:var $5=$1.getAttributeValueString('message');if($5.indexOf('<ErrorCode>-2147160050</ErrorCode>')>-1){throw Error.createError(ResourceStrings.Import_Failed,{ErrorCode:ClientUI.ErrorCodes.cannotImportPatch});}else if($5.indexOf('<ErrorCode>-2147187707</ErrorCode>')>-1){throw Error.createError(ResourceStrings.Import_Failed,{ErrorCode:ClientUI.ErrorCodes.accessDenied});}else if($5.indexOf('<ErrorCode>-2147188710</ErrorCode>')>-1){var $6=ClientUI.ViewModel.EditCommandBarsVM.$1_1E($5);throw Error.createError($6,{ErrorCode:ClientUI.ErrorCodes.xsdValidationException});}else if($5.indexOf('<ErrorCode>-2147188687</ErrorCode>')>-1){var $7=ClientUI.ViewModel.EditCommandBarsVM.$1_1E($5);throw Error.createError($7,{ErrorCode:ClientUI.ErrorCodes.xsdValidationException});}else if($5.indexOf('<ErrorCode>-2147159801</ErrorCode>')>-1){var $8=ClientUI.ViewModel.EditCommandBarsVM.$1_1E($5);throw Error.createError($8,{ErrorCode:ClientUI.ErrorCodes.importRibbonsError});}else{throw new Error(String.format(ResourceStrings.Import_Failed,$5));}case 32:throw new Error('Import cancelled');}window.setTimeout(function(){
ClientUI.ViewModel.EditCommandBarsVM.queryImport(importJobId,callback,progressCallback,errorCallback);},1000);}catch($9){errorCallback($9);}return false;}
ClientUI.ViewModel.EditCommandBarsVM.$1_1E=function($p0){var $0=$p0.match(new RegExp('<Message>[\\s\\S]*?<\\/Message>','gm'));var $1=[];var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $3=$enum1.current;var $4=$3.replaceAll('<Message>','').replaceAll('</Message','');if(!$1.contains($4)){$1.add($4);}}var $2=$1.join(',');return Xrm.Sdk.XmlHelper.Decode($2);}
ClientUI.ViewModel.EditCommandBarsVM.toJSON=function(data){var $0=ClientUI.ViewModel.EditCommandBarsVM.$1_21;return ko.toJSON(data,$0,2);}
ClientUI.ViewModel.EditCommandBarsVM.$1_21=function($p0,$p1){if($p0.startsWith('_')&&!$p0.startsWith('__')){return undefined;}else{return $p1;}}
ClientUI.ViewModel.EditCommandBarsVM.prototype={$1_0:null,$1_1:null,$1_2:false,$1_4:null,$1_5:null,$1_6:0,$1_8:false,Toolbox:null,SmartButtons:null,$1_9:function($p0){this.isBusy(false);},$1_A:function($p0){if(!this.$1_2){return;}var $0=window.location.protocol;$p0=this.isBusy();if($p0){var $1=new ClientUI.Model.NewsFeedItem();$1.ImageSrc=this.$1_4[this.$1_6]['imageSrc'];$1.ImageSrc=$1.ImageSrc.replaceAll('http:',$0);$1.Title=this.$1_4[this.$1_6]['title'];$1.Link=this.$1_4[this.$1_6]['link'];this.NewsFeedItem($1);window.setTimeout(ss.Delegate.create(this,function(){
$1.IsVisible(true);this.$1_6++;if(this.$1_6>=this.$1_4.length){this.$1_6=0;}window.setTimeout(ss.Delegate.create(this,function(){
$1.IsVisible(false);window.setTimeout(ss.Delegate.create(this,function(){
this.$1_A(true);}),1000);}),6000);}),1000);}else{if(this.NewsFeedItem()!=null){this.NewsFeedItem().IsVisible(false);}}},$1_B:function($p0){this.SelectedRibbon(null);this.SelectedFlyoutRoot(null);this.RenderingCommandBar(true);window.setTimeout(ss.Delegate.create(this,function(){
this.SelectedRibbon($p0);this.RenderingCommandBar(false);}),10);},$1_C:function($p0){window.setTimeout(ss.Delegate.create(this,function(){
this.$1_22($p0);this.EditingItem($p0);this.EditorType(this.GetEditorType());}),100);},$1_D:function($p0){if(this.$1_0===$p0.value){return;}this.syncLabels(this.SelectedRibbon());this.$1_0=$p0.value;},$1_E:null,Group_OnBeforeMove:function(){if(this.$1_E==null){this.$1_E=function($p1_0){
ClientUI.Model.RibbonGroup.groupAfterDrop($p1_0);};}return this.$1_E;},$1_F:null,Group_OnAfterMove:function(){if(this.$1_F==null){this.$1_F=function($p1_0){
};}return this.$1_F;},$1_10:null,Control_OnAfterMove:function(){if(this.$1_10==null){this.$1_10=ss.Delegate.create(this,function($p1_0){
var $1_0=$p1_0.item;var $1_1=$p1_0.targetParent;var $1_2=$p1_0.sourceParent;ClientUI.Model.RibbonControl.setDropProperties($p1_0,$1_0,$1_1);ClientUI.Model.RibbonControl.setParent($1_0,$1_1);var $1_3=ClientUI.Model.RibbonControl.getRibbonControlsCollection($1_0);if($1_3!=null){$1_3._root=$1_0._root;$1_3._parent=$1_0;}this.SelectedControl($1_0);var $1_4=('_customisedInCurrentSession' in $1_0)&&$1_0._customisedInCurrentSession;var $1_5=$1_0.Id().startsWith('Mscrm.');if($1_4||$1_5){var $1_6=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');$1_6.confirm(ResourceStrings.ConfirmHideAndRename,2,function($p2_0){
if($p2_0===1){var $2_0=ClientUI.Model.Ribbon.getRibbon($1_0);var $2_1=$1_0.Id();var $2_2=ClientUI.Model.HideCustomActionController.hideControl($1_0);$1_0.HiddenBySolution(false);$1_0._customisedInCurrentSession=false;var $2_3=ClientUI.ViewModel.CrmNamespace.$3($2_1,$2_0);$1_0.Id($2_3);$2_0._SolutionButtonsIndex[$2_3]=$1_0;}});}});}return this.$1_10;},$1_11:null,Control_OnBeforeMove:function(){if(this.$1_11==null){this.$1_11=ss.Delegate.create(this,function($p1_0){
if(!(typeof($p1_0.item.Id)==='function')){$p1_0.cancelDrop=true;return;}var $1_0=$p1_0.item;if($1_0.FlyoutOpen==null){$1_0.FlyoutOpen=ko.observable();}var $1_1=$p1_0.targetParent;if($1_1._parentLayoutSection!=null&&$1_1._parent==null){var $1_4=ClientUI.Model.LayoutSection.findAvailableSpace($1_1._parentLayoutSection);if($1_4<=0){ClientUI.ViewModel.App.current.showMessage(ResourceStrings.NotEnoughSpaceInLayoutSection);$p1_0.cancelDrop=true;return;}}var $1_2=($p1_0.targetParent)();var $1_3=$1_2;if($1_1._parentLayoutSection!=null&&$1_1._parent==null){$1_3=ClientUI.Model.RibbonGroup.flattenGroup($1_1._parentLayoutSection._parentGroup);}if(!$1_3.contains($1_0)){var $1_5=$1_0.Id();var $enum1=ss.IEnumerator.getEnumerator($1_3);while($enum1.moveNext()){var $1_6=$enum1.current;if($1_6.Id()===$1_5){ClientUI.ViewModel.App.current.showMessage(ResourceStrings.DuplicateIdOnDrop);$p1_0.cancelDrop=true;return;}}}if($1_1._parent!=null&&$1_0.ControlType()!==6){var $1_7=false;if($p1_0.targetIndex>0){for(var $1_8=$p1_0.targetIndex-1;$1_8>=0;$1_8--){$1_7=($1_2[$1_8].ControlType()===6);if($1_7){break;}}}if(!$1_7){ClientUI.ViewModel.App.current.showMessage(ResourceStrings.NoMenuSectionOnDrop);$p1_0.cancelDrop=true;return;}}if(ClientUI.ViewModel.ToolboxControls.isToolboxControl($1_0)){var $1_9=ClientUI.ViewModel.ToolboxControls.onToolboxDrop($p1_0,$1_0);if($1_9!=null){this.SelectedControl($1_9);}}else if(ClientUI.Model.SmartButtonCollection.isSmartButtonToolboxControl($1_0)){var $1_A=this.SmartButtons.onToolboxDrop($p1_0,$1_0);if($1_A!=null){this.SelectedControl($1_A);}}else{ClientUI.Model.RibbonControl.setPositionOnDrag($1_0);}});}return this.$1_11;},$1_12:null,Control_OnClick:function(){if(this.$1_12==null){this.$1_12=ss.Delegate.create(this,function($p1_0){
if(this.EnsureControlVisible()!=null){this.EnsureControlVisible(null);}this.SelectedControl($p1_0);});}return this.$1_12;},$1_13:null,Group_OnClick:function(){if(this.$1_13==null){this.$1_13=ss.Delegate.create(this,function($p1_0){
this.EditingItem($p1_0);});}return this.$1_13;},Item_CollapseBeforeMove:function(e,sender){var $0=sender.item[0];var $1=ko.dataFor($0);var $2=$1;if(Object.keyExists($2,'_expanded')){var $3=$2['_expanded'];$3(false);}},Item_ExpandAfterMove:function(args){var $0=args.item;if(Object.keyExists($0,'_expanded')){var $1=$0['_expanded'];$1(true);}},OnMenuSelect:function(target,CommandId){try{var $0=target;var $1=ClientUI.Model.Ribbon.getRibbon($0);switch(CommandId){case 'customise_command':this.setBusy();ClientUI.Model.RibbonControl.customiseCommand($0,ss.Delegate.create(this,function(){
this.EditingItem($0._Command);this.isBusy(false);}));break;case 'hide':ClientUI.Model.HideCustomActionController.hideControlCommand($0);break;case 'unhide':ClientUI.Model.HideCustomActionController.unHideControlCommand($0);break;case 'customise_button':ClientUI.Model.RibbonControl.customiseControl($0,$1,true);break;case 'uncustomise_button':ClientUI.Model.RibbonControl.unCustomiseControl($0,$1,true);break;case 'delete':ClientUI.Model.RibbonControl.deleteControl($0,$1);break;case 'copy':var $2=ClientUI.Model.Ribbon.getRibbon($0)._parent;this.setBusy();this.isBusyMessage(ResourceStrings.CopyingToClipboard);window.setTimeout(function(){
try{var $1_0=ClientUI.ViewModel.RibbonPasteData.getControlClipboard($0);$2.Clipboard($1_0);$2.isBusy(false);}catch($1_1){ClientUI.ViewModel.App.current.reportException($1_1,ResourceStrings.Error_DialogTitle);}},1000);break;case 'paste':try{var $3=$0._parentLayoutSection.Controls.indexOf($0);ClientUI.ViewModel.RibbonPasteData.pasteControl($0._parentLayoutSection._parentGroup,$3+1,$0._parentLayoutSection);}catch($4){ClientUI.ViewModel.App.current.reportException($4,String.format(ResourceStrings.InvalidPasteData,$4.message));}break;}}catch($5){ClientUI.ViewModel.App.current.reportException($5,'Error');}},$1_14:null,DeleteCommandCommand:function(){if(this.$1_14==null){this.$1_14=ss.Delegate.create(this,function($p1_0){
var $1_0=this.SelectedRibbon();var $1_1=$p1_0.Id();$1_0.SolutionCommands.ChildNodes.remove($p1_0);$1_0.CommandPicklist.remove(function($p2_0){
if($p2_0['name']===$1_1){return true;}else{return false;}});});}return this.$1_14;},$1_15:null,AddNewCommandCommand:function(){if(this.$1_15==null){this.$1_15=ss.Delegate.create(this,function(){
var $1_0=this.addNewCommand();this.EditingItem($1_0);});}return this.$1_15;},addNewCommand:function(){var $0=this.SelectedRibbon();var $1=new ClientUI.Model.CommandDefinition();$1._ribbon=$0;$1.Id(ClientUI.ViewModel.CrmNamespace.createCommandDefinition($0));this.addCommand($1);return $1;},addCommand:function(newCommand){var $0=this.SelectedRibbon();newCommand._ribbon=$0;$0.SolutionCommands.ChildNodes.push(newCommand);$0.CommandPicklist.push({name:newCommand.Id(),value:newCommand});},$1_16:null,AddNewDisplayRuleCommand:function(){if(this.$1_16==null){this.$1_16=ss.Delegate.create(this,function(){
var $1_0=this.SelectedRibbon();ClientUI.Model.DisplayRule.addNewDisplayRule(null,$1_0);});}return this.$1_16;},$1_17:null,AddNewEnableRuleCommand:function(){if(this.$1_17==null){this.$1_17=ss.Delegate.create(this,function(){
var $1_0=this.SelectedRibbon();ClientUI.Model.EnableRule.addNewEnableRule(null,$1_0);});}return this.$1_17;},PublishCommand:function(){var $0=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');if(this.Ribbons().length>0){$0.confirm(ResourceStrings.ConfirmPublish,2,ss.Delegate.create(this,function($p1_0){
if($p1_0===1){this.DoPublish();}}));}},$1_18:null,GetEditorProperties:function(){if(this.$1_18==null){this.$1_18=function($p1_0){
return ClientUI.ViewModel.EditorProperty.getProperties($p1_0);};}return this.$1_18;},$1_19:null,EditItemCommand:function(){if(this.$1_19==null){this.$1_19=ss.Delegate.create(this,function($p1_0){
this.EditingItem($p1_0);var $1_0=$p1_0;this.EnsureControlVisible($1_0);if((typeof($p1_0.ControlType)==='function')){this.SelectedControl($1_0);}});}return this.$1_19;},loadSmartButtons:function(){this.SmartButtons=new ClientUI.Model.SmartButtonCollection(this);window.setTimeout(ss.Delegate.create(this,function(){
this.SmartButtons.$3(ss.Delegate.create(this,function(){
this.SmartButtonsLoaded(true);}));}),2000);},setDefaultLanguage:function(lcid){var $enum1=ss.IEnumerator.getEnumerator(this.Languages());while($enum1.moveNext()){var $0=$enum1.current;if($0.value.toString()===lcid.toString()){this.$1_0=lcid.toString();this.$1_1=this.$1_0;this.SelectedLanguage($0);}}},setBusy:function(){this.isBusyMessage('');this.isBusyProgress(0);this.isBusy(true);},$1_1A:function(){var $0=window.location.protocol;if(!this.$1_2){ClientUI.ViewModel.App.current.getCurrentVersion(ss.Delegate.create(this,function(){
$.getJSON($0+'//develop1.net/public/feed2016/feed.aspx?jsoncallback=?&V='+ClientUI.ViewModel.App.current.version.versionString).done(ss.Delegate.create(this,function($p2_0){
var $2_0=ClientUI.ViewModel.App.current.version.versionString;var $2_1=$2_0.endsWith('.1111');if($2_1){$2_0=$2_0.substr(0,$2_0.length-5);}this.Version($2_0+(($2_1)?' BETA':''));var $2_2=$p2_0;this.$1_4=$2_2['newsfeed'];this.$1_5=$2_2['update'];this.$1_2=true;if(this.$1_5.length>0){var $2_3=new ClientUI.Library.Version(this.$1_5[0]['version']);var $2_4=ClientUI.ViewModel.App.current.version;if($2_3.isGreaterThan($2_4)){this.$1_8=true;var $2_5=new ClientUI.View.UpdateSolutionDialogView();var $2_6=new ClientUI.ViewModel.UpdateSolutionViewModel(this.$1_5[0]);var $2_7=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');$2_7.showDialog($2_5,$2_6,2,ss.Delegate.create(this,function($p3_0){
if($p3_0===1){$2_6.updateCommand(this);}}),null,null);return;}}}));}));return;}},showLoadSolutionDialog:function(){if(this.$1_8){this.$1_8=false;return;}this.isBusy(false);var $0=ClientUI.ViewModel.ServiceLocator.instance.get('IDialogService');var $1=new ClientUI.ViewModel.LoadSolutionViewModel(this);$0.showDialog(ClientUI.ViewModel.ServiceLocator.instance.get('dialog-select-solution'),$1,2,null,420,380);},OpenSolutionCommand:function(){this.showLoadSolutionDialog();},initRibbon:function(completeCallBack){var $enum1=ss.IEnumerator.getEnumerator(this.Ribbons());while($enum1.moveNext()){var $0=$enum1.current;$0._parent=this;ClientUI.Model.Ribbon.setUpRibbon($0);}this.SelectedRibbonUI(this.Ribbons()[0]);this.SelectedRibbon(this.Ribbons()[0]);this.isBusy(false);completeCallBack();},RefreshXml:function(){this.IsBusyRefresh(true);var $0=this.SelectedRibbon();this.syncLabels($0);var $1=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$1.operation='GetRibbonXml';var $2=[$0];ClientUI.Model.Ribbon.prepareIdsForUpload($0);var $3={Ribbons:$2,SolutionPrefix:$0.SolutionPrefix()};$1.data=this.GetRibbonJSON($3);Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($1,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=JSON.parse($1_0.response);$0.UpdatedRibbonDiffXmlString($1_1['RibbonDiffXmlString']);this.Messages.clear();this.Messages.reset();var $1_2=$1_1['Messages'];this.$1_1B($1_2);if($1_2.length>0){}else{var $1_3=new ClientUI.Model.RibbonValidationMessage(0,ResourceStrings.RefreshSuccessful);this.Messages.addItem($1_3);}this.IsBusyRefresh(false);}catch($1_4){ClientUI.ViewModel.App.current.reportException($1_4,'Could not refresh Xml');this.IsBusyRefresh(false);}}));},$1_1B:function($p0){var $0=false;this.Messages.suspend();var $enum1=ss.IEnumerator.getEnumerator($p0);while($enum1.moveNext()){var $1=$enum1.current;var $2=new ClientUI.Model.RibbonValidationMessage($1.MessageType,$1.Message);this.Messages.addItem($2);$0=$0||$1.MessageType===2;}this.Messages.unsuspend();return $0;},DoPublish:function(){Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);var $0=this.Ribbons();var $1=$0.length;var $2=0;this.isBusyMessage(String.format(ResourceStrings.BuidlingRibbons,$1));this.isBusyProgress(0);this.isBusy(true);this.Messages.clear();window.setTimeout(ss.Delegate.create(this,function(){
var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $1_0=$enum1.current;this.syncLabels($1_0);ClientUI.Model.Ribbon.prepareIdsForUpload($1_0);var $1_1=$1_0;this.$1_1C($1_1,ss.Delegate.create(this,function(){
$2++;this.isBusyProgress(($2/$1)*100);if($2>=$1){this.$1_1D();}}));}}),1000);},$1_1C:function($p0,$p1){var $0=[$p0];var $1={Ribbons:$0,SolutionPrefix:$p0.SolutionPrefix()};var $2=new ClientUI.Messages.rwb_CustomiseRibbonRequest();$2.operation='GetRibbonXml';$2.data=this.GetRibbonJSON($1);Xrm.Sdk.OrganizationServiceProxy.beginExecute($2,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=JSON.parse($1_0.response);$p0.UpdatedRibbonDiffXmlString($1_1['RibbonDiffXmlString']);this.Messages.clear();this.Messages.reset();var $1_2=$1_1['Messages'];var $1_3=this.$1_1B($1_2);if($1_2.length>0){this.SelectedSolutionTab(2);}if($1_3&&this.isBusy()){var $1_4='';var $1_5=1;var $enum1=ss.IEnumerator.getEnumerator(this.Messages);while($enum1.moveNext()){var $1_6=$enum1.current;if($1_6.MessageType===2){$1_4=$1_4+$1_5.toString()+'. '+$1_6.Message+'\n';$1_5++;}}ClientUI.ViewModel.App.current.showMessage(String.format(ResourceStrings.SeeMessages,$1_4,$p0.EntityLogicalName()));this.isBusy(false);}else{$p1();}}catch($1_7){if(this.isBusy()){ClientUI.ViewModel.App.current.reportException($1_7,'Could not refresh Xml');this.isBusy(false);}}}));},$1_1D:function(){var $0=new ClientUI.Messages.rwb_CustomiseRibbonRequest();var $1=[];var $2={};var $enum1=ss.IEnumerator.getEnumerator(this.Ribbons());while($enum1.moveNext()){var $3=$enum1.current;var $4=$3.EntityLogicalName();$1.add($4);$2[$4]=$3.UpdatedRibbonDiffXmlString();}$2['SolutionUniqueName']=this.SolutionUniqueName();$0.operation='PublishSolution';$0.data=ClientUI.ViewModel.EditCommandBarsVM.toJSON($2);Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('rwb_CustomiseRibbon',ClientUI.Messages.rwb_CustomiseRibbonResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=$1_0.response;if(String.isNullOrEmpty($1_1)){throw new Error('No Import Job Id returned from PublishSolution');}this.isBusyProgress(null);this.isBusyMessage(ResourceStrings.Importing);ClientUI.ViewModel.EditCommandBarsVM.queryImport($1_1,ss.Delegate.create(this,function(){
this.$1_1F();}),ss.Delegate.create(this,function($p2_0){
this.isBusyMessage($p2_0);}),ss.Delegate.create(this,function($p2_0){
this.isBusy(false);ClientUI.ViewModel.App.current.reportException($p2_0,'Could not publish solution ');}));}catch($1_2){ClientUI.ViewModel.App.current.reportException($1_2,'Could not publish solution');this.isBusy(false);}}));},$1_1F:function(){this.isBusyMessage(ResourceStrings.Publishing);this.isBusyProgress(null);var $0=new ClientUI.Messages.PublishAllXmlRequest();Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('PublishAllXml',ClientUI.Messages.PublishAllXmlResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($0,ss.Delegate.create(this,function($p1_0){
try{var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $1_1=new ClientUI.Model.RibbonValidationMessage(0,ResourceStrings.PublishSucessful);this.Messages.addItem($1_1);this.isBusy(false);}catch($1_2){this.isBusy(false);ClientUI.ViewModel.App.current.reportException($1_2,ResourceStrings.Error_CouldNotPublish);}}));},$1_20:function(){var $0=new ClientUI.Messages.RetrieveAvailableLanguagesRequest();Xrm.Sdk.OrganizationServiceProxy.registerExecuteMessageResponseType('RetrieveAvailableLanguages',ClientUI.Messages.RetrieveAvailableLanguagesResponse);Xrm.Sdk.OrganizationServiceProxy.beginExecute($0,ss.Delegate.create(this,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endExecute($p1_0);var $enum1=ss.IEnumerator.getEnumerator($1_0.localeIds);while($enum1.moveNext()){var $1_1=$enum1.current;var $1_2=$1_0.resolveLocaleName($1_1)+'['+$1_1.toString()+']';var $1_3=new ClientUI.Model.NameValuePair($1_2,$1_1.toString());this.Languages.push($1_3);}}));this.SelectedLanguage.subscribe(ss.Delegate.create(this,this.$1_D));},syncLabels:function(ribbon){if(ribbon==null){return;}var $0=this.SelectedLanguage().value;var $enum1=ss.IEnumerator.getEnumerator(ribbon.Tabs());while($enum1.moveNext()){var $1=$enum1.current;ClientUI.Model.RibbonGroup.syncLabelsForGroup($1.Groups(),this.$1_0,$0);}},highlightFadeIn:function(elements){var $0=$(elements);$0.effect('highlight',2000);},GetRibbonJSON:function(ribbon){var $0=ko.mapping.toJS(ribbon);var $enum1=ss.IEnumerator.getEnumerator($0['Ribbons']);while($enum1.moveNext()){var $1=$enum1.current;var $2=$1;delete $2.RibbonDefinitionXml;}return ClientUI.ViewModel.EditCommandBarsVM.toJSON($0);},GetEditorType:function(){var $0=this.$1_3;var $1=this.EditingItem();if($1!=null){if(ClientUI.Model.SmartButton.isSmartButton($1)){$0=new ClientUI.Model.NameValuePair('Smart Button','control');}else if((typeof($1.ControlType)==='function')){$0=new ClientUI.Model.NameValuePair('Control','control');}else if(('Actions' in $1)){$0=new ClientUI.Model.NameValuePair('Command','command');}else if(('LayoutSections' in $1)){$0=new ClientUI.Model.NameValuePair('Group','generic');}else if(('__type' in $1)){switch($1['__type']){case 'DisplayRule':$0=new ClientUI.Model.NameValuePair('Display Rule','displayrule');break;case 'EnableRule':$0=new ClientUI.Model.NameValuePair('Enable Rule','enablerule');break;case 'HideCustomAction':$0=new ClientUI.Model.NameValuePair('Hide Action','generic');break;}}}return $0;},$1_22:function($p0){if($p0==null){return;}var $0=(this.SelectedFlyoutRoot!=null)?this.SelectedFlyoutRoot():null;var $1=$0===$p0;var $2=[];var $3=$p0._parent;if($p0._parent!=null){while($3!=null){$2.add($3);$1=$1||($3===$0);$3=$3._parent;}}if(!$1&&($0!=null)){$0.FlyoutOpen(false);ClientUI.Model.FlyoutControl.$1($0);}$2.reverse();var $enum1=ss.IEnumerator.getEnumerator($2);while($enum1.moveNext()){var $4=$enum1.current;this.$1_23($4,true);}this.$1_23($p0,false);},$1_23:function($p0,$p1){var $0=false;if($p0.FlyoutOpen==null){$p0.FlyoutOpen=ko.observable(true);}else{$0=$p0.FlyoutOpen();}var $1=$p0.ControlType();var $2=null;switch($1){case 2:case 1:$2=$p0;ClientUI.Model.FlyoutControl.closeFlyouts($p0);break;}if($2!=null){if($p0._root==null){$p0._root=$2;ClientUI.Model.FlyoutControl.setupFlyoutCollection($2,$p0._parent,$p0._root);}var $3=!$0||$p1;if($0!==$3){if($3){ClientUI.Model.FlyoutControl.$1($p0);}$p0.FlyoutOpen($3);if(!$p0.onFlyout){this.SelectedFlyoutRoot($2);}}}},GetGroupContextMenu:function(target){var $0=target;var $1=$0.Customised!=null&&$0.Customised();var $2=new ClientUI.Library.ContextMenuVM();$2.items=[];$2.items.add(ClientUI.Library.ContextMenuItemVM.newItem('delete',ResourceStrings.DeleteGroup,!$1));$2.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isControlInClipBoard(this.Clipboard())));return $2;},OnGroupMenuSelect:function(target,CommandId){var $0=target;var $1=$0._parentTab;var $2=$0._parentRibbon;switch(CommandId){case 'paste':try{ClientUI.ViewModel.RibbonPasteData.pasteControl($0,0,null);}catch($4){ClientUI.ViewModel.App.current.reportException($4,String.format(ResourceStrings.InvalidPasteData,$4.message));}break;case 'delete':$2.SolutionGroups.ChildNodes.remove($0);$1.Groups.remove($0);var $3=ClientUI.Model.RibbonGroup.flattenGroup($0);var $enum1=ss.IEnumerator.getEnumerator($3);while($enum1.moveNext()){var $5=$enum1.current;ClientUI.Model.RibbonControl.deleteRelatedHideActions($5,$2);}break;}},GetContextMenu:function(target){var $0=target;var $1=$0.SolutionComponentType()===1||$0.SolutionComponentType()===2;var $2=$0.HiddenBySolution();this.SelectedControl($0);var $3=$0.Customised!=null&&$0.Customised();var $4=$0.CommandCore!=null&&$0.CommandCore()!=null;var $5=('_customisedInCurrentSession' in $0)&&$0._customisedInCurrentSession;var $6=$0.SolutionComponentType()===1;var $7=ClientUI.Model.Ribbon.getRibbon($0);var $8=Object.keyExists($7._SolutionCommandsIndex,$0.CommandCore());var $9=new ClientUI.Library.ContextMenuVM();$9.items=[];$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('copy',ResourceStrings.Copy,false));$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('paste',ResourceStrings.PasteControl,!ClientUI.ViewModel.RibbonPasteData.isControlInClipBoard(this.Clipboard())));$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('customise_button',ResourceStrings.CustomiseButton,$3));if(!$3&&!$2){$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('hide',ResourceStrings.Hide,$1));}else if($2){$9.items.add(new ClientUI.Library.ContextMenuItemVM('unhide',ResourceStrings.UnHide));}$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('customise_command',ResourceStrings.CustomiseCommand,!$4||$8));if(($5&$6)===1){$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('uncustomise_button',ResourceStrings.UncustomiseButton,!$1));}else{$9.items.add(ClientUI.Library.ContextMenuItemVM.newItem('delete',ResourceStrings.DeleteButton,!$1));}return $9;},RefreshPositions:function(){xrmjQuery( this ).sortable( 'refreshPositions');}}
ResourceStrings=function(){}
ClientUI.ViewModel.RibbonData=function(){}
ClientUI.ViewModel.RibbonData.prototype={Ribbons:null}
ClientUI.ViewModel.ToolboxControls=function(parent){this.Controls=ko.observableArray();this.$0=parent;this.Controls.push(new ClientUI.Model.RibbonControl(0,'toolbox-button','','Button'));this.Controls.push(new ClientUI.Model.RibbonControl(2,'toolbox-split','','Split Button'));this.Controls.push(new ClientUI.Model.RibbonControl(1,'toolbox-flyout','','Flyout'));this.Controls.push(new ClientUI.Model.RibbonControl(6,'toolbox-menusection','','Menu Section'));this.Controls.push(new ClientUI.Model.RibbonControl(8,'toolbox-group','','Group'));}
ClientUI.ViewModel.ToolboxControls.onToolboxDrop=function(args,toolboxControl){args.cancelDrop=true;if(args.targetParent==null){return null;}var $0=new ClientUI.Model.RibbonControl(toolboxControl.ControlType(),'newItem',null,'New');var $1=args.targetParent;var $2=$1;$0.Id(ClientUI.ViewModel.CrmNamespace.$1($0,args.targetParent));if($0.ControlType()===6&&$2._parent==null){return null;}ClientUI.ViewModel.ToolboxControls.addNewControl(args,$0,$2);return $0;}
ClientUI.ViewModel.ToolboxControls.addNewControl=function(args,newControl,controlCollection){var $0=controlCollection;$0.splice(args.targetIndex,0,newControl);ClientUI.Model.RibbonControl.setDropProperties(args,newControl,$0);newControl._root=controlCollection._root;newControl._parent=controlCollection._parent;var $1=(controlCollection._root!=null)?controlCollection._root._parentLayoutSection:controlCollection._parentLayoutSection;ClientUI.Model.RibbonControl.setParent(newControl,controlCollection);var $2=$1._parentGroup;if($1==null){throw new Error('Cannot find layoutsection for new control');}if(newControl.onFlyout){newControl.Controls=ko.observableArray();var $5=newControl.Controls;$5._parent=newControl;$5._parentLayoutSection=newControl._parentLayoutSection;$5._root=newControl._root;}var $3=(newControl._root!=null)?newControl._root.SolutionComponentType():$1._parentGroup.SolutionComponentType();if(!$3){newControl.SolutionComponentType(1);}else{newControl.SolutionComponentType(2);}var $4=newControl.ControlType();if($4===1||$4===2){newControl.FlyoutOpen(true);}}
ClientUI.ViewModel.ToolboxControls.isToolboxControl=function(control){return control.Id().startsWith('toolbox-');}
ClientUI.ViewModel.ToolboxControls.prototype={$0:null}
ClientUI.ViewModel.ServiceLocator=function(){this.$0={};}
ClientUI.ViewModel.ServiceLocator.prototype={register:function(name,service){this.$0[name]=service;},get:function(name){return this.$0[name];}}
Type.registerNamespace('ClientUI.View');ClientUI.View.ExceptionDialogView=function(message){this.Message=message;this.MessageType=3;}
ClientUI.View.ExceptionDialogView.prototype={Message:null,MessageType:0,$0:null,init:function(uniqueDialogId,dialogElement,viewModel,closeCallback){this.$0=closeCallback;viewModel.add_onCommitEdit(ss.Delegate.create(this,this.$1));},$1:function($p0,$p1){this.$0(1);},onButtonPress:function(result){},getButtonTextDelegate:function(){return null;},getViewTemplateId:function(){return 'dialog-error-view';},getTitle:function(){return 'Ribbon Workbench';}}
ClientUI.View.LoadSolutionView=function(){}
ClientUI.View.LoadSolutionView.prototype={$0:null,$1:null,$2:null,init:function(uniqueDialogId,dialogElement,viewModel,closeCallback){this.$2=uniqueDialogId;this.$1=dialogElement;this.$0=viewModel;var $0=SparkleXrm.GridEditor.GridDataViewBinder.parseLayout('Solution,friendlyname,200,Name,uniquename,100,Version,version,100');var $1=new SparkleXrm.GridEditor.GridDataViewBinder();$1.addCheckBoxSelectColumn=false;$1.selectActiveRow=true;$1.multiSelect=false;var $2=$1.dataBindXrmGrid(this.$0.Solutions,$0,'grid'+uniqueDialogId,null,false,false);$2.onDblClick.subscribe(ss.Delegate.create(this,function($p1_0,$p1_1){
if(this.$0.Solutions.getSelectedRows().length>0){closeCallback(1);}}));this.$3();this.$0.Solutions.add_onSelectedRowsChanged(ss.Delegate.create(this,this.$3));},$3:function(){var $0=this.$0.Solutions.getSelectedRows().length>0;var $1=this.$1.parent().find('.ui-dialog-buttonset').children().first().attr('disabled',($0)?null:'true');if($0){$1.removeClass('ui-state-disabled');}else{$1.addClass('ui-state-disabled');}},onButtonPress:function(result){if(result===1){this.$0.loadSolution();}},getButtonTextDelegate:function(){return null;},getViewTemplateId:function(){return 'dialog-select-solution';},getTitle:function(){return ResourceStrings.LoadSolution;}}
ClientUI.View.SmartButtonDialog=function(button){this.SmartButtonDefinition=button;}
ClientUI.View.SmartButtonDialog.prototype={Message:null,SmartButtonDefinition:null,$0:null,init:function(uniqueDialogId,dialogElement,viewModel,closeCallback){this.$0=closeCallback;viewModel.add_onCommitEdit(ss.Delegate.create(this,this.$1));},$1:function($p0,$p1){this.$0(1);},onButtonPress:function(result){},getButtonTextDelegate:function(){return null;},getViewTemplateId:function(){return 'dialog-add-smartbutton';},getTitle:function(){return this.SmartButtonDefinition.LabelTextText();}}
ClientUI.View.UpdateSolutionDialogView=function(){}
ClientUI.View.UpdateSolutionDialogView.prototype={$0:null,init:function(uniqueDialogId,dialogElement,viewModel,closeCallback){this.$0=closeCallback;viewModel.add_onCommitEdit(ss.Delegate.create(this,this.$1));},$1:function($p0,$p1){this.$0(1);},onButtonPress:function(result){},getButtonTextDelegate:function(){return function($p1_0){
switch($p1_0){case 1:return ResourceStrings.AutoUpdateNow;case 2:return ResourceStrings.AutoUpdateLater;default:return '';}};},getViewTemplateId:function(){return 'dialog-auto-update-view';},getTitle:function(){return 'Ribbon Workbench';}}
ClientUI.View.EditCommandBarView=function(){ClientUI.Bootstrapper.initializeIoc();this.$0=new ClientUI.ViewModel.EditCommandBarsVM();this.$0.SelectedSolutionTab.subscribe(ss.Delegate.create(this,function($p1_0){
window.setTimeout(ss.Delegate.create(this,function(){
this.$2.render();ClientUI.View.EditCommandBarView.ResizeGrid();}),100);}));$('#render-type-buttons').buttonset();$('#solutiontab-buttons').buttonset();$(ss.Delegate.create(this,function(){
try{SparkleXrm.ViewBase.registerViewModel(this.$0);window.setTimeout(ss.Delegate.create(this,function(){
this.$3();this.$0.showLoadSolutionDialog();}),1000);}catch($1_0){ClientUI.ViewModel.App.current.reportException($1_0,'OnDocumentReady init');}}));}
ClientUI.View.EditCommandBarView.ResizeGrid=function(){var $0=$('#solutionElementPanel>.ui-layout-content').height();$('#messagesGrid').height($0-16);var $1=ClientUI.View.EditCommandBarView.$1;var $2=$1.$0;if($1.$2!=null){var $3=[];for(var $4=0;$4<$2.Messages.getLength();$4++){$3.add($4);}$1.$2.invalidateRows($3);$1.$2.resizeCanvas();$1.$2.render();}}
ClientUI.View.EditCommandBarView.GetToolboxConnectedClass=function(root,item){if(item.ControlType()!==8){var $0=(root.SelectedFlyoutRoot()!=null&&root.SelectedFlyoutRoot().FlyoutOpen())?'menuSection':'commandBarGroup';return $0;}else{return 'groupParent';}}
ClientUI.View.EditCommandBarView.Init=function(){var $0=Xrm.Sdk.OrganizationServiceProxy.getUserSettings().localeid;SparkleXrm.LocalisedContentLoader.fallBackLCID=1033;SparkleXrm.LocalisedContentLoader.supportedLCIDs.addRange([1033,1025]);SparkleXrm.LocalisedContentLoader.loadContent('rwb_/js/ResourceStrings.js',$0,function(){
var $1_0=new ClientUI.View.EditCommandBarView();ClientUI.View.EditCommandBarView.$1=$1_0;});}
ClientUI.View.EditCommandBarView.prototype={$0:null,$2:null,$3:function(){try{ClientUI.View.EditCommandBarView.ResizeGrid();var $0=new SparkleXrm.GridEditor.GridDataViewBinder();$0.addCheckBoxSelectColumn=false;$0.selectActiveRow=false;$0.multiSelect=false;var $1=SparkleXrm.GridEditor.GridDataViewBinder.parseLayout(',MessageType,22,Message,Message,400');$1[0].formatter=function($p1_0,$p1_1,$p1_2,$p1_3,$p1_4){
return "<span class='messagetype-"+$p1_2.toString()+"'/>";};this.$2=$0.dataBindXrmGrid(this.$0.Messages,$1,'messagesGrid',null,false,false);}catch($2){ClientUI.ViewModel.App.current.reportException($2,'Error Binding Grids');}}}
Xrm.PageBridge.registerClass('Xrm.PageBridge');Xrm.PageContextBridge.registerClass('Xrm.PageContextBridge');Xrm.OrganizationServiceProxyBridge.registerClass('Xrm.OrganizationServiceProxyBridge');SparkleXrm.CustomBinding.TextLookupBinding.registerClass('SparkleXrm.CustomBinding.TextLookupBinding',Object);ClientUI.ErrorCodes.registerClass('ClientUI.ErrorCodes');ClientUI.Bootstrapper.registerClass('ClientUI.Bootstrapper');ClientUI.Library.AppLocalStorage.registerClass('ClientUI.Library.AppLocalStorage');ClientUI.Library.SyntaxHighlightBinding.registerClass('ClientUI.Library.SyntaxHighlightBinding',Object);ClientUI.Library.Version.registerClass('ClientUI.Library.Version');ClientUI.Library.ContextMenuVM.registerClass('ClientUI.Library.ContextMenuVM');ClientUI.Library.ContextMenuItemVM.registerClass('ClientUI.Library.ContextMenuItemVM');ClientUI.Library.ContextMenuBinding.registerClass('ClientUI.Library.ContextMenuBinding',Object);ClientUI.Library.ExpandableItemBinding.registerClass('ClientUI.Library.ExpandableItemBinding',Object);ClientUI.Library.PositionBinding.registerClass('ClientUI.Library.PositionBinding',Object);ClientUI.Library.ScrollIntoView.registerClass('ClientUI.Library.ScrollIntoView',Object);ClientUI.Messages.PublishAllXmlRequest.registerClass('ClientUI.Messages.PublishAllXmlRequest',null,Object);ClientUI.Messages.PublishAllXmlResponse.registerClass('ClientUI.Messages.PublishAllXmlResponse',null,Object);ClientUI.Messages.RetrieveVersionResponse.registerClass('ClientUI.Messages.RetrieveVersionResponse');ClientUI.Messages.RetrieveVersionRequest.registerClass('ClientUI.Messages.RetrieveVersionRequest',null,Object);ClientUI.Messages.rwb_CustomiseRibbonRequest.registerClass('ClientUI.Messages.rwb_CustomiseRibbonRequest',null,Object);ClientUI.Messages.rwb_CustomiseRibbonResponse.registerClass('ClientUI.Messages.rwb_CustomiseRibbonResponse');ClientUI.Messages.RetrieveAvailableLanguagesRequest.registerClass('ClientUI.Messages.RetrieveAvailableLanguagesRequest',null,Object);ClientUI.Messages.RetrieveAvailableLanguagesResponse.registerClass('ClientUI.Messages.RetrieveAvailableLanguagesResponse',null,Object);ClientUI.Model.RibbonValidationMessageCollection.registerClass('ClientUI.Model.RibbonValidationMessageCollection',SparkleXrm.GridEditor.DataViewBase,ss.IEnumerable);ClientUI.Model.SmartButtonDefinition.registerClass('ClientUI.Model.SmartButtonDefinition');ClientUI.Model.RibbonControl.registerClass('ClientUI.Model.RibbonControl');ClientUI.Model.SmartButton.registerClass('ClientUI.Model.SmartButton',ClientUI.Model.RibbonControl);ClientUI.Model.SmartButtonCollection.registerClass('ClientUI.Model.SmartButtonCollection');ClientUI.Model.CommandActionController.registerClass('ClientUI.Model.CommandActionController');ClientUI.Model.CommandActionParameterController.registerClass('ClientUI.Model.CommandActionParameterController');ClientUI.Model.CommandDefinitionController.registerClass('ClientUI.Model.CommandDefinitionController');ClientUI.Model.DisplayRuleController.registerClass('ClientUI.Model.DisplayRuleController');ClientUI.Model.EnableRuleController.registerClass('ClientUI.Model.EnableRuleController');ClientUI.Model.HideCustomActionController.registerClass('ClientUI.Model.HideCustomActionController');ClientUI.Model.LayoutRow.registerClass('ClientUI.Model.LayoutRow');ClientUI.Model.NewsFeedItem.registerClass('ClientUI.Model.NewsFeedItem');ClientUI.Model.OrGroup.registerClass('ClientUI.Model.OrGroup');ClientUI.Model.RibbonControlCollection.registerClass('ClientUI.Model.RibbonControlCollection');ClientUI.Model.RibbonTabGroup.registerClass('ClientUI.Model.RibbonTabGroup');ClientUI.Model.RibbonValidationMessage.registerClass('ClientUI.Model.RibbonValidationMessage',Xrm.Sdk.Entity);ClientUI.Model.RuleStepController.registerClass('ClientUI.Model.RuleStepController');ClientUI.Model.UndoStack.registerClass('ClientUI.Model.UndoStack');ClientUI.Model.UndoStacks.registerClass('ClientUI.Model.UndoStacks');ClientUI.Model.CommandAction.registerClass('ClientUI.Model.CommandAction');ClientUI.Model.CommandActionParameter.registerClass('ClientUI.Model.CommandActionParameter');ClientUI.Model.CommandDefinition.registerClass('ClientUI.Model.CommandDefinition');ClientUI.Model.DisplayRule.registerClass('ClientUI.Model.DisplayRule');ClientUI.Model.EnableRule.registerClass('ClientUI.Model.EnableRule');ClientUI.Model.HideCustomAction.registerClass('ClientUI.Model.HideCustomAction');ClientUI.Model.RibbonTab.registerClass('ClientUI.Model.RibbonTab');ClientUI.Model.RuleStep.registerClass('ClientUI.Model.RuleStep');ClientUI.Model.UndoItem.registerClass('ClientUI.Model.UndoItem');ClientUI.Model.FlyoutControl.registerClass('ClientUI.Model.FlyoutControl');ClientUI.Model.Label.registerClass('ClientUI.Model.Label');ClientUI.Model.RibbonGroup.registerClass('ClientUI.Model.RibbonGroup');ClientUI.Model.GroupCollection.registerClass('ClientUI.Model.GroupCollection');ClientUI.Model.LayoutSectionCollection.registerClass('ClientUI.Model.LayoutSectionCollection');ClientUI.Model.LayoutSection.registerClass('ClientUI.Model.LayoutSection');ClientUI.Model.NameValuePair.registerClass('ClientUI.Model.NameValuePair');ClientUI.Model.Ribbon.registerClass('ClientUI.Model.Ribbon');ClientUI.Model.VisibilityRules.registerClass('ClientUI.Model.VisibilityRules');ClientUI.Model.SolutionElements.registerClass('ClientUI.Model.SolutionElements');ClientUI.ViewModel.RibbonPasteData.registerClass('ClientUI.ViewModel.RibbonPasteData');ClientUI.ViewModel.App.registerClass('ClientUI.ViewModel.App');ClientUI.ViewModel.ExceptionReportViewModel.registerClass('ClientUI.ViewModel.ExceptionReportViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.MenuCommands.registerClass('ClientUI.ViewModel.MenuCommands');ClientUI.ViewModel.SmartButtonViewModel.registerClass('ClientUI.ViewModel.SmartButtonViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.UpdateSolutionViewModel.registerClass('ClientUI.ViewModel.UpdateSolutionViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.CrmNamespace.registerClass('ClientUI.ViewModel.CrmNamespace');ClientUI.ViewModel.MessageDialogView.registerClass('ClientUI.ViewModel.MessageDialogView',null,ClientUI.ViewModel.IDialogView);ClientUI.ViewModel.DialogService.registerClass('ClientUI.ViewModel.DialogService',null,ClientUI.ViewModel.IDialogService);ClientUI.ViewModel.LoadSolutionViewModel.registerClass('ClientUI.ViewModel.LoadSolutionViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.ObservableEditorProperty.registerClass('ClientUI.ViewModel.ObservableEditorProperty');ClientUI.ViewModel.EditorProperty.registerClass('ClientUI.ViewModel.EditorProperty');ClientUI.ViewModel.EditableItem.registerClass('ClientUI.ViewModel.EditableItem');ClientUI.ViewModel.EditCommandBarsVM.registerClass('ClientUI.ViewModel.EditCommandBarsVM',SparkleXrm.ViewModelBase);ResourceStrings.registerClass('ResourceStrings');ClientUI.ViewModel.RibbonData.registerClass('ClientUI.ViewModel.RibbonData');ClientUI.ViewModel.ToolboxControls.registerClass('ClientUI.ViewModel.ToolboxControls');ClientUI.ViewModel.ServiceLocator.registerClass('ClientUI.ViewModel.ServiceLocator',null,ClientUI.ViewModel.IServiceLocator);ClientUI.View.ExceptionDialogView.registerClass('ClientUI.View.ExceptionDialogView',null,ClientUI.ViewModel.IDialogView);ClientUI.View.LoadSolutionView.registerClass('ClientUI.View.LoadSolutionView',null,ClientUI.ViewModel.IDialogView);ClientUI.View.SmartButtonDialog.registerClass('ClientUI.View.SmartButtonDialog',null,ClientUI.ViewModel.IDialogView);ClientUI.View.UpdateSolutionDialogView.registerClass('ClientUI.View.UpdateSolutionDialogView',null,ClientUI.ViewModel.IDialogView);ClientUI.View.EditCommandBarView.registerClass('ClientUI.View.EditCommandBarView');Xrm.PageBridge.context=new Xrm.PageContextBridge();(function(){if(!ss.isNullOrUndefined(window.USE_XRM_BRIDGE)){Xrm.Page = Xrm.PageBridge;}})();
(function(){var $0=function($p1_0,$p1_1,$p1_2){
var $1_0=function($p2_0){
var $2_0=Xrm.OrganizationServiceProxyBridge.$0($p2_0);if($2_0!=null){$p1_2($2_0);}else{var $2_1=new DOMParser();var $2_2=$2_1.parseFromString($p2_0,'text/xml');$p1_2($2_2);}};if($p1_2==null){$1_0=null;}var $1_1=window.external.SendSoap($p1_0,$p1_1,$1_0);if($p1_2==null){var $1_2=Xrm.OrganizationServiceProxyBridge.$0($1_1);if($1_2!=null){throw $1_2;}var $1_3=new DOMParser();var $1_4=$1_3.parseFromString($1_1,'text/xml');return $1_4;}else{return null;}};if(!ss.isNullOrUndefined(window.USE_XRM_BRIDGE)){ Xrm.Sdk.OrganizationServiceProxy._getResponse = $0;}})();
(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['textlookup']=new SparkleXrm.CustomBinding.TextLookupBinding();}})();
ClientUI.ErrorCodes.getSolutionDetailsEmpty='1000';ClientUI.ErrorCodes.cannotImportPatch='1001';ClientUI.ErrorCodes.accessDenied='1002';ClientUI.ErrorCodes.ribbonImportDependencyMissingRibbonControl='-2147159801';ClientUI.ErrorCodes.xsdValidationException='-2147188710';ClientUI.ErrorCodes.importRibbonsError='-2147188687';ClientUI.ErrorCodes.cannotModifyPatchedSolution='-2147187400';ClientUI.ErrorCodes.reportedMessage='1';ClientUI.Bootstrapper.dialogSelectSolution='dialog-select-solution';(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['syntaxhighlight']=new ClientUI.Library.SyntaxHighlightBinding();}})();
(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['contextMenu']=new ClientUI.Library.ContextMenuBinding();}})();
(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['expandable']=new ClientUI.Library.ExpandableItemBinding();}})();
(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['position']=new ClientUI.Library.PositionBinding();}})();
(function(){if(typeof(ko)!=='undefined'){ko.bindingHandlers['scrollintoview']=new ClientUI.Library.ScrollIntoView();}})();
ClientUI.Model.SmartButton.idKey='smartbutton';ClientUI.Model.UndoStacks.PropertiesUndoStack=new ClientUI.Model.UndoStack();ClientUI.Model.UndoStacks.SolutionElementsUndoStack=new ClientUI.Model.UndoStack();ClientUI.Model.CommandAction.WinModes=[{name:'Window',value:0},{name:'ModalDialog',value:1},{name:'ModelessDialog',value:2}];ClientUI.Model.CommandActionParameter.CrmValues=[{name:'PrimaryEntityTypeCode',value:0},{name:'PrimaryEntityTypeName',value:1},{name:'PrimaryItemIds',value:2},{name:'FirstPrimaryItemId',value:3},{name:'PrimaryControl',value:4},{name:'PrimaryControlId',value:5},{name:'SelectedEntityTypeCode',value:6},{name:'SelectedEntityTypeName',value:7},{name:'FirstSelectedItemId',value:8},{name:'SelectedControl',value:9},{name:'SelectedControlSelectedItemCount',value:10},{name:'SelectedControlSelectedItemIds',value:11},{name:'SelectedControlSelectedItemReferences',value:12},{name:'SelectedControlAllItemCount',value:13},{name:'SelectedControlAllItemIds',value:14},{name:'SelectedControlAllItemReferences',value:15},{name:'SelectedControlUnselectedItemCount',value:16},{name:'SelectedControlUnselectedItemIds',value:17},{name:'SelectedControlUnselectedItemReferences',value:18},{name:'OrgName',value:19},{name:'OrgLcid',value:20},{name:'UserLcid',value:21},{name:'CommandProperties',value:22}];ClientUI.Model.DisplayRule.typeName='DisplayRule';ClientUI.Model.EnableRule.typeName='EnableRule';ClientUI.Model.HideCustomAction.typeName='HideCustomAction';ClientUI.Model.RuleStep.privilegeName=[{name:'Osdp',value:0},{name:'ActivateBusinessProcessFlow',value:1},{name:'ActivateBusinessRule',value:2},{name:'ActivateSynchronousWorkflow',value:3},{name:'ActOnBehalfOfAnotherUser',value:4},{name:'ActOnBehalfOfExternalParty',value:5},{name:'AddressBook',value:6},{name:'AdminFilter',value:7},{name:'AllowQuickCampaign',value:8},{name:'AppendAccount',value:9},{name:'AppendActivity',value:10},{name:'AppendArticle',value:11},{name:'AppendAsyncOperation',value:12},{name:'AppendAttributeMap',value:13},{name:'AppendAuthorizationServer',value:14},{name:'AppendAzureServiceConnection',value:15},{name:'AppendBusinessUnit',value:16},{name:'AppendCalendar',value:17},{name:'AppendCampaign',value:18},{name:'AppendChannelAccessProfile',value:19},{name:'AppendChannelPropertyGroup',value:20},{name:'AppendCompetitor',value:21},{name:'AppendConnection',value:22},{name:'AppendConnectionRole',value:23},{name:'AppendConstraint',value:24},{name:'AppendContact',value:25},{name:'AppendContract',value:26},{name:'AppendConvertRule',value:27},{name:'AppendCustomerOpportunityRole',value:28},{name:'AppendCustomerRelationship',value:29},{name:'AppendDataPerformance',value:30},{name:'AppendDocumentTemplate',value:31},{name:'AppendDuplicateRule',value:32},{name:'AppendDynamicProperty',value:33},{name:'AppendDynamicPropertyAssociation',value:34},{name:'AppendDynamicPropertyInstance',value:35},{name:'AppendDynamicPropertyOptionSetItem',value:36},{name:'AppendEmailServerProfile',value:37},{name:'AppendEmailTemplate',value:38},{name:'AppendEntitlement',value:39},{name:'AppendEntitlementTemplate',value:40},{name:'AppendEquipment',value:41},{name:'AppendExternalParty',value:42},{name:'AppendFieldSecurityProfile',value:43},{name:'AppendGoal',value:44},{name:'AppendGoalRollupQuery',value:45},{name:'AppendImport',value:46},{name:'AppendImportFile',value:47},{name:'AppendImportMap',value:48},{name:'AppendIncident',value:49},{name:'AppendInvoice',value:50},{name:'AppendKnowledgeArticle',value:51},{name:'AppendKnowledgeArticleViews',value:52},{name:'AppendKnowledgeBaseRecord',value:53},{name:'AppendKnowledgeSearchModel',value:54},{name:'AppendLanguageLocale',value:55},{name:'AppendLead',value:56},{name:'AppendList',value:57},{name:'AppendMailbox',value:58},{name:'AppendMailboxTrackingFolder',value:59},{name:'AppendMailMergeTemplate',value:60},{name:'AppendMetric',value:61},{name:'AppendMobileOfflineProfile',value:62},{name:'Appendmsdyn_PostAlbum',value:63},{name:'Appendmsdyn_PostConfig',value:64},{name:'Appendmsdyn_PostRuleConfig',value:65},{name:'Appendmsdyn_wallsavedquery',value:66},{name:'Appendmsdyn_wallsavedqueryusersettings',value:67},{name:'AppendNote',value:68},{name:'AppendOpportunity',value:69},{name:'AppendOrder',value:70},{name:'AppendPartnerApplication',value:71},{name:'AppendPersonalDocumentTemplate',value:72},{name:'AppendPosition',value:73},{name:'AppendPost',value:74},{name:'AppendPostFollow',value:75},{name:'AppendPrincipalObjectAttributeAccess',value:76},{name:'AppendProduct',value:77},{name:'AppendProfileRule',value:78},{name:'AppendPublisher',value:79},{name:'AppendQueue',value:80},{name:'AppendQuote',value:81},{name:'AppendRecommendationModel',value:82},{name:'AppendRelationshipRole',value:83},{name:'AppendReport',value:84},{name:'AppendRole',value:85},{name:'AppendRoutingRule',value:86},{name:'AppendSalesLiterature',value:87},{name:'AppendService',value:88},{name:'AppendSharePointData',value:89},{name:'AppendSharePointDocument',value:90},{name:'AppendSharePointDocumentLocation',value:91},{name:'AppendSharePointSite',value:92},{name:'AppendSimilarityRule',value:93},{name:'AppendSLA',value:94},{name:'AppendSLAKPIInstance',value:95},{name:'AppendSocialProfile',value:96},{name:'AppendSolution',value:97},{name:'AppendSubject',value:98},{name:'AppendTeam',value:99},{name:'AppendTerritory',value:100},{name:'AppendTheme',value:101},{name:'AppendToAccount',value:102},{name:'AppendToActivity',value:103},{name:'AppendToArticle',value:104},{name:'AppendToArticleTemplate',value:105},{name:'AppendToAsyncOperation',value:106},{name:'AppendToAttributeMap',value:107},{name:'AppendToAuthorizationServer',value:108},{name:'AppendToAzureServiceConnection',value:109},{name:'AppendToBusinessUnit',value:110},{name:'AppendToCalendar',value:111},{name:'AppendToCampaign',value:112},{name:'AppendToChannelAccessProfile',value:113},{name:'AppendToChannelPropertyGroup',value:114},{name:'AppendToCompetitor',value:115},{name:'AppendToConnection',value:116},{name:'AppendToConnectionRole',value:117},{name:'AppendToContact',value:118},{name:'AppendToContract',value:119},{name:'AppendToContractTemplate',value:120},{name:'AppendToConvertRule',value:121},{name:'AppendToCustomerOpportunityRole',value:122},{name:'AppendToCustomerRelationship',value:123},{name:'AppendToDataPerformance',value:124},{name:'AppendToDocumentTemplate',value:125},{name:'AppendToDuplicateRule',value:126},{name:'AppendToDynamicProperty',value:127},{name:'AppendToDynamicPropertyAssociation',value:128},{name:'AppendToDynamicPropertyInstance',value:129},{name:'AppendToDynamicPropertyOptionSetItem',value:130},{name:'AppendToEmailServerProfile',value:131},{name:'AppendToEmailTemplate',value:132},{name:'AppendToEntitlement',value:133},{name:'AppendToEntitlementTemplate',value:134},{name:'AppendToEntityMap',value:135},{name:'AppendToEquipment',value:136},{name:'AppendToExternalParty',value:137},{name:'AppendToFieldSecurityProfile',value:138},{name:'AppendToGoal',value:139},{name:'AppendToGoalRollupQuery',value:140},{name:'AppendToImport',value:141},{name:'AppendToImportFile',value:142},{name:'AppendToImportMap',value:143},{name:'AppendToIncident',value:144},{name:'AppendToInvoice',value:145},{name:'AppendToKnowledgeArticle',value:146},{name:'AppendToKnowledgeArticleViews',value:147},{name:'AppendToKnowledgeBaseRecord',value:148},{name:'AppendToKnowledgeSearchModel',value:149},{name:'AppendToLanguageLocale',value:150},{name:'AppendToLead',value:151},{name:'AppendToList',value:152},{name:'AppendToMailbox',value:153},{name:'AppendToMailboxTrackingFolder',value:154},{name:'AppendToMailMergeTemplate',value:155},{name:'AppendToMetric',value:156},{name:'AppendToMobileOfflineProfile',value:157},{name:'AppendTomsdyn_PostAlbum',value:158},{name:'AppendTomsdyn_PostConfig',value:159},{name:'AppendTomsdyn_PostRuleConfig',value:160},{name:'AppendTomsdyn_wallsavedquery',value:161},{name:'AppendTomsdyn_wallsavedqueryusersettings',value:162},{name:'AppendToNewsArticle',value:163},{name:'AppendToNote',value:164},{name:'AppendToOpportunity',value:165},{name:'AppendToOrder',value:166},{name:'AppendToOrganization',value:167},{name:'AppendToPartnerApplication',value:168},{name:'AppendToPersonalDocumentTemplate',value:169},{name:'AppendTopicModel',value:170},{name:'AppendToPosition',value:171},{name:'AppendToPost',value:172},{name:'AppendToPrincipalObjectAttributeAccess',value:173},{name:'AppendToProduct',value:174},{name:'AppendToProfileRule',value:175},{name:'AppendToPublisher',value:176},{name:'AppendToQueue',value:177},{name:'AppendToQuote',value:178},{name:'AppendToRecommendationModel',value:179},{name:'AppendToRelationshipRole',value:180},{name:'AppendToReport',value:181},{name:'AppendToRole',value:182},{name:'AppendToRoutingRule',value:183},{name:'AppendToSalesLiterature',value:184},{name:'AppendToService',value:185},{name:'AppendToSharePointData',value:186},{name:'AppendToSharePointDocument',value:187},{name:'AppendToSharePointDocumentLocation',value:188},{name:'AppendToSharePointSite',value:189},{name:'AppendToSimilarityRule',value:190},{name:'AppendToSite',value:191},{name:'AppendToSLA',value:192},{name:'AppendToSLAKPIInstance',value:193},{name:'AppendToSocialProfile',value:194},{name:'AppendToSolution',value:195},{name:'AppendToSubject',value:196},{name:'AppendToSyncAttributeMappingProfile',value:197},{name:'AppendToTeam',value:198},{name:'AppendToTerritory',value:199},{name:'AppendToTheme',value:200},{name:'AppendToTopicModel',value:201},{name:'AppendToTraceLog',value:202},{name:'AppendToTransactionCurrency',value:203},{name:'AppendToUser',value:204},{name:'AppendToUserSettings',value:205},{name:'AppendToWorkflow',value:206},{name:'AppendToWorkflowSession',value:207},{name:'AppendTraceLog',value:208},{name:'AppendTransactionCurrency',value:209},{name:'AppendUser',value:210},{name:'AppendWorkflow',value:211},{name:'AppendWorkflowSession',value:212},{name:'ApproveKnowledgeArticle',value:213},{name:'AssignAccount',value:214},{name:'AssignActivity',value:215},{name:'AssignAsyncOperation',value:216},{name:'AssignCampaign',value:217},{name:'AssignChannelAccessProfile',value:218},{name:'AssignConnection',value:219},{name:'AssignContact',value:220},{name:'AssignContract',value:221},{name:'AssignConvertRule',value:222},{name:'AssignCustomerOpportunityRole',value:223},{name:'AssignCustomerRelationship',value:224},{name:'AssignDuplicateRule',value:225},{name:'AssignDynamicPropertyInstance',value:226},{name:'AssignEmailServerProfile',value:227},{name:'AssignEmailTemplate',value:228},{name:'AssignEntitlement',value:229},{name:'AssignExternalParty',value:230},{name:'AssignGoal',value:231},{name:'AssignGoalRollupQuery',value:232},{name:'AssignImport',value:233},{name:'AssignImportFile',value:234},{name:'AssignImportMap',value:235},{name:'AssignIncident',value:236},{name:'AssignInvoice',value:237},{name:'AssignKnowledgeArticle',value:238},{name:'AssignKnowledgeArticleViews',value:239},{name:'AssignLead',value:240},{name:'AssignList',value:241},{name:'AssignMailbox',value:242},{name:'AssignMailboxTrackingFolder',value:243},{name:'AssignMailMergeTemplate',value:244},{name:'AssignManager',value:245},{name:'AssignMobileOfflineProfile',value:246},{name:'Assignmsdyn_PostAlbum',value:247},{name:'Assignmsdyn_wallsavedqueryusersettings',value:248},{name:'AssignNote',value:249},{name:'AssignOpportunity',value:250},{name:'AssignOrder',value:251},{name:'AssignPersonalDocumentTemplate',value:252},{name:'AssignPosition',value:253},{name:'AssignProfileRule',value:254},{name:'AssignQueue',value:255},{name:'AssignQuote',value:256},{name:'AssignReport',value:257},{name:'AssignRole',value:258},{name:'AssignRoutingRule',value:259},{name:'AssignSharePointDocument',value:260},{name:'AssignSharePointDocumentLocation',value:261},{name:'AssignSharePointSite',value:262},{name:'AssignSLA',value:263},{name:'AssignSLAKPIInstance',value:264},{name:'AssignSocialProfile',value:265},{name:'AssignTerritory',value:266},{name:'AssignUserEntityInstanceData',value:267},{name:'AssignUserForm',value:268},{name:'AssignUserQuery',value:269},{name:'AssignUserQueryVisualizations',value:270},{name:'AssignWorkflow',value:271},{name:'AssignWorkflowSession',value:272},{name:'BrowseAvailability',value:273},{name:'BulkDelete',value:274},{name:'BulkEdit',value:275},{name:'ChangeSqlEncryptionKey',value:276},{name:'ConfigureInternetMarketing',value:277},{name:'ConfigureSharePoint',value:278},{name:'ConfigureYammer',value:279},{name:'ControlDecrementTerm',value:280},{name:'CreateApplicationFile',value:281},{name:'CreateArticle',value:282},{name:'CreateArticleTemplate',value:283},{name:'CreateAsyncOperation',value:284},{name:'CreateAttribute',value:285},{name:'CreateAttributeMap',value:286},{name:'CreateAuthorizationServer',value:287},{name:'CreateAzureServiceConnection',value:288},{name:'CreateBusinessUnit',value:289},{name:'CreateCalendar',value:290},{name:'CreateChannelPropertyGroup',value:291},{name:'CreateComplexControl',value:292},{name:'CreateConnection',value:293},{name:'CreateConnectionRole',value:294},{name:'CreateContractTemplate',value:295},{name:'CreateCustomControl',value:296},{name:'CreateCustomControlDefaultConfig',value:297},{name:'CreateCustomControlResource',value:298},{name:'CreateCustomization',value:299},{name:'CreateDataPerformance',value:300},{name:'CreateDocumentTemplate',value:301},{name:'CreateDuplicateRule',value:302},{name:'CreateDynamicProperty',value:303},{name:'CreateDynamicPropertyAssociation',value:304},{name:'CreateDynamicPropertyOptionSetItem',value:305},{name:'CreateEmailServerProfile',value:306},{name:'CreateEntity',value:307},{name:'CreateEntityKey',value:308},{name:'CreateEntityMap',value:309},{name:'CreateEquipment',value:310},{name:'CreateExchangeSyncIdMapping',value:311},{name:'CreateFieldSecurityProfile',value:312},{name:'CreateHierarchyRule',value:313},{name:'CreateImport',value:314},{name:'CreateImportFile',value:315},{name:'CreateImportMap',value:316},{name:'CreateKnowledgeSearchModel',value:317},{name:'CreateLanguageLocale',value:318},{name:'CreateMailbox',value:319},{name:'CreateMailboxTrackingFolder',value:320},{name:'CreateMailMergeTemplate',value:321},{name:'CreateMetric',value:322},{name:'CreateMobileOfflineProfile',value:323},{name:'CreateNewsArticle',value:324},{name:'CreateOptionSet',value:325},{name:'CreateOrgEmailTemplates',value:326},{name:'CreateOwnCalendar',value:327},{name:'CreatePartnerApplication',value:328},{name:'CreatePersonalDocumentTemplate',value:329},{name:'CreatePluginAssembly',value:330},{name:'CreatePluginTraceLog',value:331},{name:'CreatePluginType',value:332},{name:'CreatePosition',value:333},{name:'CreatePrincipalObjectAttributeAccess',value:334},{name:'CreateProfileRule',value:335},{name:'CreatePublisher',value:336},{name:'CreateQuery',value:337},{name:'CreateRecommendationModel',value:338},{name:'CreateRelationship',value:339},{name:'CreateRelationshipRole',value:340},{name:'CreateReport',value:341},{name:'CreateRole',value:342},{name:'CreateRoutingRule',value:343},{name:'CreateSalesLiterature',value:344},{name:'CreateSavedQueryVisualizations',value:345},{name:'CreateSdkMessage',value:346},{name:'CreateSdkMessageProcessingStep',value:347},{name:'CreateSdkMessageProcessingStepImage',value:348},{name:'CreateSdkMessageProcessingStepSecureConfig',value:349},{name:'CreateService',value:350},{name:'CreateServiceEndpoint',value:351},{name:'CreateSharePointData',value:352},{name:'CreateSharePointDocument',value:353},{name:'CreateSharePointDocumentLocation',value:354},{name:'CreateSharePointSite',value:355},{name:'CreateSimilarityRule',value:356},{name:'CreateSite',value:357},{name:'CreateSolution',value:358},{name:'CreateSystemApplicationMetadata',value:359},{name:'CreateSystemForm',value:360},{name:'CreateTerritory',value:361},{name:'CreateTheme',value:362},{name:'CreateTopicModel',value:363},{name:'CreateTraceLog',value:364},{name:'CreateTransactionCurrency',value:365},{name:'CreateUserApplicationMetadata',value:366},{name:'CreateUserEntityInstanceData',value:367},{name:'CreateUserEntityUISettings',value:368},{name:'CreateUserForm',value:369},{name:'CreateUserMapping',value:370},{name:'CreateUserQuery',value:371},{name:'CreateUserQueryVisualizations',value:372},{name:'CreateUserSettings',value:373},{name:'CreateWebResource',value:374},{name:'CreateWebWizard',value:375},{name:'CreateWizardAccessPrivilege',value:376},{name:'CreateWizardPage',value:377},{name:'CreateWorkflow',value:378},{name:'CreateWorkflowSession',value:379},{name:'DeleteAccount',value:380},{name:'DeleteActivity',value:381},{name:'DeleteAnyPost',value:382},{name:'DeleteApplicationFile',value:383},{name:'DeleteArticle',value:384},{name:'DeleteArticleTemplate',value:385},{name:'DeleteAsyncOperation',value:386},{name:'DeleteAttribute',value:387},{name:'DeleteAttributeMap',value:388},{name:'DeleteAuditPartitions',value:389},{name:'DeleteAuthorizationServer',value:390},{name:'DeleteAzureServiceConnection',value:391},{name:'DeleteBusinessUnit',value:392},{name:'DeleteCalendar',value:393},{name:'DeleteCampaign',value:394},{name:'DeleteChannelAccessProfile',value:395},{name:'DeleteChannelPropertyGroup',value:396},{name:'DeleteCompetitor',value:397},{name:'DeleteConnection',value:398},{name:'DeleteConnectionRole',value:399},{name:'DeleteContact',value:400},{name:'DeleteContract',value:401},{name:'DeleteContractTemplate',value:402},{name:'DeleteConvertRule',value:403},{name:'DeleteCustomControl',value:404},{name:'DeleteCustomControlDefaultConfig',value:405},{name:'DeleteCustomControlResource',value:406},{name:'DeleteCustomerOpportunityRole',value:407},{name:'DeleteCustomerRelationship',value:408},{name:'DeleteCustomization',value:409},{name:'DeleteDataPerformance',value:410},{name:'DeleteDocumentTemplate',value:411},{name:'DeleteDuplicateRule',value:412},{name:'DeleteDynamicProperty',value:413},{name:'DeleteDynamicPropertyAssociation',value:414},{name:'DeleteDynamicPropertyInstance',value:415},{name:'DeleteDynamicPropertyOptionSetItem',value:416},{name:'DeleteEmailServerProfile',value:417},{name:'DeleteEmailTemplate',value:418},{name:'DeleteEntitlement',value:419},{name:'DeleteEntitlementTemplate',value:420},{name:'DeleteEntity',value:421},{name:'DeleteEntityKey',value:422},{name:'DeleteEntityMap',value:423},{name:'DeleteEquipment',value:424},{name:'DeleteExchangeSyncIdMapping',value:425},{name:'DeleteExternalParty',value:426},{name:'DeleteFieldSecurityProfile',value:427},{name:'DeleteGoal',value:428},{name:'DeleteGoalRollupQuery',value:429},{name:'DeleteHierarchyRule',value:430},{name:'DeleteImport',value:431},{name:'DeleteImportFile',value:432},{name:'DeleteImportJob',value:433},{name:'DeleteImportMap',value:434},{name:'DeleteIncident',value:435},{name:'DeleteInvoice',value:436},{name:'DeleteKnowledgeArticle',value:437},{name:'DeleteKnowledgeArticleViews',value:438},{name:'DeleteKnowledgeBaseRecord',value:439},{name:'DeleteKnowledgeSearchModel',value:440},{name:'DeleteLanguageLocale',value:441},{name:'DeleteLead',value:442},{name:'DeleteList',value:443},{name:'DeleteMailbox',value:444},{name:'DeleteMailboxTrackingFolder',value:445},{name:'DeleteMailMergeTemplate',value:446},{name:'DeleteMetric',value:447},{name:'DeleteMobileOfflineProfile',value:448},{name:'Deletemsdyn_PostAlbum',value:449},{name:'Deletemsdyn_PostConfig',value:450},{name:'Deletemsdyn_PostRuleConfig',value:451},{name:'Deletemsdyn_wallsavedquery',value:452},{name:'Deletemsdyn_wallsavedqueryusersettings',value:453},{name:'DeleteNewsArticle',value:454},{name:'DeleteNote',value:455},{name:'DeleteOpportunity',value:456},{name:'DeleteOptionSet',value:457},{name:'DeleteOrder',value:458},{name:'DeleteOwnCalendar',value:459},{name:'DeletePartnerApplication',value:460},{name:'DeletePersonalDocumentTemplate',value:461},{name:'DeletePluginAssembly',value:462},{name:'DeletePluginTraceLog',value:463},{name:'DeletePluginType',value:464},{name:'DeletePosition',value:465},{name:'DeletePostFollow',value:466},{name:'DeletePrincipalObjectAttributeAccess',value:467},{name:'DeleteProduct',value:468},{name:'DeleteProfileRule',value:469},{name:'DeletePublisher',value:470},{name:'DeleteQuery',value:471},{name:'DeleteQueue',value:472},{name:'DeleteQuote',value:473},{name:'DeleteRecommendationModel',value:474},{name:'DeleteRelationship',value:475},{name:'DeleteRelationshipRole',value:476},{name:'DeleteReport',value:477},{name:'DeleteRole',value:478},{name:'DeleteRoutingRule',value:479},{name:'DeleteSalesLiterature',value:480},{name:'DeleteSavedQueryVisualizations',value:481},{name:'DeleteSdkMessage',value:482},{name:'DeleteSdkMessageProcessingStep',value:483},{name:'DeleteSdkMessageProcessingStepImage',value:484},{name:'DeleteSdkMessageProcessingStepSecureConfig',value:485},{name:'DeleteService',value:486},{name:'DeleteServiceEndpoint',value:487},{name:'DeleteSharePointData',value:488},{name:'DeleteSharePointDocument',value:489},{name:'DeleteSharePointDocumentLocation',value:490},{name:'DeleteSharePointSite',value:491},{name:'DeleteSimilarityRule',value:492},{name:'DeleteSite',value:493},{name:'DeleteSLA',value:494},{name:'DeleteSLAKPIInstance',value:495},{name:'DeleteSocialProfile',value:496},{name:'DeleteSolution',value:497},{name:'DeleteSubject',value:498},{name:'DeleteSystemApplicationMetadata',value:499},{name:'DeleteSystemForm',value:500},{name:'DeleteTeam',value:501},{name:'DeleteTerritory',value:502},{name:'DeleteTheme',value:503},{name:'DeleteTopicModel',value:504},{name:'DeleteTraceLog',value:505},{name:'DeleteTransactionCurrency',value:506},{name:'DeleteUserApplicationMetadata',value:507},{name:'DeleteUserEntityInstanceData',value:508},{name:'DeleteUserEntityUISettings',value:509},{name:'DeleteUserForm',value:510},{name:'DeleteUserMapping',value:511},{name:'DeleteUserQuery',value:512},{name:'DeleteUserQueryVisualizations',value:513},{name:'DeleteUserSettings',value:514},{name:'DeleteWebResource',value:515},{name:'DeleteWebWizard',value:516},{name:'DeleteWizardAccessPrivilege',value:517},{name:'DeleteWizardPage',value:518},{name:'DeleteWorkflow',value:519},{name:'DeleteWorkflowSession',value:520},{name:'DisableBusinessUnit',value:521},{name:'DisableUser',value:522},{name:'DocumentGeneration',value:523},{name:'ExportCustomization',value:524},{name:'ExportToExcel',value:525},{name:'GoMobile',value:526},{name:'GoOffline',value:527},{name:'ImportCustomization',value:528},{name:'ISVExtensions',value:529},{name:'LanguageSettings',value:530},{name:'MailMerge',value:531},{name:'Merge',value:532},{name:'OneDrive',value:533},{name:'OverrideCreatedOnCreatedBy',value:534},{name:'OverridePriceEngineInvoice',value:535},{name:'OverridePriceEngineOpportunity',value:536},{name:'OverridePriceEngineOrder',value:537},{name:'OverridePriceEngineQuote',value:538},{name:'Print',value:539},{name:'PromoteToAdmin',value:540},{name:'PublishArticle',value:541},{name:'PublishCustomization',value:542},{name:'PublishDuplicateRule',value:543},{name:'PublishKnowledgeArticle',value:544},{name:'PublishOrgMailMergeTemplate',value:545},{name:'PublishOrgReport',value:546},{name:'PublishRSReport',value:547},{name:'QOIOverrideDelete',value:548},{name:'ReadApplicationFile',value:549},{name:'ReadArticle',value:550},{name:'ReadArticleTemplate',value:551},{name:'ReadAsyncOperation',value:552},{name:'ReadAttribute',value:553},{name:'ReadAttributeMap',value:554},{name:'ReadAuditPartitions',value:555},{name:'ReadAuditSummary',value:556},{name:'ReadAuthorizationServer',value:557},{name:'ReadAzureServiceConnection',value:558},{name:'ReadBusinessUnit',value:559},{name:'ReadCalendar',value:560},{name:'ReadChannelPropertyGroup',value:561},{name:'ReadComplexControl',value:562},{name:'ReadConnection',value:563},{name:'ReadConnectionRole',value:564},{name:'ReadContractTemplate',value:565},{name:'ReadCustomControl',value:566},{name:'ReadCustomControlDefaultConfig',value:567},{name:'ReadCustomControlResource',value:568},{name:'ReadCustomization',value:569},{name:'ReadDataPerformance',value:570},{name:'ReadDocumentTemplate',value:571},{name:'ReadDuplicateRule',value:572},{name:'ReadDynamicProperty',value:573},{name:'ReadDynamicPropertyAssociation',value:574},{name:'ReadDynamicPropertyOptionSetItem',value:575},{name:'ReadEmailServerProfile',value:576},{name:'ReadEntity',value:577},{name:'ReadEntityKey',value:578},{name:'ReadEntityMap',value:579},{name:'ReadEquipment',value:580},{name:'ReadExchangeSyncIdMapping',value:581},{name:'ReadFieldSecurityProfile',value:582},{name:'ReadHierarchyRule',value:583},{name:'ReadImport',value:584},{name:'ReadImportFile',value:585},{name:'ReadImportJob',value:586},{name:'ReadImportMap',value:587},{name:'ReadKnowledgeSearchModel',value:588},{name:'ReadLanguageLocale',value:589},{name:'ReadLicense',value:590},{name:'ReadMailbox',value:591},{name:'ReadMailboxStatistics',value:592},{name:'ReadMailboxTrackingFolder',value:593},{name:'ReadMailMergeTemplate',value:594},{name:'ReadMetric',value:595},{name:'ReadMobileOfflineProfile',value:596},{name:'ReadNewsArticle',value:597},{name:'ReadOfficeGraphDocument',value:598},{name:'ReadOptionSet',value:599},{name:'ReadOrganization',value:600},{name:'ReadOwnCalendar',value:601},{name:'ReadPartnerApplication',value:602},{name:'ReadPersonalDocumentTemplate',value:603},{name:'ReadPluginAssembly',value:604},{name:'ReadPluginTraceLog',value:605},{name:'ReadPluginType',value:606},{name:'ReadPosition',value:607},{name:'ReadPrincipalObjectAttributeAccess',value:608},{name:'ReadProfileRule',value:609},{name:'ReadPublisher',value:610},{name:'ReadQuery',value:611},{name:'ReadRecommendationModel',value:612},{name:'ReadRecordAuditHistory',value:613},{name:'ReadRelationship',value:614},{name:'ReadRelationshipRole',value:615},{name:'ReadReport',value:616},{name:'ReadRole',value:617},{name:'ReadRoutingRule',value:618},{name:'ReadSalesLiterature',value:619},{name:'ReadSavedQueryVisualizations',value:620},{name:'ReadSdkMessage',value:621},{name:'ReadSdkMessageProcessingStep',value:622},{name:'ReadSdkMessageProcessingStepImage',value:623},{name:'ReadSdkMessageProcessingStepSecureConfig',value:624},{name:'ReadService',value:625},{name:'ReadServiceEndpoint',value:626},{name:'ReadSharePointData',value:627},{name:'ReadSharePointDocument',value:628},{name:'ReadSharePointDocumentLocation',value:629},{name:'ReadSharePointSite',value:630},{name:'ReadSimilarityRule',value:631},{name:'ReadSite',value:632},{name:'ReadSolution',value:633},{name:'ReadSqlEncryptionKey',value:634},{name:'ReadSyncError',value:635},{name:'ReadSystemApplicationMetadata',value:636},{name:'ReadSystemForm',value:637},{name:'ReadTerritory',value:638},{name:'ReadTheme',value:639},{name:'ReadTopicModel',value:640},{name:'ReadTraceLog',value:641},{name:'ReadTransactionCurrency',value:642},{name:'ReadUserApplicationMetadata',value:643},{name:'ReadUserEntityInstanceData',value:644},{name:'ReadUserEntityUISettings',value:645},{name:'ReadUserForm',value:646},{name:'ReadUserMapping',value:647},{name:'ReadUserQuery',value:648},{name:'ReadUserQueryVisualizations',value:649},{name:'ReadUserSettings',value:650},{name:'ReadWebResource',value:651},{name:'ReadWebWizard',value:652},{name:'ReadWizardAccessPrivilege',value:653},{name:'ReadWizardPage',value:654},{name:'ReadWorkflow',value:655},{name:'ReadWorkflowSession',value:656},{name:'ReparentBusinessUnit',value:657},{name:'ReparentTeam',value:658},{name:'ReparentUser',value:659},{name:'RestoreSqlEncryptionKey',value:660},{name:'RetrieveMultipleSocialInsights',value:661},{name:'RollupGoal',value:662},{name:'SearchAvailability',value:663},{name:'SendInviteForLive',value:664},{name:'ShareAccount',value:665},{name:'ShareActivity',value:666},{name:'ShareAsyncOperation',value:667},{name:'ShareCampaign',value:668},{name:'ShareChannelAccessProfile',value:669},{name:'ShareConnection',value:670},{name:'ShareContact',value:671},{name:'ShareContract',value:672},{name:'ShareConvertRule',value:673},{name:'ShareCustomerOpportunityRole',value:674},{name:'ShareCustomerRelationship',value:675},{name:'ShareDuplicateRule',value:676},{name:'ShareDynamicPropertyInstance',value:677},{name:'ShareEmailServerProfile',value:678},{name:'ShareEmailTemplate',value:679},{name:'ShareEntitlement',value:680},{name:'ShareExternalParty',value:681},{name:'ShareGoal',value:682},{name:'ShareGoalRollupQuery',value:683},{name:'ShareImport',value:684},{name:'ShareImportFile',value:685},{name:'ShareImportMap',value:686},{name:'ShareIncident',value:687},{name:'ShareInvoice',value:688},{name:'ShareKnowledgeArticle',value:689},{name:'ShareKnowledgeArticleViews',value:690},{name:'ShareLead',value:691},{name:'ShareList',value:692},{name:'ShareMailbox',value:693},{name:'ShareMailboxTrackingFolder',value:694},{name:'ShareMailMergeTemplate',value:695},{name:'ShareMobileOfflineProfile',value:696},{name:'Sharemsdyn_PostAlbum',value:697},{name:'Sharemsdyn_wallsavedqueryusersettings',value:698},{name:'ShareNote',value:699},{name:'ShareOpportunity',value:700},{name:'ShareOrder',value:701},{name:'SharePersonalDocumentTemplate',value:702},{name:'ShareProfileRule',value:703},{name:'ShareQueue',value:704},{name:'ShareQuote',value:705},{name:'ShareReport',value:706},{name:'ShareRoutingRule',value:707},{name:'ShareSharePointDocumentLocation',value:708},{name:'ShareSharePointSite',value:709},{name:'ShareSLA',value:710},{name:'ShareSLAKPIInstance',value:711},{name:'ShareSocialProfile',value:712},{name:'ShareUserEntityInstanceData',value:713},{name:'ShareUserEntityUISettings',value:714},{name:'ShareUserForm',value:715},{name:'ShareUserQuery',value:716},{name:'ShareUserQueryVisualizations',value:717},{name:'ShareWorkflow',value:718},{name:'ShareWorkflowSession',value:719},{name:'SyncToOutlook',value:720},{name:'TurnDevErrorsOnOff',value:721},{name:'UseInternetMarketing',value:722},{name:'UseOfficeApps',value:723},{name:'UseTabletApp',value:724},{name:'WebMailMerge',value:725},{name:'WorkflowExecution',value:726},{name:'WriteApplicationFile',value:727},{name:'WriteArticle',value:728},{name:'WriteArticleTemplate',value:729},{name:'WriteAsyncOperation',value:730},{name:'WriteAttribute',value:731},{name:'WriteAttributeMap',value:732},{name:'WriteAuthorizationServer',value:733},{name:'WriteAzureServiceConnection',value:734},{name:'WriteBusinessClosureCalendar',value:735},{name:'WriteBusinessUnit',value:736},{name:'WriteCalendar',value:737},{name:'WriteChannelPropertyGroup',value:738},{name:'WriteComplexControl',value:739},{name:'WriteConnection',value:740},{name:'WriteConnectionRole',value:741},{name:'WriteContractTemplate',value:742},{name:'WriteCustomControl',value:743},{name:'WriteCustomControlDefaultConfig',value:744},{name:'WriteCustomControlResource',value:745},{name:'WriteCustomization',value:746},{name:'WriteDataPerformance',value:747},{name:'WriteDocumentTemplate',value:748},{name:'WriteDuplicateRule',value:749},{name:'WriteDynamicProperty',value:750},{name:'WriteDynamicPropertyAssociation',value:751},{name:'WriteDynamicPropertyOptionSetItem',value:752},{name:'WriteEmailServerProfile',value:753},{name:'WriteEntity',value:754},{name:'WriteEntityMap',value:755},{name:'WriteEquipment',value:756},{name:'WriteExchangeSyncIdMapping',value:757},{name:'WriteFieldSecurityProfile',value:758},{name:'WriteHierarchicalSecurityConfiguration',value:759},{name:'WriteHierarchyRule',value:760},{name:'WriteHolidayScheduleCalendar',value:761},{name:'WriteImport',value:762},{name:'WriteImportFile',value:763},{name:'WriteImportJob',value:764},{name:'WriteImportMap',value:765},{name:'WriteKnowledgeSearchModel',value:766},{name:'WriteLanguageLocale',value:767},{name:'WriteMailbox',value:768},{name:'WriteMailboxTrackingFolder',value:769},{name:'WriteMailMergeTemplate',value:770},{name:'WriteMetric',value:771},{name:'WriteMobileOfflineProfile',value:772},{name:'WriteNewsArticle',value:773},{name:'WriteOptionSet',value:774},{name:'WriteOrganization',value:775},{name:'WriteOwnCalendar',value:776},{name:'WritePartnerApplication',value:777},{name:'WritePersonalDocumentTemplate',value:778},{name:'WritePluginAssembly',value:779},{name:'WritePluginType',value:780},{name:'WritePosition',value:781},{name:'WritePrincipalObjectAttributeAccess',value:782},{name:'WritePrincipalSyncAttributeMap',value:783},{name:'WriteProfileRule',value:784},{name:'WritePublisher',value:785},{name:'WriteQuery',value:786},{name:'WriteRecommendationModel',value:787},{name:'WriteRelationship',value:788},{name:'WriteRelationshipRole',value:789},{name:'WriteReport',value:790},{name:'WriteRole',value:791},{name:'WriteRoutingRule',value:792},{name:'WriteSalesLiterature',value:793},{name:'WriteSavedQueryVisualizations',value:794},{name:'WriteSdkMessage',value:795},{name:'WriteSdkMessageProcessingStep',value:796},{name:'WriteSdkMessageProcessingStepImage',value:797},{name:'WriteSdkMessageProcessingStepSecureConfig',value:798},{name:'WriteService',value:799},{name:'WriteServiceEndpoint',value:800},{name:'WriteSharePointData',value:801},{name:'WriteSharePointDocument',value:802},{name:'WriteSharePointDocumentLocation',value:803},{name:'WriteSharePointSite',value:804},{name:'WriteSimilarityRule',value:805},{name:'WriteSite',value:806},{name:'WriteSolution',value:807},{name:'WriteSyncAttributeMappingProfile',value:808},{name:'WriteSystemApplicationMetadata',value:809},{name:'WriteSystemForm',value:810},{name:'WriteTerritory',value:811},{name:'WriteTheme',value:812},{name:'WriteTopicModel',value:813},{name:'WriteTransactionCurrency',value:814},{name:'WriteUserApplicationMetadata',value:815},{name:'WriteUserEntityInstanceData',value:816},{name:'WriteUserEntityUISettings',value:817},{name:'WriteUserForm',value:818},{name:'WriteUserMapping',value:819},{name:'WriteUserQuery',value:820},{name:'WriteUserQueryVisualizations',value:821},{name:'WriteUserSettings',value:822},{name:'WriteWebResource',value:823},{name:'WriteWebWizard',value:824},{name:'WriteWizardAccessPrivilege',value:825},{name:'WriteWizardPage',value:826},{name:'WriteWorkflow',value:827},{name:'WriteWorkflowSession',value:828}];ClientUI.Model.RuleStep.commandClientTypeRuleType=[{name:'Modern',value:0},{name:'Refresh',value:1},{name:'Legacy',value:2}];ClientUI.Model.RuleStep.crmClientTypeRuleType=[{name:'Web',value:0},{name:'Outlook',value:1}];ClientUI.Model.RuleStep.crmOfflineAccessStateRuleTypeState=[{name:'Online',value:0},{name:'Offline',value:1}];ClientUI.Model.RuleStep.crmOutlookClientTypeRuleTypeType=[{name:'CrmForOutlook',value:0},{name:'CrmForOutlookOfflineAccess',value:1}];ClientUI.Model.RuleStep.privilegeType=[{name:'Create',value:0},{name:'Read',value:1},{name:'Write',value:2},{name:'Delete',value:3},{name:'Assign',value:4},{name:'Share',value:5},{name:'Append',value:6},{name:'AppendTo',value:7}];ClientUI.Model.RuleStep.privilegeDepth=[{name:'None',value:0},{name:'Basic',value:1},{name:'Local',value:2},{name:'Deep',value:3},{name:'Global',value:4}];ClientUI.Model.RuleStep.appliesToType=[{name:'PrimaryEntity',value:0},{name:'SelectedEntity',value:1}];ClientUI.Model.RuleStep.entityPropertyRuleTypePropertyName=[{name:'DuplicateDetectionEnabled',value:0},{name:'GridFiltersEnabled',value:1},{name:'HasStateCode',value:2},{name:'IsConnectionsEnabled',value:3},{name:'MailMergeEnabled',value:4},{name:'WorksWithQueue',value:5},{name:'HasActivities',value:6},{name:'IsActivity',value:7},{name:'HasNotes',value:8},{name:'IsCustomizable',value:9},{name:'IsActivityParty',value:10},{name:'HasEmailAddresses',value:11},{name:'IsChildEntity',value:12},{name:'IsImportable',value:13},{name:'IsEnabledForCharts',value:14},{name:'IsBusinessProcessEnabled',value:15},{name:'IsBPFEntity',value:16}];ClientUI.Model.RuleStep.context=[{name:'Form',value:0},{name:'HomePageGrid',value:1},{name:'SubGridStandard',value:2},{name:'SubGridAssociated',value:3}];ClientUI.Model.RuleStep.formStateRuleTypeState=[{name:'Create',value:0},{name:'Existing',value:1},{name:'ReadOnly',value:2},{name:'Disabled',value:3},{name:'BulkEdit',value:4}];ClientUI.Model.RuleStep.formTypeRuleTypeType=[{name:'Main',value:0},{name:'Preview',value:1},{name:'AppointmentBook',value:2},{name:'Dashboard',value:3},{name:'Quick',value:4},{name:'QuickCreate',value:5}];ClientUI.Model.RuleStep.organizationSettingRuleTypeSetting=[{name:'IsSharepointEnabled',value:0},{name:'IsSOPIntegrationEnabled',value:1},{name:'IsFiscalCalendarDefined',value:2},{name:'IsBPFEntityCustomizationFeatureEnabled',value:3}];ClientUI.Model.RuleStep.appliesToPrimaryType=[{name:'PrimaryEntity',value:0}];ClientUI.Model.RuleStep.outlookRenderTypeRuleTypeType=[{name:'Web',value:0},{name:'Outlook',value:1}];ClientUI.Model.RuleStep.outlookVersionRuleTypeVersion=[{name:'2003',value:0},{name:'2007',value:1},{name:'2010',value:2}];ClientUI.Model.RuleStep.appliesToSelectedType=[{name:'SelectedEntity',value:0}];ClientUI.Model.RuleStep.relationshipTypeRuleTypeRelationshipType=[{name:'OneToMany',value:0},{name:'ManyToMany',value:1},{name:'NoRelationship',value:2}];ClientUI.Model.RuleStep.skuRuleTypeSku=[{name:'OnPremise',value:0},{name:'Online',value:1},{name:'Spla',value:2}];ClientUI.Model.Ribbon.namespace=':#Develop1.Xrm.Silverlight.Ribbon.Model';ClientUI.ViewModel.App.current=new ClientUI.ViewModel.App();ClientUI.ViewModel.App.localStorage=new ClientUI.Library.AppLocalStorage();ClientUI.ViewModel.MenuCommands.HIDE='hide';ClientUI.ViewModel.MenuCommands.UNHIDE='unhide';ClientUI.ViewModel.MenuCommands.customisE_BUTTON='customise_button';ClientUI.ViewModel.MenuCommands.customisE_COMMAND='customise_command';ClientUI.ViewModel.MenuCommands.DELETE='delete';ClientUI.ViewModel.MenuCommands.uncustomisE_BUTTON='uncustomise_button';ClientUI.ViewModel.MenuCommands.COPY='copy';ClientUI.ViewModel.MenuCommands.PASTE='paste';ClientUI.ViewModel.MenuCommands.adD_ACTION_URL='add_action_url';ClientUI.ViewModel.MenuCommands.adD_ACTION_JAVASCRIPT='add_action_javascript';ClientUI.ViewModel.MenuCommands.adD_STRING_PARAM='add_string_param';ClientUI.ViewModel.MenuCommands.adD_INT_PARAM='add_int_param';ClientUI.ViewModel.MenuCommands.adD_DECIMAL_PARAM='add_decimal_param';ClientUI.ViewModel.MenuCommands.adD_BOOL_PARAM='add_bool_param';ClientUI.ViewModel.MenuCommands.adD_CRM_PARAM='add_crm_param';ClientUI.ViewModel.MenuCommands.deletE_COMMAND='delete_command';ClientUI.ViewModel.MenuCommands.adD_NEW_DISPLAY_RULE='add_new_display_rule';ClientUI.ViewModel.MenuCommands.removE_FROM_COMMAND='remove_from_command';ClientUI.ViewModel.MenuCommands.adD_NEW_ENABLE_RULE='add_new_enable_rule';ClientUI.ViewModel.MenuCommands.adD_COMMAND='add_command';ClientUI.ViewModel.DialogService.dialogId=0;ClientUI.ViewModel.EditorProperty.BoolValues=[{name:'True',value:true},{name:'False',value:false}];ResourceStrings.AddAction='Add Action';ResourceStrings.AddDisplayRule='Add Display Rule';ResourceStrings.AddEnableRule='Add Enable Rule';ResourceStrings.AddStep='Add Step';ResourceStrings.AreYouSureYouWantToExit='Are you sure you want to exit the Ribbon Workbench? Unpublished changes will be lost.';ResourceStrings.AssemblingSolution='Assembling Solution';ResourceStrings.AutoUpdateLater='Maybe later';ResourceStrings.AutoUpdateNow='Update Now';ResourceStrings.BuidlingRibbons='Building {0} Ribbons';ResourceStrings.Buttons='Buttons';ResourceStrings.Cancel='Cancel';ResourceStrings.CannotCustomiseBecauseOfChildCustom='You cannot customise this item because on of the child controls are already customised';ResourceStrings.CommandRequiredOnButton="The control '{0}' requires a command otherwise it will not disable.";ResourceStrings.Commands='Commands';ResourceStrings.ConfirmHideAndRename='It looks like this is a managed button that you are moving. Do you want to hide the current button and create a copy to move? (Recommended if the button you are moving is a managed element.)';ResourceStrings.ConfirmPublish='Do you really want to publish?\nMake sure you take a backup of your existing solution first!';ResourceStrings.DeleteGroup='Delete Group';ResourceStrings.DisplayRules='Display Rules';ResourceStrings.DisplaySteps='Display Steps';ResourceStrings.DownloadingSolution="Downloading Solution '{0}'\n\nIf this is taking too long, reduce the number of entities in your solution.";ResourceStrings.DragControlsHere='[drag controls here]';ResourceStrings.DuplicateIdOnDrop='A control with the same ID already exists in this location';ResourceStrings.EnableRules='Enable Rules';ResourceStrings.EmableSteps='Enable Steps';ResourceStrings.Error_CouldNotPublish='Could not publish solution. Try doing this manually.';ResourceStrings.Error_DialogTitle='Something happened!';ResourceStrings.Error_LetUsKnow="Let us know and we'll see how we can help!";ResourceStrings.Error_NoEntities='There were no entities in the solution selected.\nAdd at least one entity and try again.';ResourceStrings.Error_SolutionTooLarge='Your solution is too large. Reduce the number of entities to 5 or less and remove any other components such as workflows';ResourceStrings.Error_Thankyou='Thank you for reporting this issue!';ResourceStrings.Error_WhatWereYouDoing='What were you doing when you got this error?';ResourceStrings.Error_PatchedSolution='You cannot load this solution because it has solution patches.';ResourceStrings.Error_GetSolutionDetailsEmpty='The Ribbon Workbench solution is not installed correctly. Please try re-installing.';ResourceStrings.Error_CannotImportPatch='You cannot use a patch solution to edit the ribbon. Create a new solution and add the entities to that.';ResourceStrings.Groups='Groups';ResourceStrings.HideActions='Hide Actions';ResourceStrings.Import_Failed='Import Failed : {0}';ResourceStrings.Import_InProgress='Import In-Progress';ResourceStrings.Importing='Importing Solution';ResourceStrings.Languages='Languages';ResourceStrings.LoadingRibbon='Loading {0} Ribbon(s)';ResourceStrings.LoadSolution='Load Solution';ResourceStrings.LoadingSmartButtons='Loading SmartButtons...';ResourceStrings.LearnMoreLink='Learn more...';ResourceStrings.LearnMoreAboutFixLink='Learn how to fix...';ResourceStrings.Messages='Messages';ResourceStrings.NoMenuSectionOnDrop='A control must be placed inside a menu section on a flyout.';ResourceStrings.NotEnoughSpaceInLayoutSection='You cannot place a control here because the layout template has no more available space.';ResourceStrings.NonRibbonComponents='Your solution contains non-ribbon components such as Plugins & Reports.\n\nIt is recommened that you create a small solution that contains just the Entities you need to avoid publishing errors.';ResourceStrings.OK='OK';ResourceStrings.UseAddEnableRule="Optional: Use 'Add Enable Rule' if you want to make the visibility dynamic on the client side";ResourceStrings.UseAddDisplayRule="Optional: Use 'Add Display Rule' if you want to make the visibility dynamic.";ResourceStrings.UseAddAction="Use 'Add Action' to define what this command does.";ResourceStrings.ProcessingSolution='Processing Solution';ResourceStrings.Properties='Properties';ResourceStrings.Publishing='Publishing Solution';ResourceStrings.PublishSucessful='Publish Successful';ResourceStrings.Refresh='Refresh';ResourceStrings.Rendering='Rendering...';ResourceStrings.RefreshSuccessful='Refresh Successful';ResourceStrings.ReLoadAfterUnHide='The Hide Action you are removing is already published.\nYou will need to publish and re-load the solution to see the button un-hidden.';ResourceStrings.Retry='Retry';ResourceStrings.SeeMessages='There are validation errors:\n\n{0}\n\nCheck the messages tab for the {1} entity.';ResourceStrings.SelectSolution_Info="You can create a small solution that contains just the entities that you would like to load. <a href='https://ribbonworkbench.uservoice.com/knowledgebase/articles/71374-1-getting-started-with-the-ribbon-workbench' target='_blank'>Learn about the Ribbon Workbench</a>";ResourceStrings.SendError='Send Error';ResourceStrings.Search='Search';ResourceStrings.ShowCommandBarButtons='Unified Interface';ResourceStrings.ShowModernButtons='';ResourceStrings.ShowRibbonButtons='Classic';ResourceStrings.SmartButtons='Smart Buttons will be listed here when installed.';ResourceStrings.SmartButtonsToolBox='Smart Buttons';ResourceStrings.Toolbox='Toolbox';ResourceStrings.SolutionElements='Solution Elements';ResourceStrings.Tabs='Tabs';ResourceStrings.Update_Complete='Update complete. Close the Ribbon Workbench and refresh Dynamics CRM to use the new version.';ResourceStrings.UpdateAvailable='An update is available!';ResourceStrings.UpdateAvailableDetail='Update from Version {0} -> {1}\n{2}';ResourceStrings.Updating='Updating the Ribbon Workbench to the latest version!...';ResourceStrings.UseAddStepToInsertOr="Use 'Add Step' to insert an Or condition";ResourceStrings.UseAddStepToDefineConditions="Use 'Add Step' to define the conditions";ResourceStrings.WelcomeToRibbonWorkbench='Welcome to the Ribbon Workbench 2016';ResourceStrings.Xml='Xml';ResourceStrings.YourEmail='Your Email';ResourceStrings.Error_CannotHideButtonInSolution='You cannot hide buttons that are part of the solution.\nYou can:\n1. Delete the button\n2. Use a DisplayRule or EnableRule';ResourceStrings.AreYouSureYouWantToDeleteButton='Are you sure you want to delete this control?';ResourceStrings.CustomiseButton='Customise Button';ResourceStrings.CustomiseCommand='Customise Command';ResourceStrings.Hide='Hide';ResourceStrings.UnHide='UnHide';ResourceStrings.DeleteButton='Delete';ResourceStrings.UncustomiseButton='UnCustomise Button';ResourceStrings.UnCustomiseButtonConfirm='Uncustomising a button will remove it from the solution but not reset it to the uncustomised state until you re-load the solution.';ResourceStrings.Error_AccessDenied='Access Denied: Your user does not have permissions to import solutions. Check that you have the System Administrator or System Customizer Role and that your Async Service is properly configured.';ResourceStrings.Error_RibbonImportDependencyMissingRibbonControl='{0} See the link below for help on this issue.';ResourceStrings.Error_SubmitManually="That didn't work - please can you submit manually at ribbonworkbench.uservoice.com. Thank you!";ResourceStrings.DeleteCommand='Delete';ResourceStrings.StandardProperties='Standard Properties';ResourceStrings.SmartButtonProperties='Smart Button Properties';ResourceStrings.Clipboard='Clipboard';ResourceStrings.PasteControl='Paste';ResourceStrings.Copy='Copy';ResourceStrings.InvalidPasteData='Invalid clipboard data: {0}';ResourceStrings.UrlAction='Url Action';ResourceStrings.JavascriptAction='Javascript Action';ResourceStrings.CommandActionDeleted='Command Action Deleted';ResourceStrings.Delete='Delete';ResourceStrings.ParameterDeleted='Parameter Deleted';ResourceStrings.CommandDeleted='Command Deleted';ResourceStrings.CopyingToClipboard='Copying to Clipboard. Please Wait...';ResourceStrings.SmartButtonNotDefinedForPosition='Smart Button does not contain a template for the target ribbon type {0}.\nPlease contact the smart button author.';ResourceStrings.HelpLink='Help';ResourceStrings.OpenSolution='Open Solution';ResourceStrings.Publish='Publish';ResourceStrings.Author='by Scott Durow';ResourceStrings.PropertiesPanel='Properties: ';ResourceStrings.Language='Language:';ResourceStrings.Dismiss='Dismiss';ResourceStrings.Undo='Undo';ResourceStrings.AddNewEnableRule='Add New Enable Rule';ResourceStrings.RemoveFromCommand='Remove from Command';ResourceStrings.DeleteFromAllCommands='Delete from all Commands';ResourceStrings.EnableRuleDeletedAndRemove='Enable Rule deleted and removed from {0} commands';ResourceStrings.EnableRuleRemoved='Enable Rule removed from Command {0}';ResourceStrings.AddNewDisplayRules='Add New Display Rule';ResourceStrings.DisplayRuleDeletedAndRemoved='Display Rule deleted and removed from {0} commands';ResourceStrings.DisplayRuleRemoved='Display Rule removed from Command {0}';ResourceStrings.AddCommand='Add Command';ResourceStrings.InvalidSolution_NonEntity='\n\u2022 The solution contains non-entity components (e.g. attributes/forms/apps/dashboards/workflows).\n';ResourceStrings.InvalidSolution_SubComponents='\n\u2022 The solution contains Entities that have all their sub-components included.\n';ResourceStrings.InvalidSolution_MaxEntities='\n\u2022 There are more than 5 entities in the solution.\n';ResourceStrings.InvalidSolution_NoEntities='\n\u2022 There are no entities in this solution.\n';ResourceStrings.InvalidSolution_Message='For performance reasons, this solution cannot be loaded:\n\n{0}\n\nPlease create a solution and add only the Entities you wish to edit, with no sub-components!';ClientUI.ViewModel.ServiceLocator.instance=new ClientUI.ViewModel.ServiceLocator();ClientUI.View.EditCommandBarView.$1=null;})(window.xrmjQuery);