<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConvertActivity_Action_CloseEmail" xml:space="preserve">
    <value>Close the e-mail form</value>
    <comment>on convert activity to opportunity dialog for emails</comment>
  </data>
  <data name="ConvertActivity_Action_SaveActivity" xml:space="preserve">
    <value>Change the {0} status to Completed and close the form</value>
    <comment>{NumberedPlaceholder="{0}"} Placeholder 0 is replaced with the activity name. on convert activity to opportunity dialog for all activities except emails</comment>
  </data>
  <data name="Alert_Conv_Act_Customer_Must" xml:space="preserve">
    <value>You must select a customer.</value>
    <comment>on convert activity to opportunity dialog</comment>
  </data>
  <data name="Alert_Conv_Act_Currency_Must" xml:space="preserve">
    <value>A currency is required. Select a currency and try again.</value>
    <comment>Error message displayed to the user on convert activity to opportunity dialog when the user does not supply a value for currency field.</comment>
  </data>
  <data name="Alert_Conv_Act_Campaign_Must" xml:space="preserve">
    <value>To create a campaign response, you must select a source campaign.</value>
    <comment>on convert activity to opportunity dialog</comment>
  </data>
  <data name="Alert_Lead_Must_Be_Supplied" xml:space="preserve">
    <value>You must supply a lead for this option.</value>
    <comment>Convert response dialog page's alter message if user is starting convert lead process without supplying the Lead.</comment>
  </data>
  <data name="Alert_Customer_Must_Be_Supplied" xml:space="preserve">
    <value>You must select a customer. The customer can be an account or a contact.</value>
    <comment>Convert response dialog page's alter message if user is trying to create new quote/order or opportunity without supplying the Customer which could be only Account/Contact.</comment>
  </data>
  <data name="ConvActSaveWarning" xml:space="preserve">
    <value>You must save the changes before you can convert this activity.</value>
    <comment>on convert activity to opportunity/case dialog</comment>
  </data>
  <data name="Alert_Lead_Company_Must_Be_Supplied" xml:space="preserve">
    <value>Before you can convert the lead to an account, you have to add the company information to the lead record.</value>
    <comment>Convert response dialog page's alter message if user is starting convert lead process to account without having Lead Company name.</comment>
  </data>
  <data name="Dialog_Button_Ok" xml:space="preserve">
    <value>Ok</value>
    <comment>Default Ok button label on Alert/Confrim Dialog.</comment>
  </data>
  <data name="Lead_Disqualify_Lost_LabelText" xml:space="preserve">
    <value>Lost</value>
    <comment>Disqualify a lead as lost label text</comment>
  </data>
  <data name="Lead_Disqualify_CannotContact_LabelText" xml:space="preserve">
    <value>Cannot Contact</value>
    <comment>Disqualify a lead as cannot contact label text</comment>
  </data>
  <data name="Lead_Disqualify_NoLongerInterested_LabelText" xml:space="preserve">
    <value>No Longer Interested</value>
    <comment>Disqualify a lead as no longer interested label text</comment>
  </data>
  <data name="Lead_Disqualify_Canceled_LabelText" xml:space="preserve">
    <value>Canceled</value>
    <comment>Disqualify a lead as canceled label text</comment>
  </data>
  <data name="Lead_Disqualify_Lost_ToolTipDescription" xml:space="preserve">
    <value>As Lost</value>
    <comment>Disqualify a lead as lost tooltip</comment>
  </data>
  <data name="Lead_Disqualify_CannotContact_ToolTipDescription" xml:space="preserve">
    <value>As Cannot Contact</value>
    <comment>Disqualify a lead as cannot contact tooltip</comment>
  </data>
  <data name="Lead_Disqualify_NoLongerInterested_ToolTipDescription" xml:space="preserve">
    <value>As No Longer Interested</value>
    <comment>Disqualify a lead as no longer interested tooltip</comment>
  </data>
  <data name="Lead_Disqualify_Canceled_ToolTipDescription" xml:space="preserve">
    <value>As Canceled</value>
    <comment>Disqualify a lead as canceled tooltip</comment>
  </data>
  <data name="ErrorMessage_Lead_ReQualify_ProcessNoActiveStage" xml:space="preserve">
    <value>Active stage is not on '{0}' entity</value>
    <comment>{NumberedPlaceholder="{0}"} Placeholder 0 is replaced with the lead name. Error message when process active stage doesn't belong to entity.</comment>
  </data>
  <data name="ErrorMessage_Convert_Lead_lastName" xml:space="preserve">
    <value>You must enter last name</value>
    <comment>Convert to lead Error message for last name</comment>
  </data>
  <data name="ErrorMessage_Convert_Lead_email" xml:space="preserve">
    <value>You must enter email</value>
    <comment>Convert to lead Error message for email</comment>
  </data>
  <data name="ErrorMessage_No_Lead_Selecteed" xml:space="preserve">
    <value>No Lead Selected</value>
    <comment>Select Lead to continue</comment>
  </data>
  <data name="ConvertLeadGrid_Description" xml:space="preserve">
    <value>Convert selected leads as qualified and create the following records for each:</value>
    <comment>Description for convert lead options dialog on grid</comment>
  </data>
  <data name="ConvertLeadGrid_Header" xml:space="preserve">
    <value>Qualify Leads</value>
    <comment>Header for convert lead options dialog on grid</comment>
  </data>
  <data name="ConvertLead_Description" xml:space="preserve">
    <value>Convert this lead as qualified and create the following records:</value>
    <comment>Description for convert lead options dialog</comment>
  </data>
  <data name="ConvertLead_Header" xml:space="preserve">
    <value>Qualify Lead</value>
    <comment>Header for convert lead options dialog</comment>
  </data>
  <data name="ToastMessage_Lead_Qualify" xml:space="preserve">
    <value>{0} was successfully qualified. </value>
    <comment>{NumberedPlaceholder="{0}"} Placeholder 0 is replaced with the lead name. Toast message when lead is qualified and navigated to opportunity.</comment>
  </data>
  <data name="ToastMessage_Navigate_Lead_LinkMessage" xml:space="preserve">
    <value>Go to {0}</value>
    <comment>Hyperlink message for the qualified Lead.</comment>
  </data>
  <data name="ToastMessage_Lead_Disqualify" xml:space="preserve">
    <value>{0} was disqualified successfully</value>
    <comment>{NumberedPlaceholder="{0}"} Placeholder 0 is replaced with the lead name. Toast message when lead is disqualified.</comment>
  </data>
  <data name="COPY_COMPETITORS" xml:space="preserve">
    <value>Copying {competitor} Information</value>
    <comment>Copying Competitors Information step in StepError execution flow</comment>
  </data>
  <data name="COPY_LEAD_CONNECTIONS" xml:space="preserve">
    <value>Copying {lead} Connections</value>
    <comment>Copying Lead Connections step in StepError execution flow</comment>
  </data>
  <data name="CREATE_ACCOUNT" xml:space="preserve">
    <value>Creating {account}</value>
    <comment>Creating Account step in StepError execution flow</comment>
  </data>
  <data name="CREATE_CONTACT" xml:space="preserve">
    <value>Creating {contact}</value>
    <comment>Creating Contact step in StepError execution flow</comment>
  </data>
  <data name="CREATE_OPPORTUNITY" xml:space="preserve">
    <value>Creating {opportunity}</value>
    <comment>Creating Opportunity step in StepError execution flow</comment>
  </data>
  <data name="UPDATE_ACCOUNT" xml:space="preserve">
    <value>Updating {account} Information</value>
    <comment>Updating Account Information step in StepError execution flow</comment>
  </data>
  <data name="UPDATE_LEAD_STATUSCODE" xml:space="preserve">
    <value>Updating {lead} StatusCode</value>
    <comment>Updating Lead StatusCode step in StepError execution flow</comment>
  </data>
  <data name="VALIDATING_BPF" xml:space="preserve">
    <value>Validating Business Process Flow</value>
    <comment>Validating BPF step in StepError execution flow</comment>
  </data>
  <data name="VALIDATING_LEAD" xml:space="preserve">
    <value>Retrieving {lead} Information</value>
    <comment>Retrieving Lead Information in StepError execution flow</comment>
  </data>
</root>